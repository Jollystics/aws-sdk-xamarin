<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK_XMOBILE</name>
    </assembly>
    <members>
        <member name="T:Amazon.AutoScaling.AmazonAutoScalingClient">
             <summary>
             Implementation for accessing AutoScaling
            
             Auto Scaling 
             <para>
              Auto Scaling is a web service designed to automatically launch or terminate Amazon
             Elastic Compute Cloud (Amazon EC2) instances based on user-defined policies, schedules,
             and health checks. This service is used in conjunction with Amazon CloudWatch and
             Elastic Load Balancing services. 
             </para>
              
             <para>
             Auto Scaling provides APIs that you can call by submitting a Query Request. Query
             requests are HTTP or HTTPS requests that use the HTTP verbs GET or POST and a Query
             parameter named <i>Action</i> or <i>Operation</i> that specifies the API you are calling.
             Action is used throughout this documentation, although Operation is also supported
             for backward compatibility with other Amazon Web Services (AWS) Query APIs. 
             </para>
              
             <para>
             Calling the API using a Query request is the most direct way to access the web service,
             but requires that your application handle low-level details such as generating the
             hash to sign the request and error handling. The benefit of calling the service using
             a Query request is that you are assured of having access to the complete functionality
             of the API. For information about signing a a query request, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/api_requests.html">Use
             Query Requests to Call Auto Scaling APIs</a>
             </para>
              
             <para>
              This guide provides detailed information about Auto Scaling actions, data types,
             parameters, and errors. For detailed information about Auto Scaling features and their
             associated API actions, go to the <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/">Auto
             Scaling Developer Guide</a>. 
             </para>
              
             <para>
             This reference is based on the current WSDL, which is available at:
             </para>
              
             <para>
             <a href="http://autoscaling.amazonaws.com/doc/2011-01-01/AutoScaling.wsdl">http://autoscaling.amazonaws.com/doc/2011-01-01/AutoScaling.wsdl</a>
             
             </para>
              
             <para>
             <b>Endpoints</b>
             </para>
              
             <para>
             The examples in this guide assume that your instances are launched in the US East
             (Northern Virginia) region and use us-east-1 as the endpoint.
             </para>
              
             <para>
             You can set up your Auto Scaling infrastructure in other AWS regions. For information
             about this product's regions and endpoints, see <a href="http://docs.aws.amazon.com/general/latest/gr/index.html?rande.html">Regions
             and Endpoints</a> in the Amazon Web Services General Reference. 
             </para>
             </summary>
        </member>
        <member name="M:Amazon.Runtime.AmazonServiceClient.DontUnescapePathDotsAndSlashes(System.Uri)">
            <summary>
            Patches the in-flight uri to stop it unescaping the path etc (what Uri did before
            Microsoft deprecated the constructor flag). This is particularly important for
            Amazon S3 customers who want to use backslash (\) in their key names.
            </summary>
            <remarks>
            Different behavior in the various runtimes has been observed and in addition some 
            'documented' ways of doing this between 2.x and 4.x runtimes has also been observed 
            to not be reliable.
            
            This patch effectively emulates what adding a schemesettings element to the 
            app.config file with value 'name="http" genericUriParserOptions="DontUnescapePathDotsAndSlashes"'
            does. As we're a dll, that avenue is not open to us.
            </remarks>
            <param name="uri"></param>
        </member>
        <member name="M:Amazon.Runtime.AmazonServiceClient.CloneConfig``1">
            <summary>
            Used to create a copy of the config for a different service than the current instance.
            </summary>
            <typeparam name="C"></typeparam>
            <returns></returns>
        </member>
        <member name="E:Amazon.Runtime.AmazonServiceClient.BeforeMarshallingEvent">
            <summary>
            Occurs before a request is marshalled.
            </summary>
        </member>
        <member name="E:Amazon.Runtime.AmazonServiceClient.BeforeRequestEvent">
            <summary>
            Occurs before a request is issued against the service.
            </summary>
        </member>
        <member name="E:Amazon.Runtime.AmazonServiceClient.AfterResponseEvent">
            <summary>
            Occurs after a response is received from the service.
            </summary>
        </member>
        <member name="E:Amazon.Runtime.AmazonServiceClient.ExceptionEvent">
            <summary>
            Occurs after an exception is encountered.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.IAmazonAutoScaling">
             <summary>
             Interface for accessing AutoScaling
            
             Auto Scaling 
             <para>
              Auto Scaling is a web service designed to automatically launch or terminate Amazon
             Elastic Compute Cloud (Amazon EC2) instances based on user-defined policies, schedules,
             and health checks. This service is used in conjunction with Amazon CloudWatch and
             Elastic Load Balancing services. 
             </para>
              
             <para>
             Auto Scaling provides APIs that you can call by submitting a Query Request. Query
             requests are HTTP or HTTPS requests that use the HTTP verbs GET or POST and a Query
             parameter named <i>Action</i> or <i>Operation</i> that specifies the API you are calling.
             Action is used throughout this documentation, although Operation is also supported
             for backward compatibility with other Amazon Web Services (AWS) Query APIs. 
             </para>
              
             <para>
             Calling the API using a Query request is the most direct way to access the web service,
             but requires that your application handle low-level details such as generating the
             hash to sign the request and error handling. The benefit of calling the service using
             a Query request is that you are assured of having access to the complete functionality
             of the API. For information about signing a a query request, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/api_requests.html">Use
             Query Requests to Call Auto Scaling APIs</a>
             </para>
              
             <para>
              This guide provides detailed information about Auto Scaling actions, data types,
             parameters, and errors. For detailed information about Auto Scaling features and their
             associated API actions, go to the <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/">Auto
             Scaling Developer Guide</a>. 
             </para>
              
             <para>
             This reference is based on the current WSDL, which is available at:
             </para>
              
             <para>
             <a href="http://autoscaling.amazonaws.com/doc/2011-01-01/AutoScaling.wsdl">http://autoscaling.amazonaws.com/doc/2011-01-01/AutoScaling.wsdl</a>
             
             </para>
              
             <para>
             <b>Endpoints</b>
             </para>
              
             <para>
             The examples in this guide assume that your instances are launched in the US East
             (Northern Virginia) region and use us-east-1 as the endpoint.
             </para>
              
             <para>
             You can set up your Auto Scaling infrastructure in other AWS regions. For information
             about this product's regions and endpoints, see <a href="http://docs.aws.amazon.com/general/latest/gr/index.html?rande.html">Regions
             and Endpoints</a> in the Amazon Web Services General Reference. 
             </para>
             </summary>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.AttachInstancesAsync(Amazon.AutoScaling.Model.AttachInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachInstances operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.CompleteLifecycleActionAsync(Amazon.AutoScaling.Model.CompleteLifecycleActionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CompleteLifecycleAction operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CompleteLifecycleAction operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.CreateAutoScalingGroupAsync(Amazon.AutoScaling.Model.CreateAutoScalingGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateAutoScalingGroup operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateAutoScalingGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.CreateLaunchConfigurationAsync(Amazon.AutoScaling.Model.CreateLaunchConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateLaunchConfiguration operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateLaunchConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.CreateOrUpdateTagsAsync(Amazon.AutoScaling.Model.CreateOrUpdateTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateOrUpdateTags operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateOrUpdateTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DeleteAutoScalingGroupAsync(Amazon.AutoScaling.Model.DeleteAutoScalingGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteAutoScalingGroup operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAutoScalingGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DeleteLaunchConfigurationAsync(Amazon.AutoScaling.Model.DeleteLaunchConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteLaunchConfiguration operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLaunchConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DeleteLifecycleHookAsync(Amazon.AutoScaling.Model.DeleteLifecycleHookRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteLifecycleHook operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLifecycleHook operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DeleteNotificationConfigurationAsync(Amazon.AutoScaling.Model.DeleteNotificationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteNotificationConfiguration operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteNotificationConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DeletePolicyAsync(Amazon.AutoScaling.Model.DeletePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeletePolicy operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeletePolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DeleteScheduledActionAsync(Amazon.AutoScaling.Model.DeleteScheduledActionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteScheduledAction operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteScheduledAction operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DeleteTagsAsync(Amazon.AutoScaling.Model.DeleteTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteTags operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DescribeAccountLimitsAsync(Amazon.AutoScaling.Model.DescribeAccountLimitsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAccountLimits operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAccountLimits operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DescribeAdjustmentTypesAsync(Amazon.AutoScaling.Model.DescribeAdjustmentTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAdjustmentTypes operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAdjustmentTypes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DescribeAutoScalingGroupsAsync(Amazon.AutoScaling.Model.DescribeAutoScalingGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAutoScalingGroups operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAutoScalingGroups operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DescribeAutoScalingInstancesAsync(Amazon.AutoScaling.Model.DescribeAutoScalingInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAutoScalingInstances operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAutoScalingInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DescribeAutoScalingNotificationTypesAsync(Amazon.AutoScaling.Model.DescribeAutoScalingNotificationTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAutoScalingNotificationTypes operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAutoScalingNotificationTypes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DescribeLaunchConfigurationsAsync(Amazon.AutoScaling.Model.DescribeLaunchConfigurationsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeLaunchConfigurations operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeLaunchConfigurations operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DescribeLifecycleHooksAsync(Amazon.AutoScaling.Model.DescribeLifecycleHooksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeLifecycleHooks operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeLifecycleHooks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DescribeLifecycleHookTypesAsync(Amazon.AutoScaling.Model.DescribeLifecycleHookTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeLifecycleHookTypes operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeLifecycleHookTypes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DescribeMetricCollectionTypesAsync(Amazon.AutoScaling.Model.DescribeMetricCollectionTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeMetricCollectionTypes operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeMetricCollectionTypes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DescribeNotificationConfigurationsAsync(Amazon.AutoScaling.Model.DescribeNotificationConfigurationsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeNotificationConfigurations operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeNotificationConfigurations operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DescribePoliciesAsync(Amazon.AutoScaling.Model.DescribePoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribePolicies operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribePolicies operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DescribeScalingActivitiesAsync(Amazon.AutoScaling.Model.DescribeScalingActivitiesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeScalingActivities operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeScalingActivities operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DescribeScalingProcessTypesAsync(Amazon.AutoScaling.Model.DescribeScalingProcessTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeScalingProcessTypes operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeScalingProcessTypes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DescribeScheduledActionsAsync(Amazon.AutoScaling.Model.DescribeScheduledActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeScheduledActions operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeScheduledActions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DescribeTagsAsync(Amazon.AutoScaling.Model.DescribeTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeTags operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DescribeTerminationPolicyTypesAsync(Amazon.AutoScaling.Model.DescribeTerminationPolicyTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeTerminationPolicyTypes operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTerminationPolicyTypes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DetachInstancesAsync(Amazon.AutoScaling.Model.DetachInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachInstances operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.DisableMetricsCollectionAsync(Amazon.AutoScaling.Model.DisableMetricsCollectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableMetricsCollection operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableMetricsCollection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.EnableMetricsCollectionAsync(Amazon.AutoScaling.Model.EnableMetricsCollectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableMetricsCollection operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableMetricsCollection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.EnterStandbyAsync(Amazon.AutoScaling.Model.EnterStandbyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnterStandby operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnterStandby operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.ExecutePolicyAsync(Amazon.AutoScaling.Model.ExecutePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ExecutePolicy operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ExecutePolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.ExitStandbyAsync(Amazon.AutoScaling.Model.ExitStandbyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ExitStandby operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ExitStandby operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.PutLifecycleHookAsync(Amazon.AutoScaling.Model.PutLifecycleHookRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutLifecycleHook operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutLifecycleHook operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.PutNotificationConfigurationAsync(Amazon.AutoScaling.Model.PutNotificationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutNotificationConfiguration operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutNotificationConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.PutScalingPolicyAsync(Amazon.AutoScaling.Model.PutScalingPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutScalingPolicy operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutScalingPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.PutScheduledUpdateGroupActionAsync(Amazon.AutoScaling.Model.PutScheduledUpdateGroupActionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutScheduledUpdateGroupAction operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutScheduledUpdateGroupAction operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.RecordLifecycleActionHeartbeatAsync(Amazon.AutoScaling.Model.RecordLifecycleActionHeartbeatRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RecordLifecycleActionHeartbeat operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RecordLifecycleActionHeartbeat operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.ResumeProcessesAsync(Amazon.AutoScaling.Model.ResumeProcessesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResumeProcesses operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResumeProcesses operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.SetDesiredCapacityAsync(Amazon.AutoScaling.Model.SetDesiredCapacityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetDesiredCapacity operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetDesiredCapacity operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.SetInstanceHealthAsync(Amazon.AutoScaling.Model.SetInstanceHealthRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetInstanceHealth operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetInstanceHealth operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.SuspendProcessesAsync(Amazon.AutoScaling.Model.SuspendProcessesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SuspendProcesses operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SuspendProcesses operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.TerminateInstanceInAutoScalingGroupAsync(Amazon.AutoScaling.Model.TerminateInstanceInAutoScalingGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the TerminateInstanceInAutoScalingGroup operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the TerminateInstanceInAutoScalingGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.IAmazonAutoScaling.UpdateAutoScalingGroupAsync(Amazon.AutoScaling.Model.UpdateAutoScalingGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateAutoScalingGroup operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateAutoScalingGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonAutoScalingClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonAutoScalingClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.AutoScaling.AmazonAutoScalingConfig)">
            <summary>
            Constructs AmazonAutoScalingClient with AWS Credentials and an
            AmazonAutoScalingClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonAutoScalingClient Configuration Object</param>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonAutoScalingClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonAutoScalingClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.#ctor(System.String,System.String,Amazon.AutoScaling.AmazonAutoScalingConfig)">
            <summary>
            Constructs AmazonAutoScalingClient with AWS Access Key ID, AWS Secret Key and an
            AmazonAutoScalingClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonAutoScalingClient Configuration Object</param>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonAutoScalingClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonAutoScalingClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.#ctor(System.String,System.String,System.String,Amazon.AutoScaling.AmazonAutoScalingConfig)">
            <summary>
            Constructs AmazonAutoScalingClient with AWS Access Key ID, AWS Secret Key and an
            AmazonAutoScalingClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonAutoScalingClient Configuration Object</param>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.AttachInstancesAsync(Amazon.AutoScaling.Model.AttachInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachInstances operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.CompleteLifecycleActionAsync(Amazon.AutoScaling.Model.CompleteLifecycleActionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CompleteLifecycleAction operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CompleteLifecycleAction operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.CreateAutoScalingGroupAsync(Amazon.AutoScaling.Model.CreateAutoScalingGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateAutoScalingGroup operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateAutoScalingGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.CreateLaunchConfigurationAsync(Amazon.AutoScaling.Model.CreateLaunchConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateLaunchConfiguration operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateLaunchConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.CreateOrUpdateTagsAsync(Amazon.AutoScaling.Model.CreateOrUpdateTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateOrUpdateTags operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateOrUpdateTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DeleteAutoScalingGroupAsync(Amazon.AutoScaling.Model.DeleteAutoScalingGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteAutoScalingGroup operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAutoScalingGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DeleteLaunchConfigurationAsync(Amazon.AutoScaling.Model.DeleteLaunchConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteLaunchConfiguration operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLaunchConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DeleteLifecycleHookAsync(Amazon.AutoScaling.Model.DeleteLifecycleHookRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteLifecycleHook operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLifecycleHook operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DeleteNotificationConfigurationAsync(Amazon.AutoScaling.Model.DeleteNotificationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteNotificationConfiguration operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteNotificationConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DeletePolicyAsync(Amazon.AutoScaling.Model.DeletePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeletePolicy operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeletePolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DeleteScheduledActionAsync(Amazon.AutoScaling.Model.DeleteScheduledActionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteScheduledAction operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteScheduledAction operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DeleteTagsAsync(Amazon.AutoScaling.Model.DeleteTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteTags operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DescribeAccountLimitsAsync(Amazon.AutoScaling.Model.DescribeAccountLimitsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAccountLimits operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAccountLimits operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DescribeAdjustmentTypesAsync(Amazon.AutoScaling.Model.DescribeAdjustmentTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAdjustmentTypes operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAdjustmentTypes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DescribeAutoScalingGroupsAsync(Amazon.AutoScaling.Model.DescribeAutoScalingGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAutoScalingGroups operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAutoScalingGroups operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DescribeAutoScalingInstancesAsync(Amazon.AutoScaling.Model.DescribeAutoScalingInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAutoScalingInstances operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAutoScalingInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DescribeAutoScalingNotificationTypesAsync(Amazon.AutoScaling.Model.DescribeAutoScalingNotificationTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAutoScalingNotificationTypes operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAutoScalingNotificationTypes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DescribeLaunchConfigurationsAsync(Amazon.AutoScaling.Model.DescribeLaunchConfigurationsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeLaunchConfigurations operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeLaunchConfigurations operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DescribeLifecycleHooksAsync(Amazon.AutoScaling.Model.DescribeLifecycleHooksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeLifecycleHooks operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeLifecycleHooks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DescribeLifecycleHookTypesAsync(Amazon.AutoScaling.Model.DescribeLifecycleHookTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeLifecycleHookTypes operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeLifecycleHookTypes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DescribeMetricCollectionTypesAsync(Amazon.AutoScaling.Model.DescribeMetricCollectionTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeMetricCollectionTypes operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeMetricCollectionTypes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DescribeNotificationConfigurationsAsync(Amazon.AutoScaling.Model.DescribeNotificationConfigurationsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeNotificationConfigurations operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeNotificationConfigurations operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DescribePoliciesAsync(Amazon.AutoScaling.Model.DescribePoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribePolicies operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribePolicies operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DescribeScalingActivitiesAsync(Amazon.AutoScaling.Model.DescribeScalingActivitiesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeScalingActivities operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeScalingActivities operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DescribeScalingProcessTypesAsync(Amazon.AutoScaling.Model.DescribeScalingProcessTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeScalingProcessTypes operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeScalingProcessTypes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DescribeScheduledActionsAsync(Amazon.AutoScaling.Model.DescribeScheduledActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeScheduledActions operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeScheduledActions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DescribeTagsAsync(Amazon.AutoScaling.Model.DescribeTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeTags operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DescribeTerminationPolicyTypesAsync(Amazon.AutoScaling.Model.DescribeTerminationPolicyTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeTerminationPolicyTypes operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTerminationPolicyTypes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DetachInstancesAsync(Amazon.AutoScaling.Model.DetachInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachInstances operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.DisableMetricsCollectionAsync(Amazon.AutoScaling.Model.DisableMetricsCollectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableMetricsCollection operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableMetricsCollection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.EnableMetricsCollectionAsync(Amazon.AutoScaling.Model.EnableMetricsCollectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableMetricsCollection operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableMetricsCollection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.EnterStandbyAsync(Amazon.AutoScaling.Model.EnterStandbyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnterStandby operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnterStandby operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.ExecutePolicyAsync(Amazon.AutoScaling.Model.ExecutePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ExecutePolicy operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ExecutePolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.ExitStandbyAsync(Amazon.AutoScaling.Model.ExitStandbyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ExitStandby operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ExitStandby operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.PutLifecycleHookAsync(Amazon.AutoScaling.Model.PutLifecycleHookRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutLifecycleHook operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutLifecycleHook operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.PutNotificationConfigurationAsync(Amazon.AutoScaling.Model.PutNotificationConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutNotificationConfiguration operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutNotificationConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.PutScalingPolicyAsync(Amazon.AutoScaling.Model.PutScalingPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutScalingPolicy operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutScalingPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.PutScheduledUpdateGroupActionAsync(Amazon.AutoScaling.Model.PutScheduledUpdateGroupActionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutScheduledUpdateGroupAction operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutScheduledUpdateGroupAction operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.RecordLifecycleActionHeartbeatAsync(Amazon.AutoScaling.Model.RecordLifecycleActionHeartbeatRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RecordLifecycleActionHeartbeat operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RecordLifecycleActionHeartbeat operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.ResumeProcessesAsync(Amazon.AutoScaling.Model.ResumeProcessesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResumeProcesses operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResumeProcesses operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.SetDesiredCapacityAsync(Amazon.AutoScaling.Model.SetDesiredCapacityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetDesiredCapacity operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetDesiredCapacity operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.SetInstanceHealthAsync(Amazon.AutoScaling.Model.SetInstanceHealthRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetInstanceHealth operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetInstanceHealth operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.SuspendProcessesAsync(Amazon.AutoScaling.Model.SuspendProcessesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SuspendProcesses operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SuspendProcesses operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.TerminateInstanceInAutoScalingGroupAsync(Amazon.AutoScaling.Model.TerminateInstanceInAutoScalingGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the TerminateInstanceInAutoScalingGroup operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the TerminateInstanceInAutoScalingGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingClient.UpdateAutoScalingGroupAsync(Amazon.AutoScaling.Model.UpdateAutoScalingGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateAutoScalingGroup operation.
            <seealso cref="T:Amazon.AutoScaling.IAmazonAutoScaling"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateAutoScalingGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.AutoScaling.AmazonAutoScalingConfig">
            <summary>
            Configuration for accessing Amazon AutoScaling service
            </summary>
        </member>
        <member name="T:Amazon.Runtime.ClientConfig">
            <summary>
            This class is the base class of all the configurations settings to connect
            to a service.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.ClientConfig.Validate">
            <summary>
            Performs validation on this config object.
            Throws exception if any of the required values are missing/invalid.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.ClientConfig.GetTimeoutValue(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Returns the request timeout value if its value is set, 
            else returns client timeout value.
            </summary>        
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.ServiceVersion">
            <summary>
            Gets Service Version
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.SignatureMethod">
            <summary>
            Gets and sets of the signatureMethod property.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.SignatureVersion">
            <summary>
            Gets and sets of the SignatureVersion property.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.UserAgent">
            <summary>
            Gets and sets of the UserAgent property.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.RegionEndpoint">
            <summary>
            Gets and sets the RegionEndpoint property.  The region constant to use that 
            determines the endpoint to use.  If this is not set
            then the client will fallback to the value of ServiceURL.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.ServiceURL">
            <summary>
            Gets and sets of the ServiceURL property.
            This is an optional property; change it
            only if you want to try a different service
            endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.UseHttp">
            <summary>
            Gets and sets the UseHttp.
            If this property is set to true, the client attempts
            to use HTTP protocol, if the target endpoint supports it.
            By default, this property is set to false.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.AuthenticationRegion">
            <summary>
            Gets and sets the AuthenticationRegion property.
            Used in AWS4 request signing, this is an optional property; 
            change it only if the region cannot be determined from the 
            service endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.AuthenticationServiceName">
            <summary>
            Gets and sets the AuthenticationServiceName property.
            Used in AWS4 request signing, this is the short-form
            name of the service being called.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.MaxErrorRetry">
            <summary>
            Gets and sets of the MaxErrorRetry property.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.LogResponse">
            <summary>
            Gets and sets the LogResponse.
            If this property is set to true, the service response
            is read in its entirety and logged.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.ReadEntireResponse">
            <summary>
            Gets and sets the ReadEntireResponse.
            If this property is set to true, the service response
            is read in its entirety before being processed.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.BufferSize">
            <summary>
            Gets and Sets the BufferSize property.
            The BufferSize controls the buffer used to read in from input streams and write 
            out to the request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.ProgressUpdateInterval">
            <summary>
            <para>
            Gets or sets the interval at which progress update events are raised
            for upload operations. By default, the progress update events are 
            raised at every 100KB of data transferred. 
            </para>
            <para>
            If the value of this property is set less than ClientConfig.BufferSize, 
            progress updates events will be raised at the interval specified by ClientConfig.BufferSize.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.ResignRetries">
            <summary>
            Flag on whether to resign requests on retry or not.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.LogMetrics">
            <summary>
            Flag on whether to log metrics for service calls.
            
            This can be set in the application's configs, as below:
            <code>
            &lt;?xml version="1.0" encoding="utf-8" ?&gt;
            &lt;configuration&gt;
                &lt;appSettings&gt;
                    &lt;add key="AWSLogMetrics" value"true"/&gt;
                &lt;/appSettings&gt;
            &lt;/configuration&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.DisableLogging">
            <summary>
            Flag on whether to completely disable logging for this client or not.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.ProxyCredentials">
            <summary>
            Credentials to use with a proxy.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ClientConfig.Timeout">
            <summary>
            Overrides the default request timeout value.
            </summary>
            <remarks>
            <para>
            If the value is set, the value is assigned to the Timeout property of the HTTPWebRequest/HttpClient object used
            to send requests.
            </para>
            <para>
            Please specify a timeout value only if the operation will not complete within the default intervals
            specified for an HttpWebRequest/HttpClient.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The timeout specified is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than or equal to zero and is not Infinite.</exception>
            <seealso cref="P:System.Net.HttpWebRequest.Timeout"/>
            <seealso cref="P:System.Net.Http.HttpClient.Timeout"/>
        </member>
        <member name="M:Amazon.AutoScaling.AmazonAutoScalingConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.AmazonAutoScalingConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.AmazonAutoScalingConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.AmazonServiceException">
            <summary>
            A base exception for some Amazon Web Services.
            <para>
            Most exceptions thrown to client code will be service-specific exceptions, though some services
            may throw this exception if there is a problem which is caught in the core client code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Runtime.AmazonServiceException.ErrorType">
            <summary>
            Whether the error was attributable to <c>Sender</c> or <c>Reciever</c>.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.AmazonServiceException.ErrorCode">
            <summary>
            The error code returned by the service
            </summary>
        </member>
        <member name="P:Amazon.Runtime.AmazonServiceException.RequestId">
            <summary>
            The id of the request which generated the exception.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.AmazonServiceException.StatusCode">
            <summary>
            The HTTP status code from the service response
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.Activity">
            <summary>
            A scaling Activity is a long-running process that represents a change to your AutoScalingGroup,
            such as changing the size of the group. It can also be a process to replace an instance,
            or a process to perform any other long-running operations supported by the API.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Activity.ActivityId">
            <summary>
            Gets and sets the property ActivityId. 
            <para>
             Specifies the ID of the activity. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Activity.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Activity.Cause">
            <summary>
            Gets and sets the property Cause. 
            <para>
             Contains the reason the activity was begun. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Activity.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
             Contains a friendly, more verbose description of the scaling activity. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Activity.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
             Contains details of the scaling activity. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Activity.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
             Provides the end time of this activity. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Activity.Progress">
            <summary>
            Gets and sets the property Progress. 
            <para>
             Specifies a value between 0 and 100 that indicates the progress of the activity.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Activity.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
             Provides the start time of this activity. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Activity.StatusCode">
            <summary>
            Gets and sets the property StatusCode. 
            <para>
             Contains the current status of the activity. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Activity.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
             Contains a friendly, more verbose description of the activity status. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.AdjustmentType">
            <summary>
            Specifies whether the <a>PutScalingPolicy</a> <code>ScalingAdjustment</code> parameter
            is an absolute number or a percentage of the current capacity.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AdjustmentType.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            A policy adjustment type. Valid values are <code>ChangeInCapacity</code>, <code>ExactCapacity</code>,
            and <code>PercentChangeInCapacity</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.Alarm">
            <summary>
            The Alarm data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Alarm.AlarmARN">
            <summary>
            Gets and sets the property AlarmARN. 
            <para>
            The Amazon Resource Name (ARN) of the alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Alarm.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
            The name of the alarm.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.AlreadyExistsException">
            <summary>
             AutoScaling exception
             </summary>
        </member>
        <member name="M:Amazon.AutoScaling.Model.AlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new AlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.AutoScaling.AmazonAutoScalingRequest">
            <summary>
            Base class for AutoScaling operation requests.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.AmazonWebServiceRequest">
            <summary>
            Base class for request used by some of the services.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.AmazonWebServiceRequest.TimeoutInternal">
            <summary>
            Overrides the default request timeout value.
            </summary>
            <remarks>
            <para>
            If the value is set, the value is assigned to the Timeout property of the HTTPWebRequest/HttpClient object used
            to send requests.
            </para>
            <para>
            Please specify a timeout value only if the operation will not complete within the default intervals
            specified for an HttpWebRequest/HttpClient.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The timeout specified is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than or equal to zero and is not Infinite.</exception>
            <seealso cref="P:System.Net.HttpWebRequest.Timeout"/>
            <seealso cref="P:System.Net.Http.HttpClient.Timeout"/>
        </member>
        <member name="P:Amazon.Runtime.AmazonWebServiceRequest.ReadWriteTimeoutInternal">
            <summary>
            Overrides the default read-write timeout value.
            </summary>
            <remarks>
            <para>
            If the value is set, the value is assigned to the ReadWriteTimeout property of the HTTPWebRequest/WebRequestHandler object used
            to send requests.
            </para>
            <exception cref="T:System.ArgumentNullException">The timeout specified is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The timeout specified is less than or equal to zero and is not Infinite.</exception>
            </remarks>
            <seealso cref="P:System.Net.HttpWebRequest.ReadWriteTimeout"/>
            <seealso cref="P:System.Net.Http.WebRequestHandler.ReadWriteTimeout"/>
        </member>
        <member name="P:Amazon.Runtime.AmazonWebServiceRequest.Expect100Continue">
            <summary>
            Gest or Sets a value indicating if "Expect: 100-continue" HTTP header will be 
            sent by the client for this request. The default value is false.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.AttachInstancesRequest">
            <summary>
            Container for the parameters to the AttachInstances operation.
            Attaches one or more Amazon EC2 instances to an existing Auto Scaling group. After
            the instance(s) is attached, it becomes a part of the Auto Scaling group. 
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/attach-instance-asg.html">Attach
            Amazon EC2 Instances to Your Existing Auto Scaling Group</a> in the <i>Auto Scaling
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AttachInstancesRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name of the Auto Scaling group to which to attach the specified instance(s).
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AttachInstancesRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
             One or more IDs of the Amazon EC2 instances to attach to the specified Auto Scaling
            group. You must specify at least one instance ID. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.AttachInstancesResponse">
            <summary>
            Configuration for accessing Amazon AttachInstances service
            </summary>
        </member>
        <member name="T:Amazon.Runtime.AmazonWebServiceResponse">
            <summary>
            Abstract class for Response objects, contains only metadata, 
            and no result information.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.AmazonWebServiceResponse.ResponseMetadata">
            <summary>
            Contains additional information about the request, such as the 
            Request Id.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.AmazonWebServiceResponse.ContentLength">
            <summary>
            Returns the content length of the HTTP response.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.AmazonWebServiceResponse.HttpStatusCode">
            <summary>
            Returns the status code of the HTTP response.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AttachInstancesResponse.AttachInstancesResult">
            <summary>
            Gets and sets the AttachInstancesResult property.
            Represents the output of a AttachInstances operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.AutoScalingGroup">
            <summary>
            The AutoScalingGroup data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingGroup.AutoScalingGroupARN">
            <summary>
            Gets and sets the property AutoScalingGroupARN. 
            <para>
             The Amazon Resource Name (ARN) of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingGroup.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             Specifies the name of the group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingGroup.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
             Contains a list of Availability Zones for the group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingGroup.CreatedTime">
            <summary>
            Gets and sets the property CreatedTime. 
            <para>
             Specifies the date and time the Auto Scaling group was created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingGroup.DefaultCooldown">
            <summary>
            Gets and sets the property DefaultCooldown. 
            <para>
             The number of seconds after a scaling activity completes before any further scaling
            activities can start. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingGroup.DesiredCapacity">
            <summary>
            Gets and sets the property DesiredCapacity. 
            <para>
             Specifies the desired capacity for the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingGroup.EnabledMetrics">
            <summary>
            Gets and sets the property EnabledMetrics. 
            <para>
             A list of metrics enabled for this Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingGroup.HealthCheckGracePeriod">
            <summary>
            Gets and sets the property HealthCheckGracePeriod. 
            <para>
             The length of time that Auto Scaling waits before checking an instance's health status.
            The grace period begins when an instance comes into service. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingGroup.HealthCheckType">
            <summary>
            Gets and sets the property HealthCheckType. 
            <para>
             The service of interest for the health status check, either "EC2" for Amazon EC2
            or "ELB" for Elastic Load Balancing. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingGroup.Instances">
            <summary>
            Gets and sets the property Instances. 
            <para>
             Provides a summary list of Amazon EC2 instances. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingGroup.LaunchConfigurationName">
            <summary>
            Gets and sets the property LaunchConfigurationName. 
            <para>
             Specifies the name of the associated <a>LaunchConfiguration</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingGroup.LoadBalancerNames">
            <summary>
            Gets and sets the property LoadBalancerNames. 
            <para>
             A list of load balancers associated with this Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingGroup.MaxSize">
            <summary>
            Gets and sets the property MaxSize. 
            <para>
             Contains the maximum size of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingGroup.MinSize">
            <summary>
            Gets and sets the property MinSize. 
            <para>
             Contains the minimum size of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingGroup.PlacementGroup">
            <summary>
            Gets and sets the property PlacementGroup. 
            <para>
             The name of the cluster placement group, if applicable. For more information, go
            to <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">
            Using Cluster Instances</a> in the Amazon EC2 User Guide. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingGroup.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
             The current state of the Auto Scaling group when a <a>DeleteAutoScalingGroup</a>
            action is in progress. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingGroup.SuspendedProcesses">
            <summary>
            Gets and sets the property SuspendedProcesses. 
            <para>
             Suspended processes associated with this Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingGroup.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
             A list of tags for the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingGroup.TerminationPolicies">
            <summary>
            Gets and sets the property TerminationPolicies. 
            <para>
             A standalone termination policy or a list of termination policies for this Auto Scaling
            group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingGroup.VPCZoneIdentifier">
            <summary>
            Gets and sets the property VPCZoneIdentifier. 
            <para>
             The subnet identifier for the Amazon VPC connection, if applicable. You can specify
            several subnets in a comma-separated list. 
            </para>
             
            <para>
             When you specify <code>VPCZoneIdentifier</code> with <code>AvailabilityZones</code>,
            ensure that the subnets' Availability Zones match the values you specify for <code>AvailabilityZones</code>.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.AutoScalingInstanceDetails">
            <summary>
            The <code>AutoScalingInstanceDetails</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingInstanceDetails.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name of the Auto Scaling group associated with this instance. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingInstanceDetails.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
             The Availability Zone in which this instance resides. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingInstanceDetails.HealthStatus">
            <summary>
            Gets and sets the property HealthStatus. 
            <para>
             The health status of this instance. "Healthy" means that the instance is healthy
            and should remain in service. "Unhealthy" means that the instance is unhealthy. Auto
            Scaling should terminate and replace it. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingInstanceDetails.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
             The instance ID of the Amazon EC2 instance. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingInstanceDetails.LaunchConfigurationName">
            <summary>
            Gets and sets the property LaunchConfigurationName. 
            <para>
             The launch configuration associated with this instance. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.AutoScalingInstanceDetails.LifecycleState">
            <summary>
            Gets and sets the property LifecycleState. 
            <para>
             The life cycle state of this instance. for more information, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AS_Concepts.html#instance-lifecycle">Instance
            Lifecycle State</a> in the <i>Auto Scaling Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.BlockDeviceMapping">
            <summary>
            The <code>BlockDeviceMapping</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.BlockDeviceMapping.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
             The name of the device within Amazon EC2 (for example, /dev/sdh or xvdh). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.BlockDeviceMapping.Ebs">
            <summary>
            Gets and sets the property Ebs. 
            <para>
             The Elastic Block Storage volume information. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.BlockDeviceMapping.NoDevice">
            <summary>
            Gets and sets the property NoDevice. 
            <para>
             Suppresses the device mapping. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.BlockDeviceMapping.VirtualName">
            <summary>
            Gets and sets the property VirtualName. 
            <para>
            The virtual name associated with the device. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.CompleteLifecycleActionRequest">
            <summary>
            Container for the parameters to the CompleteLifecycleAction operation.
            Completes the lifecycle action for the associated token initiated under the given
            lifecycle hook with the specified result. 
            
             
            <para>
             This operation is a part of the basic sequence for adding a lifecycle hook to an
            Auto Scaling group: 
            </para>
             <ol> <li> Create a notification target. A target can be either an Amazon SQS queue
            or an Amazon SNS topic. </li> <li> Create an IAM role. This role allows Auto Scaling
            to publish lifecycle notifications to the designated SQS queue or SNS topic. </li>
            <li> Create the lifecycle hook. You can create a hook that acts when instances launch
            or when instances terminate. </li> <li> If necessary, record the lifecycle action
            heartbeat to keep the instance in a pending state. </li> <li> <b>Complete the lifecycle
            action.</b> </li> </ol> 
            <para>
            To learn more, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AutoScalingPendingState.html">Auto
            Scaling Pending State</a> and <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AutoScalingTerminatingState.html">Auto
            Scaling Terminating State</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CompleteLifecycleActionRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
            The name of the Auto Scaling group to which the lifecycle hook belongs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CompleteLifecycleActionRequest.LifecycleActionResult">
            <summary>
            Gets and sets the property LifecycleActionResult. 
            <para>
            The action the Auto Scaling group should take. The value for this parameter can be
            either <code>CONTINUE</code> or <code>ABANDON</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CompleteLifecycleActionRequest.LifecycleActionToken">
            <summary>
            Gets and sets the property LifecycleActionToken. 
            <para>
            A universally unique identifier (UUID) that identifies a specific lifecycle action
            associated with an instance. Auto Scaling sends this token to the notification target
            you specified when you created the lifecycle hook.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CompleteLifecycleActionRequest.LifecycleHookName">
            <summary>
            Gets and sets the property LifecycleHookName. 
            <para>
            The name of the lifecycle hook.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.CompleteLifecycleActionResponse">
            <summary>
            Configuration for accessing Amazon CompleteLifecycleAction service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.CompleteLifecycleActionResult">
            <summary>
            The output of the <a>CompleteLifecycleAction</a>.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CompleteLifecycleActionResponse.CompleteLifecycleActionResult">
            <summary>
            Gets and sets the CompleteLifecycleActionResult property.
            Represents the output of a CompleteLifecycleAction operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.CreateAutoScalingGroupRequest">
            <summary>
            Container for the parameters to the CreateAutoScalingGroup operation.
            Creates a new Auto Scaling group with the specified name and other attributes. When
            the creation request is completed, the Auto Scaling group is ready to be used in other
            calls.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateAutoScalingGroupRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateAutoScalingGroupRequest.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
             A list of Availability Zones for the Auto Scaling group. This is required unless
            you have specified subnets. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateAutoScalingGroupRequest.DefaultCooldown">
            <summary>
            Gets and sets the property DefaultCooldown. 
            <para>
             The amount of time, in seconds, between a successful scaling activity and the succeeding
            scaling activity.
            </para>
             
            <para>
            If a <code>DefaultCooldown</code> period is not specified, Auto Scaling uses the default
            value of 300 as the default cool down period for the Auto Scaling group. For more
            information, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AS_Concepts.html#Cooldown">Cooldown
            Period</a> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateAutoScalingGroupRequest.DesiredCapacity">
            <summary>
            Gets and sets the property DesiredCapacity. 
            <para>
             The number of Amazon EC2 instances that should be running in the group. The desired
            capacity must be greater than or equal to the minimum size and less than or equal
            to the maximum size specified for the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateAutoScalingGroupRequest.HealthCheckGracePeriod">
            <summary>
            Gets and sets the property HealthCheckGracePeriod. 
            <para>
            Length of time in seconds after a new Amazon EC2 instance comes into service that
            Auto Scaling starts checking its health. During this time any health check failure
            for the that instance is ignored.
            </para>
             
            <para>
            This is required if you are adding <code>ELB</code> health check. Frequently, new
            instances need to warm up, briefly, before they can pass a health check. To provide
            ample warm-up time, set the health check grace period of the group to match the expected
            startup period of your application.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/as-add-elb-healthcheck.html#as-add-elb-healthcheck-api">Add
            an Elastic Load Balancing Health Check</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateAutoScalingGroupRequest.HealthCheckType">
            <summary>
            Gets and sets the property HealthCheckType. 
            <para>
            The service you want the health checks from, Amazon EC2 or Elastic Load Balancer.
            Valid values are <code>EC2</code> or <code>ELB</code>.
            </para>
             
            <para>
            By default, the Auto Scaling health check uses the results of Amazon EC2 instance
            status checks to determine the health of an instance. For more information, see <a
            href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AS_Concepts.html#healthcheck">Health
            Check</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateAutoScalingGroupRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
             The ID of the Amazon EC2 instance you want to use to create the Auto Scaling group.
            Use this attribute if you want to create an Auto Scaling group using an EC2 instance
            instead of a launch configuration. 
            </para>
             
            <para>
             When you use an instance to create an Auto Scaling group, a new launch configuration
            is first created and then associated with the Auto Scaling group. The new launch configuration
            derives all its attributes from the instance that is used to create the Auto Scaling
            group, with the exception of <code>BlockDeviceMapping</code>. 
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/create-asg-from-instance.html">Create
            an Auto Scaling Group Using EC2 Instance</a> in the <i>Auto Scaling Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateAutoScalingGroupRequest.LaunchConfigurationName">
            <summary>
            Gets and sets the property LaunchConfigurationName. 
            <para>
             The name of an existing launch configuration to use to launch new instances. Use
            this attribute if you want to create an Auto Scaling group using an existing launch
            configuration instead of an EC2 instance. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateAutoScalingGroupRequest.LoadBalancerNames">
            <summary>
            Gets and sets the property LoadBalancerNames. 
            <para>
             A list of existing Elastic Load Balancing load balancers to use. The load balancers
            must be associated with the AWS account. 
            </para>
             
            <para>
            For information on using load balancers, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/US_SetUpASLBApp.html">Load
            Balance Your Auto Scaling Group</a> in the <i>Auto Scaling Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateAutoScalingGroupRequest.MaxSize">
            <summary>
            Gets and sets the property MaxSize. 
            <para>
             The maximum size of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateAutoScalingGroupRequest.MinSize">
            <summary>
            Gets and sets the property MinSize. 
            <para>
             The minimum size of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateAutoScalingGroupRequest.PlacementGroup">
            <summary>
            Gets and sets the property PlacementGroup. 
            <para>
            Physical location of an existing cluster placement group into which you want to launch
            your instances. For information about cluster placement group, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Using
            Cluster Instances</a>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateAutoScalingGroupRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
             The tag to be created or updated. Each tag should be defined by its resource type,
            resource ID, key, value, and a propagate flag. Valid values: key=<i>value</i>, value=<i>value</i>,
            propagate=<i>true</i> or <i>false</i>. Value and propagate are optional parameters.
            </para>
             
            <para>
            For information about using tags, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/ASTagging.html">Tag
            Your Auto Scaling Groups and Amazon EC2 Instances</a> in the <i>Auto Scaling Developer
            Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateAutoScalingGroupRequest.TerminationPolicies">
            <summary>
            Gets and sets the property TerminationPolicies. 
            <para>
            A standalone termination policy or a list of termination policies used to select the
            instance to terminate. The policies are executed in the order that they are listed.
            
            </para>
             
            <para>
             For more information on configuring a termination policy for your Auto Scaling group,
            see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/us-termination-policy.html">Instance
            Termination Policy for Your Auto Scaling Group</a> in the <i>Auto Scaling Developer
            Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateAutoScalingGroupRequest.VPCZoneIdentifier">
            <summary>
            Gets and sets the property VPCZoneIdentifier. 
            <para>
            A comma-separated list of subnet identifiers of Amazon Virtual Private Clouds (Amazon
            VPCs).
            </para>
             
            <para>
            If you specify subnets and Availability Zones with this call, ensure that the subnets'
            Availability Zones match the Availability Zones specified. 
            </para>
             
            <para>
            For information on launching your Auto Scaling group into Amazon VPC subnets, see
            <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/autoscalingsubnets.html">Auto
            Scaling in Amazon Virtual Private Cloud</a> in the <i>Auto Scaling Developer Guide</i>
            .
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.CreateAutoScalingGroupResponse">
            <summary>
            Configuration for accessing Amazon CreateAutoScalingGroup service
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateAutoScalingGroupResponse.CreateAutoScalingGroupResult">
            <summary>
            Gets and sets the CreateAutoScalingGroupResult property.
            Represents the output of a CreateAutoScalingGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.CreateLaunchConfigurationRequest">
            <summary>
            Container for the parameters to the CreateLaunchConfiguration operation.
            Creates a new launch configuration. The launch configuration name must be unique
            within the scope of the client's AWS account. The maximum limit of launch configurations,
            which by default is 100, must not yet have been met; otherwise, the call will fail.
            When created, the new launch configuration is available for immediate use.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateLaunchConfigurationRequest.AssociatePublicIpAddress">
            <summary>
            Gets and sets the property AssociatePublicIpAddress. 
            <para>
            Used for Auto Scaling groups that launch instances into an Amazon Virtual Private
            Cloud (Amazon VPC). Specifies whether to assign a public IP address to each instance
            launched in a Amazon VPC. For more information, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/autoscalingsubnets.html">Auto
            Scaling in Amazon Virtual Private Cloud</a>.
            </para>
             
            <para>
            Default: If the instance is launched into a default subnet in a default VPC, the default
            is <code>true</code>. If the instance is launched into a nondefault subnet in a VPC,
            the default is <code>false</code>. For information about default VPC and VPC platforms,
            see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide//as-supported-platforms.html">Supported
            Platforms</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateLaunchConfigurationRequest.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
             A list of mappings that specify how block devices are exposed to the instance. Each
            mapping is made up of a <i>VirtualName</i>, a <i>DeviceName</i>, and an <i>ebs</i>
            data structure that contains information about the associated Elastic Block Storage
            volume. For more information about Amazon EC2 BlockDeviceMappings, go to <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/index.html?block-device-mapping-concepts.html">
            Block Device Mapping</a> in the Amazon EC2 product documentation. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateLaunchConfigurationRequest.EbsOptimized">
            <summary>
            Gets and sets the property EbsOptimized. 
            <para>
             Whether the instance is optimized for EBS I/O. The optimization provides dedicated
            throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS
            I/O performance. This optimization is not available with all instance types. Additional
            usage charges apply when using an EBS Optimized instance. By default the instance
            is not optimized for EBS I/O. For information about EBS-optimized instances, go to
            <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#EBSOptimized">EBS-Optimized
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateLaunchConfigurationRequest.IamInstanceProfile">
            <summary>
            Gets and sets the property IamInstanceProfile. 
            <para>
            The name or the Amazon Resource Name (ARN) of the instance profile associated with
            the IAM role for the instance.
            </para>
             
            <para>
            Amazon EC2 instances launched with an IAM role will automatically have AWS security
            credentials available. You can use IAM roles with Auto Scaling to automatically enable
            applications running on your Amazon EC2 instances to securely access other AWS resources.
            For information on launching EC2 instances with an IAM role, go to <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/us-iam-role.html">Launching
            Auto Scaling Instances With an IAM Role</a> in the <i>Auto Scaling Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateLaunchConfigurationRequest.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
             Unique ID of the Amazon Machine Image (AMI) you want to use to launch your EC2 instances.
            For information about finding Amazon EC2 AMIs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html">Finding
            a Suitable AMI</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateLaunchConfigurationRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
             The ID of the Amazon EC2 instance you want to use to create the launch configuration.
            Use this attribute if you want the launch configuration to derive its attributes from
            an EC2 instance. 
            </para>
             
            <para>
             When you use an instance to create a launch configuration, all you need to specify
            is the <code>InstanceId</code>. The new launch configuration, by default, derives
            all the attributes from the specified instance with the exception of <code>BlockDeviceMapping</code>.
            
            </para>
             
            <para>
            If you want to create a launch configuration with <code>BlockDeviceMapping</code>
            or override any other instance attributes, specify them as part of the same request.
            </para>
             
            <para>
            For more information on using an InstanceID to create a launch configuration, see
            <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/create-lc-with-instanceID.html">Create
            a Launch Configuration Using an Amazon EC2 Instance</a> in the <i>Auto Scaling Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateLaunchConfigurationRequest.InstanceMonitoring">
            <summary>
            Gets and sets the property InstanceMonitoring. 
            <para>
            Enables detailed monitoring if it is disabled. Detailed monitoring is enabled by default.
            </para>
             
            <para>
             When detailed monitoring is enabled, Amazon Cloudwatch will generate metrics every
            minute and your account will be charged a fee. When you disable detailed monitoring,
            by specifying <code>False</code>, Cloudwatch will generate metrics every 5 minutes.
            For more information, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/as-instance-monitoring.html">Monitor
            Your Auto Scaling Instances</a>. For information about Amazon CloudWatch, see the
            <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/Welcome.html">Amazon
            CloudWatch Developer Guide</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateLaunchConfigurationRequest.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
             The instance type of the Amazon EC2 instance. For information about available Amazon
            EC2 instance types, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#AvailableInstanceTypes">
            Available Instance Types</a> in the <i>Amazon Elastic Cloud Compute User Guide.</i>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateLaunchConfigurationRequest.KernelId">
            <summary>
            Gets and sets the property KernelId. 
            <para>
             The ID of the kernel associated with the Amazon EC2 AMI. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateLaunchConfigurationRequest.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
             The name of the Amazon EC2 key pair. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/generating-a-keypair.html">Getting
            a Key Pair</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateLaunchConfigurationRequest.LaunchConfigurationName">
            <summary>
            Gets and sets the property LaunchConfigurationName. 
            <para>
             The name of the launch configuration to create. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateLaunchConfigurationRequest.PlacementTenancy">
            <summary>
            Gets and sets the property PlacementTenancy. 
            <para>
            The tenancy of the instance. An instance with a tenancy of <code>dedicated</code>
            runs on single-tenant hardware and can only be launched in a VPC.
            </para>
             
            <para>
            You must set the value of this parameter to <code>dedicated</code> if want to launch
            Dedicated Instances in a shared tenancy VPC (VPC with instance placement tenancy attribute
            set to <code>default</code>).
            </para>
             
            <para>
            If you specify a value for this parameter, be sure to specify at least one VPC subnet
            using the <i>VPCZoneIdentifier</i> parameter when you create your Auto Scaling group.
            
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/autoscalingsubnets.html">Auto
            Scaling in Amazon Virtual Private Cloud</a> in the <i>Auto Scaling Developer Guide</i>.
            
            </para>
             
            <para>
            Valid values: <code>default</code> | <code>dedicated</code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateLaunchConfigurationRequest.RamdiskId">
            <summary>
            Gets and sets the property RamdiskId. 
            <para>
             The ID of the RAM disk associated with the Amazon EC2 AMI. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateLaunchConfigurationRequest.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
             The security groups with which to associate Amazon EC2 or Amazon VPC instances.
            </para>
             
            <para>
            If your instances are launched in EC2, you can either specify Amazon EC2 security
            group names or the security group IDs. For more information about Amazon EC2 security
            groups, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/index.html?using-network-security.html">
            Using Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            If your instances are launched within VPC, specify Amazon VPC security group IDs.
            For more information about Amazon VPC security groups, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/index.html?VPC_SecurityGroups.html">Security
            Groups</a> in the <i>Amazon Virtual Private Cloud User Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateLaunchConfigurationRequest.SpotPrice">
            <summary>
            Gets and sets the property SpotPrice. 
            <para>
            The maximum hourly price to be paid for any Spot Instance launched to fulfill the
            request. Spot Instances are launched when the price you specify exceeds the current
            Spot market price. For more information on launching Spot Instances, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/US-SpotInstances.html">
            Using Auto Scaling to Launch Spot Instances</a> in the <i>Auto Scaling Developer Guide</i>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateLaunchConfigurationRequest.UserData">
            <summary>
            Gets and sets the property UserData. 
            <para>
             The user data to make available to the launched Amazon EC2 instances. For more information
            about Amazon EC2 user data, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html#instancedata-user-data-retrieval">User
            Data Retrieval</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.CreateLaunchConfigurationResponse">
            <summary>
            Configuration for accessing Amazon CreateLaunchConfiguration service
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateLaunchConfigurationResponse.CreateLaunchConfigurationResult">
            <summary>
            Gets and sets the CreateLaunchConfigurationResult property.
            Represents the output of a CreateLaunchConfiguration operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.CreateOrUpdateTagsRequest">
            <summary>
            Container for the parameters to the CreateOrUpdateTags operation.
            Creates new tags or updates existing tags for an Auto Scaling group. 
            
             
            <para>
            For information on creating tags for your Auto Scaling group, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/ASTagging.html">Tag
            Your Auto Scaling Groups and Amazon EC2 Instances</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateOrUpdateTagsRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
             The tag to be created or updated. Each tag should be defined by its resource type,
            resource ID, key, value, and a propagate flag. The resource type and resource ID identify
            the type and name of resource for which the tag is created. Currently, <code>auto-scaling-group</code>
            is the only supported resource type. The valid value for the resource ID is <i>groupname</i>.
            
            </para>
             
            <para>
            The <code>PropagateAtLaunch</code> flag defines whether the new tag will be applied
            to instances launched by the Auto Scaling group. Valid values are <code>true</code>
            or <code>false</code>. However, instances that are already running will not get the
            new or updated tag. Likewise, when you modify a tag, the updated version will be applied
            only to new instances launched by the Auto Scaling group after the change. Running
            instances that had the previous version of the tag will continue to have the older
            tag. 
            </para>
             
            <para>
            When you create a tag and a tag of the same name already exists, the operation overwrites
            the previous tag definition, but you will not get an error message. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.CreateOrUpdateTagsResponse">
            <summary>
            Configuration for accessing Amazon CreateOrUpdateTags service
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.CreateOrUpdateTagsResponse.CreateOrUpdateTagsResult">
            <summary>
            Gets and sets the CreateOrUpdateTagsResult property.
            Represents the output of a CreateOrUpdateTags operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DeleteAutoScalingGroupRequest">
            <summary>
            Container for the parameters to the DeleteAutoScalingGroup operation.
            Deletes the specified Auto Scaling group if the group has no instances and no scaling
            activities in progress.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DeleteAutoScalingGroupRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name of the Auto Scaling group to delete. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DeleteAutoScalingGroupRequest.ForceDelete">
            <summary>
            Gets and sets the property ForceDelete. 
            <para>
            Starting with API version 2011-01-01, specifies that the Auto Scaling group will be
            deleted along with all instances associated with the group, without waiting for all
            instances to be terminated. This parameter also deletes any lifecycle actions associated
            with the group. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DeleteAutoScalingGroupResponse">
            <summary>
            Configuration for accessing Amazon DeleteAutoScalingGroup service
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DeleteAutoScalingGroupResponse.DeleteAutoScalingGroupResult">
            <summary>
            Gets and sets the DeleteAutoScalingGroupResult property.
            Represents the output of a DeleteAutoScalingGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DeleteLaunchConfigurationRequest">
            <summary>
            Container for the parameters to the DeleteLaunchConfiguration operation.
            Deletes the specified <a>LaunchConfiguration</a>. 
            
             
            <para>
             The specified launch configuration must not be attached to an Auto Scaling group.
            When this call completes, the launch configuration is no longer available for use.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DeleteLaunchConfigurationRequest.LaunchConfigurationName">
            <summary>
            Gets and sets the property LaunchConfigurationName. 
            <para>
             The name of the launch configuration. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DeleteLaunchConfigurationResponse">
            <summary>
            Configuration for accessing Amazon DeleteLaunchConfiguration service
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DeleteLaunchConfigurationResponse.DeleteLaunchConfigurationResult">
            <summary>
            Gets and sets the DeleteLaunchConfigurationResult property.
            Represents the output of a DeleteLaunchConfiguration operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DeleteLifecycleHookRequest">
            <summary>
            Container for the parameters to the DeleteLifecycleHook operation.
            Deletes the specified lifecycle hook. If there are any outstanding lifecycle actions,
            they are completed first (ABANDON for launching instances, CONTINUE for terminating
            instances).
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DeleteLifecycleHookRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
            The name of the Auto Scaling group to which the lifecycle hook belongs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DeleteLifecycleHookRequest.LifecycleHookName">
            <summary>
            Gets and sets the property LifecycleHookName. 
            <para>
            The name of the lifecycle hook.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DeleteLifecycleHookResponse">
            <summary>
            Configuration for accessing Amazon DeleteLifecycleHook service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DeleteLifecycleHookResult">
            <summary>
            The output of the <a>DeleteLifecycleHook</a> action.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DeleteLifecycleHookResponse.DeleteLifecycleHookResult">
            <summary>
            Gets and sets the DeleteLifecycleHookResult property.
            Represents the output of a DeleteLifecycleHook operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DeleteNotificationConfigurationRequest">
            <summary>
            Container for the parameters to the DeleteNotificationConfiguration operation.
            Deletes notifications created by <a>PutNotificationConfiguration</a>.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DeleteNotificationConfigurationRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
            The name of the Auto Scaling group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DeleteNotificationConfigurationRequest.TopicARN">
            <summary>
            Gets and sets the property TopicARN. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DeleteNotificationConfigurationResponse">
            <summary>
            Configuration for accessing Amazon DeleteNotificationConfiguration service
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DeleteNotificationConfigurationResponse.DeleteNotificationConfigurationResult">
            <summary>
            Gets and sets the DeleteNotificationConfigurationResult property.
            Represents the output of a DeleteNotificationConfiguration operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DeletePolicyRequest">
            <summary>
            Container for the parameters to the DeletePolicy operation.
            Deletes a policy created by <a>PutScalingPolicy</a>.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DeletePolicyRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
            The name of the Auto Scaling group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DeletePolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The name or PolicyARN of the policy you want to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DeletePolicyResponse">
            <summary>
            Configuration for accessing Amazon DeletePolicy service
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DeletePolicyResponse.DeletePolicyResult">
            <summary>
            Gets and sets the DeletePolicyResult property.
            Represents the output of a DeletePolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DeleteScheduledActionRequest">
            <summary>
            Container for the parameters to the DeleteScheduledAction operation.
            Deletes a scheduled action previously created using the <a>PutScheduledUpdateGroupAction</a>.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DeleteScheduledActionRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
            The name of the Auto Scaling group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DeleteScheduledActionRequest.ScheduledActionName">
            <summary>
            Gets and sets the property ScheduledActionName. 
            <para>
            The name of the action you want to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DeleteScheduledActionResponse">
            <summary>
            Configuration for accessing Amazon DeleteScheduledAction service
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DeleteScheduledActionResponse.DeleteScheduledActionResult">
            <summary>
            Gets and sets the DeleteScheduledActionResult property.
            Represents the output of a DeleteScheduledAction operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DeleteTagsRequest">
            <summary>
            Container for the parameters to the DeleteTags operation.
            Removes the specified tags or a set of tags from a set of resources.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DeleteTagsRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Each tag should be defined by its resource type, resource ID, key, value, and a propagate
            flag. Valid values are: Resource type = <i>auto-scaling-group</i>, Resource ID = <i>AutoScalingGroupName</i>,
            key=<i>value</i>, value=<i>value</i>, propagate=<i>true</i> or <i>false</i>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DeleteTagsResponse">
            <summary>
            Configuration for accessing Amazon DeleteTags service
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DeleteTagsResponse.DeleteTagsResult">
            <summary>
            Gets and sets the DeleteTagsResult property.
            Represents the output of a DeleteTags operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeAccountLimitsRequest">
            <summary>
            Container for the parameters to the DescribeAccountLimits operation.
            Returns the limits for the Auto Scaling resources currently allowed for your AWS
            account. 
            
             
            <para>
            Your AWS account comes with default limits on resources for Auto Scaling. There is
            a default limit of <code>20</code> Auto Scaling groups and <code>100</code> launch
            configurations per region.
            </para>
             
            <para>
            If you reach the limits for the number of Auto Scaling groups or the launch configurations,
            you can go to the <a href="https://aws.amazon.com/support/">Support Center</a> and
            place a request to raise the limits.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeAccountLimitsResponse">
            <summary>
            Configuration for accessing Amazon DescribeAccountLimits service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeAccountLimitsResult">
            <summary>
            The output of the <a>DescribeAccountLimitsResult</a> action.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeAccountLimitsResult.MaxNumberOfAutoScalingGroups">
            <summary>
            Gets and sets the property MaxNumberOfAutoScalingGroups. 
            <para>
             The maximum number of Auto Scaling groups allowed for your AWS account. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeAccountLimitsResult.MaxNumberOfLaunchConfigurations">
            <summary>
            Gets and sets the property MaxNumberOfLaunchConfigurations. 
            <para>
             The maximum number of launch configurations allowed for your AWS account. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeAccountLimitsResponse.DescribeAccountLimitsResult">
            <summary>
            Gets and sets the DescribeAccountLimitsResult property.
            Represents the output of a DescribeAccountLimits operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeAdjustmentTypesRequest">
            <summary>
            Container for the parameters to the DescribeAdjustmentTypes operation.
            Returns policy adjustment types for use in the <a>PutScalingPolicy</a> action.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeAdjustmentTypesResponse">
            <summary>
            Configuration for accessing Amazon DescribeAdjustmentTypes service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeAdjustmentTypesResult">
            <summary>
            The output of the <a>DescribeAdjustmentTypes</a> action.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeAdjustmentTypesResult.AdjustmentTypes">
            <summary>
            Gets and sets the property AdjustmentTypes. 
            <para>
             A list of specific policy adjustment types. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeAdjustmentTypesResponse.DescribeAdjustmentTypesResult">
            <summary>
            Gets and sets the DescribeAdjustmentTypesResult property.
            Represents the output of a DescribeAdjustmentTypes operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeAutoScalingGroupsRequest">
            <summary>
            Container for the parameters to the DescribeAutoScalingGroups operation.
            Returns a full description of each Auto Scaling group in the given list. This includes
            all Amazon EC2 instances that are members of the group. If a list of names is not
            provided, the service returns the full details of all Auto Scaling groups. 
            
             
            <para>
             This action supports pagination by returning a token if there are more pages to retrieve.
            To get the next page, call this action again with the returned token as the <code>NextToken</code>
            parameter. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeAutoScalingGroupsRequest.AutoScalingGroupNames">
            <summary>
            Gets and sets the property AutoScalingGroupNames. 
            <para>
             A list of Auto Scaling group names. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeAutoScalingGroupsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to return. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeAutoScalingGroupsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             A string that marks the start of the next batch of returned results. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeAutoScalingGroupsResponse">
            <summary>
            Configuration for accessing Amazon DescribeAutoScalingGroups service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeAutoScalingGroupsResult">
            <summary>
            The <code>AutoScalingGroupsType</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeAutoScalingGroupsResult.AutoScalingGroups">
            <summary>
            Gets and sets the property AutoScalingGroups. 
            <para>
             A list of Auto Scaling groups. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeAutoScalingGroupsResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             A string that marks the start of the next batch of returned results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeAutoScalingGroupsResponse.DescribeAutoScalingGroupsResult">
            <summary>
            Gets and sets the DescribeAutoScalingGroupsResult property.
            Represents the output of a DescribeAutoScalingGroups operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeAutoScalingInstancesRequest">
            <summary>
            Container for the parameters to the DescribeAutoScalingInstances operation.
            Returns a description of each Auto Scaling instance in the <code>InstanceIds</code>
            list. If a list is not provided, the service returns the full details of all instances
            up to a maximum of 50. By default, the service returns a list of 20 items. 
            
             
            <para>
             This action supports pagination by returning a token if there are more pages to retrieve.
            To get the next page, call this action again with the returned token as the <code>NextToken</code>
            parameter. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeAutoScalingInstancesRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
             The list of Auto Scaling instances to describe. If this list is omitted, all auto
            scaling instances are described. The list of requested instances cannot contain more
            than 50 items. If unknown instances are requested, they are ignored with no error.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeAutoScalingInstancesRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of Auto Scaling instances to be described with each call. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeAutoScalingInstancesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             The token returned by a previous call to indicate that there is more data available.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeAutoScalingInstancesResponse">
            <summary>
            Configuration for accessing Amazon DescribeAutoScalingInstances service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeAutoScalingInstancesResult">
            <summary>
            The <code>AutoScalingInstancesType</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeAutoScalingInstancesResult.AutoScalingInstances">
            <summary>
            Gets and sets the property AutoScalingInstances. 
            <para>
             A list of Auto Scaling instances. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeAutoScalingInstancesResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             A string that marks the start of the next batch of returned results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeAutoScalingInstancesResponse.DescribeAutoScalingInstancesResult">
            <summary>
            Gets and sets the DescribeAutoScalingInstancesResult property.
            Represents the output of a DescribeAutoScalingInstances operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeAutoScalingNotificationTypesRequest">
            <summary>
            Container for the parameters to the DescribeAutoScalingNotificationTypes operation.
            Returns a list of all notification types that are supported by Auto Scaling.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeAutoScalingNotificationTypesResponse">
            <summary>
            Configuration for accessing Amazon DescribeAutoScalingNotificationTypes service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeAutoScalingNotificationTypesResult">
            <summary>
            The <code>AutoScalingNotificationTypes</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeAutoScalingNotificationTypesResult.AutoScalingNotificationTypes">
            <summary>
            Gets and sets the property AutoScalingNotificationTypes. 
            <para>
            Returns a list of all notification types supported by Auto Scaling. They are:
            </para>
             <ul> <li>
            <para>
            <code>autoscaling:EC2_INSTANCE_LAUNCH</code>
            </para>
            </li> <li>
            <para>
            <code>autoscaling:EC2_INSTANCE_LAUNCH_ERROR</code>
            </para>
            </li> <li>
            <para>
            <code>autoscaling:EC2_INSTANCE_TERMINATE</code>
            </para>
            </li> <li>
            <para>
            <code>autoscaling:EC2_INSTANCE_TERMINATE_ERROR</code>
            </para>
            </li> <li>
            <para>
            <code>autoscaling:TEST_NOTIFICATION</code>
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeAutoScalingNotificationTypesResponse.DescribeAutoScalingNotificationTypesResult">
            <summary>
            Gets and sets the DescribeAutoScalingNotificationTypesResult property.
            Represents the output of a DescribeAutoScalingNotificationTypes operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeLaunchConfigurationsRequest">
            <summary>
            Container for the parameters to the DescribeLaunchConfigurations operation.
            Returns a full description of the launch configurations, or the specified launch
            configurations, if they exist. 
            
             
            <para>
             If no name is specified, then the full details of all launch configurations are returned.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeLaunchConfigurationsRequest.LaunchConfigurationNames">
            <summary>
            Gets and sets the property LaunchConfigurationNames. 
            <para>
             A list of launch configuration names. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeLaunchConfigurationsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of launch configurations. The default is 100. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeLaunchConfigurationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             A string that marks the start of the next batch of returned results. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeLaunchConfigurationsResponse">
            <summary>
            Configuration for accessing Amazon DescribeLaunchConfigurations service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeLaunchConfigurationsResult">
            <summary>
            The <code>LaunchConfigurationsType</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeLaunchConfigurationsResult.LaunchConfigurations">
            <summary>
            Gets and sets the property LaunchConfigurations. 
            <para>
             A list of launch configurations. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeLaunchConfigurationsResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             A string that marks the start of the next batch of returned results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeLaunchConfigurationsResponse.DescribeLaunchConfigurationsResult">
            <summary>
            Gets and sets the DescribeLaunchConfigurationsResult property.
            Represents the output of a DescribeLaunchConfigurations operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeLifecycleHooksRequest">
            <summary>
            Container for the parameters to the DescribeLifecycleHooks operation.
            Describes the lifecycle hooks that currently belong to the specified Auto Scaling
            group.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeLifecycleHooksRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
            The name of one or more Auto Scaling groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeLifecycleHooksRequest.LifecycleHookNames">
            <summary>
            Gets and sets the property LifecycleHookNames. 
            <para>
            The name of one or more lifecycle hooks.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeLifecycleHooksResponse">
            <summary>
            Configuration for accessing Amazon DescribeLifecycleHooks service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeLifecycleHooksResult">
            <summary>
            The output of the <a>DescribeLifecycleHooks</a> action.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeLifecycleHooksResult.LifecycleHooks">
            <summary>
            Gets and sets the property LifecycleHooks. 
            <para>
             A list describing the lifecycle hooks that belong to the specified Auto Scaling group.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeLifecycleHooksResponse.DescribeLifecycleHooksResult">
            <summary>
            Gets and sets the DescribeLifecycleHooksResult property.
            Represents the output of a DescribeLifecycleHooks operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeLifecycleHookTypesRequest">
            <summary>
            Container for the parameters to the DescribeLifecycleHookTypes operation.
            Describes the available types of lifecycle hooks.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeLifecycleHookTypesResponse">
            <summary>
            Configuration for accessing Amazon DescribeLifecycleHookTypes service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeLifecycleHookTypesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeLifecycleHookTypesResult.LifecycleHookTypes">
            <summary>
            Gets and sets the property LifecycleHookTypes. 
            <para>
            Returns a list of all notification types supported by Auto Scaling. They are:
            </para>
             <ul> <li>
            <para>
            <code>autoscaling:EC2_INSTANCE_LAUNCHING</code>
            </para>
            </li> <li>
            <para>
            <code>autoscaling:EC2_INSTANCE_TERMINATING</code>
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeLifecycleHookTypesResponse.DescribeLifecycleHookTypesResult">
            <summary>
            Gets and sets the DescribeLifecycleHookTypesResult property.
            Represents the output of a DescribeLifecycleHookTypes operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeMetricCollectionTypesRequest">
            <summary>
            Container for the parameters to the DescribeMetricCollectionTypes operation.
            Returns a list of metrics and a corresponding list of granularities for each metric.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeMetricCollectionTypesResponse">
            <summary>
            Configuration for accessing Amazon DescribeMetricCollectionTypes service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeMetricCollectionTypesResult">
            <summary>
            The output of the <a>DescribeMetricCollectionTypes</a> action.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeMetricCollectionTypesResult.Granularities">
            <summary>
            Gets and sets the property Granularities. 
            <para>
            A list of granularities for the listed Metrics.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeMetricCollectionTypesResult.Metrics">
            <summary>
            Gets and sets the property Metrics. 
            <para>
            The list of Metrics collected. The following metrics are supported: 
            </para>
             <ul> <li>
            <para>
            GroupMinSize
            </para>
            </li> <li>
            <para>
            GroupMaxSize
            </para>
            </li> <li>
            <para>
            GroupDesiredCapacity
            </para>
            </li> <li>
            <para>
            GroupInServiceInstances
            </para>
            </li> <li>
            <para>
            GroupPendingInstances
            </para>
            </li> <li>
            <para>
            GroupStandbyInstances
            </para>
            </li> <li>
            <para>
            GroupTerminatingInstances
            </para>
            </li> <li>
            <para>
            GroupTotalInstances
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeMetricCollectionTypesResponse.DescribeMetricCollectionTypesResult">
            <summary>
            Gets and sets the DescribeMetricCollectionTypesResult property.
            Represents the output of a DescribeMetricCollectionTypes operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeNotificationConfigurationsRequest">
            <summary>
            Container for the parameters to the DescribeNotificationConfigurations operation.
            Returns a list of notification actions associated with Auto Scaling groups for specified
            events.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeNotificationConfigurationsRequest.AutoScalingGroupNames">
            <summary>
            Gets and sets the property AutoScalingGroupNames. 
            <para>
             The name of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeNotificationConfigurationsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
            Maximum number of records to be returned. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeNotificationConfigurationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             A string that is used to mark the start of the next batch of returned results for
            pagination. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeNotificationConfigurationsResponse">
            <summary>
            Configuration for accessing Amazon DescribeNotificationConfigurations service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeNotificationConfigurationsResult">
            <summary>
            The output of the <a>DescribeNotificationConfigurations</a> action.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeNotificationConfigurationsResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A string that is used to mark the start of the next batch of returned results for
            pagination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeNotificationConfigurationsResult.NotificationConfigurations">
            <summary>
            Gets and sets the property NotificationConfigurations. 
            <para>
            The list of notification configurations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeNotificationConfigurationsResponse.DescribeNotificationConfigurationsResult">
            <summary>
            Gets and sets the DescribeNotificationConfigurationsResult property.
            Represents the output of a DescribeNotificationConfigurations operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribePoliciesRequest">
            <summary>
            Container for the parameters to the DescribePolicies operation.
            Returns descriptions of what each policy does. This action supports pagination. If
            the response includes a token, there are more records available. To get the additional
            records, repeat the request with the response token as the <code>NextToken</code>
            parameter.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribePoliciesRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribePoliciesRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of policies that will be described with each call. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribePoliciesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             A string that is used to mark the start of the next batch of returned results for
            pagination. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribePoliciesRequest.PolicyNames">
            <summary>
            Gets and sets the property PolicyNames. 
            <para>
             A list of policy names or policy ARNs to be described. If this list is omitted, all
            policy names are described. If an auto scaling group name is provided, the results
            are limited to that group. The list of requested policy names cannot contain more
            than 50 items. If unknown policy names are requested, they are ignored with no error.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribePoliciesResponse">
            <summary>
            Configuration for accessing Amazon DescribePolicies service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribePoliciesResult">
            <summary>
            The <code>PoliciesType</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribePoliciesResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             A string that marks the start of the next batch of returned results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribePoliciesResult.ScalingPolicies">
            <summary>
            Gets and sets the property ScalingPolicies. 
            <para>
             A list of scaling policies. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribePoliciesResponse.DescribePoliciesResult">
            <summary>
            Gets and sets the DescribePoliciesResult property.
            Represents the output of a DescribePolicies operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeScalingActivitiesRequest">
            <summary>
            Container for the parameters to the DescribeScalingActivities operation.
            Returns the scaling activities for the specified Auto Scaling group. 
            
             
            <para>
             If the specified <code>ActivityIds</code> list is empty, all the activities from
            the past six weeks are returned. Activities are sorted by the start time. Activities
            still in progress appear first on the list. 
            </para>
             
            <para>
             This action supports pagination. If the response includes a token, there are more
            records available. To get the additional records, repeat the request with the response
            token as the <code>NextToken</code> parameter. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeScalingActivitiesRequest.ActivityIds">
            <summary>
            Gets and sets the property ActivityIds. 
            <para>
             A list containing the activity IDs of the desired scaling activities. If this list
            is omitted, all activities are described. If an <code>AutoScalingGroupName</code>
            is provided, the results are limited to that group. The list of requested activities
            cannot contain more than 50 items. If unknown activities are requested, they are ignored
            with no error. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeScalingActivitiesRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name of the <a>AutoScalingGroup</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeScalingActivitiesRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of scaling activities to return. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeScalingActivitiesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             A string that marks the start of the next batch of returned results for pagination.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeScalingActivitiesResponse">
            <summary>
            Configuration for accessing Amazon DescribeScalingActivities service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeScalingActivitiesResult">
            <summary>
            The output for the <a>DescribeScalingActivities</a> action.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeScalingActivitiesResult.Activities">
            <summary>
            Gets and sets the property Activities. 
            <para>
             A list of the requested scaling activities. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeScalingActivitiesResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             Acts as a paging mechanism for large result sets. Set to a non-empty string if there
            are additional results waiting to be returned. Pass this in to subsequent calls to
            return additional results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeScalingActivitiesResponse.DescribeScalingActivitiesResult">
            <summary>
            Gets and sets the DescribeScalingActivitiesResult property.
            Represents the output of a DescribeScalingActivities operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeScalingProcessTypesRequest">
            <summary>
            Container for the parameters to the DescribeScalingProcessTypes operation.
            Returns scaling process types for use in the <a>ResumeProcesses</a> and <a>SuspendProcesses</a>
            actions.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeScalingProcessTypesResponse">
            <summary>
            Configuration for accessing Amazon DescribeScalingProcessTypes service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeScalingProcessTypesResult">
            <summary>
            The output of the <a>DescribeScalingProcessTypes</a> action.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeScalingProcessTypesResult.Processes">
            <summary>
            Gets and sets the property Processes. 
            <para>
             A list of <a>ProcessType</a> names. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeScalingProcessTypesResponse.DescribeScalingProcessTypesResult">
            <summary>
            Gets and sets the DescribeScalingProcessTypesResult property.
            Represents the output of a DescribeScalingProcessTypes operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeScheduledActionsRequest">
            <summary>
            Container for the parameters to the DescribeScheduledActions operation.
            Lists all the actions scheduled for your Auto Scaling group that haven't been executed.
            To see a list of actions already executed, see the activity record returned in <a>DescribeScalingActivities</a>.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeScheduledActionsRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeScheduledActionsRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
             The latest scheduled start time to return. If scheduled action names are provided,
            this field is ignored. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeScheduledActionsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of scheduled actions to return. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeScheduledActionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             A string that marks the start of the next batch of returned results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeScheduledActionsRequest.ScheduledActionNames">
            <summary>
            Gets and sets the property ScheduledActionNames. 
            <para>
             A list of scheduled actions to be described. If this list is omitted, all scheduled
            actions are described. The list of requested scheduled actions cannot contain more
            than 50 items. If an auto scaling group name is provided, the results are limited
            to that group. If unknown scheduled actions are requested, they are ignored with no
            error. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeScheduledActionsRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
             The earliest scheduled start time to return. If scheduled action names are provided,
            this field will be ignored. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeScheduledActionsResponse">
            <summary>
            Configuration for accessing Amazon DescribeScheduledActions service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeScheduledActionsResult">
            <summary>
            A scaling action that is scheduled for a future time and date. An action can be scheduled
            up to thirty days in advance. 
            
             
            <para>
             Starting with API version 2011-01-01, you can use <code>recurrence</code> to specify
            that a scaling action occurs regularly on a schedule. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeScheduledActionsResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             A string that marks the start of the next batch of returned results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeScheduledActionsResult.ScheduledUpdateGroupActions">
            <summary>
            Gets and sets the property ScheduledUpdateGroupActions. 
            <para>
             A list of scheduled actions designed to update an Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeScheduledActionsResponse.DescribeScheduledActionsResult">
            <summary>
            Gets and sets the DescribeScheduledActionsResult property.
            Represents the output of a DescribeScheduledActions operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeTagsRequest">
            <summary>
            Container for the parameters to the DescribeTags operation.
            Lists the Auto Scaling group tags. 
            
             
            <para>
             You can use filters to limit results when describing tags. For example, you can query
            for tags of a particular Auto Scaling group. You can specify multiple values for a
            filter. A tag must match at least one of the specified values for it to be included
            in the results. 
            </para>
             
            <para>
             You can also specify multiple filters. The result includes information for a particular
            tag only if it matches all your filters. If there's no match, no special message is
            returned. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeTagsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
             The value of the filter type used to identify the tags to be returned. For example,
            you can filter so that tags are returned according to Auto Scaling group, the key
            and value, or whether the new tag will be applied to instances launched after the
            tag is created (PropagateAtLaunch). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeTagsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to return. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeTagsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             A string that marks the start of the next batch of returned results. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeTagsResponse">
            <summary>
            Configuration for accessing Amazon DescribeTags service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeTagsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeTagsResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             A string used to mark the start of the next batch of returned results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeTagsResult.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
             The list of tags. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeTagsResponse.DescribeTagsResult">
            <summary>
            Gets and sets the DescribeTagsResult property.
            Represents the output of a DescribeTags operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeTerminationPolicyTypesRequest">
            <summary>
            Container for the parameters to the DescribeTerminationPolicyTypes operation.
            Returns a list of all termination policies supported by Auto Scaling.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeTerminationPolicyTypesResponse">
            <summary>
            Configuration for accessing Amazon DescribeTerminationPolicyTypes service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DescribeTerminationPolicyTypesResult">
            <summary>
            The <code>TerminationPolicyTypes</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeTerminationPolicyTypesResult.TerminationPolicyTypes">
            <summary>
            Gets and sets the property TerminationPolicyTypes. 
            <para>
             Termination policies supported by Auto Scaling. They are: <code>OldestInstance</code>,
            <code>OldestLaunchConfiguration</code>, <code>NewestInstance</code>, <code>ClosestToNextInstanceHour</code>,
            <code>Default</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DescribeTerminationPolicyTypesResponse.DescribeTerminationPolicyTypesResult">
            <summary>
            Gets and sets the DescribeTerminationPolicyTypesResult property.
            Represents the output of a DescribeTerminationPolicyTypes operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DetachInstancesRequest">
            <summary>
            Container for the parameters to the DetachInstances operation.
            Using <code>DetachInstances</code>, you can remove an instance from an Auto Scaling
            group. After the instances are detached, you can manage them independently from the
            rest of the Auto Scaling group.
            
             
            <para>
            To learn more about detaching instances, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/detach-instance-asg.html">Detach
            Amazon EC2 Instances From Your Auto Scaling Group</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DetachInstancesRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name of the Auto Scaling group from which to detach instances. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DetachInstancesRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
             A list of instances to detach from the Auto Scaling group. You must specify at least
            one instance ID. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DetachInstancesRequest.ShouldDecrementDesiredCapacity">
            <summary>
            Gets and sets the property ShouldDecrementDesiredCapacity. 
            <para>
             Specifies if the detached instance should decrement the desired capacity value for
            the Auto Scaling group. If set to <code>True</code>, the Auto Scaling group decrements
            the desired capacity value by the number of instances detached. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DetachInstancesResponse">
            <summary>
            Configuration for accessing Amazon DetachInstances service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DetachInstancesResult">
            <summary>
            The output of the <a>DetachInstances</a> action.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DetachInstancesResult.Activities">
            <summary>
            Gets and sets the property Activities. 
            <para>
             A list describing the activities related to detaching the instances from the Auto
            Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DetachInstancesResponse.DetachInstancesResult">
            <summary>
            Gets and sets the DetachInstancesResult property.
            Represents the output of a DetachInstances operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DisableMetricsCollectionRequest">
            <summary>
            Container for the parameters to the DisableMetricsCollection operation.
            Disables monitoring of group metrics for the Auto Scaling group specified in <code>AutoScalingGroupName</code>.
            You can specify the list of affected metrics with the <code>Metrics</code> parameter.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DisableMetricsCollectionRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
            The name or ARN of the Auto Scaling Group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DisableMetricsCollectionRequest.Metrics">
            <summary>
            Gets and sets the property Metrics. 
            <para>
             The list of metrics to disable. If no metrics are specified, all metrics are disabled.
            The following metrics are supported: 
            </para>
             <ul> <li>
            <para>
            GroupMinSize
            </para>
            </li> <li>
            <para>
            GroupMaxSize
            </para>
            </li> <li>
            <para>
            GroupDesiredCapacity
            </para>
            </li> <li>
            <para>
            GroupInServiceInstances
            </para>
            </li> <li>
            <para>
            GroupPendingInstances
            </para>
            </li> <li>
            <para>
            GroupStandbyInstances
            </para>
            </li> <li>
            <para>
            GroupTerminatingInstances
            </para>
            </li> <li>
            <para>
            GroupTotalInstances
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.DisableMetricsCollectionResponse">
            <summary>
            Configuration for accessing Amazon DisableMetricsCollection service
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.DisableMetricsCollectionResponse.DisableMetricsCollectionResult">
            <summary>
            Gets and sets the DisableMetricsCollectionResult property.
            Represents the output of a DisableMetricsCollection operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.Ebs">
            <summary>
            The Ebs data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Ebs.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            Indicates whether to delete the volume on instance termination. 
            </para>
             
            <para>
            Default: <code>true</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Ebs.Iops">
            <summary>
            Gets and sets the property Iops. 
            <para>
            The number of I/O operations per second (IOPS) that the volume supports.
            </para>
             
            <para>
            The maximum ratio of IOPS to volume size is 30.0
            </para>
             
            <para>
            Valid Values: Range is 100 to 4000.
            </para>
             
            <para>
            Default: None.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Ebs.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
             The snapshot ID. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Ebs.VolumeSize">
            <summary>
            Gets and sets the property VolumeSize. 
            <para>
            The volume size, in gigabytes.
            </para>
             
            <para>
            Valid values: If the volume type is <code>io1</code>, the minimum size of the volume
            is 10.
            </para>
             
            <para>
            Default: If you're creating the volume from a snapshot, and you don't specify a volume
            size, the default is the snapshot size.
            </para>
             
            <para>
            Required: Required when the volume type is <code>io1</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Ebs.VolumeType">
            <summary>
            Gets and sets the property VolumeType. 
            <para>
            The volume type.
            </para>
             
            <para>
            Valid values: <code>standard | io1</code>
            </para>
             
            <para>
            Default: <code>standard</code>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.EnabledMetric">
            <summary>
            The <code>EnabledMetric</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.EnabledMetric.Granularity">
            <summary>
            Gets and sets the property Granularity. 
            <para>
             The granularity of the enabled metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.EnabledMetric.Metric">
            <summary>
            Gets and sets the property Metric. 
            <para>
             The name of the enabled metric. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.EnableMetricsCollectionRequest">
            <summary>
            Container for the parameters to the EnableMetricsCollection operation.
            Enables monitoring of group metrics for the Auto Scaling group specified in <code>AutoScalingGroupName</code>.
            You can specify the list of enabled metrics with the <code>Metrics</code> parameter.
            
            
             
            <para>
             Auto Scaling metrics collection can be turned on only if the <code>InstanceMonitoring</code>
            flag, in the Auto Scaling group's launch configuration, is set to <code>True</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.EnableMetricsCollectionRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
            The name or ARN of the Auto Scaling group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.EnableMetricsCollectionRequest.Granularity">
            <summary>
            Gets and sets the property Granularity. 
            <para>
             The granularity to associate with the metrics to collect. Currently, the only legal
            granularity is "1Minute". 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.EnableMetricsCollectionRequest.Metrics">
            <summary>
            Gets and sets the property Metrics. 
            <para>
             The list of metrics to collect. If no metrics are specified, all metrics are enabled.
            The following metrics are supported: 
            </para>
             <ul> <li>
            <para>
            GroupMinSize
            </para>
            </li> <li>
            <para>
            GroupMaxSize
            </para>
            </li> <li>
            <para>
            GroupDesiredCapacity
            </para>
            </li> <li>
            <para>
            GroupInServiceInstances
            </para>
            </li> <li>
            <para>
            GroupPendingInstances
            </para>
            </li> <li>
            <para>
            GroupStandbyInstances
            </para>
            </li> <li>
            <para>
            GroupTerminatingInstances
            </para>
            </li> <li>
            <para>
            GroupTotalInstances
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.EnableMetricsCollectionResponse">
            <summary>
            Configuration for accessing Amazon EnableMetricsCollection service
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.EnableMetricsCollectionResponse.EnableMetricsCollectionResult">
            <summary>
            Gets and sets the EnableMetricsCollectionResult property.
            Represents the output of a EnableMetricsCollection operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.EnterStandbyRequest">
            <summary>
            Container for the parameters to the EnterStandby operation.
            Move instances in an Auto Scaling group into a Standby mode. 
            
             
            <para>
            To learn more about how to put instances into a Standby mode, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AutoScalingInServiceState.html">Auto
            Scaling InService State</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.EnterStandbyRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name of the Auto Scaling group from which to move instances into Standby mode.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.EnterStandbyRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
             The instances to move into Standby mode. You must specify at least one instance ID.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.EnterStandbyRequest.ShouldDecrementDesiredCapacity">
            <summary>
            Gets and sets the property ShouldDecrementDesiredCapacity. 
            <para>
             Specifies whether the instances moved to Standby mode count as part of the Auto Scaling
            group's desired capacity. If set, the desired capacity for the Auto Scaling group
            decrements by the number of instances moved to Standby mode. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.EnterStandbyResponse">
            <summary>
            Configuration for accessing Amazon EnterStandby service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.EnterStandbyResult">
            <summary>
            The output of the <a>EnterStandby</a> action.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.EnterStandbyResult.Activities">
            <summary>
            Gets and sets the property Activities. 
            <para>
             A list describing the activities related to moving instances into Standby mode. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.EnterStandbyResponse.EnterStandbyResult">
            <summary>
            Gets and sets the EnterStandbyResult property.
            Represents the output of a EnterStandby operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.ExecutePolicyRequest">
            <summary>
            Container for the parameters to the ExecutePolicy operation.
            Executes the specified policy.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ExecutePolicyRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name or the Amazon Resource Name (ARN) of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ExecutePolicyRequest.HonorCooldown">
            <summary>
            Gets and sets the property HonorCooldown. 
            <para>
            Set to <code>True</code> if you want Auto Scaling to wait for the cooldown period
            associated with the Auto Scaling group to complete before executing the policy.
            </para>
             
            <para>
            Set to <code>False</code> if you want Auto Scaling to circumvent the cooldown period
            associated with the Auto Scaling group and execute the policy before the cooldown
            period ends. 
            </para>
             
            <para>
            For information about cooldown period, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AS_Concepts.html#Cooldown">Cooldown
            Period</a> in the <i>Auto Scaling Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ExecutePolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
             The name or ARN of the policy you want to run. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.ExecutePolicyResponse">
            <summary>
            Configuration for accessing Amazon ExecutePolicy service
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ExecutePolicyResponse.ExecutePolicyResult">
            <summary>
            Gets and sets the ExecutePolicyResult property.
            Represents the output of a ExecutePolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.ExitStandbyRequest">
            <summary>
            Container for the parameters to the ExitStandby operation.
            Move an instance out of Standby mode. 
            
             
            <para>
            To learn more about how to put instances that are in a Standby mode back into service,
            see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AutoScalingInServiceState.html">Auto
            Scaling InService State</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ExitStandbyRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name of the Auto Scaling group from which to move instances out of Standby mode.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ExitStandbyRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
             A list of instances to move out of Standby mode. You must specify at least one instance
            ID. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.ExitStandbyResponse">
            <summary>
            Configuration for accessing Amazon ExitStandby service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.ExitStandbyResult">
            <summary>
            The output of the <a>ExitStandby</a> action.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ExitStandbyResult.Activities">
            <summary>
            Gets and sets the property Activities. 
            <para>
            A list describing the activities related to moving instances out of Standby mode.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ExitStandbyResponse.ExitStandbyResult">
            <summary>
            Gets and sets the ExitStandbyResult property.
            Represents the output of a ExitStandby operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.Filter">
            <summary>
            The <code>Filter</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Filter.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
             The name of the filter. Valid Name values are: <code>"auto-scaling-group"</code>,
            <code>"key"</code>, <code>"value"</code>, and <code>"propagate-at-launch"</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Filter.Values">
            <summary>
            Gets and sets the property Values. 
            <para>
             The value of the filter. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.Instance">
            <summary>
            The <code>Instance</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Instance.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
             Availability Zones associated with this instance. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Instance.HealthStatus">
            <summary>
            Gets and sets the property HealthStatus. 
            <para>
             The instance's health status. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Instance.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
             Specifies the ID of the Amazon EC2 instance. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Instance.LaunchConfigurationName">
            <summary>
            Gets and sets the property LaunchConfigurationName. 
            <para>
             The launch configuration associated with this instance. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Instance.LifecycleState">
            <summary>
            Gets and sets the property LifecycleState. 
            <para>
             Contains a description of the current <i>lifecycle</i> state. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.InstanceMonitoring">
            <summary>
            The <code>InstanceMonitoring</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.InstanceMonitoring.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
             If <code>True</code>, instance monitoring is enabled. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.ActivityUnmarshaller">
            <summary>
            Response Unmarshaller for Activity Object
            </summary>  
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.IUnmarshaller`2">
            <summary>
            Interface for unmarshallers which unmarshall objects from response data.
            The Unmarshallers are stateless, and only encode the rules for what data 
            in the XML stream goes into what members of an object. 
            </summary>
            <typeparam name="T">The type of object the unmarshaller returns</typeparam>
            <typeparam name="R">The type of the XML unmashaller context, which contains the
            state during parsing of the XML stream. Usually an instance of 
            <c>Amazon.Runtime.Internal.Transform.UnmarshallerContext</c>.</typeparam>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.IUnmarshaller`2.Unmarshall(`1)">
            <summary>
            Given the current position in the XML stream, extract a T.
            </summary>
            <param name="input">The XML parsing context</param>
            <returns>An object of type T populated with data from the XML stream.</returns>
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.AdjustmentTypeUnmarshaller">
            <summary>
            Response Unmarshaller for AdjustmentType Object
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.AlarmUnmarshaller">
            <summary>
            Response Unmarshaller for Alarm Object
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.AttachInstancesRequestMarshaller">
            <summary>
            AttachInstances Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.AttachInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AttachInstances operation
            </summary>  
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.XmlResponseUnmarshaller">
            <summary>
            Class for unmarshalling XML service responses.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.ResponseUnmarshaller">
            <summary>
            Abstract class for unmarshalling service responses.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.IResponseUnmarshaller`2">
            <summary>
            Interface for unmarshallers which unmarshall service responses.
            The Unmarshallers are stateless, and only encode the rules for what data 
            in the XML stream goes into what members of an object. 
            </summary>
            <typeparam name="T">The type of object the unmarshaller returns</typeparam>
            <typeparam name="R">The type of the XML unmashaller context, which contains the
            state of parsing the XML stream. Uaually an instance of 
            <c>Amazon.Runtime.Internal.Transform.UnmarshallerContext</c>.</typeparam>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.IResponseUnmarshaller`2.UnmarshallException(`1,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Extracts an exeption with data from an ErrorResponse.
            </summary>
            <param name="input">The XML parsing context.</param>
            <param name="innerException">An inner exception to be included with the returned exception</param>
            <param name="statusCode">The HttpStatusCode from the ErrorResponse</param>
            <returns>Either an exception based on the ErrorCode from the ErrorResponse, or the 
            general service exception for the service in question.</returns>
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.AutoScalingGroupUnmarshaller">
            <summary>
            Response Unmarshaller for AutoScalingGroup Object
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.AutoScalingInstanceDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for AutoScalingInstanceDetails Object
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.BlockDeviceMappingUnmarshaller">
            <summary>
            Response Unmarshaller for BlockDeviceMapping Object
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.CompleteLifecycleActionRequestMarshaller">
            <summary>
            CompleteLifecycleAction Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.CompleteLifecycleActionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CompleteLifecycleAction operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.CreateAutoScalingGroupRequestMarshaller">
            <summary>
            CreateAutoScalingGroup Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.CreateAutoScalingGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateAutoScalingGroup operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.CreateLaunchConfigurationRequestMarshaller">
            <summary>
            CreateLaunchConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.CreateLaunchConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLaunchConfiguration operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.CreateOrUpdateTagsRequestMarshaller">
            <summary>
            CreateOrUpdateTags Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.CreateOrUpdateTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateOrUpdateTags operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteAutoScalingGroupRequestMarshaller">
            <summary>
            DeleteAutoScalingGroup Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteAutoScalingGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteAutoScalingGroup operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteLaunchConfigurationRequestMarshaller">
            <summary>
            DeleteLaunchConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteLaunchConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLaunchConfiguration operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteLifecycleHookRequestMarshaller">
            <summary>
            DeleteLifecycleHook Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteLifecycleHookResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLifecycleHook operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteNotificationConfigurationRequestMarshaller">
            <summary>
            DeleteNotificationConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteNotificationConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteNotificationConfiguration operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeletePolicyRequestMarshaller">
            <summary>
            DeletePolicy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeletePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeletePolicy operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteScheduledActionRequestMarshaller">
            <summary>
            DeleteScheduledAction Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteScheduledActionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteScheduledAction operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller">
            <summary>
            DeleteTags Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteTags operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeAccountLimitsRequestMarshaller">
            <summary>
            DescribeAccountLimits Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeAccountLimitsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAccountLimits operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeAdjustmentTypesRequestMarshaller">
            <summary>
            DescribeAdjustmentTypes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeAdjustmentTypesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAdjustmentTypes operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeAutoScalingGroupsRequestMarshaller">
            <summary>
            DescribeAutoScalingGroups Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeAutoScalingGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAutoScalingGroups operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeAutoScalingInstancesRequestMarshaller">
            <summary>
            DescribeAutoScalingInstances Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeAutoScalingInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAutoScalingInstances operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeAutoScalingNotificationTypesRequestMarshaller">
            <summary>
            DescribeAutoScalingNotificationTypes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeAutoScalingNotificationTypesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAutoScalingNotificationTypes operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeLaunchConfigurationsRequestMarshaller">
            <summary>
            DescribeLaunchConfigurations Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeLaunchConfigurationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeLaunchConfigurations operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeLifecycleHooksRequestMarshaller">
            <summary>
            DescribeLifecycleHooks Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeLifecycleHooksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeLifecycleHooks operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeLifecycleHookTypesRequestMarshaller">
            <summary>
            DescribeLifecycleHookTypes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeLifecycleHookTypesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeLifecycleHookTypes operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeMetricCollectionTypesRequestMarshaller">
            <summary>
            DescribeMetricCollectionTypes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeMetricCollectionTypesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeMetricCollectionTypes operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeNotificationConfigurationsRequestMarshaller">
            <summary>
            DescribeNotificationConfigurations Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeNotificationConfigurationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeNotificationConfigurations operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribePoliciesRequestMarshaller">
            <summary>
            DescribePolicies Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribePoliciesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribePolicies operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeScalingActivitiesRequestMarshaller">
            <summary>
            DescribeScalingActivities Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeScalingActivitiesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeScalingActivities operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeScalingProcessTypesRequestMarshaller">
            <summary>
            DescribeScalingProcessTypes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeScalingProcessTypesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeScalingProcessTypes operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeScheduledActionsRequestMarshaller">
            <summary>
            DescribeScheduledActions Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeScheduledActionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeScheduledActions operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeTagsRequestMarshaller">
            <summary>
            DescribeTags Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTags operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeTerminationPolicyTypesRequestMarshaller">
            <summary>
            DescribeTerminationPolicyTypes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DescribeTerminationPolicyTypesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTerminationPolicyTypes operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DetachInstancesRequestMarshaller">
            <summary>
            DetachInstances Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DetachInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetachInstances operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DisableMetricsCollectionRequestMarshaller">
            <summary>
            DisableMetricsCollection Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.DisableMetricsCollectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisableMetricsCollection operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.EbsUnmarshaller">
            <summary>
            Response Unmarshaller for Ebs Object
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.EnabledMetricUnmarshaller">
            <summary>
            Response Unmarshaller for EnabledMetric Object
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.EnableMetricsCollectionRequestMarshaller">
            <summary>
            EnableMetricsCollection Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.EnableMetricsCollectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnableMetricsCollection operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.EnterStandbyRequestMarshaller">
            <summary>
            EnterStandby Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.EnterStandbyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnterStandby operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.ExecutePolicyRequestMarshaller">
            <summary>
            ExecutePolicy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.ExecutePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ExecutePolicy operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.ExitStandbyRequestMarshaller">
            <summary>
            ExitStandby Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.ExitStandbyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ExitStandby operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.InstanceMonitoringUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceMonitoring Object
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.InstanceUnmarshaller">
            <summary>
            Response Unmarshaller for Instance Object
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.LaunchConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for LaunchConfiguration Object
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.LifecycleHookUnmarshaller">
            <summary>
            Response Unmarshaller for LifecycleHook Object
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.MetricCollectionTypeUnmarshaller">
            <summary>
            Response Unmarshaller for MetricCollectionType Object
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.MetricGranularityTypeUnmarshaller">
            <summary>
            Response Unmarshaller for MetricGranularityType Object
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.NotificationConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for NotificationConfiguration Object
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.ProcessTypeUnmarshaller">
            <summary>
            Response Unmarshaller for ProcessType Object
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.PutLifecycleHookRequestMarshaller">
            <summary>
            PutLifecycleHook Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.PutLifecycleHookResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutLifecycleHook operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.PutNotificationConfigurationRequestMarshaller">
            <summary>
            PutNotificationConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.PutNotificationConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutNotificationConfiguration operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.PutScalingPolicyRequestMarshaller">
            <summary>
            PutScalingPolicy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.PutScalingPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutScalingPolicy operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.PutScheduledUpdateGroupActionRequestMarshaller">
            <summary>
            PutScheduledUpdateGroupAction Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.PutScheduledUpdateGroupActionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutScheduledUpdateGroupAction operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.RecordLifecycleActionHeartbeatRequestMarshaller">
            <summary>
            RecordLifecycleActionHeartbeat Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.RecordLifecycleActionHeartbeatResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RecordLifecycleActionHeartbeat operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.ResumeProcessesRequestMarshaller">
            <summary>
            ResumeProcesses Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.ResumeProcessesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ResumeProcesses operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.ScalingPolicyUnmarshaller">
            <summary>
            Response Unmarshaller for ScalingPolicy Object
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.ScheduledUpdateGroupActionUnmarshaller">
            <summary>
            Response Unmarshaller for ScheduledUpdateGroupAction Object
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.SetDesiredCapacityRequestMarshaller">
            <summary>
            SetDesiredCapacity Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.SetDesiredCapacityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetDesiredCapacity operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.SetInstanceHealthRequestMarshaller">
            <summary>
            SetInstanceHealth Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.SetInstanceHealthResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetInstanceHealth operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.SuspendedProcessUnmarshaller">
            <summary>
            Response Unmarshaller for SuspendedProcess Object
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.SuspendProcessesRequestMarshaller">
            <summary>
            SuspendProcesses Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.SuspendProcessesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SuspendProcesses operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.TagDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for TagDescription Object
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.TerminateInstanceInAutoScalingGroupRequestMarshaller">
            <summary>
            TerminateInstanceInAutoScalingGroup Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.TerminateInstanceInAutoScalingGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TerminateInstanceInAutoScalingGroup operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.UpdateAutoScalingGroupRequestMarshaller">
            <summary>
            UpdateAutoScalingGroup Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.AutoScaling.Model.Internal.MarshallTransformations.UpdateAutoScalingGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateAutoScalingGroup operation
            </summary>  
        </member>
        <member name="T:Amazon.AutoScaling.Model.InvalidNextTokenException">
            <summary>
             AutoScaling exception
             </summary>
        </member>
        <member name="M:Amazon.AutoScaling.Model.InvalidNextTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidNextTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.AutoScaling.Model.LaunchConfiguration">
            <summary>
            The <code>LaunchConfiguration</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LaunchConfiguration.AssociatePublicIpAddress">
            <summary>
            Gets and sets the property AssociatePublicIpAddress. 
            <para>
            Specifies whether the instance is associated with a public IP address (<code>true</code>)
            or not (<code>false</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LaunchConfiguration.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
             Specifies how block devices are exposed to the instance. Each mapping is made up
            of a <i>virtualName</i> and a <i>deviceName</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LaunchConfiguration.CreatedTime">
            <summary>
            Gets and sets the property CreatedTime. 
            <para>
             Provides the creation date and time for this launch configuration. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LaunchConfiguration.EbsOptimized">
            <summary>
            Gets and sets the property EbsOptimized. 
            <para>
            Specifies whether the instance is optimized for EBS I/O (<i>true</i>) or not (<i>false</i>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LaunchConfiguration.IamInstanceProfile">
            <summary>
            Gets and sets the property IamInstanceProfile. 
            <para>
            Provides the name or the Amazon Resource Name (ARN) of the instance profile associated
            with the IAM role for the instance. The instance profile contains the IAM role. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LaunchConfiguration.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
             Provides the unique ID of the <i>Amazon Machine Image</i> (AMI) that was assigned
            during registration. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LaunchConfiguration.InstanceMonitoring">
            <summary>
            Gets and sets the property InstanceMonitoring. 
            <para>
             Controls whether instances in this group are launched with detailed monitoring or
            not. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LaunchConfiguration.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
             Specifies the instance type of the Amazon EC2 instance. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LaunchConfiguration.KernelId">
            <summary>
            Gets and sets the property KernelId. 
            <para>
             Provides the ID of the kernel associated with the Amazon EC2 AMI. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LaunchConfiguration.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
             Provides the name of the Amazon EC2 key pair. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LaunchConfiguration.LaunchConfigurationARN">
            <summary>
            Gets and sets the property LaunchConfigurationARN. 
            <para>
             The launch configuration's Amazon Resource Name (ARN). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LaunchConfiguration.LaunchConfigurationName">
            <summary>
            Gets and sets the property LaunchConfigurationName. 
            <para>
             Specifies the name of the launch configuration. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LaunchConfiguration.PlacementTenancy">
            <summary>
            Gets and sets the property PlacementTenancy. 
            <para>
            Specifies the tenancy of the instance. It can be either <code>default</code> or <code>dedicated</code>.
            An instance with <code>dedicated</code> tenancy runs in an isolated, single-tenant
            hardware and it can only be launched in a VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LaunchConfiguration.RamdiskId">
            <summary>
            Gets and sets the property RamdiskId. 
            <para>
             Provides ID of the RAM disk associated with the Amazon EC2 AMI. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LaunchConfiguration.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
             A description of the security groups to associate with the Amazon EC2 instances.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LaunchConfiguration.SpotPrice">
            <summary>
            Gets and sets the property SpotPrice. 
            <para>
            Specifies the price to bid when launching Spot Instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LaunchConfiguration.UserData">
            <summary>
            Gets and sets the property UserData. 
            <para>
             The user data available to the launched Amazon EC2 instances. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.LifecycleHook">
            <summary>
            A lifecycle hook tells Auto Scaling that you want to perform an action when an instance
            launches or terminates. When you have a lifecycle hook in place, the Auto Scaling
            group will either: 
            
             <ul> <li> Pause the instance after it launches, but before it is put into service
            </li> <li> Pause the instance as it terminates, but before it is fully terminated
            </li> </ul> 
            <para>
            To learn more, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AutoScalingPendingState.html">Auto
            Scaling Pending State</a> and <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AutoScalingTerminatingState.html">Auto
            Scaling Terminating State</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LifecycleHook.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name of the Auto Scaling group to which the lifecycle action belongs. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LifecycleHook.DefaultResult">
            <summary>
            Gets and sets the property DefaultResult. 
            <para>
            Defines the action the Auto Scaling group should take when the lifecycle hook timeout
            elapses or if an unexpected failure occurs. The value for this parameter can be either
            <code>CONTINUE</code> or <code>ABANDON</code>. The default value for this parameter
            is <code>CONTINUE</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LifecycleHook.GlobalTimeout">
            <summary>
            Gets and sets the property GlobalTimeout. 
            <para>
            The maximum length of time an instance can remain in a <code>Pending:Wait</code> or
            <code>Terminating:Wait</code> state. Currently, this value is set at 48 hours.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LifecycleHook.HeartbeatTimeout">
            <summary>
            Gets and sets the property HeartbeatTimeout. 
            <para>
            Defines the amount of time that can elapse before the lifecycle hook times out. When
            the lifecycle hook times out, Auto Scaling performs the action defined in the <code>DefaultResult</code>
            parameter. You can prevent the lifecycle hook from timing out by calling <a>RecordLifecycleActionHeartbeat</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LifecycleHook.LifecycleHookName">
            <summary>
            Gets and sets the property LifecycleHookName. 
            <para>
             The name of the lifecycle action hook. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LifecycleHook.LifecycleTransition">
            <summary>
            Gets and sets the property LifecycleTransition. 
            <para>
            The Amazon EC2 instance state to which you want to attach the lifecycle hook. See
            <a>DescribeLifecycleHooks</a> for a list of available lifecycle hook types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LifecycleHook.NotificationMetadata">
            <summary>
            Gets and sets the property NotificationMetadata. 
            <para>
            Contains additional information that you want to include any time Auto Scaling sends
            a message to the notification target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LifecycleHook.NotificationTargetARN">
            <summary>
            Gets and sets the property NotificationTargetARN. 
            <para>
            The ARN of the notification target that Auto Scaling will use to notify you when an
            instance is in the transition state for the lifecycle hook. This ARN target can be
            either an SQS queue or an SNS topic. The notification message sent to the target will
            include:
            </para>
             <ul> <li>Lifecycle action token</li> <li>User account ID</li> <li>Name of the Auto
            Scaling group</li> <li>Lifecycle hook name</li> <li>EC2 instance ID</li> <li>Lifecycle
            transition</li> <li>Notification metadata</li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.LifecycleHook.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The ARN of the Amazon IAM role that allows the Auto Scaling group to publish to the
            specified notification target.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.LimitExceededException">
            <summary>
             AutoScaling exception
             </summary>
        </member>
        <member name="M:Amazon.AutoScaling.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.AutoScaling.Model.MetricCollectionType">
            <summary>
            The MetricCollectionType data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.MetricCollectionType.Metric">
            <summary>
            Gets and sets the property Metric.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.MetricGranularityType">
            <summary>
            The MetricGranularityType data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.MetricGranularityType.Granularity">
            <summary>
            Gets and sets the property Granularity. 
            <para>
             The granularity of a Metric. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.NotificationConfiguration">
            <summary>
            The <code>NotificationConfiguration</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.NotificationConfiguration.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             Specifies the Auto Scaling group name. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.NotificationConfiguration.NotificationType">
            <summary>
            Gets and sets the property NotificationType. 
            <para>
             The types of events for an action to start. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.NotificationConfiguration.TopicARN">
            <summary>
            Gets and sets the property TopicARN. 
            <para>
             The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.ProcessType">
            <summary>
            There are two primary Auto Scaling process types--<code>Launch</code> and <code>Terminate</code>.
            The <code>Launch</code> process creates a new Amazon EC2 instance for an Auto Scaling
            group, and the <code>Terminate</code> process removes an existing Amazon EC2 instance.
            
            
             
            <para>
             The remaining Auto Scaling process types relate to specific Auto Scaling features:
            <ul> <li>AddToLoadBalancer</li> <li>AlarmNotification</li> <li>AZRebalance</li> <li>HealthCheck</li>
            <li>ReplaceUnhealthy</li> <li>ScheduledActions</li> </ul> 
            </para>
             <important> 
            <para>
             If you suspend <code>Launch</code> or <code>Terminate</code>, all other process types
            are affected to varying degrees. The following descriptions discuss how each process
            type is affected by a suspension of <code>Launch</code> or <code>Terminate</code>.
            
            </para>
             </important> 
            <para>
             The <code>AddToLoadBalancer</code> process type adds instances to the load balancer
            when the instances are launched. If you suspend this process, Auto Scaling will launch
            the instances but will not add them to the load balancer. If you resume the <code>AddToLoadBalancer</code>
            process, Auto Scaling will also resume adding new instances to the load balancer when
            they are launched. However, Auto Scaling will not add running instances that were
            launched while the process was suspended; those instances must be added manually using
            the the <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/APIReference/API_RegisterInstancesWithLoadBalancer.html">
            RegisterInstancesWithLoadBalancer</a> call in the <i>Elastic Load Balancing API Reference</i>.
            
            </para>
             
            <para>
             The <code>AlarmNotification</code> process type accepts notifications from Amazon
            CloudWatch alarms that are associated with the Auto Scaling group. If you suspend
            the <code>AlarmNotification</code> process type, Auto Scaling will not automatically
            execute scaling policies that would be triggered by alarms. 
            </para>
             
            <para>
             Although the <code>AlarmNotification</code> process type is not directly affected
            by a suspension of <code>Launch</code> or <code>Terminate</code>, alarm notifications
            are often used to signal that a change in the size of the Auto Scaling group is warranted.
            If you suspend <code>Launch</code> or <code>Terminate</code>, Auto Scaling might not
            be able to implement the alarm's associated policy. 
            </para>
             
            <para>
             The <code>AZRebalance</code> process type seeks to maintain a balanced number of
            instances across Availability Zones within a Region. If you remove an Availability
            Zone from your Auto Scaling group or an Availability Zone otherwise becomes unhealthy
            or unavailable, Auto Scaling launches new instances in an unaffected Availability
            Zone before terminating the unhealthy or unavailable instances. When the unhealthy
            Availability Zone returns to a healthy state, Auto Scaling automatically redistributes
            the application instances evenly across all of the designated Availability Zones.
            
            </para>
             <important> 
            <para>
             If you call <a>SuspendProcesses</a> on the <code>launch</code> process type, the
            <code>AZRebalance</code> process will neither launch new instances nor terminate existing
            instances. This is because the <code>AZRebalance</code> process terminates existing
            instances only after launching the replacement instances. 
            </para>
             
            <para>
             If you call <a>SuspendProcesses</a> on the <code>terminate</code> process type, the
            <code>AZRebalance</code> process can cause your Auto Scaling group to grow up to ten
            percent larger than the maximum size. This is because Auto Scaling allows groups to
            temporarily grow larger than the maximum size during rebalancing activities. If Auto
            Scaling cannot terminate instances, your Auto Scaling group could remain up to ten
            percent larger than the maximum size until you resume the <code>terminate</code> process
            type. 
            </para>
             </important> 
            <para>
             The <code>HealthCheck</code> process type checks the health of the instances. Auto
            Scaling marks an instance as unhealthy if Amazon EC2 or Elastic Load Balancing informs
            Auto Scaling that the instance is unhealthy. The <code>HealthCheck</code> process
            can override the health status of an instance that you set with <a>SetInstanceHealth</a>.
            
            </para>
             
            <para>
             The <code>ReplaceUnhealthy</code> process type terminates instances that are marked
            as unhealthy and subsequently creates new instances to replace them. This process
            calls both of the primary process types--first <code>Terminate</code> and then <code>Launch</code>.
            
            </para>
             <important> 
            <para>
             The <code>HealthCheck</code> process type works in conjunction with the <code>ReplaceUnhealthly</code>
            process type to provide health check functionality. If you suspend either <code>Launch</code>
            or <code>Terminate</code>, the <code>ReplaceUnhealthy</code> process type will not
            function properly. 
            </para>
             </important> 
            <para>
             The <code>ScheduledActions</code> process type performs scheduled actions that you
            create with <a>PutScheduledUpdateGroupAction</a>. Scheduled actions often involve
            launching new instances or terminating existing instances. If you suspend either <code>Launch</code>
            or <code>Terminate</code>, your scheduled actions might not function as expected.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ProcessType.ProcessName">
            <summary>
            Gets and sets the property ProcessName. 
            <para>
             The name of a process. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.PutLifecycleHookRequest">
            <summary>
            Container for the parameters to the PutLifecycleHook operation.
            Creates or updates a lifecycle hook for an Auto Scaling Group.
            
             
            <para>
            A lifecycle hook tells Auto Scaling that you want to perform an action on an instance
            that is not actively in service; for example, either when the instance launches or
            before the instance terminates.
            </para>
             
            <para>
             This operation is a part of the basic sequence for adding a lifecycle hook to an
            Auto Scaling group: 
            </para>
             <ol> <li> Create a notification target. A target can be either an Amazon SQS queue
            or an Amazon SNS topic. </li> <li> Create an IAM role. This role allows Auto Scaling
            to publish lifecycle notifications to the designated SQS queue or SNS topic. </li>
            <li> <b>Create the lifecycle hook. You can create a hook that acts when instances
            launch or when instances terminate.</b> </li> <li> If necessary, record the lifecycle
            action heartbeat to keep the instance in a pending state. </li> <li> Complete the
            lifecycle action. </li> </ol> 
            <para>
            To learn more, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AutoScalingPendingState.html">Auto
            Scaling Pending State</a> and <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AutoScalingTerminatingState.html">Auto
            Scaling Terminating State</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutLifecycleHookRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
            The name of the Auto Scaling group to which you want to assign the lifecycle hook.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutLifecycleHookRequest.DefaultResult">
            <summary>
            Gets and sets the property DefaultResult. 
            <para>
            Defines the action the Auto Scaling group should take when the lifecycle hook timeout
            elapses or if an unexpected failure occurs. The value for this parameter can be either
            <code>CONTINUE</code> or <code>ABANDON</code>. The default value for this parameter
            is <code>ABANDON</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutLifecycleHookRequest.HeartbeatTimeout">
            <summary>
            Gets and sets the property HeartbeatTimeout. 
            <para>
            Defines the amount of time, in seconds, that can elapse before the lifecycle hook
            times out. When the lifecycle hook times out, Auto Scaling performs the action defined
            in the <code>DefaultResult</code> parameter. You can prevent the lifecycle hook from
            timing out by calling <a>RecordLifecycleActionHeartbeat</a>. The default value for
            this parameter is 3600 seconds (1 hour).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutLifecycleHookRequest.LifecycleHookName">
            <summary>
            Gets and sets the property LifecycleHookName. 
            <para>
            The name of the lifecycle hook.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutLifecycleHookRequest.LifecycleTransition">
            <summary>
            Gets and sets the property LifecycleTransition. 
            <para>
            The Amazon EC2 instance state to which you want to attach the lifecycle hook. See
            <a>DescribeLifecycleHookTypes</a> for a list of available lifecycle hook types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutLifecycleHookRequest.NotificationMetadata">
            <summary>
            Gets and sets the property NotificationMetadata. 
            <para>
            Contains additional information that you want to include any time Auto Scaling sends
            a message to the notification target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutLifecycleHookRequest.NotificationTargetARN">
            <summary>
            Gets and sets the property NotificationTargetARN. 
            <para>
            The ARN of the notification target that Auto Scaling will use to notify you when an
            instance is in the transition state for the lifecycle hook. This ARN target can be
            either an SQS queue or an SNS topic. 
            </para>
             
            <para>
            The notification message sent to the target will include:
            </para>
             <ul> <li> <b>LifecycleActionToken</b>. The Lifecycle action token.</li> <li> <b>AccountId</b>.
            The user account ID.</li> <li> <b>AutoScalingGroupName</b>. The name of the Auto Scaling
            group.</li> <li> <b>LifecycleHookName</b>. The lifecycle hook name.</li> <li> <b>EC2InstanceId</b>.
            The EC2 instance ID.</li> <li> <b>LifecycleTransition</b>. The lifecycle transition.</li>
            <li> <b>NotificationMetadata</b>. The notification metadata.</li> </ul> 
            <para>
            This operation uses the JSON format when sending notifications to an Amazon SQS queue,
            and an email key/value pair format when sending notifications to an Amazon SNS topic.
            </para>
             
            <para>
            When you call this operation, a test message is sent to the notification target. This
            test message contains an additional key/value pair: <code>Event:autoscaling:TEST_NOTIFICATION</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutLifecycleHookRequest.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The ARN of the Amazon IAM role that allows the Auto Scaling group to publish to the
            specified notification target.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.PutLifecycleHookResponse">
            <summary>
            Configuration for accessing Amazon PutLifecycleHook service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.PutLifecycleHookResult">
            <summary>
            The output of the <a>PutLifecycleHook</a> action.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutLifecycleHookResponse.PutLifecycleHookResult">
            <summary>
            Gets and sets the PutLifecycleHookResult property.
            Represents the output of a PutLifecycleHook operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.PutNotificationConfigurationRequest">
            <summary>
            Container for the parameters to the PutNotificationConfiguration operation.
            Configures an Auto Scaling group to send notifications when specified events take
            place. Subscribers to this topic can have messages for events delivered to an endpoint
            such as a web server or email address. 
            
             
            <para>
            For more information see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/ASGettingNotifications.html">Get
            Email Notifications When Your Auto Scaling Group Changes</a>
            </para>
             
            <para>
            A new <code>PutNotificationConfiguration</code> overwrites an existing configuration.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutNotificationConfigurationRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutNotificationConfigurationRequest.NotificationTypes">
            <summary>
            Gets and sets the property NotificationTypes. 
            <para>
            The type of event that will cause the notification to be sent. For details about notification
            types supported by Auto Scaling, see <a>DescribeAutoScalingNotificationTypes</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutNotificationConfigurationRequest.TopicARN">
            <summary>
            Gets and sets the property TopicARN. 
            <para>
             The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.PutNotificationConfigurationResponse">
            <summary>
            Configuration for accessing Amazon PutNotificationConfiguration service
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutNotificationConfigurationResponse.PutNotificationConfigurationResult">
            <summary>
            Gets and sets the PutNotificationConfigurationResult property.
            Represents the output of a PutNotificationConfiguration operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.PutScalingPolicyRequest">
            <summary>
            Container for the parameters to the PutScalingPolicy operation.
            Creates or updates a policy for an Auto Scaling group. To update an existing policy,
            use the existing policy name and set the parameter(s) you want to change. Any existing
            parameter not changed in an update to an existing policy is not changed in this update
            request.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutScalingPolicyRequest.AdjustmentType">
            <summary>
            Gets and sets the property AdjustmentType. 
            <para>
             Specifies whether the <code>ScalingAdjustment</code> is an absolute number or a percentage
            of the current capacity. Valid values are <code>ChangeInCapacity</code>, <code>ExactCapacity</code>,
            and <code>PercentChangeInCapacity</code>. 
            </para>
             
            <para>
            For more information about the adjustment types supported by Auto Scaling, see <a
            href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/as-scale-based-on-demand.html">Scale
            Based on Demand</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutScalingPolicyRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name or ARN of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutScalingPolicyRequest.Cooldown">
            <summary>
            Gets and sets the property Cooldown. 
            <para>
             The amount of time, in seconds, after a scaling activity completes and before the
            next scaling activity can start. 
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AS_Concepts.html#Cooldown">Cooldown
            Period</a>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutScalingPolicyRequest.MinAdjustmentStep">
            <summary>
            Gets and sets the property MinAdjustmentStep. 
            <para>
             Used with <code>AdjustmentType</code> with the value <code>PercentChangeInCapacity</code>,
            the scaling policy changes the <code>DesiredCapacity</code> of the Auto Scaling group
            by at least the number of instances specified in the value. 
            </para>
             
            <para>
             You will get a <code>ValidationError</code> if you use <code>MinAdjustmentStep</code>
            on a policy with an <code>AdjustmentType</code> other than <code>PercentChangeInCapacity</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutScalingPolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The name of the policy you want to create or update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutScalingPolicyRequest.ScalingAdjustment">
            <summary>
            Gets and sets the property ScalingAdjustment. 
            <para>
             The number of instances by which to scale. <code>AdjustmentType</code> determines
            the interpretation of this number (e.g., as an absolute number or as a percentage
            of the existing Auto Scaling group size). A positive increment adds to the current
            capacity and a negative value removes from the current capacity. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.PutScalingPolicyResponse">
            <summary>
            Configuration for accessing Amazon PutScalingPolicy service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.PutScalingPolicyResult">
            <summary>
            The <code>PolicyARNType</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutScalingPolicyResult.PolicyARN">
            <summary>
            Gets and sets the property PolicyARN. 
            <para>
             A policy's Amazon Resource Name (ARN). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutScalingPolicyResponse.PutScalingPolicyResult">
            <summary>
            Gets and sets the PutScalingPolicyResult property.
            Represents the output of a PutScalingPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.PutScheduledUpdateGroupActionRequest">
            <summary>
            Container for the parameters to the PutScheduledUpdateGroupAction operation.
            Creates or updates a scheduled scaling action for an Auto Scaling group. When updating
            a scheduled scaling action, if you leave a parameter unspecified, the corresponding
            value remains unchanged in the affected Auto Scaling group. 
            
             
            <para>
            For information on creating or updating a scheduled action for your Auto Scaling group,
            see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/schedule_time.html">Scale
            Based on a Schedule</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutScheduledUpdateGroupActionRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name or ARN of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutScheduledUpdateGroupActionRequest.DesiredCapacity">
            <summary>
            Gets and sets the property DesiredCapacity. 
            <para>
             The number of Amazon EC2 instances that should be running in the group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutScheduledUpdateGroupActionRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The time for this action to end.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutScheduledUpdateGroupActionRequest.MaxSize">
            <summary>
            Gets and sets the property MaxSize. 
            <para>
             The maximum size for the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutScheduledUpdateGroupActionRequest.MinSize">
            <summary>
            Gets and sets the property MinSize. 
            <para>
             The minimum size for the new Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutScheduledUpdateGroupActionRequest.Recurrence">
            <summary>
            Gets and sets the property Recurrence. 
            <para>
             The time when recurring future actions will start. Start time is specified by the
            user following the Unix cron syntax format. For information about cron syntax, go
            to <a href="http://en.wikipedia.org/wiki/Cron">Wikipedia, The Free Encyclopedia</a>.
            </para>
             
            <para>
            When <code>StartTime</code> and <code>EndTime</code> are specified with <code>Recurrence</code>,
            they form the boundaries of when the recurring action will start and stop.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutScheduledUpdateGroupActionRequest.ScheduledActionName">
            <summary>
            Gets and sets the property ScheduledActionName. 
            <para>
             The name of this scaling action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutScheduledUpdateGroupActionRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The time for this action to start, as in <code>--start-time 2010-06-01T00:00:00Z</code>.
            </para>
             
            <para>
            If you try to schedule your action in the past, Auto Scaling returns an error message.
            
            </para>
             
            <para>
            When <code>StartTime</code> and <code>EndTime</code> are specified with <code>Recurrence</code>,
            they form the boundaries of when the recurring action will start and stop.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutScheduledUpdateGroupActionRequest.Time">
            <summary>
            Gets and sets the property Time. 
            <para>
            <code>Time</code> is deprecated.
            </para>
             
            <para>
            The time for this action to start. <code>Time</code> is an alias for <code>StartTime</code>
            and can be specified instead of <code>StartTime</code>, or vice versa. If both <code>Time</code>
            and <code>StartTime</code> are specified, their values should be identical. Otherwise,
            <code>PutScheduledUpdateGroupAction</code> will return an error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.PutScheduledUpdateGroupActionResponse">
            <summary>
            Configuration for accessing Amazon PutScheduledUpdateGroupAction service
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.PutScheduledUpdateGroupActionResponse.PutScheduledUpdateGroupActionResult">
            <summary>
            Gets and sets the PutScheduledUpdateGroupActionResult property.
            Represents the output of a PutScheduledUpdateGroupAction operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.RecordLifecycleActionHeartbeatRequest">
            <summary>
            Container for the parameters to the RecordLifecycleActionHeartbeat operation.
            Records a heartbeat for the lifecycle action associated with a specific token. This
            extends the timeout by the length of time defined by the <code>HeartbeatTimeout</code>
            parameter of the <a>PutLifecycleHook</a> operation. 
            
             
            <para>
             This operation is a part of the basic sequence for adding a lifecycle hook to an
            Auto Scaling group: 
            </para>
             <ol> <li> Create a notification target. A target can be either an Amazon SQS queue
            or an Amazon SNS topic. </li> <li> Create an IAM role. This role allows Auto Scaling
            to publish lifecycle notifications to the designated SQS queue or SNS topic. </li>
            <li> Create the lifecycle hook. You can create a hook that acts when instances launch
            or when instances terminate. </li> <li> <b>If necessary, record the lifecycle action
            heartbeat to keep the instance in a pending state.</b> </li> <li> Complete the lifecycle
            action. </li> </ol> 
            <para>
            To learn more, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AutoScalingPendingState.html">Auto
            Scaling Pending State</a> and <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AutoScalingTerminatingState.html">Auto
            Scaling Terminating State</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.RecordLifecycleActionHeartbeatRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
            The name of the Auto Scaling group to which the hook belongs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.RecordLifecycleActionHeartbeatRequest.LifecycleActionToken">
            <summary>
            Gets and sets the property LifecycleActionToken. 
            <para>
            A token that uniquely identifies a specific lifecycle action associated with an instance.
            Auto Scaling sends this token to the notification target you specified when you created
            the lifecycle hook.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.RecordLifecycleActionHeartbeatRequest.LifecycleHookName">
            <summary>
            Gets and sets the property LifecycleHookName. 
            <para>
            The name of the lifecycle hook.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.RecordLifecycleActionHeartbeatResponse">
            <summary>
            Configuration for accessing Amazon RecordLifecycleActionHeartbeat service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.RecordLifecycleActionHeartbeatResult">
            <summary>
            The output of the <a>RecordLifecycleActionHeartbeat</a> action.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.RecordLifecycleActionHeartbeatResponse.RecordLifecycleActionHeartbeatResult">
            <summary>
            Gets and sets the RecordLifecycleActionHeartbeatResult property.
            Represents the output of a RecordLifecycleActionHeartbeat operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.ResourceInUseException">
            <summary>
             AutoScaling exception
             </summary>
        </member>
        <member name="M:Amazon.AutoScaling.Model.ResourceInUseException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.AutoScaling.Model.ResumeProcessesRequest">
            <summary>
            Container for the parameters to the ResumeProcesses operation.
            Resumes all suspended Auto Scaling processes for an Auto Scaling group. For information
            on suspending and resuming Auto Scaling process, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/US_SuspendResume.html">Suspend
            and Resume Auto Scaling Process</a>.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ResumeProcessesRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name or Amazon Resource Name (ARN) of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ResumeProcessesRequest.ScalingProcesses">
            <summary>
            Gets and sets the property ScalingProcesses. 
            <para>
             The processes that you want to suspend or resume, which can include one or more of
            the following: 
            </para>
             <ul> <li>Launch</li> <li>Terminate</li> <li>HealthCheck</li> <li>ReplaceUnhealthy</li>
            <li>AZRebalance</li> <li>AlarmNotification</li> <li>ScheduledActions</li> <li>AddToLoadBalancer</li>
            </ul> 
            <para>
             To suspend all process types, omit this parameter. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.ResumeProcessesResponse">
            <summary>
            Configuration for accessing Amazon ResumeProcesses service
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ResumeProcessesResponse.ResumeProcessesResult">
            <summary>
            Gets and sets the ResumeProcessesResult property.
            Represents the output of a ResumeProcesses operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.ScalingActivityInProgressException">
            <summary>
             AutoScaling exception
             </summary>
        </member>
        <member name="M:Amazon.AutoScaling.Model.ScalingActivityInProgressException.#ctor(System.String)">
            <summary>
            Constructs a new ScalingActivityInProgressException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.AutoScaling.Model.ScalingPolicy">
            <summary>
            The <code>ScalingPolicy</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ScalingPolicy.AdjustmentType">
            <summary>
            Gets and sets the property AdjustmentType. 
            <para>
             Specifies whether the <code>ScalingAdjustment</code> is an absolute number or a percentage
            of the current capacity. Valid values are <code>ChangeInCapacity</code>, <code>ExactCapacity</code>,
            and <code>PercentChangeInCapacity</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ScalingPolicy.Alarms">
            <summary>
            Gets and sets the property Alarms. 
            <para>
             A list of CloudWatch Alarms related to the policy. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ScalingPolicy.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name of the Auto Scaling group associated with this scaling policy. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ScalingPolicy.Cooldown">
            <summary>
            Gets and sets the property Cooldown. 
            <para>
             The amount of time, in seconds, after a scaling activity completes before any further
            trigger-related scaling activities can start. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ScalingPolicy.MinAdjustmentStep">
            <summary>
            Gets and sets the property MinAdjustmentStep. 
            <para>
             Changes the <code>DesiredCapacity</code> of the Auto Scaling group by at least the
            specified number of instances. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ScalingPolicy.PolicyARN">
            <summary>
            Gets and sets the property PolicyARN. 
            <para>
             The Amazon Resource Name (ARN) of the policy. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ScalingPolicy.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
             The name of the scaling policy. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ScalingPolicy.ScalingAdjustment">
            <summary>
            Gets and sets the property ScalingAdjustment. 
            <para>
             The number associated with the specified adjustment type. A positive value adds to
            the current capacity and a negative value removes from the current capacity. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.ScheduledUpdateGroupAction">
            <summary>
            This data type stores information about a scheduled update to an Auto Scaling group.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ScheduledUpdateGroupAction.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name of the Auto Scaling group to be updated. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ScheduledUpdateGroupAction.DesiredCapacity">
            <summary>
            Gets and sets the property DesiredCapacity. 
            <para>
             The number of instances you prefer to maintain in your Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ScheduledUpdateGroupAction.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
             The time that the action is scheduled to end. This value can be up to one month in
            the future. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ScheduledUpdateGroupAction.MaxSize">
            <summary>
            Gets and sets the property MaxSize. 
            <para>
             The maximum size of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ScheduledUpdateGroupAction.MinSize">
            <summary>
            Gets and sets the property MinSize. 
            <para>
             The minimum size of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ScheduledUpdateGroupAction.Recurrence">
            <summary>
            Gets and sets the property Recurrence. 
            <para>
             The regular schedule that an action occurs. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ScheduledUpdateGroupAction.ScheduledActionARN">
            <summary>
            Gets and sets the property ScheduledActionARN. 
            <para>
             The Amazon Resource Name (ARN) of this scheduled action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ScheduledUpdateGroupAction.ScheduledActionName">
            <summary>
            Gets and sets the property ScheduledActionName. 
            <para>
             The name of this scheduled action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ScheduledUpdateGroupAction.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
             The time that the action is scheduled to begin. This value can be up to one month
            in the future. 
            </para>
             
            <para>
            When <code>StartTime</code> and <code>EndTime</code> are specified with <code>Recurrence</code>,
            they form the boundaries of when the recurring action will start and stop.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.ScheduledUpdateGroupAction.Time">
            <summary>
            Gets and sets the property Time. 
            <para>
             <code>Time</code> is deprecated.
            </para>
             
            <para>
            The time that the action is scheduled to begin. <code>Time</code> is an alias for
            <code>StartTime</code>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.SetDesiredCapacityRequest">
            <summary>
            Container for the parameters to the SetDesiredCapacity operation.
            Sets the desired size of the specified <a>AutoScalingGroup</a>.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.SetDesiredCapacityRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.SetDesiredCapacityRequest.DesiredCapacity">
            <summary>
            Gets and sets the property DesiredCapacity. 
            <para>
             The new capacity setting for the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.SetDesiredCapacityRequest.HonorCooldown">
            <summary>
            Gets and sets the property HonorCooldown. 
            <para>
             By default, <code>SetDesiredCapacity</code> overrides any cooldown period associated
            with the Auto Scaling group. Set to <code>True</code> if you want Auto Scaling to
            wait for the cooldown period associated with the Auto Scaling group to complete before
            initiating a scaling activity to set your Auto Scaling group to the new capacity setting.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.SetDesiredCapacityResponse">
            <summary>
            Configuration for accessing Amazon SetDesiredCapacity service
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.SetDesiredCapacityResponse.SetDesiredCapacityResult">
            <summary>
            Gets and sets the SetDesiredCapacityResult property.
            Represents the output of a SetDesiredCapacity operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.SetInstanceHealthRequest">
            <summary>
            Container for the parameters to the SetInstanceHealth operation.
            Sets the health status of a specified instance that belongs to any of your Auto Scaling
            groups. 
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/as-configure-healthcheck.html">Configure
            Health Checks for Your Auto Scaling group</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.SetInstanceHealthRequest.HealthStatus">
            <summary>
            Gets and sets the property HealthStatus. 
            <para>
             The health status of the instance. Set to <code>Healthy</code> if you want the instance
            to remain in service. Set to <code>Unhealthy</code> if you want the instance to be
            out of service. Auto Scaling will terminate and replace the unhealthy instance. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.SetInstanceHealthRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
             The identifier of the Amazon EC2 instance. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.SetInstanceHealthRequest.ShouldRespectGracePeriod">
            <summary>
            Gets and sets the property ShouldRespectGracePeriod. 
            <para>
            If the Auto Scaling group of the specified instance has a <code>HealthCheckGracePeriod</code>
            specified for the group, by default, this call will respect the grace period. Set
            this to <code>False</code>, if you do not want the call to respect the grace period
            associated with the group.
            </para>
             
            <para>
            For more information, see the <code>HealthCheckGracePeriod</code> parameter description
            in the <a>CreateAutoScalingGroup</a> action. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.SetInstanceHealthResponse">
            <summary>
            Configuration for accessing Amazon SetInstanceHealth service
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.SetInstanceHealthResponse.SetInstanceHealthResult">
            <summary>
            Gets and sets the SetInstanceHealthResult property.
            Represents the output of a SetInstanceHealth operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.SuspendedProcess">
            <summary>
            An Auto Scaling process that has been suspended. For more information, see <a>ProcessType</a>.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.SuspendedProcess.ProcessName">
            <summary>
            Gets and sets the property ProcessName. 
            <para>
             The name of the suspended process. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.SuspendedProcess.SuspensionReason">
            <summary>
            Gets and sets the property SuspensionReason. 
            <para>
             The reason that the process was suspended. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.SuspendProcessesRequest">
            <summary>
            Container for the parameters to the SuspendProcesses operation.
            Suspends Auto Scaling processes for an Auto Scaling group. To suspend specific process
            types, specify them by name with the <code>ScalingProcesses.member.N</code> parameter.
            To suspend all process types, omit the <code>ScalingProcesses.member.N</code> parameter.
            
            
             <important> 
            <para>
             Suspending either of the two primary process types, <code>Launch</code> or <code>Terminate</code>,
            can prevent other process types from functioning properly. 
            </para>
             </important> 
            <para>
             To resume processes that have been suspended, use <a>ResumeProcesses</a> For more
            information on suspending and resuming Auto Scaling process, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/US_SuspendResume.html">Suspend
            and Resume Auto Scaling Process</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.SuspendProcessesRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name or Amazon Resource Name (ARN) of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.SuspendProcessesRequest.ScalingProcesses">
            <summary>
            Gets and sets the property ScalingProcesses. 
            <para>
             The processes that you want to suspend or resume, which can include one or more of
            the following: 
            </para>
             <ul> <li>Launch</li> <li>Terminate</li> <li>HealthCheck</li> <li>ReplaceUnhealthy</li>
            <li>AZRebalance</li> <li>AlarmNotification</li> <li>ScheduledActions</li> <li>AddToLoadBalancer</li>
            </ul> 
            <para>
             To suspend all process types, omit this parameter. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.SuspendProcessesResponse">
            <summary>
            Configuration for accessing Amazon SuspendProcesses service
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.SuspendProcessesResponse.SuspendProcessesResult">
            <summary>
            Gets and sets the SuspendProcessesResult property.
            Represents the output of a SuspendProcesses operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.Tag">
            <summary>
            The tag applied to an Auto Scaling group.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
             The key of the tag. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Tag.PropagateAtLaunch">
            <summary>
            Gets and sets the property PropagateAtLaunch. 
            <para>
             Specifies whether the new tag will be applied to instances launched after the tag
            is created. The same behavior applies to updates: If you change a tag, the changed
            tag will be applied to all instances launched after you made the change. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Tag.ResourceId">
            <summary>
            Gets and sets the property ResourceId. 
            <para>
             The name of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Tag.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
             The kind of resource to which the tag is applied. Currently, Auto Scaling supports
            the <code>auto-scaling-group</code> resource type. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
             The value of the tag. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.TagDescription">
            <summary>
            The tag applied to an Auto Scaling group.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.TagDescription.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
             The key of the tag. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.TagDescription.PropagateAtLaunch">
            <summary>
            Gets and sets the property PropagateAtLaunch. 
            <para>
             Specifies whether the new tag will be applied to instances launched after the tag
            is created. The same behavior applies to updates: If you change a tag, the changed
            tag will be applied to all instances launched after you made the change. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.TagDescription.ResourceId">
            <summary>
            Gets and sets the property ResourceId. 
            <para>
             The name of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.TagDescription.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
             The kind of resource to which the tag is applied. Currently, Auto Scaling supports
            the <code>auto-scaling-group</code> resource type. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.TagDescription.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
             The value of the tag. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.TerminateInstanceInAutoScalingGroupRequest">
            <summary>
            Container for the parameters to the TerminateInstanceInAutoScalingGroup operation.
            Terminates the specified instance. Optionally, the desired group size can be adjusted.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.TerminateInstanceInAutoScalingGroupRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
             The ID of the Amazon EC2 instance to be terminated. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.TerminateInstanceInAutoScalingGroupRequest.ShouldDecrementDesiredCapacity">
            <summary>
            Gets and sets the property ShouldDecrementDesiredCapacity. 
            <para>
             Specifies whether (<i>true</i>) or not (<i>false</i>) terminating this instance should
            also decrement the size of the <a>AutoScalingGroup</a>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.TerminateInstanceInAutoScalingGroupResponse">
            <summary>
            Configuration for accessing Amazon TerminateInstanceInAutoScalingGroup service
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.TerminateInstanceInAutoScalingGroupResult">
            <summary>
            The output for the <a>TerminateInstanceInAutoScalingGroup</a> action.
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.TerminateInstanceInAutoScalingGroupResult.Activity">
            <summary>
            Gets and sets the property Activity. 
            <para>
             A scaling Activity. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.TerminateInstanceInAutoScalingGroupResponse.TerminateInstanceInAutoScalingGroupResult">
            <summary>
            Gets and sets the TerminateInstanceInAutoScalingGroupResult property.
            Represents the output of a TerminateInstanceInAutoScalingGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.UpdateAutoScalingGroupRequest">
            <summary>
            Container for the parameters to the UpdateAutoScalingGroup operation.
            Updates the configuration for the specified <a>AutoScalingGroup</a>. 
            
             
            <para>
             The new settings are registered upon the completion of this call. Any launch configuration
            settings take effect on any triggers after this call returns. Scaling activities that
            are currently in progress aren't affected. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.UpdateAutoScalingGroupRequest.AutoScalingGroupName">
            <summary>
            Gets and sets the property AutoScalingGroupName. 
            <para>
             The name of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.UpdateAutoScalingGroupRequest.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
             Availability Zones for the group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.UpdateAutoScalingGroupRequest.DefaultCooldown">
            <summary>
            Gets and sets the property DefaultCooldown. 
            <para>
             The amount of time, in seconds, after a scaling activity completes before any further
            scaling activities can start. For more information, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AS_Concepts.html#Cooldown">Cooldown
            Period</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.UpdateAutoScalingGroupRequest.DesiredCapacity">
            <summary>
            Gets and sets the property DesiredCapacity. 
            <para>
             The desired capacity for the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.UpdateAutoScalingGroupRequest.HealthCheckGracePeriod">
            <summary>
            Gets and sets the property HealthCheckGracePeriod. 
            <para>
             The length of time that Auto Scaling waits before checking an instance's health status.
            The grace period begins when the instance passes System Status and the Instance Status
            checks from Amazon EC2. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeInstanceStatus.html">DescribeInstanceStatus</a>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.UpdateAutoScalingGroupRequest.HealthCheckType">
            <summary>
            Gets and sets the property HealthCheckType. 
            <para>
             The type of health check for the instances in the Auto Scaling group. The health
            check type can either be <code>EC2</code> for Amazon EC2 or <code>ELB</code> for Elastic
            Load Balancing. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.UpdateAutoScalingGroupRequest.LaunchConfigurationName">
            <summary>
            Gets and sets the property LaunchConfigurationName. 
            <para>
             The name of the launch configuration. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.UpdateAutoScalingGroupRequest.MaxSize">
            <summary>
            Gets and sets the property MaxSize. 
            <para>
             The maximum size of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.UpdateAutoScalingGroupRequest.MinSize">
            <summary>
            Gets and sets the property MinSize. 
            <para>
             The minimum size of the Auto Scaling group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.UpdateAutoScalingGroupRequest.PlacementGroup">
            <summary>
            Gets and sets the property PlacementGroup. 
            <para>
             The name of the cluster placement group, if applicable. For more information, go
            to <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">
            Using Cluster Instances</a> in the Amazon EC2 User Guide. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.UpdateAutoScalingGroupRequest.TerminationPolicies">
            <summary>
            Gets and sets the property TerminationPolicies. 
            <para>
             A standalone termination policy or a list of termination policies used to select
            the instance to terminate. The policies are executed in the order that they are listed.
            
            </para>
             
            <para>
             For more information on creating a termination policy for your Auto Scaling group,
            go to <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/us-termination-policy.html">Instance
            Termination Policy for Your Auto Scaling Group</a> in the the <i>Auto Scaling Developer
            Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.UpdateAutoScalingGroupRequest.VPCZoneIdentifier">
            <summary>
            Gets and sets the property VPCZoneIdentifier. 
            <para>
             The subnet identifier for the Amazon VPC connection, if applicable. You can specify
            several subnets in a comma-separated list. 
            </para>
             
            <para>
             When you specify <code>VPCZoneIdentifier</code> with <code>AvailabilityZones</code>,
            ensure that the subnets' Availability Zones match the values you specify for <code>AvailabilityZones</code>.
            
            </para>
             
            <para>
             For more information on creating your Auto Scaling group in Amazon VPC by specifying
            subnets, see <a href="http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/autoscalingsubnets.html">Launch
            Auto Scaling Instances into Amazon VPC</a> in the the <i>Auto Scaling Developer Guide</i>.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.Model.UpdateAutoScalingGroupResponse">
            <summary>
            Configuration for accessing Amazon UpdateAutoScalingGroup service
            </summary>
        </member>
        <member name="P:Amazon.AutoScaling.Model.UpdateAutoScalingGroupResponse.UpdateAutoScalingGroupResult">
            <summary>
            Gets and sets the UpdateAutoScalingGroupResult property.
            Represents the output of a UpdateAutoScalingGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.AutoScaling.LifecycleState">
            <summary>
            Constants used for properties of type LifecycleState.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.ConstantClass">
            <summary>
            Base class for constant class that holds the value that will be sent to AWS for the static constants.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.ConstantClass.Intern">
            <summary>
            Attempt to find correct-cased constant value using whatever cased value the user
            has provided. This is primarily useful for mapping any-cased values from a CLI
            tool to the specific casing required by the service, avoiding the need for the
            user to (a) remember the specific case and (b) actually type it correctly.
            </summary>
            <returns>The properly cased service constant matching the value</returns>
        </member>
        <member name="P:Amazon.Runtime.ConstantClass.Value">
            <summary>
            Gets the value that needs to be used when send the value to AWS
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.LifecycleState.Detached">
            <summary>
            Constant Detached for LifecycleState
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.LifecycleState.Detaching">
            <summary>
            Constant Detaching for LifecycleState
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.LifecycleState.EnteringStandby">
            <summary>
            Constant EnteringStandby for LifecycleState
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.LifecycleState.InService">
            <summary>
            Constant InService for LifecycleState
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.LifecycleState.Pending">
            <summary>
            Constant Pending for LifecycleState
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.LifecycleState.PendingProceed">
            <summary>
            Constant PendingProceed for LifecycleState
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.LifecycleState.PendingWait">
            <summary>
            Constant PendingWait for LifecycleState
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.LifecycleState.Quarantined">
            <summary>
            Constant Quarantined for LifecycleState
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.LifecycleState.Standby">
            <summary>
            Constant Standby for LifecycleState
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.LifecycleState.Terminated">
            <summary>
            Constant Terminated for LifecycleState
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.LifecycleState.Terminating">
            <summary>
            Constant Terminating for LifecycleState
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.LifecycleState.TerminatingProceed">
            <summary>
            Constant TerminatingProceed for LifecycleState
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.LifecycleState.TerminatingWait">
            <summary>
            Constant TerminatingWait for LifecycleState
            </summary>
        </member>
        <member name="M:Amazon.AutoScaling.LifecycleState.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.AutoScaling.LifecycleState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.AutoScaling.ScalingActivityStatusCode">
            <summary>
            Constants used for properties of type ScalingActivityStatusCode.
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.ScalingActivityStatusCode.Cancelled">
            <summary>
            Constant Cancelled for ScalingActivityStatusCode
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.ScalingActivityStatusCode.Failed">
            <summary>
            Constant Failed for ScalingActivityStatusCode
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.ScalingActivityStatusCode.InProgress">
            <summary>
            Constant InProgress for ScalingActivityStatusCode
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.ScalingActivityStatusCode.MidLifecycleAction">
            <summary>
            Constant MidLifecycleAction for ScalingActivityStatusCode
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.ScalingActivityStatusCode.PreInService">
            <summary>
            Constant PreInService for ScalingActivityStatusCode
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.ScalingActivityStatusCode.Successful">
            <summary>
            Constant Successful for ScalingActivityStatusCode
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.ScalingActivityStatusCode.WaitingForELBConnectionDraining">
            <summary>
            Constant WaitingForELBConnectionDraining for ScalingActivityStatusCode
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.ScalingActivityStatusCode.WaitingForInstanceId">
            <summary>
            Constant WaitingForInstanceId for ScalingActivityStatusCode
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.ScalingActivityStatusCode.WaitingForSpotInstanceId">
            <summary>
            Constant WaitingForSpotInstanceId for ScalingActivityStatusCode
            </summary>
        </member>
        <member name="F:Amazon.AutoScaling.ScalingActivityStatusCode.WaitingForSpotInstanceRequestId">
            <summary>
            Constant WaitingForSpotInstanceRequestId for ScalingActivityStatusCode
            </summary>
        </member>
        <member name="M:Amazon.AutoScaling.ScalingActivityStatusCode.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.AutoScaling.ScalingActivityStatusCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient">
             <summary>
             Implementation for accessing CloudSearchDomain
            
             You use the AmazonCloudSearch2013 API to upload documents to a search domain and search
             those documents. 
             
              
             <para>
             The endpoints for submitting <code>UploadDocuments</code>, <code>Search</code>, and
             <code>Suggest</code> requests are domain-specific. To get the endpoints for your domain,
             use the Amazon CloudSearch configuration service <code>DescribeDomains</code> action.
             The domain endpoints are also displayed on the domain dashboard in the Amazon CloudSearch
             console. You submit suggest requests to the search endpoint. 
             </para>
              
             <para>
             For more information, see the <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide">Amazon
             CloudSearch Developer Guide</a>.
             </para>
             </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.IAmazonCloudSearchDomain">
             <summary>
             Interface for accessing CloudSearchDomain
            
             You use the AmazonCloudSearch2013 API to upload documents to a search domain and search
             those documents. 
             
              
             <para>
             The endpoints for submitting <code>UploadDocuments</code>, <code>Search</code>, and
             <code>Suggest</code> requests are domain-specific. To get the endpoints for your domain,
             use the Amazon CloudSearch configuration service <code>DescribeDomains</code> action.
             The domain endpoints are also displayed on the domain dashboard in the Amazon CloudSearch
             console. You submit suggest requests to the search endpoint. 
             </para>
              
             <para>
             For more information, see the <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide">Amazon
             CloudSearch Developer Guide</a>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.IAmazonCloudSearchDomain.SearchAsync(Amazon.CloudSearchDomain.Model.SearchRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Search operation.
            <seealso cref="T:Amazon.CloudSearchDomain.IAmazonCloudSearchDomain"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Search operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.IAmazonCloudSearchDomain.SuggestAsync(Amazon.CloudSearchDomain.Model.SuggestRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Suggest operation.
            <seealso cref="T:Amazon.CloudSearchDomain.IAmazonCloudSearchDomain"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Suggest operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.IAmazonCloudSearchDomain.UploadDocumentsAsync(Amazon.CloudSearchDomain.Model.UploadDocumentsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UploadDocuments operation.
            <seealso cref="T:Amazon.CloudSearchDomain.IAmazonCloudSearchDomain"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UploadDocuments operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.SearchAsync(Amazon.CloudSearchDomain.Model.SearchRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Search operation.
            <seealso cref="T:Amazon.CloudSearchDomain.IAmazonCloudSearchDomain"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Search operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.SuggestAsync(Amazon.CloudSearchDomain.Model.SuggestRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Suggest operation.
            <seealso cref="T:Amazon.CloudSearchDomain.IAmazonCloudSearchDomain"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Suggest operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.UploadDocumentsAsync(Amazon.CloudSearchDomain.Model.UploadDocumentsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UploadDocuments operation.
            <seealso cref="T:Amazon.CloudSearchDomain.IAmazonCloudSearchDomain"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UploadDocuments operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.#ctor(System.String)">
             <summary>
             Constructs AmazonCloudSearchDomainClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="serviceUrl">The URL of the search or document service.</param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.#ctor(Amazon.CloudSearchDomain.AmazonCloudSearchDomainConfig)">
             <summary>
             Constructs AmazonCloudSearchDomainClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonCloudSearchDomainClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.#ctor(System.String,Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonCloudSearchDomainClient with AWS Credentials
            </summary>
            <param name="serviceUrl">The URL of the search or document service.</param>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.CloudSearchDomain.AmazonCloudSearchDomainConfig)">
            <summary>
            Constructs AmazonCloudSearchDomainClient with AWS Credentials and an
            AmazonCloudSearchDomainClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonCloudSearchDomainClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonCloudSearchDomainClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="serviceUrl">The URL of the search or document service.</param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.#ctor(System.String,System.String,Amazon.CloudSearchDomain.AmazonCloudSearchDomainConfig)">
            <summary>
            Constructs AmazonCloudSearchDomainClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCloudSearchDomainClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonCloudSearchDomainClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructs AmazonCloudSearchDomainClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="serviceUrl">The URL of the search or document service.</param>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainClient.#ctor(System.String,System.String,System.String,Amazon.CloudSearchDomain.AmazonCloudSearchDomainConfig)">
            <summary>
            Constructs AmazonCloudSearchDomainClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCloudSearchDomainClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonCloudSearchDomainClient Configuration Object</param>
        </member>
        <member name="T:Amazon.CloudSearchDomain.AmazonCloudSearchDomainConfig">
            <summary>
            Configuration for accessing Amazon CloudSearchDomain service
            </summary>
            <summary>
            Configuration for accessing Amazon CloudSearchDomain service
            </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.AmazonCloudSearchDomainConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.AmazonCloudSearchDomainConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.AmazonCloudSearchDomainConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.PipelineHandler">
            <summary>
            An abstract pipeline handler that has implements IPipelineHandler,
            and has the default implmentation. This is the base class for most of
            the handler implementations.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.IPipelineHandler">
            <summary>
            Interface for a handler in a pipeline.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.IPipelineHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Contains the processing logic for a synchronous request invocation.
            This method should call InnerHandler.InvokeSync to continue processing of the
            request by the pipeline, unless it's a terminating handler.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.Runtime.IPipelineHandler.InvokeAsync``1(Amazon.Runtime.IExecutionContext)">
            <summary>
            Contains the processing logic for an asynchronous request invocation.
            This method should call InnerHandler.InvokeSync to continue processing of the
            request by the pipeline, unless it's a terminating handler.
            </summary>
            <typeparam name="T">The response type for the current request.</typeparam>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="P:Amazon.Runtime.IPipelineHandler.Logger">
            <summary>
            The logger used to log messages.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.IPipelineHandler.InnerHandler">
            <summary>
            The inner handler which is called after the current 
            handler completes it's processing.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.IPipelineHandler.OuterHandler">
            <summary>
            The outer handler which encapsulates the current handler.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.PipelineHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Contains the processing logic for a synchronous request invocation.
            This method calls InnerHandler.InvokeSync to continue processing of the
            request by the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.PipelineHandler.InvokeAsync``1(Amazon.Runtime.IExecutionContext)">
            <summary>
            Contains the processing logic for an asynchronous request invocation.
            This method calls InnerHandler.InvokeSync to continue processing of the
            request by the pipeline.
            </summary>
            <typeparam name="T">The response type for the current request.</typeparam>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.PipelineHandler.LogMetrics(Amazon.Runtime.IExecutionContext)">
            <summary>
            Logs the metrics for the current execution context.
            </summary>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
        </member>
        <member name="P:Amazon.Runtime.Internal.PipelineHandler.Logger">
            <summary>
            The logger used to log messages.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.PipelineHandler.InnerHandler">
            <summary>
            The inner handler which is called after the current 
            handler completes it's processing.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.PipelineHandler.OuterHandler">
            <summary>
            The outer handler which encapsulates the current handler.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.GenericHandler">
            <summary>
            A generic handler that provides overridable PreInvoke and PostInvoke methods. 
            This class is intended be used as a base class for handlers which perform simple processing.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.GenericHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls the PreInvoke and PostInvoke methods before and after calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.GenericHandler.InvokeAsync``1(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls the PreInvoke and PostInvoke methods before and after calling the next handler 
            in the pipeline.
            </summary>
            <typeparam name="T">The response type for the current request.</typeparam>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.GenericHandler.PreInvoke(Amazon.Runtime.IExecutionContext)">
            <summary>
            This method is invoked before calling the next handler in the pipeline.
            </summary>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.GenericHandler.PostInvoke(Amazon.Runtime.IExecutionContext)">
            <summary>
            This method is invoked after calling the next handler in the pipeline.
            </summary>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
        </member>
        <member name="T:Amazon.CloudSearchDomain.AmazonCloudSearchDomainRequest">
            <summary>
            Base class for CloudSearchDomain operation requests.
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Bucket">
            <summary>
            A container for facet information.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Bucket.Count">
            <summary>
            Gets and sets the property Count. 
            <para>
            The number of hits that contain the facet value in the specified facet field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Bucket.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The facet value being counted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.BucketInfo">
            <summary>
            A container for the calculated facet values and counts.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.BucketInfo.Buckets">
            <summary>
            Gets and sets the property Buckets. 
            <para>
            A list of the calculated facet values and counts.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.DocumentServiceException">
            <summary>
             CloudSearchDomain exception
             </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.DocumentServiceException.#ctor(System.String)">
            <summary>
            Constructs a new DocumentServiceException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.DocumentServiceWarning">
            <summary>
            A warning returned by the document service when an issue is discovered while processing
            an upload request.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.DocumentServiceWarning.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The description for a warning returned by the document service.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Hit">
            <summary>
            Information about a document that matches the search request.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Hit.Fields">
            <summary>
            Gets and sets the property Fields. 
            <para>
            The fields returned from a document that matches the search request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Hit.Highlights">
            <summary>
            Gets and sets the property Highlights. 
            <para>
            The highlights returned from a document that matches the search request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Hit.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The document ID of a document that matches the search request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Hits">
            <summary>
            The collection of documents that match the search request.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Hits.Cursor">
            <summary>
            Gets and sets the property Cursor. 
            <para>
            A cursor that can be used to retrieve the next set of matching documents when you
            want to page through a large result set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Hits.Found">
            <summary>
            Gets and sets the property Found. 
            <para>
            The total number of documents that match the search request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Hits.Hit">
            <summary>
            Gets and sets the property Hit. 
            <para>
            A document that matches the search request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.Hits.Start">
            <summary>
            Gets and sets the property Start. 
            <para>
            The index of the first matching document.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.BucketInfoUnmarshaller">
            <summary>
            Response Unmarshaller for BucketInfo Object
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.BucketUnmarshaller">
            <summary>
            Response Unmarshaller for Bucket Object
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.DocumentServiceWarningUnmarshaller">
            <summary>
            Response Unmarshaller for DocumentServiceWarning Object
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.HitsUnmarshaller">
            <summary>
            Response Unmarshaller for Hits Object
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.HitUnmarshaller">
            <summary>
            Response Unmarshaller for Hit Object
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SearchRequestMarshaller">
            <summary>
            Search Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SearchResponseUnmarshaller">
            <summary>
            Response Unmarshaller for Search operation
            </summary>  
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.JsonResponseUnmarshaller">
            <summary>
            Class for unmarshalling JSON service responses.
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SearchStatusUnmarshaller">
            <summary>
            Response Unmarshaller for SearchStatus Object
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestionMatchUnmarshaller">
            <summary>
            Response Unmarshaller for SuggestionMatch Object
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestModelUnmarshaller">
            <summary>
            Response Unmarshaller for SuggestModel Object
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestRequestMarshaller">
            <summary>
            Suggest Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestResponseUnmarshaller">
            <summary>
            Response Unmarshaller for Suggest operation
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.SuggestStatusUnmarshaller">
            <summary>
            Response Unmarshaller for SuggestStatus Object
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.UploadDocumentsRequestMarshaller">
            <summary>
            UploadDocuments Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.Internal.MarshallTransformations.UploadDocumentsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UploadDocuments operation
            </summary>  
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.SearchException">
            <summary>
             CloudSearchDomain exception
             </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.Model.SearchException.#ctor(System.String)">
            <summary>
            Constructs a new SearchException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.SearchRequest">
            <summary>
            Container for the parameters to the Search operation.
            Retrieves a list of documents that match the specified search criteria. How you specify
            the search criteria depends on which query parser you use. Amazon CloudSearch supports
            four query parsers:
            
             <ul> <li> <code>simple</code>: search all <code>text</code> and <code>text-array</code>
            fields for the specified string. Search for phrases, individual terms, and prefixes.
            </li> <li> <code>structured</code>: search specific fields, construct compound queries
            using Boolean operators, and use advanced features such as term boosting and proximity
            searching.</li> <li> <code>lucene</code>: specify search criteria using the Apache
            Lucene query parser syntax.</li> <li> <code>dismax</code>: specify search criteria
            using the simplified subset of the Apache Lucene query parser syntax defined by the
            DisMax query parser.</li> </ul> 
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching.html">Searching
            Your Data</a> in the <i>Amazon CloudSearch Developer Guide</i>.
            </para>
             
            <para>
            The endpoint for submitting <code>Search</code> requests is domain-specific. You submit
            search requests to a domain's search endpoint. To get the search endpoint for your
            domain, use the Amazon CloudSearch configuration service <code>DescribeDomains</code>
            action. A domain's endpoints are also displayed on the domain dashboard in the Amazon
            CloudSearch console. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Cursor">
            <summary>
            Gets and sets the property Cursor. 
            <para>
            Retrieves a cursor value you can use to page through large result sets. Use the <code>size</code>
            parameter to control the number of hits to include in each response. You can specify
            either the <code>cursor</code> or <code>start</code> parameter in a request; they
            are mutually exclusive. To get the first cursor, set the cursor value to <code>initial</code>.
            In subsequent requests, specify the cursor value returned in the hits section of the
            response. 
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/paginating-results.html">Paginating
            Results</a> in the <i>Amazon CloudSearch Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Expr">
            <summary>
            Gets and sets the property Expr. 
            <para>
            Defines one or more numeric expressions that can be used to sort results or specify
            search or filter criteria. You can also specify expressions as return fields. 
            </para>
             
            <para>
            For more information about defining and using expressions, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html">Configuring
            Expressions</a> in the <i>Amazon CloudSearch Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Facet">
            <summary>
            Gets and sets the property Facet. 
            <para>
            Specifies one or more fields for which to get facet information, and options that
            control how the facet information is returned. Each specified field must be facet-enabled
            in the domain configuration. The fields and options are specified in JSON using the
            form <code>{"FIELD":{"OPTION":VALUE,"OPTION:"STRING"},"FIELD":{"OPTION":VALUE,"OPTION":"STRING"}}</code>.
            </para>
             
            <para>
            You can specify the following faceting options:
            </para>
             <ul> <li> 
            <para>
            <code>buckets</code> specifies an array of the facet values or ranges to count. Ranges
            are specified using the same syntax that you use to search for a range of values.
            For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching-ranges.html">
            Searching for a Range of Values</a> in the <i>Amazon CloudSearch Developer Guide</i>.
            Buckets are returned in the order they are specified in the request. The <code>sort</code>
            and <code>size</code> options are not valid if you specify <code>buckets</code>.
            </para>
             </li> <li> 
            <para>
            <code>size</code> specifies the maximum number of facets to include in the results.
            By default, Amazon CloudSearch returns counts for the top 10. The <code>size</code>
            parameter is only valid when you specify the <code>sort</code> option; it cannot be
            used in conjunction with <code>buckets</code>.
            </para>
             </li> <li> 
            <para>
            <code>sort</code> specifies how you want to sort the facets in the results: <code>bucket</code>
            or <code>count</code>. Specify <code>bucket</code> to sort alphabetically or numerically
            by facet value (in ascending order). Specify <code>count</code> to sort by the facet
            counts computed for each facet value (in descending order). To retrieve facet counts
            for particular values or ranges of values, use the <code>buckets</code> option instead
            of <code>sort</code>. 
            </para>
             </li> </ul> 
            <para>
            If no facet options are specified, facet counts are computed for all field values,
            the facets are sorted by facet count, and the top 10 facets are returned in the results.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/faceting.html">Getting
            and Using Facet Information</a> in the <i>Amazon CloudSearch Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.FilterQuery">
            <summary>
            Gets and sets the property FilterQuery. 
            <para>
            Specifies a structured query that filters the results of a search without affecting
            how the results are scored and sorted. You use <code>filterQuery</code> in conjunction
            with the <code>query</code> parameter to filter the documents that match the constraints
            specified in the <code>query</code> parameter. Specifying a filter controls only which
            matching documents are included in the results, it has no effect on how they are scored
            and sorted. The <code>filterQuery</code> parameter supports the full structured query
            syntax. 
            </para>
             
            <para>
            For more information about using filters, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/filtering-results.html">Filtering
            Matching Documents</a> in the <i>Amazon CloudSearch Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Highlight">
            <summary>
            Gets and sets the property Highlight. 
            <para>
            Retrieves highlights for matches in the specified <code>text</code> or <code>text-array</code>
            fields. Each specified field must be highlight enabled in the domain configuration.
            The fields and options are specified in JSON using the form <code>{"FIELD":{"OPTION":VALUE,"OPTION:"STRING"},"FIELD":{"OPTION":VALUE,"OPTION":"STRING"}}</code>.
            </para>
             
            <para>
            You can specify the following highlight options:
            </para>
             <ul> <li> <code>format</code>: specifies the format of the data in the text field:
            <code>text</code> or <code>html</code>. When data is returned as HTML, all non-alphanumeric
            characters are encoded. The default is <code>html</code>. </li> <li> <code>max_phrases</code>:
            specifies the maximum number of occurrences of the search term(s) you want to highlight.
            By default, the first occurrence is highlighted. </li> <li> <code>pre_tag</code>:
            specifies the string to prepend to an occurrence of a search term. The default for
            HTML highlights is <code>&amp;lt;em&amp;gt;</code>. The default for text highlights
            is <code>*</code>. </li> <li> <code>post_tag</code>: specifies the string to append
            to an occurrence of a search term. The default for HTML highlights is <code>&amp;lt;/em&amp;gt;</code>.
            The default for text highlights is <code>*</code>. </li> </ul> 
            <para>
            If no highlight options are specified for a field, the returned field text is treated
            as HTML and the first match is highlighted with emphasis tags: <code>&amp;lt;em&gt;search-term&amp;lt;/em&amp;gt;</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Partial">
            <summary>
            Gets and sets the property Partial. 
            <para>
            Enables partial results to be returned if one or more index partitions are unavailable.
            When your search index is partitioned across multiple search instances, by default
            Amazon CloudSearch only returns results if every partition can be queried. This means
            that the failure of a single search instance can result in 5xx (internal server) errors.
            When you enable partial results, Amazon CloudSearch returns whatever results are available
            and includes the percentage of documents searched in the search results (percent-searched).
            This enables you to more gracefully degrade your users' search experience. For example,
            rather than displaying no results, you could display the partial results and a message
            indicating that the results might be incomplete due to a temporary system outage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Query">
            <summary>
            Gets and sets the property Query. 
            <para>
            Specifies the search criteria for the request. How you specify the search criteria
            depends on the query parser used for the request and the parser options specified
            in the <code>queryOptions</code> parameter. By default, the <code>simple</code> query
            parser is used to process requests. To use the <code>structured</code>, <code>lucene</code>,
            or <code>dismax</code> query parser, you must also specify the <code>queryParser</code>
            parameter. 
            </para>
             
            <para>
            For more information about specifying search criteria, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching.html">Searching
            Your Data</a> in the <i>Amazon CloudSearch Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.QueryOptions">
            <summary>
            Gets and sets the property QueryOptions. 
            <para>
            Configures options for the query parser specified in the <code>queryParser</code>
            parameter.
            </para>
             
            <para>
            The options you can configure vary according to which parser you use:
            </para>
             <ul> <li> <code>defaultOperator</code>: The default operator used to combine individual
            terms in the search string. For example: <code>defaultOperator: 'or'</code>. For the
            <code>dismax</code> parser, you specify a percentage that represents the percentage
            of terms in the search string (rounded down) that must match, rather than a default
            operator. A value of <code>0%</code> is the equivalent to OR, and a value of <code>100%</code>
            is equivalent to AND. The percentage must be specified as a value in the range 0-100
            followed by the percent (%) symbol. For example, <code>defaultOperator: 50%</code>.
            Valid values: <code>and</code>, <code>or</code>, a percentage in the range 0%-100%
            (<code>dismax</code>). Default: <code>and</code> (<code>simple</code>, <code>structured</code>,
            <code>lucene</code>) or <code>100</code> (<code>dismax</code>). Valid for: <code>simple</code>,
            <code>structured</code>, <code>lucene</code>, and <code>dismax</code>.</li> <li> <code>fields</code>:
            An array of the fields to search when no fields are specified in a search. If no fields
            are specified in a search and this option is not specified, all text and text-array
            fields are searched. You can specify a weight for each field to control the relative
            importance of each field when Amazon CloudSearch calculates relevance scores. To specify
            a field weight, append a caret (<code>^</code>) symbol and the weight to the field
            name. For example, to boost the importance of the <code>title</code> field over the
            <code>description</code> field you could specify: <code>"fields":["title^5","description"]</code>.
            Valid values: The name of any configured field and an optional numeric value greater
            than zero. Default: All <code>text</code> and <code>text-array</code> fields. Valid
            for: <code>simple</code>, <code>structured</code>, <code>lucene</code>, and <code>dismax</code>.</li>
            <li> <code>operators</code>: An array of the operators or special characters you want
            to disable for the simple query parser. If you disable the <code>and</code>, <code>or</code>,
            or <code>not</code> operators, the corresponding operators (<code>+</code>, <code>|</code>,
            <code>-</code>) have no special meaning and are dropped from the search string. Similarly,
            disabling <code>prefix</code> disables the wildcard operator (<code>*</code>) and
            disabling <code>phrase</code> disables the ability to search for phrases by enclosing
            phrases in double quotes. Disabling precedence disables the ability to control order
            of precedence using parentheses. Disabling <code>near</code> disables the ability
            to use the ~ operator to perform a sloppy phrase search. Disabling the <code>fuzzy</code>
            operator disables the ability to use the ~ operator to perform a fuzzy search. <code>escape</code>
            disables the ability to use a backslash (<code>\</code>) to escape special characters
            within the search string. Disabling whitespace is an advanced option that prevents
            the parser from tokenizing on whitespace, which can be useful for Vietnamese. (It
            prevents Vietnamese words from being split incorrectly.) For example, you could disable
            all operators other than the phrase operator to support just simple term and phrase
            queries: <code>"operators":["and","not","or", "prefix"]</code>. Valid values: <code>and</code>,
            <code>escape</code>, <code>fuzzy</code>, <code>near</code>, <code>not</code>, <code>or</code>,
            <code>phrase</code>, <code>precedence</code>, <code>prefix</code>, <code>whitespace</code>.
            Default: All operators and special characters are enabled. Valid for: <code>simple</code>.</li>
            <li> <code>phraseFields</code>: An array of the <code>text</code> or <code>text-array</code>
            fields you want to use for phrase searches. When the terms in the search string appear
            in close proximity within a field, the field scores higher. You can specify a weight
            for each field to boost that score. The <code>phraseSlop</code> option controls how
            much the matches can deviate from the search string and still be boosted. To specify
            a field weight, append a caret (<code>^</code>) symbol and the weight to the field
            name. For example, to boost phrase matches in the <code>title</code> field over the
            <code>abstract</code> field, you could specify: <code>"phraseFields":["title^3", "plot"]</code>
            Valid values: The name of any <code>text</code> or <code>text-array</code> field and
            an optional numeric value greater than zero. Default: No fields. If you don't specify
            any fields with <code>phraseFields</code>, proximity scoring is disabled even if <code>phraseSlop</code>
            is specified. Valid for: <code>dismax</code>.</li> <li> <code>phraseSlop</code>: An
            integer value that specifies how much matches can deviate from the search phrase and
            still be boosted according to the weights specified in the <code>phraseFields</code>
            option; for example, <code>phraseSlop: 2</code>. You must also specify <code>phraseFields</code>
            to enable proximity scoring. Valid values: positive integers. Default: 0. Valid for:
            <code>dismax</code>.</li> <li> <code>explicitPhraseSlop</code>: An integer value that
            specifies how much a match can deviate from the search phrase when the phrase is enclosed
            in double quotes in the search string. (Phrases that exceed this proximity distance
            are not considered a match.) For example, to specify a slop of three for dismax phrase
            queries, you would specify <code>"explicitPhraseSlop":3</code>. Valid values: positive
            integers. Default: 0. Valid for: <code>dismax</code>.</li> <li> <code>tieBreaker</code>:
            When a term in the search string is found in a document's field, a score is calculated
            for that field based on how common the word is in that field compared to other documents.
            If the term occurs in multiple fields within a document, by default only the highest
            scoring field contributes to the document's overall score. You can specify a <code>tieBreaker</code>
            value to enable the matches in lower-scoring fields to contribute to the document's
            score. That way, if two documents have the same max field score for a particular term,
            the score for the document that has matches in more fields will be higher. The formula
            for calculating the score with a tieBreaker is <code>(max field score) + (tieBreaker)
            * (sum of the scores for the rest of the matching fields)</code>. Set <code>tieBreaker</code>
            to 0 to disregard all but the highest scoring field (pure max): <code>"tieBreaker":0</code>.
            Set to 1 to sum the scores from all fields (pure sum): <code>"tieBreaker":1</code>.
            Valid values: 0.0 to 1.0. Default: 0.0. Valid for: <code>dismax</code>. </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.QueryParser">
            <summary>
            Gets and sets the property QueryParser. 
            <para>
            Specifies which query parser to use to process the request. If <code>queryParser</code>
            is not specified, Amazon CloudSearch uses the <code>simple</code> query parser. 
            </para>
             
            <para>
            Amazon CloudSearch supports four query parsers:
            </para>
             <ul> <li> <code>simple</code>: perform simple searches of <code>text</code> and <code>text-array</code>
            fields. By default, the <code>simple</code> query parser searches all <code>text</code>
            and <code>text-array</code> fields. You can specify which fields to search by with
            the <code>queryOptions</code> parameter. If you prefix a search term with a plus sign
            (+) documents must contain the term to be considered a match. (This is the default,
            unless you configure the default operator with the <code>queryOptions</code> parameter.)
            You can use the <code>-</code> (NOT), <code>|</code> (OR), and <code>*</code> (wildcard)
            operators to exclude particular terms, find results that match any of the specified
            terms, or search for a prefix. To search for a phrase rather than individual terms,
            enclose the phrase in double quotes. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching-text.html">Searching
            for Text</a> in the <i>Amazon CloudSearch Developer Guide</i>. </li> <li> <code>structured</code>:
            perform advanced searches by combining multiple expressions to define the search criteria.
            You can also search within particular fields, search for values and ranges of values,
            and use advanced options such as term boosting, <code>matchall</code>, and <code>near</code>.
            For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching-compound-queries.html">Constructing
            Compound Queries</a> in the <i>Amazon CloudSearch Developer Guide</i>. </li> <li>
            <code>lucene</code>: search using the Apache Lucene query parser syntax. For more
            information, see <a href="http://lucene.apache.org/core/4_6_0/queryparser/org/apache/lucene/queryparser/classic/package-summary.html#package_description">Apache
            Lucene Query Parser Syntax</a>. </li> <li> <code>dismax</code>: search using the simplified
            subset of the Apache Lucene query parser syntax defined by the DisMax query parser.
            For more information, see <a href="http://wiki.apache.org/solr/DisMaxQParserPlugin#Query_Syntax">DisMax
            Query Parser Syntax</a>. </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Return">
            <summary>
            Gets and sets the property Return. 
            <para>
            Specifies the field and expression values to include in the response. Multiple fields
            or expressions are specified as a comma-separated list. By default, a search response
            includes all return enabled fields (<code>_all_fields</code>). To return only the
            document IDs for the matching documents, specify <code>_no_fields</code>. To retrieve
            the relevance score calculated for each document, specify <code>_score</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            Specifies the maximum number of search hits to include in the response. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Sort">
            <summary>
            Gets and sets the property Sort. 
            <para>
            Specifies the fields or custom expressions to use to sort the search results. Multiple
            fields or expressions are specified as a comma-separated list. You must specify the
            sort direction (<code>asc</code> or <code>desc</code>) for each field; for example,
            <code>year desc,title asc</code>. To use a field to sort results, the field must be
            sort-enabled in the domain configuration. Array type fields cannot be used for sorting.
            If no <code>sort</code> parameter is specified, results are sorted by their default
            relevance scores in descending order: <code>_score desc</code>. You can also sort
            by document ID (<code>_id asc</code>) and version (<code>_version desc</code>).
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/sorting-results.html">Sorting
            Results</a> in the <i>Amazon CloudSearch Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchRequest.Start">
            <summary>
            Gets and sets the property Start. 
            <para>
            Specifies the offset of the first search hit you want to return. Note that the result
            set is zero-based; the first result is at index 0. You can specify either the <code>start</code>
            or <code>cursor</code> parameter in a request, they are mutually exclusive. 
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/paginating-results.html">Paginating
            Results</a> in the <i>Amazon CloudSearch Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.SearchResponse">
            <summary>
            Configuration for accessing Amazon Search service
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.SearchResult">
            <summary>
            The result of a <code>Search</code> request. Contains the documents that match the
            specified search criteria and any requested fields, highlights, and facet information.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchResult.Facets">
            <summary>
            Gets and sets the property Facets. 
            <para>
            The requested facet information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchResult.Hits">
            <summary>
            Gets and sets the property Hits. 
            <para>
            The documents that match the search criteria.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchResult.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status information returned for the search request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchResponse.SearchResult">
            <summary>
            Gets and sets the SearchResult property.
            Represents the output of a Search operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.SearchStatus">
            <summary>
            Contains the resource id (<code>rid</code>) and the time it took to process the request
            (<code>timems</code>).
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchStatus.Rid">
            <summary>
            Gets and sets the property Rid. 
            <para>
            The encrypted resource ID for the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SearchStatus.Timems">
            <summary>
            Gets and sets the property Timems. 
            <para>
            How long it took to process the request, in milliseconds.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.SuggestionMatch">
            <summary>
            An autocomplete suggestion that matches the query string specified in a <code>SuggestRequest</code>.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestionMatch.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The document ID of the suggested document.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestionMatch.Score">
            <summary>
            Gets and sets the property Score. 
            <para>
            The relevance score of a suggested match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestionMatch.Suggestion">
            <summary>
            Gets and sets the property Suggestion. 
            <para>
            The string that matches the query string specified in the <code>SuggestRequest</code>.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.SuggestModel">
            <summary>
            Container for the suggestion information returned in a <code>SuggestResponse</code>.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestModel.Found">
            <summary>
            Gets and sets the property Found. 
            <para>
            The number of documents that were found to match the query string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestModel.Query">
            <summary>
            Gets and sets the property Query. 
            <para>
            The query string specified in the suggest request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestModel.Suggestions">
            <summary>
            Gets and sets the property Suggestions. 
            <para>
            The documents that match the query string.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.SuggestRequest">
            <summary>
            Container for the parameters to the Suggest operation.
            Retrieves autocomplete suggestions for a partial query string. You can use suggestions
            enable you to display likely matches before users finish typing. In Amazon CloudSearch,
            suggestions are based on the contents of a particular text field. When you request
            suggestions, Amazon CloudSearch finds all of the documents whose values in the suggester
            field start with the specified query string. The beginning of the field must match
            the query string to be considered a match. 
            
             
            <para>
            For more information about configuring suggesters and retrieving suggestions, see
            <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html">Getting
            Suggestions</a> in the <i>Amazon CloudSearch Developer Guide</i>. 
            </para>
             
            <para>
            The endpoint for submitting <code>Suggest</code> requests is domain-specific. You
            submit suggest requests to a domain's search endpoint. To get the search endpoint
            for your domain, use the Amazon CloudSearch configuration service <code>DescribeDomains</code>
            action. A domain's endpoints are also displayed on the domain dashboard in the Amazon
            CloudSearch console. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestRequest.Query">
            <summary>
            Gets and sets the property Query. 
            <para>
            Specifies the string for which you want to get suggestions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestRequest.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            Specifies the maximum number of suggestions to return. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestRequest.Suggester">
            <summary>
            Gets and sets the property Suggester. 
            <para>
            Specifies the name of the suggester to use to find suggested matches.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.SuggestResponse">
            <summary>
            Configuration for accessing Amazon Suggest service
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.SuggestResult">
            <summary>
            Contains the response to a <code>Suggest</code> request.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestResult.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of a <code>SuggestRequest</code>. Contains the resource ID (<code>rid</code>)
            and how long it took to process the request (<code>timems</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestResult.Suggest">
            <summary>
            Gets and sets the property Suggest. 
            <para>
            Container for the matching search suggestion information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestResponse.SuggestResult">
            <summary>
            Gets and sets the SuggestResult property.
            Represents the output of a Suggest operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.SuggestStatus">
            <summary>
            Contains the resource id (<code>rid</code>) and the time it took to process the request
            (<code>timems</code>).
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestStatus.Rid">
            <summary>
            Gets and sets the property Rid. 
            <para>
            The encrypted resource ID for the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.SuggestStatus.Timems">
            <summary>
            Gets and sets the property Timems. 
            <para>
            How long it took to process the request, in milliseconds.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.UploadDocumentsRequest">
            <summary>
            Container for the parameters to the UploadDocuments operation.
            Posts a batch of documents to a search domain for indexing. A document batch is a
            collection of add and delete operations that represent the documents you want to add,
            update, or delete from your domain. Batches can be described in either JSON or XML.
            Each item that you want Amazon CloudSearch to return as a search result (such as a
            product) is represented as a document. Every document has a unique ID and one or more
            fields that contain the data that you want to search and return in results. Individual
            documents cannot contain more than 1 MB of data. The entire batch cannot exceed 5
            MB. To get the best possible upload performance, group add and delete operations in
            batches that are close the 5 MB limit. Submitting a large volume of single-document
            batches can overload a domain's document service. 
            
             
            <para>
            The endpoint for submitting <code>UploadDocuments</code> requests is domain-specific.
            To get the document endpoint for your domain, use the Amazon CloudSearch configuration
            service <code>DescribeDomains</code> action. A domain's endpoints are also displayed
            on the domain dashboard in the Amazon CloudSearch console. 
            </para>
             
            <para>
            For more information about formatting your data for Amazon CloudSearch, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/preparing-data.html">Preparing
            Your Data</a> in the <i>Amazon CloudSearch Developer Guide</i>. For more information
            about uploading data for indexing, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/uploading-data.html">Uploading
            Data</a> in the <i>Amazon CloudSearch Developer Guide</i>. 
            </para>
            </summary>
            <summary>
            Container for the parameters to the UploadDocuments operation.
            Posts a batch of documents to a search domain for indexing.  A document batch is a
            collection of add and delete operations that represent the documents you want to add,
            update, or delete from your domain. Batches can be described in either JSON or XML.
            Each item that you want Amazon CloudSearch to return as a search result (such as a
            product) is represented as a document. Every document has a unique ID and one or more
            fields that contain the data that you want to search and return in results. Individual
            documents  cannot contain more than 1 MB of data. The entire batch cannot exceed 5
            MB. To get the best possible upload performance, group add and delete operations in
            batches that are close the 5 MB limit. Submitting a large volume of single-document
            batches can overload a domain's document service.  
            
                  
            <para>
            The endpoint for submitting <code>UploadDocuments</code> requests is domain-specific.
            To get the document endpoint for your domain, use the Amazon CloudSearch configuration
            service <code>DescribeDomains</code> action. A domain's endpoints are also displayed
            on the domain dashboard in the Amazon CloudSearch console. 
            </para>
                  
            <para>
            For more information about formatting your data for Amazon CloudSearch, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/preparing-data.html">Preparing
            Your Data</a> in the <i>Amazon CloudSearch Developer Guide</i>.       For more information
            about uploading data for indexing, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/uploading-data.html">Uploading
            Data</a> in the <i>Amazon CloudSearch Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.UploadDocumentsRequest.ContentType">
            <summary>
            Gets and sets the property ContentType. 
            <para>
            The format of the batch you are uploading. Amazon CloudSearch supports two document
            batch formats:
            </para>
             <ul> <li>application/json</li> <li>application/xml</li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.UploadDocumentsRequest.Documents">
            <summary>
            Gets and sets the property Documents. 
            <para>
            A batch of documents formatted in JSON or HTML.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.UploadDocumentsResponse">
            <summary>
            Configuration for accessing Amazon UploadDocuments service
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.Model.UploadDocumentsResult">
            <summary>
            Contains the response to an <code>UploadDocuments</code> request.
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.UploadDocumentsResult.Adds">
            <summary>
            Gets and sets the property Adds. 
            <para>
            The number of documents that were added to the search domain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.UploadDocumentsResult.Deletes">
            <summary>
            Gets and sets the property Deletes. 
            <para>
            The number of documents that were deleted from the search domain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.UploadDocumentsResult.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of an <code>UploadDocumentsRequest</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.UploadDocumentsResult.Warnings">
            <summary>
            Gets and sets the property Warnings. 
            <para>
            Any warnings returned by the document service about the documents being uploaded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudSearchDomain.Model.UploadDocumentsResponse.UploadDocumentsResult">
            <summary>
            Gets and sets the UploadDocumentsResult property.
            Represents the output of a UploadDocuments operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudSearchDomain.ContentType">
            <summary>
            Constants used for properties of type ContentType.
            </summary>
        </member>
        <member name="F:Amazon.CloudSearchDomain.ContentType.ApplicationJson">
            <summary>
            Constant ApplicationJson for ContentType
            </summary>
        </member>
        <member name="F:Amazon.CloudSearchDomain.ContentType.ApplicationXml">
            <summary>
            Constant ApplicationXml for ContentType
            </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.ContentType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.ContentType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.CloudSearchDomain.QueryParser">
            <summary>
            Constants used for properties of type QueryParser.
            </summary>
        </member>
        <member name="F:Amazon.CloudSearchDomain.QueryParser.Dismax">
            <summary>
            Constant Dismax for QueryParser
            </summary>
        </member>
        <member name="F:Amazon.CloudSearchDomain.QueryParser.Lucene">
            <summary>
            Constant Lucene for QueryParser
            </summary>
        </member>
        <member name="F:Amazon.CloudSearchDomain.QueryParser.Simple">
            <summary>
            Constant Simple for QueryParser
            </summary>
        </member>
        <member name="F:Amazon.CloudSearchDomain.QueryParser.Structured">
            <summary>
            Constant Structured for QueryParser
            </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.QueryParser.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.CloudSearchDomain.QueryParser.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.CloudWatch.AmazonCloudWatchClient">
             <summary>
             Implementation for accessing CloudWatch
            
             This is the <i>Amazon CloudWatch API Reference</i>. This guide provides detailed information
             about Amazon CloudWatch actions, data types, parameters, and errors. For detailed
             information about Amazon CloudWatch features and their associated API calls, go to
             the <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide">Amazon
             CloudWatch Developer Guide</a>. 
             
              
             <para>
             Amazon CloudWatch is a web service that enables you to publish, monitor, and manage
             various metrics, as well as configure alarm actions based on data from metrics. For
             more information about this product go to <a href="http://aws.amazon.com/cloudwatch">http://aws.amazon.com/cloudwatch</a>.
             
             </para>
              
             <para>
              For information about the namespace, metric names, and dimensions that other Amazon
             Web Services products use to send metrics to Cloudwatch, go to <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html">Amazon
             CloudWatch Metrics, Namespaces, and Dimensions Reference</a> in the <i>Amazon CloudWatch
             Developer Guide</i>. 
             </para>
              
             <para>
             Use the following links to get started using the <i>Amazon CloudWatch API Reference</i>:
             </para>
              <ul> <li> <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Operations.html">Actions</a>:
             An alphabetical list of all Amazon CloudWatch actions.</li> <li> <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Types.html">Data
             Types</a>: An alphabetical list of all Amazon CloudWatch data types.</li> <li> <a
             href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/CommonParameters.html">Common
             Parameters</a>: Parameters that all Query actions can use.</li> <li> <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/CommonErrors.html">Common
             Errors</a>: Client and server errors that all actions can return.</li> <li> <a href="http://docs.aws.amazon.com/general/latest/gr/index.html?rande.html">Regions
             and Endpoints</a>: Itemized regions and endpoints for all AWS products.</li> <li>
             <a href="http://monitoring.amazonaws.com/doc/2010-08-01/CloudWatch.wsdl">WSDL Location</a>:
             http://monitoring.amazonaws.com/doc/2010-08-01/CloudWatch.wsdl</li> </ul> 
             <para>
             In addition to using the Amazon CloudWatch API, you can also use the following SDKs
             and third-party libraries to access Amazon CloudWatch programmatically.
             </para>
              <ul> <li><a href="http://aws.amazon.com/documentation/sdkforjava/">AWS SDK for Java
             Documentation</a></li> <li><a href="http://aws.amazon.com/documentation/sdkfornet/">AWS
             SDK for .NET Documentation</a></li> <li><a href="http://aws.amazon.com/documentation/sdkforphp/">AWS
             SDK for PHP Documentation</a></li> <li><a href="http://aws.amazon.com/documentation/sdkforruby/">AWS
             SDK for Ruby Documentation</a></li> </ul> 
             <para>
             Developers in the AWS developer community also provide their own libraries, which
             you can find at the following AWS developer centers:
             </para>
              <ul> <li><a href="http://aws.amazon.com/java/">AWS Java Developer Center</a></li>
             <li><a href="http://aws.amazon.com/php/">AWS PHP Developer Center</a></li> <li><a
             href="http://aws.amazon.com/python/">AWS Python Developer Center</a></li> <li><a href="http://aws.amazon.com/ruby/">AWS
             Ruby Developer Center</a></li> <li><a href="http://aws.amazon.com/net/">AWS Windows
             and .NET Developer Center</a></li> </ul>
             </summary>
        </member>
        <member name="T:Amazon.CloudWatch.IAmazonCloudWatch">
             <summary>
             Interface for accessing CloudWatch
            
             This is the <i>Amazon CloudWatch API Reference</i>. This guide provides detailed information
             about Amazon CloudWatch actions, data types, parameters, and errors. For detailed
             information about Amazon CloudWatch features and their associated API calls, go to
             the <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide">Amazon
             CloudWatch Developer Guide</a>. 
             
              
             <para>
             Amazon CloudWatch is a web service that enables you to publish, monitor, and manage
             various metrics, as well as configure alarm actions based on data from metrics. For
             more information about this product go to <a href="http://aws.amazon.com/cloudwatch">http://aws.amazon.com/cloudwatch</a>.
             
             </para>
              
             <para>
              For information about the namespace, metric names, and dimensions that other Amazon
             Web Services products use to send metrics to Cloudwatch, go to <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html">Amazon
             CloudWatch Metrics, Namespaces, and Dimensions Reference</a> in the <i>Amazon CloudWatch
             Developer Guide</i>. 
             </para>
              
             <para>
             Use the following links to get started using the <i>Amazon CloudWatch API Reference</i>:
             </para>
              <ul> <li> <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Operations.html">Actions</a>:
             An alphabetical list of all Amazon CloudWatch actions.</li> <li> <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Types.html">Data
             Types</a>: An alphabetical list of all Amazon CloudWatch data types.</li> <li> <a
             href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/CommonParameters.html">Common
             Parameters</a>: Parameters that all Query actions can use.</li> <li> <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/CommonErrors.html">Common
             Errors</a>: Client and server errors that all actions can return.</li> <li> <a href="http://docs.aws.amazon.com/general/latest/gr/index.html?rande.html">Regions
             and Endpoints</a>: Itemized regions and endpoints for all AWS products.</li> <li>
             <a href="http://monitoring.amazonaws.com/doc/2010-08-01/CloudWatch.wsdl">WSDL Location</a>:
             http://monitoring.amazonaws.com/doc/2010-08-01/CloudWatch.wsdl</li> </ul> 
             <para>
             In addition to using the Amazon CloudWatch API, you can also use the following SDKs
             and third-party libraries to access Amazon CloudWatch programmatically.
             </para>
              <ul> <li><a href="http://aws.amazon.com/documentation/sdkforjava/">AWS SDK for Java
             Documentation</a></li> <li><a href="http://aws.amazon.com/documentation/sdkfornet/">AWS
             SDK for .NET Documentation</a></li> <li><a href="http://aws.amazon.com/documentation/sdkforphp/">AWS
             SDK for PHP Documentation</a></li> <li><a href="http://aws.amazon.com/documentation/sdkforruby/">AWS
             SDK for Ruby Documentation</a></li> </ul> 
             <para>
             Developers in the AWS developer community also provide their own libraries, which
             you can find at the following AWS developer centers:
             </para>
              <ul> <li><a href="http://aws.amazon.com/java/">AWS Java Developer Center</a></li>
             <li><a href="http://aws.amazon.com/php/">AWS PHP Developer Center</a></li> <li><a
             href="http://aws.amazon.com/python/">AWS Python Developer Center</a></li> <li><a href="http://aws.amazon.com/ruby/">AWS
             Ruby Developer Center</a></li> <li><a href="http://aws.amazon.com/net/">AWS Windows
             and .NET Developer Center</a></li> </ul>
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DeleteAlarmsAsync(Amazon.CloudWatch.Model.DeleteAlarmsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteAlarms operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAlarms operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DescribeAlarmHistoryAsync(Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAlarmHistory operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAlarmHistory operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DescribeAlarmsAsync(Amazon.CloudWatch.Model.DescribeAlarmsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAlarms operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAlarms operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DescribeAlarmsForMetricAsync(Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAlarmsForMetric operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAlarmsForMetric operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.DisableAlarmActionsAsync(Amazon.CloudWatch.Model.DisableAlarmActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableAlarmActions operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableAlarmActions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.EnableAlarmActionsAsync(Amazon.CloudWatch.Model.EnableAlarmActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableAlarmActions operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableAlarmActions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.GetMetricStatisticsAsync(Amazon.CloudWatch.Model.GetMetricStatisticsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetMetricStatistics operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetMetricStatistics operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.ListMetricsAsync(Amazon.CloudWatch.Model.ListMetricsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListMetrics operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListMetrics operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.PutMetricAlarmAsync(Amazon.CloudWatch.Model.PutMetricAlarmRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutMetricAlarm operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutMetricAlarm operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.PutMetricDataAsync(Amazon.CloudWatch.Model.PutMetricDataRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutMetricData operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutMetricData operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.IAmazonCloudWatch.SetAlarmStateAsync(Amazon.CloudWatch.Model.SetAlarmStateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetAlarmState operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetAlarmState operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.CloudWatch.AmazonCloudWatchConfig)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Credentials and an
            AmazonCloudWatchClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonCloudWatchClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String,Amazon.CloudWatch.AmazonCloudWatchConfig)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCloudWatchClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonCloudWatchClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.#ctor(System.String,System.String,System.String,Amazon.CloudWatch.AmazonCloudWatchConfig)">
            <summary>
            Constructs AmazonCloudWatchClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCloudWatchClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonCloudWatchClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DeleteAlarmsAsync(Amazon.CloudWatch.Model.DeleteAlarmsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteAlarms operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAlarms operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DescribeAlarmHistoryAsync(Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAlarmHistory operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAlarmHistory operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DescribeAlarmsAsync(Amazon.CloudWatch.Model.DescribeAlarmsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAlarms operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAlarms operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DescribeAlarmsForMetricAsync(Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAlarmsForMetric operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAlarmsForMetric operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.DisableAlarmActionsAsync(Amazon.CloudWatch.Model.DisableAlarmActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableAlarmActions operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableAlarmActions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.EnableAlarmActionsAsync(Amazon.CloudWatch.Model.EnableAlarmActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableAlarmActions operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableAlarmActions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.GetMetricStatisticsAsync(Amazon.CloudWatch.Model.GetMetricStatisticsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetMetricStatistics operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetMetricStatistics operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.ListMetricsAsync(Amazon.CloudWatch.Model.ListMetricsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListMetrics operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListMetrics operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.PutMetricAlarmAsync(Amazon.CloudWatch.Model.PutMetricAlarmRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutMetricAlarm operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutMetricAlarm operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.PutMetricDataAsync(Amazon.CloudWatch.Model.PutMetricDataRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutMetricData operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutMetricData operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchClient.SetAlarmStateAsync(Amazon.CloudWatch.Model.SetAlarmStateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetAlarmState operation.
            <seealso cref="T:Amazon.CloudWatch.IAmazonCloudWatch"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetAlarmState operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.CloudWatch.AmazonCloudWatchConfig">
            <summary>
            Configuration for accessing Amazon CloudWatch service
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.AmazonCloudWatchConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.AmazonCloudWatchConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.AmazonCloudWatchConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.AlarmHistoryItem">
            <summary>
            The <code>AlarmHistoryItem</code> data type contains descriptive information about
            the history of a specific alarm. If you call <a>DescribeAlarmHistory</a>, Amazon CloudWatch
            returns this data type as part of the <a>DescribeAlarmHistoryResult</a> data type.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
             The descriptive name for the alarm. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.HistoryData">
            <summary>
            Gets and sets the property HistoryData. 
            <para>
             Machine-readable data about the alarm in JSON format. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.HistoryItemType">
            <summary>
            Gets and sets the property HistoryItemType. 
            <para>
             The type of alarm history item. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.HistorySummary">
            <summary>
            Gets and sets the property HistorySummary. 
            <para>
             A human-readable summary of the alarm history. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.AlarmHistoryItem.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
             The time stamp for the alarm history item. Amazon CloudWatch uses Coordinated Universal
            Time (UTC) when returning time stamps, which do not accommodate seasonal adjustments
            such as daylight savings time. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp">Time
            stamps</a> in the <i>Amazon CloudWatch Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.AmazonCloudWatchRequest">
            <summary>
            Base class for CloudWatch operation requests.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Datapoint">
            <summary>
            The <code>Datapoint</code> data type encapsulates the statistical data that Amazon
            CloudWatch computes from metric data.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Average">
            <summary>
            Gets and sets the property Average. 
            <para>
             The average of metric values that correspond to the datapoint. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Maximum">
            <summary>
            Gets and sets the property Maximum. 
            <para>
             The maximum of the metric value used for the datapoint. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Minimum">
            <summary>
            Gets and sets the property Minimum. 
            <para>
             The minimum metric value used for the datapoint. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.SampleCount">
            <summary>
            Gets and sets the property SampleCount. 
            <para>
             The number of metric values that contributed to the aggregate value of this datapoint.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Sum">
            <summary>
            Gets and sets the property Sum. 
            <para>
             The sum of metric values used for the datapoint. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
             The time stamp used for the datapoint. Amazon CloudWatch uses Coordinated Universal
            Time (UTC) when returning time stamps, which do not accommodate seasonal adjustments
            such as daylight savings time. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp">Time
            stamps</a> in the <i>Amazon CloudWatch Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Datapoint.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
             The standard unit used for the datapoint. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DeleteAlarmsRequest">
            <summary>
            Container for the parameters to the DeleteAlarms operation.
            Deletes all specified alarms. In the event of an error, no alarms are deleted.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DeleteAlarmsRequest.AlarmNames">
            <summary>
            Gets and sets the property AlarmNames. 
            <para>
             A list of alarms to be deleted. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DeleteAlarmsResponse">
            <summary>
            Configuration for accessing Amazon DeleteAlarms service
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DeleteAlarmsResponse.DeleteAlarmsResult">
            <summary>
            Gets and sets the DeleteAlarmsResult property.
            Represents the output of a DeleteAlarms operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest">
            <summary>
            Container for the parameters to the DescribeAlarmHistory operation.
            Retrieves history for the specified alarm. Filter alarms by date range or item type.
            If an alarm name is not specified, Amazon CloudWatch returns histories for all of
            the owner's alarms.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
             The name of the alarm. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.EndDate">
            <summary>
            Gets and sets the property EndDate. 
            <para>
             The ending date to retrieve alarm history. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.HistoryItemType">
            <summary>
            Gets and sets the property HistoryItemType. 
            <para>
             The type of alarm histories to retrieve. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of alarm history records to retrieve. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             The token returned by a previous call to indicate that there is more data available.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryRequest.StartDate">
            <summary>
            Gets and sets the property StartDate. 
            <para>
             The starting date to retrieve alarm history. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmHistoryResponse">
            <summary>
            Configuration for accessing Amazon DescribeAlarmHistory service
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmHistoryResult">
            <summary>
            The output for the <a>DescribeAlarmHistory</a> action.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryResult.AlarmHistoryItems">
            <summary>
            Gets and sets the property AlarmHistoryItems. 
            <para>
             A list of alarm histories in JSON format. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             A string that marks the start of the next batch of returned results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmHistoryResponse.DescribeAlarmHistoryResult">
            <summary>
            Gets and sets the DescribeAlarmHistoryResult property.
            Represents the output of a DescribeAlarmHistory operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest">
            <summary>
            Container for the parameters to the DescribeAlarmsForMetric operation.
            Retrieves all alarms for a single metric. Specify a statistic, period, or unit to
            filter the set of alarms further.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
             The list of dimensions associated with the metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
             The name of the metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
             The namespace of the metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.Period">
            <summary>
            Gets and sets the property Period. 
            <para>
             The period in seconds over which the statistic is applied. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.Statistic">
            <summary>
            Gets and sets the property Statistic. 
            <para>
             The statistic for the metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricRequest.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
             The unit for the metric. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmsForMetricResponse">
            <summary>
            Configuration for accessing Amazon DescribeAlarmsForMetric service
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmsForMetricResult">
            <summary>
            The output for the <a>DescribeAlarmsForMetric</a> action.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricResult.MetricAlarms">
            <summary>
            Gets and sets the property MetricAlarms. 
            <para>
             A list of information for each alarm with the specified metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsForMetricResponse.DescribeAlarmsForMetricResult">
            <summary>
            Gets and sets the DescribeAlarmsForMetricResult property.
            Represents the output of a DescribeAlarmsForMetric operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmsRequest">
            <summary>
            Container for the parameters to the DescribeAlarms operation.
            Retrieves alarms with the specified names. If no name is specified, all alarms for
            the user are returned. Alarms can be retrieved by using only a prefix for the alarm
            name, the alarm state, or a prefix for any action.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.ActionPrefix">
            <summary>
            Gets and sets the property ActionPrefix. 
            <para>
             The action name prefix. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.AlarmNamePrefix">
            <summary>
            Gets and sets the property AlarmNamePrefix. 
            <para>
             The alarm name prefix. <code>AlarmNames</code> cannot be specified if this parameter
            is specified. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.AlarmNames">
            <summary>
            Gets and sets the property AlarmNames. 
            <para>
             A list of alarm names to retrieve information for. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of alarm descriptions to retrieve. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             The token returned by a previous call to indicate that there is more data available.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsRequest.StateValue">
            <summary>
            Gets and sets the property StateValue. 
            <para>
             The state value to be used in matching alarms. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmsResponse">
            <summary>
            Configuration for accessing Amazon DescribeAlarms service
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DescribeAlarmsResult">
            <summary>
            The output for the <a>DescribeAlarms</a> action.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsResult.MetricAlarms">
            <summary>
            Gets and sets the property MetricAlarms. 
            <para>
             A list of information for the specified alarms. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             A string that marks the start of the next batch of returned results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DescribeAlarmsResponse.DescribeAlarmsResult">
            <summary>
            Gets and sets the DescribeAlarmsResult property.
            Represents the output of a DescribeAlarms operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Dimension">
            <summary>
            The <code>Dimension</code> data type further expands on the identity of a metric
            using a Name, Value pair. 
            
             
            <para>
            For examples that use one or more dimensions, see <a>PutMetricData</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Dimension.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
             The name of the dimension. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Dimension.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
             The value representing the dimension measurement 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DimensionFilter">
            <summary>
            The <code>DimensionFilter</code> data type is used to filter <a>ListMetrics</a> results.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DimensionFilter.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
             The dimension name to be matched. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DimensionFilter.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
             The value of the dimension to be matched. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DisableAlarmActionsRequest">
            <summary>
            Container for the parameters to the DisableAlarmActions operation.
            Disables actions for the specified alarms. When an alarm's actions are disabled the
            alarm's state may change, but none of the alarm's actions will execute.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DisableAlarmActionsRequest.AlarmNames">
            <summary>
            Gets and sets the property AlarmNames. 
            <para>
             The names of the alarms to disable actions for. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.DisableAlarmActionsResponse">
            <summary>
            Configuration for accessing Amazon DisableAlarmActions service
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.DisableAlarmActionsResponse.DisableAlarmActionsResult">
            <summary>
            Gets and sets the DisableAlarmActionsResult property.
            Represents the output of a DisableAlarmActions operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.EnableAlarmActionsRequest">
            <summary>
            Container for the parameters to the EnableAlarmActions operation.
            Enables actions for the specified alarms.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.EnableAlarmActionsRequest.AlarmNames">
            <summary>
            Gets and sets the property AlarmNames. 
            <para>
             The names of the alarms to enable actions for. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.EnableAlarmActionsResponse">
            <summary>
            Configuration for accessing Amazon EnableAlarmActions service
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.EnableAlarmActionsResponse.EnableAlarmActionsResult">
            <summary>
            Gets and sets the EnableAlarmActionsResult property.
            Represents the output of a EnableAlarmActions operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.GetMetricStatisticsRequest">
            <summary>
            Container for the parameters to the GetMetricStatistics operation.
            Gets statistics for the specified metric. 
            
             
            <para>
             The maximum number of data points returned from a single <code>GetMetricStatistics</code>
            request is 1,440, wereas the maximum number of data points that can be queried is
            50,850. If you make a request that generates more than 1,440 data points, Amazon CloudWatch
            returns an error. In such a case, you can alter the request by narrowing the specified
            time range or increasing the specified period. Alternatively, you can make multiple
            requests across adjacent time ranges. 
            </para>
             
            <para>
             Amazon CloudWatch aggregates data points based on the length of the <code>period</code>
            that you specify. For example, if you request statistics with a one-minute granularity,
            Amazon CloudWatch aggregates data points with time stamps that fall within the same
            one-minute period. In such a case, the data points queried can greatly outnumber the
            data points returned. 
            </para>
             
            <para>
             The following examples show various statistics allowed by the data point query maximum
            of 50,850 when you call <code>GetMetricStatistics</code> on Amazon EC2 instances with
            detailed (one-minute) monitoring enabled: 
            </para>
             <ul> <li>Statistics for up to 400 instances for a span of one hour</li> <li>Statistics
            for up to 35 instances over a span of 24 hours</li> <li>Statistics for up to 2 instances
            over a span of 2 weeks</li> </ul> 
            <para>
             For information about the namespace, metric names, and dimensions that other Amazon
            Web Services products use to send metrics to Cloudwatch, go to <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html">Amazon
            CloudWatch Metrics, Namespaces, and Dimensions Reference</a> in the <i>Amazon CloudWatch
            Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
             A list of dimensions describing qualities of the metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
             The time stamp to use for determining the last datapoint to return. The value specified
            is exclusive; results will include datapoints up to the time stamp specified. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
             The name of the metric, with or without spaces. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
             The namespace of the metric, with or without spaces. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.Period">
            <summary>
            Gets and sets the property Period. 
            <para>
             The granularity, in seconds, of the returned datapoints. <code>Period</code> must
            be at least 60 seconds and must be a multiple of 60. The default value is 60. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
             The time stamp to use for determining the first datapoint to return. The value specified
            is inclusive; results include datapoints with the time stamp specified. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.Statistics">
            <summary>
            Gets and sets the property Statistics. 
            <para>
             The metric statistics to return. For information about specific statistics returned
            by GetMetricStatistics, go to <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/index.html?CHAP_TerminologyandKeyConcepts.html#Statistic">Statistics</a>
            in the <i>Amazon CloudWatch Developer Guide</i>. 
            </para>
             
            <para>
             Valid Values: <code>Average | Sum | SampleCount | Maximum | Minimum</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsRequest.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
             The unit for the metric. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.GetMetricStatisticsResponse">
            <summary>
            Configuration for accessing Amazon GetMetricStatistics service
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.GetMetricStatisticsResult">
            <summary>
            The output for the <a>GetMetricStatistics</a> action.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsResult.Datapoints">
            <summary>
            Gets and sets the property Datapoints. 
            <para>
             The datapoints for the specified metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsResult.Label">
            <summary>
            Gets and sets the property Label. 
            <para>
             A label describing the specified metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.GetMetricStatisticsResponse.GetMetricStatisticsResult">
            <summary>
            Gets and sets the GetMetricStatisticsResult property.
            Represents the output of a GetMetricStatistics operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InternalServiceException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InternalServiceException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServiceException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.AlarmHistoryItemUnmarshaller">
            <summary>
            Response Unmarshaller for AlarmHistoryItem Object
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DatapointUnmarshaller">
            <summary>
            Response Unmarshaller for Datapoint Object
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsRequestMarshaller">
            <summary>
            DeleteAlarms Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DeleteAlarmsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteAlarms operation
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryRequestMarshaller">
            <summary>
            DescribeAlarmHistory Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmHistoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAlarmHistory operation
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricRequestMarshaller">
            <summary>
            DescribeAlarmsForMetric Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsForMetricResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAlarmsForMetric operation
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsRequestMarshaller">
            <summary>
            DescribeAlarms Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DescribeAlarmsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAlarms operation
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DimensionUnmarshaller">
            <summary>
            Response Unmarshaller for Dimension Object
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsRequestMarshaller">
            <summary>
            DisableAlarmActions Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.DisableAlarmActionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisableAlarmActions operation
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsRequestMarshaller">
            <summary>
            EnableAlarmActions Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.EnableAlarmActionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnableAlarmActions operation
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsRequestMarshaller">
            <summary>
            GetMetricStatistics Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.GetMetricStatisticsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetMetricStatistics operation
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsRequestMarshaller">
            <summary>
            ListMetrics Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.ListMetricsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListMetrics operation
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricAlarmUnmarshaller">
            <summary>
            Response Unmarshaller for MetricAlarm Object
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.MetricUnmarshaller">
            <summary>
            Response Unmarshaller for Metric Object
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmRequestMarshaller">
            <summary>
            PutMetricAlarm Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricAlarmResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutMetricAlarm operation
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataRequestMarshaller">
            <summary>
            PutMetricData Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.PutMetricDataResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutMetricData operation
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateRequestMarshaller">
            <summary>
            SetAlarmState Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CloudWatch.Model.Internal.MarshallTransformations.SetAlarmStateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetAlarmState operation
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatch.Model.InvalidFormatException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidFormatException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidFormatException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InvalidNextTokenException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidNextTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidNextTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InvalidParameterCombinationException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterCombinationException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterCombinationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.InvalidParameterValueException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.InvalidParameterValueException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterValueException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.LimitExceededException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ListMetricsRequest">
            <summary>
            Container for the parameters to the ListMetrics operation.
            Returns a list of valid metrics stored for the AWS account owner. Returned metrics
            can be used with <a>GetMetricStatistics</a> to obtain statistical data for a given
            metric.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsRequest.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
             A list of dimensions to filter against. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsRequest.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
             The name of the metric to filter against. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
             The namespace to filter against. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             The token returned by a previous call to indicate that there is more data available.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ListMetricsResponse">
            <summary>
            Configuration for accessing Amazon ListMetrics service
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ListMetricsResult">
            <summary>
            The output for the <a>ListMetrics</a> action.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsResult.Metrics">
            <summary>
            Gets and sets the property Metrics. 
            <para>
             A list of metrics used to generate statistics for an AWS account. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             A string that marks the start of the next batch of returned results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.ListMetricsResponse.ListMetricsResult">
            <summary>
            Gets and sets the ListMetricsResult property.
            Represents the output of a ListMetrics operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.Metric">
            <summary>
            The <code>Metric</code> data type contains information about a specific metric. If
            you call <a>ListMetrics</a>, Amazon CloudWatch returns information contained by this
            data type. 
            
             
            <para>
             The example in the Examples section publishes two metrics named buffers and latency.
            Both metrics are in the examples namespace. Both metrics have two dimensions, InstanceID
            and InstanceType. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Metric.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
             A list of dimensions associated with the metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Metric.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
             The name of the metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.Metric.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
             The namespace of the metric. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.MetricAlarm">
            <summary>
            The <a>MetricAlarm</a> data type represents an alarm. You can use <a>PutMetricAlarm</a>
            to create or update an alarm.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.ActionsEnabled">
            <summary>
            Gets and sets the property ActionsEnabled. 
            <para>
             Indicates whether actions should be executed during any changes to the alarm's state.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.AlarmActions">
            <summary>
            Gets and sets the property AlarmActions. 
            <para>
             The list of actions to execute when this alarm transitions into an <code>ALARM</code>
            state from any other state. Each action is specified as an Amazon Resource Number
            (ARN). Currently the only actions supported are publishing to an Amazon SNS topic
            and triggering an Auto Scaling policy. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.AlarmArn">
            <summary>
            Gets and sets the property AlarmArn. 
            <para>
             The Amazon Resource Name (ARN) of the alarm. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.AlarmConfigurationUpdatedTimestamp">
            <summary>
            Gets and sets the property AlarmConfigurationUpdatedTimestamp. 
            <para>
             The time stamp of the last update to the alarm configuration. Amazon CloudWatch uses
            Coordinated Universal Time (UTC) when returning time stamps, which do not accommodate
            seasonal adjustments such as daylight savings time. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp">Time
            stamps</a> in the <i>Amazon CloudWatch Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.AlarmDescription">
            <summary>
            Gets and sets the property AlarmDescription. 
            <para>
             The description for the alarm. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
             The name of the alarm. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.ComparisonOperator">
            <summary>
            Gets and sets the property ComparisonOperator. 
            <para>
             The arithmetic operation to use when comparing the specified <code>Statistic</code>
            and <code>Threshold</code>. The specified <code>Statistic</code> value is used as
            the first operand. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
             The list of dimensions associated with the alarm's associated metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.EvaluationPeriods">
            <summary>
            Gets and sets the property EvaluationPeriods. 
            <para>
             The number of periods over which data is compared to the specified threshold. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.InsufficientDataActions">
            <summary>
            Gets and sets the property InsufficientDataActions. 
            <para>
             The list of actions to execute when this alarm transitions into an <code>INSUFFICIENT_DATA</code>
            state from any other state. Each action is specified as an Amazon Resource Number
            (ARN). Currently the only actions supported are publishing to an Amazon SNS topic
            or triggering an Auto Scaling policy. 
            </para>
             <important>The current WSDL lists this attribute as <code>UnknownActions</code>.</important>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
             The name of the alarm's metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
             The namespace of alarm's associated metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.OKActions">
            <summary>
            Gets and sets the property OKActions. 
            <para>
             The list of actions to execute when this alarm transitions into an <code>OK</code>
            state from any other state. Each action is specified as an Amazon Resource Number
            (ARN). Currently the only actions supported are publishing to an Amazon SNS topic
            and triggering an Auto Scaling policy. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Period">
            <summary>
            Gets and sets the property Period. 
            <para>
             The period in seconds over which the statistic is applied. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
             A human-readable explanation for the alarm's state. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.StateReasonData">
            <summary>
            Gets and sets the property StateReasonData. 
            <para>
             An explanation for the alarm's state in machine-readable JSON format 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.StateUpdatedTimestamp">
            <summary>
            Gets and sets the property StateUpdatedTimestamp. 
            <para>
             The time stamp of the last update to the alarm's state. Amazon CloudWatch uses Coordinated
            Universal Time (UTC) when returning time stamps, which do not accommodate seasonal
            adjustments such as daylight savings time. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp">Time
            stamps</a> in the <i>Amazon CloudWatch Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.StateValue">
            <summary>
            Gets and sets the property StateValue. 
            <para>
             The state value for the alarm. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Statistic">
            <summary>
            Gets and sets the property Statistic. 
            <para>
             The statistic to apply to the alarm's associated metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Threshold">
            <summary>
            Gets and sets the property Threshold. 
            <para>
             The value against which the specified statistic is compared. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricAlarm.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
             The unit of the alarm's associated metric. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.MetricDatum">
            <summary>
            The <code>MetricDatum</code> data type encapsulates the information sent with <a>PutMetricData</a>
            to either create a new metric or add new values to be aggregated into an existing
            metric.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
             A list of dimensions associated with the metric. Note, when using the Dimensions
            value in a query, you need to append .member.N to it (e.g., Dimensions.member.N).
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
             The name of the metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.StatisticValues">
            <summary>
            Gets and sets the property StatisticValues. 
            <para>
             A set of statistical values describing the metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
             The time stamp used for the metric. If not specified, the default value is set to
            the time the metric data was received. Amazon CloudWatch uses Coordinated Universal
            Time (UTC) when returning time stamps, which do not accommodate seasonal adjustments
            such as daylight savings time. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp">Time
            stamps</a> in the <i>Amazon CloudWatch Developer Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
             The unit of the metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.MetricDatum.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
             The value for the metric. 
            </para>
             <important>Although the <code>Value</code> parameter accepts numbers of type <code>Double</code>,
            Amazon CloudWatch truncates values with very large exponents. Values with base-10
            exponents greater than 126 (1 x 10^126) are truncated. Likewise, values with base-10
            exponents less than -130 (1 x 10^-130) are also truncated. </important>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.MissingRequiredParameterException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.MissingRequiredParameterException.#ctor(System.String)">
            <summary>
            Constructs a new MissingRequiredParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutMetricAlarmRequest">
            <summary>
            Container for the parameters to the PutMetricAlarm operation.
            Creates or updates an alarm and associates it with the specified Amazon CloudWatch
            metric. Optionally, this operation can associate one or more Amazon Simple Notification
            Service resources with the alarm. 
            
             
            <para>
             When this operation creates an alarm, the alarm state is immediately set to <code>INSUFFICIENT_DATA</code>.
            The alarm is evaluated and its <code>StateValue</code> is set appropriately. Any actions
            associated with the <code>StateValue</code> is then executed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.ActionsEnabled">
            <summary>
            Gets and sets the property ActionsEnabled. 
            <para>
             Indicates whether or not actions should be executed during any changes to the alarm's
            state. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.AlarmActions">
            <summary>
            Gets and sets the property AlarmActions. 
            <para>
             The list of actions to execute when this alarm transitions into an <code>ALARM</code>
            state from any other state. Each action is specified as an Amazon Resource Number
            (ARN). Currently the only action supported is publishing to an Amazon SNS topic or
            an Amazon Auto Scaling policy. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.AlarmDescription">
            <summary>
            Gets and sets the property AlarmDescription. 
            <para>
             The description for the alarm. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
             The descriptive name for the alarm. This name must be unique within the user's AWS
            account 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.ComparisonOperator">
            <summary>
            Gets and sets the property ComparisonOperator. 
            <para>
             The arithmetic operation to use when comparing the specified <code>Statistic</code>
            and <code>Threshold</code>. The specified <code>Statistic</code> value is used as
            the first operand. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Dimensions">
            <summary>
            Gets and sets the property Dimensions. 
            <para>
             The dimensions for the alarm's associated metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.EvaluationPeriods">
            <summary>
            Gets and sets the property EvaluationPeriods. 
            <para>
             The number of periods over which data is compared to the specified threshold. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.InsufficientDataActions">
            <summary>
            Gets and sets the property InsufficientDataActions. 
            <para>
             The list of actions to execute when this alarm transitions into an <code>INSUFFICIENT_DATA</code>
            state from any other state. Each action is specified as an Amazon Resource Number
            (ARN). Currently the only action supported is publishing to an Amazon SNS topic or
            an Amazon Auto Scaling policy. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
             The name for the alarm's associated metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
             The namespace for the alarm's associated metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.OKActions">
            <summary>
            Gets and sets the property OKActions. 
            <para>
             The list of actions to execute when this alarm transitions into an <code>OK</code>
            state from any other state. Each action is specified as an Amazon Resource Number
            (ARN). Currently the only action supported is publishing to an Amazon SNS topic or
            an Amazon Auto Scaling policy. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Period">
            <summary>
            Gets and sets the property Period. 
            <para>
             The period in seconds over which the specified statistic is applied. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Statistic">
            <summary>
            Gets and sets the property Statistic. 
            <para>
             The statistic to apply to the alarm's associated metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Threshold">
            <summary>
            Gets and sets the property Threshold. 
            <para>
             The value against which the specified statistic is compared. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmRequest.Unit">
            <summary>
            Gets and sets the property Unit. 
            <para>
             The unit for the alarm's associated metric. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutMetricAlarmResponse">
            <summary>
            Configuration for accessing Amazon PutMetricAlarm service
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricAlarmResponse.PutMetricAlarmResult">
            <summary>
            Gets and sets the PutMetricAlarmResult property.
            Represents the output of a PutMetricAlarm operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutMetricDataRequest">
            <summary>
            Container for the parameters to the PutMetricData operation.
            Publishes metric data points to Amazon CloudWatch. Amazon Cloudwatch associates the
            data points with the specified metric. If the specified metric does not exist, Amazon
            CloudWatch creates the metric. It can take up to fifteen minutes for a new metric
            to appear in calls to the <a>ListMetrics</a> action.
            
             
            <para>
             The size of a PutMetricData request is limited to 8 KB for HTTP GET requests and
            40 KB for HTTP POST requests. 
            </para>
             <important> Although the <code>Value</code> parameter accepts numbers of type <code>Double</code>,
            Amazon CloudWatch truncates values with very large exponents. Values with base-10
            exponents greater than 126 (1 x 10^126) are truncated. Likewise, values with base-10
            exponents less than -130 (1 x 10^-130) are also truncated. </important> 
            <para>
            Data that is timestamped 24 hours or more in the past may take in excess of 48 hours
            to become available from submission time using <code>GetMetricStatistics</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricDataRequest.MetricData">
            <summary>
            Gets and sets the property MetricData. 
            <para>
             A list of data describing the metric. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricDataRequest.Namespace">
            <summary>
            Gets and sets the property Namespace. 
            <para>
             The namespace for the metric data. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.PutMetricDataResponse">
            <summary>
            Configuration for accessing Amazon PutMetricData service
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.PutMetricDataResponse.PutMetricDataResult">
            <summary>
            Gets and sets the PutMetricDataResult property.
            Represents the output of a PutMetricData operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.ResourceNotFoundException">
            <summary>
             CloudWatch exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CloudWatch.Model.SetAlarmStateRequest">
            <summary>
            Container for the parameters to the SetAlarmState operation.
            Temporarily sets the state of an alarm. When the updated <code>StateValue</code>
            differs from the previous value, the action configured for the appropriate state is
            invoked. This is not a permanent change. The next periodic alarm check (in about a
            minute) will set the alarm to its actual state.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.SetAlarmStateRequest.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
             The descriptive name for the alarm. This name must be unique within the user's AWS
            account. The maximum length is 255 characters. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.SetAlarmStateRequest.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
             The reason that this alarm is set to this specific state (in human-readable text
            format) 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.SetAlarmStateRequest.StateReasonData">
            <summary>
            Gets and sets the property StateReasonData. 
            <para>
             The reason that this alarm is set to this specific state (in machine-readable JSON
            format) 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.SetAlarmStateRequest.StateValue">
            <summary>
            Gets and sets the property StateValue. 
            <para>
             The value of the state. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.SetAlarmStateResponse">
            <summary>
            Configuration for accessing Amazon SetAlarmState service
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.SetAlarmStateResponse.SetAlarmStateResult">
            <summary>
            Gets and sets the SetAlarmStateResult property.
            Represents the output of a SetAlarmState operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.Model.StatisticSet">
            <summary>
            The <code>StatisticSet</code> data type describes the <code>StatisticValues</code>
            component of <a>MetricDatum</a>, and represents a set of statistics that describes
            a specific metric.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.StatisticSet.Maximum">
            <summary>
            Gets and sets the property Maximum. 
            <para>
             The maximum value of the sample set. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.StatisticSet.Minimum">
            <summary>
            Gets and sets the property Minimum. 
            <para>
             The minimum value of the sample set. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.StatisticSet.SampleCount">
            <summary>
            Gets and sets the property SampleCount. 
            <para>
             The number of samples used for the statistic set. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatch.Model.StatisticSet.Sum">
            <summary>
            Gets and sets the property Sum. 
            <para>
             The sum of values for the sample set. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatch.ComparisonOperator">
            <summary>
            Constants used for properties of type ComparisonOperator.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ComparisonOperator.GreaterThanOrEqualToThreshold">
            <summary>
            Constant GreaterThanOrEqualToThreshold for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ComparisonOperator.GreaterThanThreshold">
            <summary>
            Constant GreaterThanThreshold for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ComparisonOperator.LessThanOrEqualToThreshold">
            <summary>
            Constant LessThanOrEqualToThreshold for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.ComparisonOperator.LessThanThreshold">
            <summary>
            Constant LessThanThreshold for ComparisonOperator
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.ComparisonOperator.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.ComparisonOperator.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.CloudWatch.HistoryItemType">
            <summary>
            Constants used for properties of type HistoryItemType.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.HistoryItemType.Action">
            <summary>
            Constant Action for HistoryItemType
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.HistoryItemType.ConfigurationUpdate">
            <summary>
            Constant ConfigurationUpdate for HistoryItemType
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.HistoryItemType.StateUpdate">
            <summary>
            Constant StateUpdate for HistoryItemType
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.HistoryItemType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.HistoryItemType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.CloudWatch.StandardUnit">
            <summary>
            Constants used for properties of type StandardUnit.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Bits">
            <summary>
            Constant Bits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.BitsSecond">
            <summary>
            Constant BitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Bytes">
            <summary>
            Constant Bytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.BytesSecond">
            <summary>
            Constant BytesSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Count">
            <summary>
            Constant Count for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.CountSecond">
            <summary>
            Constant CountSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Gigabits">
            <summary>
            Constant Gigabits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.GigabitsSecond">
            <summary>
            Constant GigabitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Gigabytes">
            <summary>
            Constant Gigabytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.GigabytesSecond">
            <summary>
            Constant GigabytesSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Kilobits">
            <summary>
            Constant Kilobits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.KilobitsSecond">
            <summary>
            Constant KilobitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Kilobytes">
            <summary>
            Constant Kilobytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.KilobytesSecond">
            <summary>
            Constant KilobytesSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Megabits">
            <summary>
            Constant Megabits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.MegabitsSecond">
            <summary>
            Constant MegabitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Megabytes">
            <summary>
            Constant Megabytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.MegabytesSecond">
            <summary>
            Constant MegabytesSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Microseconds">
            <summary>
            Constant Microseconds for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Milliseconds">
            <summary>
            Constant Milliseconds for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.None">
            <summary>
            Constant None for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Percent">
            <summary>
            Constant Percent for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Seconds">
            <summary>
            Constant Seconds for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Terabits">
            <summary>
            Constant Terabits for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.TerabitsSecond">
            <summary>
            Constant TerabitsSecond for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.Terabytes">
            <summary>
            Constant Terabytes for StandardUnit
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StandardUnit.TerabytesSecond">
            <summary>
            Constant TerabytesSecond for StandardUnit
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.StandardUnit.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.StandardUnit.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.CloudWatch.StateValue">
            <summary>
            Constants used for properties of type StateValue.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StateValue.ALARM">
            <summary>
            Constant ALARM for StateValue
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StateValue.INSUFFICIENT_DATA">
            <summary>
            Constant INSUFFICIENT_DATA for StateValue
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.StateValue.OK">
            <summary>
            Constant OK for StateValue
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.StateValue.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.StateValue.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.CloudWatch.Statistic">
            <summary>
            Constants used for properties of type Statistic.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.Statistic.Average">
            <summary>
            Constant Average for Statistic
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.Statistic.Maximum">
            <summary>
            Constant Maximum for Statistic
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.Statistic.Minimum">
            <summary>
            Constant Minimum for Statistic
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.Statistic.SampleCount">
            <summary>
            Constant SampleCount for Statistic
            </summary>
        </member>
        <member name="F:Amazon.CloudWatch.Statistic.Sum">
            <summary>
            Constant Sum for Statistic
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Statistic.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.CloudWatch.Statistic.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.CognitoIdentity.AmazonCognitoIdentityClient">
             <summary>
             Implementation for accessing CognitoIdentity
            
             Amazon Cognito 
             <para>
             Amazon Cognito is a web service that delivers scoped temporary credentials to mobile
             devices and other untrusted environments. Amazon Cognito uniquely identifies a device
             and supplies the user with a consistent identity over the lifetime of an application.
             </para>
              
             <para>
             Using Amazon Cognito, you can enable authentication with one or more third-party identity
             providers (Facebook, Google, or Login with Amazon), and you can also choose to support
             unauthenticated access from your app. Cognito delivers a unique identifier for each
             user and acts as an OpenID token provider trusted by AWS Security Token Service (STS)
             to access temporary, limited-privilege AWS credentials.
             </para>
              
             <para>
             To provide end-user credentials, first make an unsigned call to <a>GetId</a>. If the
             end user is authenticated with one of the supported identity providers, set the <code>Logins</code>
             map with the identity provider token. <code>GetId</code> returns a unique identifier
             for the user.
             </para>
              
             <para>
             Next, make an unsigned call to <a>GetOpenIdToken</a>, which returns the OpenID token
             necessary to call STS and retrieve AWS credentials. This call expects the same <code>Logins</code>
             map as the <code>GetId</code> call, as well as the <code>IdentityID</code> originally
             returned by <code>GetId</code>. The token returned by <code>GetOpenIdToken</code>
             can be passed to the STS operation <a href="http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html">AssumeRoleWithWebIdentity</a>
             to retrieve AWS credentials.
             </para>
             </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity">
             <summary>
             Interface for accessing CognitoIdentity
            
             Amazon Cognito 
             <para>
             Amazon Cognito is a web service that delivers scoped temporary credentials to mobile
             devices and other untrusted environments. Amazon Cognito uniquely identifies a device
             and supplies the user with a consistent identity over the lifetime of an application.
             </para>
              
             <para>
             Using Amazon Cognito, you can enable authentication with one or more third-party identity
             providers (Facebook, Google, or Login with Amazon), and you can also choose to support
             unauthenticated access from your app. Cognito delivers a unique identifier for each
             user and acts as an OpenID token provider trusted by AWS Security Token Service (STS)
             to access temporary, limited-privilege AWS credentials.
             </para>
              
             <para>
             To provide end-user credentials, first make an unsigned call to <a>GetId</a>. If the
             end user is authenticated with one of the supported identity providers, set the <code>Logins</code>
             map with the identity provider token. <code>GetId</code> returns a unique identifier
             for the user.
             </para>
              
             <para>
             Next, make an unsigned call to <a>GetOpenIdToken</a>, which returns the OpenID token
             necessary to call STS and retrieve AWS credentials. This call expects the same <code>Logins</code>
             map as the <code>GetId</code> call, as well as the <code>IdentityID</code> originally
             returned by <code>GetId</code>. The token returned by <code>GetOpenIdToken</code>
             can be passed to the STS operation <a href="http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html">AssumeRoleWithWebIdentity</a>
             to retrieve AWS credentials.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentity.IAmazonCognitoIdentity.CreateIdentityPoolAsync(Amazon.CognitoIdentity.Model.CreateIdentityPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateIdentityPool operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateIdentityPool operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.IAmazonCognitoIdentity.DeleteIdentityPoolAsync(Amazon.CognitoIdentity.Model.DeleteIdentityPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteIdentityPool operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteIdentityPool operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.IAmazonCognitoIdentity.DescribeIdentityPoolAsync(Amazon.CognitoIdentity.Model.DescribeIdentityPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeIdentityPool operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeIdentityPool operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.IAmazonCognitoIdentity.GetIdAsync(Amazon.CognitoIdentity.Model.GetIdRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetId operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetId operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.IAmazonCognitoIdentity.GetOpenIdTokenAsync(Amazon.CognitoIdentity.Model.GetOpenIdTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetOpenIdToken operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetOpenIdToken operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.IAmazonCognitoIdentity.GetOpenIdTokenForDeveloperIdentityAsync(Amazon.CognitoIdentity.Model.GetOpenIdTokenForDeveloperIdentityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetOpenIdTokenForDeveloperIdentity operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetOpenIdTokenForDeveloperIdentity operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.IAmazonCognitoIdentity.ListIdentitiesAsync(Amazon.CognitoIdentity.Model.ListIdentitiesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListIdentities operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListIdentities operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.IAmazonCognitoIdentity.ListIdentityPoolsAsync(Amazon.CognitoIdentity.Model.ListIdentityPoolsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListIdentityPools operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListIdentityPools operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.IAmazonCognitoIdentity.LookupDeveloperIdentityAsync(Amazon.CognitoIdentity.Model.LookupDeveloperIdentityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the LookupDeveloperIdentity operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the LookupDeveloperIdentity operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.IAmazonCognitoIdentity.MergeDeveloperIdentitiesAsync(Amazon.CognitoIdentity.Model.MergeDeveloperIdentitiesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the MergeDeveloperIdentities operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the MergeDeveloperIdentities operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.IAmazonCognitoIdentity.UnlinkDeveloperIdentityAsync(Amazon.CognitoIdentity.Model.UnlinkDeveloperIdentityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UnlinkDeveloperIdentity operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UnlinkDeveloperIdentity operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.IAmazonCognitoIdentity.UnlinkIdentityAsync(Amazon.CognitoIdentity.Model.UnlinkIdentityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UnlinkIdentity operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UnlinkIdentity operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.IAmazonCognitoIdentity.UpdateIdentityPoolAsync(Amazon.CognitoIdentity.Model.UpdateIdentityPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateIdentityPool operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateIdentityPool operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonCognitoIdentityClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCognitoIdentityClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.CognitoIdentity.AmazonCognitoIdentityConfig)">
            <summary>
            Constructs AmazonCognitoIdentityClient with AWS Credentials and an
            AmazonCognitoIdentityClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonCognitoIdentityClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonCognitoIdentityClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCognitoIdentityClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.#ctor(System.String,System.String,Amazon.CognitoIdentity.AmazonCognitoIdentityConfig)">
            <summary>
            Constructs AmazonCognitoIdentityClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCognitoIdentityClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonCognitoIdentityClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonCognitoIdentityClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCognitoIdentityClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.#ctor(System.String,System.String,System.String,Amazon.CognitoIdentity.AmazonCognitoIdentityConfig)">
            <summary>
            Constructs AmazonCognitoIdentityClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCognitoIdentityClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonCognitoIdentityClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.CreateIdentityPoolAsync(Amazon.CognitoIdentity.Model.CreateIdentityPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateIdentityPool operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateIdentityPool operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.DeleteIdentityPoolAsync(Amazon.CognitoIdentity.Model.DeleteIdentityPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteIdentityPool operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteIdentityPool operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.DescribeIdentityPoolAsync(Amazon.CognitoIdentity.Model.DescribeIdentityPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeIdentityPool operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeIdentityPool operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.GetIdAsync(Amazon.CognitoIdentity.Model.GetIdRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetId operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetId operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.GetOpenIdTokenAsync(Amazon.CognitoIdentity.Model.GetOpenIdTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetOpenIdToken operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetOpenIdToken operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.GetOpenIdTokenForDeveloperIdentityAsync(Amazon.CognitoIdentity.Model.GetOpenIdTokenForDeveloperIdentityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetOpenIdTokenForDeveloperIdentity operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetOpenIdTokenForDeveloperIdentity operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.ListIdentitiesAsync(Amazon.CognitoIdentity.Model.ListIdentitiesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListIdentities operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListIdentities operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.ListIdentityPoolsAsync(Amazon.CognitoIdentity.Model.ListIdentityPoolsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListIdentityPools operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListIdentityPools operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.LookupDeveloperIdentityAsync(Amazon.CognitoIdentity.Model.LookupDeveloperIdentityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the LookupDeveloperIdentity operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the LookupDeveloperIdentity operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.MergeDeveloperIdentitiesAsync(Amazon.CognitoIdentity.Model.MergeDeveloperIdentitiesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the MergeDeveloperIdentities operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the MergeDeveloperIdentities operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.UnlinkDeveloperIdentityAsync(Amazon.CognitoIdentity.Model.UnlinkDeveloperIdentityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UnlinkDeveloperIdentity operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UnlinkDeveloperIdentity operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.UnlinkIdentityAsync(Amazon.CognitoIdentity.Model.UnlinkIdentityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UnlinkIdentity operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UnlinkIdentity operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityClient.UpdateIdentityPoolAsync(Amazon.CognitoIdentity.Model.UpdateIdentityPoolRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateIdentityPool operation.
            <seealso cref="T:Amazon.CognitoIdentity.IAmazonCognitoIdentity"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateIdentityPool operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.CognitoIdentity.AmazonCognitoIdentityConfig">
            <summary>
            Configuration for accessing Amazon CognitoIdentity service
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentity.AmazonCognitoIdentityConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.AmazonCognitoIdentityConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.AmazonCognitoIdentityConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.CognitoAWSCredentials">
            <summary>
            Temporary, short-lived session credentials that are automatically retrieved from
            Amazon Cognito Identity Service and AWS Security Token Service.
            Depending on configured Logins, credentials may be authenticated or unauthenticated.
            </summary>
            <summary>
            Temporary, short-lived session credentials that are automatically retrieved from
            Amazon Cognito Identity Service and AWS Security Token Service.
            Depending on configured Logins, credentials may be authenticated or unauthenticated.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.RefreshingAWSCredentials">
            <summary>
            Abstract class for automatically refreshing AWS credentials
            </summary>
        </member>
        <member name="T:Amazon.Runtime.AWSCredentials">
            <summary>
            Abstract class that represents a credentials object for AWS services.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.AWSCredentials.GetCredentials">
            <summary>
            Returns a copy of ImmutableCredentials
            </summary>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.RefreshingAWSCredentials.GetCredentials">
            <summary>
            Returns an instance of ImmutableCredentials for this instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.RefreshingAWSCredentials.GenerateNewCredentials">
            <summary>
            When overridden in a derived class, generates new credentials and new expiration date.
            
            Called on first credentials request and when expiration date is in the past.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.RefreshingAWSCredentials.ClearCredentials">
            <summary>
            Clears currently-stored credentials, forcing the next GetCredentials call to generate new credentials.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.RefreshingAWSCredentials.PreemptExpiryTime">
            <summary>
            The time before actual expiration to expire the credentials.        
            Property cannot be set to a negative TimeSpan.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.RefreshingAWSCredentials.CredentialsRefreshState">
            <summary>
            Refresh state container consisting of credentials
            and the date of the their expiration
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentity.CognitoAWSCredentials.Clear">
            <summary>
            Clears current credentials state. This will reset the IdentityId.
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentity.CognitoAWSCredentials.RemoveLogin(System.String)">
            <summary>
            Removes a provider from the collection of logins.
            </summary>
            <param name="providerName">The provider name for the login (i.e. graph.facebook.com)</param>
        </member>
        <member name="M:Amazon.CognitoIdentity.CognitoAWSCredentials.AddLogin(System.String,System.String)">
            <summary>
            Adds a login to be used for authenticated requests.
            </summary>
            <param name="providerName">The provider name for the login (i.e. graph.facebook.com)</param>
            <param name="token">The token provided by the identity provider.</param>
        </member>
        <member name="M:Amazon.CognitoIdentity.CognitoAWSCredentials.GetIdentityId">
            <summary>
            Gets the Identity Id corresponding to the credentials retrieved from Cognito.
            Note: this setting may change during execution. To be notified of its
            new value, attach a listener to IdentityChangedEvent
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentity.CognitoAWSCredentials.GetIdentityIdAsync">
            <summary>
            Gets the Identity Id corresponding to the credentials retrieved from Cognito.
            Note: this setting may change during execution. To be notified of its
            new value, attach a listener to IdentityChangedEvent
            </summary>
        </member>
        <member name="M:Amazon.CognitoIdentity.CognitoAWSCredentials.#ctor(System.String,System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs a new CognitoAWSCredentials instance, which will use the
            specified Amazon Cognito identity pool to make a requests to the
            AWS Security Token Service (STS) to request short lived session credentials.
            </summary>
            <param name="accountId">The AWS accountId for the account with Amazon Cognito</param>
            <param name="identityPoolId">The Amazon Cogntio identity pool to use</param>
            <param name="unAuthRoleArn">The ARN of the IAM Role that will be assumed when unauthenticated</param>
            <param name="authRoleArn">The ARN of the IAM Role that will be assumed when authenticated</param>
            <param name="region">Region to use when accessing Amazon Cognito and AWS Security Token Service.</param>
        </member>
        <member name="M:Amazon.CognitoIdentity.CognitoAWSCredentials.#ctor(System.String,System.String,System.String,System.String,Amazon.CognitoIdentity.IAmazonCognitoIdentity,Amazon.SecurityToken.IAmazonSecurityTokenService)">
            <summary>
            Constructs a new CognitoAWSCredentials instance, which will use the
            specified Amazon Cognito identity pool to make a requests to the
            AWS Security Token Service (STS) to request short lived session credentials.
            </summary>
            <param name="accountId">The AWS accountId for the account with Amazon Cognito</param>
            <param name="identityPoolId">The Amazon Cogntio identity pool to use</param>
            <param name="unAuthRoleArn">The ARN of the IAM Role that will be assumed when unauthenticated</param>
            <param name="authRoleArn">The ARN of the IAM Role that will be assumed when authenticated</param>
            <param name="cibClient">Preconfigured Cognito Identity client to make requests with</param>
            <param name="stsClient">>Preconfigured STS client to make requests with</param>
        </member>
        <member name="P:Amazon.CognitoIdentity.CognitoAWSCredentials.AccountId">
            <summary>
            The AWS accountId for the account with Amazon Cognito
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.CognitoAWSCredentials.IdentityPoolId">
            <summary>
            The Amazon Cogntio identity pool to use
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.CognitoAWSCredentials.UnAuthRoleArn">
            <summary>
            The ARN of the IAM Role that will be assumed when unauthenticated
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.CognitoAWSCredentials.AuthRoleArn">
            <summary>
            The ARN of the IAM Role that will be assumed when authenticated
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.CognitoAWSCredentials.Logins">
            <summary>
            Logins map used to authenticated with Amazon Cognito.
            Note: After modifying this field, you must manually call Clear on this
            instance of the CognitoAWSCredentials, as your Identity Id may have changed.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.CognitoAWSCredentials.CurrentLoginProviders">
            <summary>
            The list of current providers that are used for authenticated credentials.
            </summary>
        </member>
        <member name="E:Amazon.CognitoIdentity.CognitoAWSCredentials.IdentityChangedEvent">
            <summary>
            Event for identity change notifications.
            This event will fire whenever the Identity Id changes.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.CognitoAWSCredentials.IdentityChangedArgs">
            <summary>
            Information about an identity change in the CognitoAWSCredentials.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.AmazonCognitoIdentityRequest">
            <summary>
            Base class for CognitoIdentity operation requests.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.CreateIdentityPoolRequest">
            <summary>
            Container for the parameters to the CreateIdentityPool operation.
            Creates a new identity pool. The identity pool is a store of user identity information
            that is specific to your AWS account. The limit on identity pools is 60 per account.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.CreateIdentityPoolRequest.AllowUnauthenticatedIdentities">
            <summary>
            Gets and sets the property AllowUnauthenticatedIdentities. 
            <para>
            TRUE if the identity pool supports unauthenticated logins.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.CreateIdentityPoolRequest.DeveloperProviderName">
            <summary>
            Gets and sets the property DeveloperProviderName. 
            <para>
            The "domain" by which Cognito will refer to your users. This name acts as a placeholder
            that allows your backend and the Cognito service to communicate about the developer
            provider. For the <code>DeveloperProviderName</code>, you can use letters as well
            as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).
            </para>
             
            <para>
            Once you have set a developer provider name, you cannot change it. Please take care
            in setting this parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.CreateIdentityPoolRequest.IdentityPoolName">
            <summary>
            Gets and sets the property IdentityPoolName. 
            <para>
            A string that you provide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.CreateIdentityPoolRequest.SupportedLoginProviders">
            <summary>
            Gets and sets the property SupportedLoginProviders. 
            <para>
            Optional key:value pairs mapping provider names to provider app IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.CreateIdentityPoolResponse">
            <summary>
            Configuration for accessing Amazon CreateIdentityPool service
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.CreateIdentityPoolResult">
            <summary>
            An object representing a Cognito identity pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.CreateIdentityPoolResult.AllowUnauthenticatedIdentities">
            <summary>
            Gets and sets the property AllowUnauthenticatedIdentities. TRUE if the identity pool
            supports unauthenticated logins.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.CreateIdentityPoolResult.DeveloperProviderName">
            <summary>
            Gets and sets the property DeveloperProviderName. 
            <para>
            The "domain" by which Cognito will refer to your users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.CreateIdentityPoolResult.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. An identity pool ID in the format REGION:GUID.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.CreateIdentityPoolResult.IdentityPoolName">
            <summary>
            Gets and sets the property IdentityPoolName. 
            <para>
            A string that you provide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.CreateIdentityPoolResult.SupportedLoginProviders">
            <summary>
            Gets and sets the property SupportedLoginProviders. 
            <para>
            Optional key:value pairs mapping provider names to provider app IDs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.CreateIdentityPoolResponse.CreateIdentityPoolResult">
            <summary>
            Gets and sets the CreateIdentityPoolResult property.
            Represents the output of a CreateIdentityPool operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.DeleteIdentityPoolRequest">
            <summary>
            Container for the parameters to the DeleteIdentityPool operation.
            Deletes a user pool. Once a pool is deleted, users will not be able to authenticate
            with the pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.DeleteIdentityPoolRequest.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. An identity pool ID in the format REGION:GUID.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.DeleteIdentityPoolResponse">
            <summary>
            Configuration for accessing Amazon DeleteIdentityPool service
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.DeleteIdentityPoolResponse.DeleteIdentityPoolResult">
            <summary>
            Gets and sets the DeleteIdentityPoolResult property.
            Represents the output of a DeleteIdentityPool operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.DescribeIdentityPoolRequest">
            <summary>
            Container for the parameters to the DescribeIdentityPool operation.
            Gets details about a particular identity pool, including the pool name, ID description,
            creation date, and current number of users.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.DescribeIdentityPoolRequest.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. An identity pool ID in the format REGION:GUID.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.DescribeIdentityPoolResponse">
            <summary>
            Configuration for accessing Amazon DescribeIdentityPool service
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.DescribeIdentityPoolResult">
            <summary>
            An object representing a Cognito identity pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.DescribeIdentityPoolResult.AllowUnauthenticatedIdentities">
            <summary>
            Gets and sets the property AllowUnauthenticatedIdentities. TRUE if the identity pool
            supports unauthenticated logins.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.DescribeIdentityPoolResult.DeveloperProviderName">
            <summary>
            Gets and sets the property DeveloperProviderName. 
            <para>
            The "domain" by which Cognito will refer to your users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.DescribeIdentityPoolResult.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. An identity pool ID in the format REGION:GUID.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.DescribeIdentityPoolResult.IdentityPoolName">
            <summary>
            Gets and sets the property IdentityPoolName. 
            <para>
            A string that you provide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.DescribeIdentityPoolResult.SupportedLoginProviders">
            <summary>
            Gets and sets the property SupportedLoginProviders. 
            <para>
            Optional key:value pairs mapping provider names to provider app IDs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.DescribeIdentityPoolResponse.DescribeIdentityPoolResult">
            <summary>
            Gets and sets the DescribeIdentityPoolResult property.
            Represents the output of a DescribeIdentityPool operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.DeveloperUserAlreadyRegisteredException">
            <summary>
             CognitoIdentity exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentity.Model.DeveloperUserAlreadyRegisteredException.#ctor(System.String)">
            <summary>
            Constructs a new DeveloperUserAlreadyRegisteredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.GetIdRequest">
            <summary>
            Container for the parameters to the GetId operation.
            Generates (or retrieves) a Cognito ID. Supplying multiple logins will create an implicit
            linked account.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.GetIdRequest.AccountId">
            <summary>
            Gets and sets the property AccountId. A standard AWS account ID (9+ digits).
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.GetIdRequest.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. An identity pool ID in the format REGION:GUID.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.GetIdRequest.Logins">
            <summary>
            Gets and sets the property Logins. 
            <para>
            A set of optional name-value pairs that map provider names to provider tokens.
            </para>
             
            <para>
            The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook:
            <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code>
            </li> <li>Amazon: <code>www.amazon.com</code> </li> </ul> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.GetIdResponse">
            <summary>
            Configuration for accessing Amazon GetId service
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.GetIdResult">
            <summary>
            Returned in response to a GetId request.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.GetIdResult.IdentityId">
            <summary>
            Gets and sets the property IdentityId. A unique identifier in the format REGION:GUID.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.GetIdResponse.GetIdResult">
            <summary>
            Gets and sets the GetIdResult property.
            Represents the output of a GetId operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.GetOpenIdTokenForDeveloperIdentityRequest">
            <summary>
            Container for the parameters to the GetOpenIdTokenForDeveloperIdentity operation.
            Registers (or retrieves) a Cognito <code>IdentityId</code> and an OpenID Connect token
            for a user authenticated by your backend authentication process. Supplying multiple
            logins will create an implicit linked account. You can only specify one developer
            provider as part of the <code>Logins</code> map, which is linked to the identity pool.
            The developer provider is the "domain" by which Cognito will refer to your users.
            
             
            <para>
            You can use <code>GetOpenIdTokenForDeveloperIdentity</code> to create a new identity
            and to link new logins (that is, user credentials issued by a public provider or developer
            provider) to an existing identity. When you want to create a new identity, the <code>IdentityId</code>
            should be null. When you want to associate a new login with an existing authenticated/unauthenticated
            identity, you can do so by providing the existing <code>IdentityId</code>. This API
            will create the identity in the specified <code>IdentityPoolId</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.GetOpenIdTokenForDeveloperIdentityRequest.IdentityId">
            <summary>
            Gets and sets the property IdentityId. 
            <para>
            A unique identifier in the format REGION:GUID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.GetOpenIdTokenForDeveloperIdentityRequest.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. 
            <para>
            An identity pool ID in the format REGION:GUID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.GetOpenIdTokenForDeveloperIdentityRequest.Logins">
            <summary>
            Gets and sets the property Logins. 
            <para>
            A set of optional name-value pairs that map provider names to provider tokens. Each
            name-value pair represents a user from a public provider or developer provider. If
            the user is from a developer provider, the name-value pair will follow the syntax
            <code>"developer_provider_name": "developer_user_identifier"</code>. The developer
            provider is the "domain" by which Cognito will refer to your users; you provided this
            domain while creating/updating the identity pool. The developer user identifier is
            an identifier from your backend that uniquely identifies a user. When you create an
            identity pool, you can specify the supported logins.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.GetOpenIdTokenForDeveloperIdentityRequest.TokenDuration">
            <summary>
            Gets and sets the property TokenDuration. 
            <para>
            The expiration time of the token, in seconds. You can specify a custom expiration
            time for the token so that you can cache it. If you don't provide an expiration time,
            the token is valid for 15 minutes. You can exchange the token with Amazon STS for
            temporary AWS credentials, which are valid for a maximum of one hour. The maximum
            token duration you can set is 24 hours. You should take care in setting the expiration
            time for a token, as there are significant security implications: an attacker could
            use a leaked token to access your AWS resources for the token's duration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.GetOpenIdTokenForDeveloperIdentityResponse">
            <summary>
            Configuration for accessing Amazon GetOpenIdTokenForDeveloperIdentity service
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.GetOpenIdTokenForDeveloperIdentityResult">
            <summary>
            Returned in response to a successful <code>GetOpenIdTokenForDeveloperIdentity</code>
            request.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.GetOpenIdTokenForDeveloperIdentityResult.IdentityId">
            <summary>
            Gets and sets the property IdentityId. 
            <para>
            A unique identifier in the format REGION:GUID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.GetOpenIdTokenForDeveloperIdentityResult.Token">
            <summary>
            Gets and sets the property Token. 
            <para>
            An OpenID token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.GetOpenIdTokenForDeveloperIdentityResponse.GetOpenIdTokenForDeveloperIdentityResult">
            <summary>
            Gets and sets the GetOpenIdTokenForDeveloperIdentityResult property.
            Represents the output of a GetOpenIdTokenForDeveloperIdentity operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.GetOpenIdTokenRequest">
            <summary>
            Container for the parameters to the GetOpenIdToken operation.
            Gets an OpenID token, using a known Cognito ID. This known Cognito ID is returned
            by <a>GetId</a>. You can optionally add additional logins for the identity. Supplying
            multiple logins creates an implicit link.
            
             
            <para>
            The OpenId token is valid for 15 minutes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.GetOpenIdTokenRequest.IdentityId">
            <summary>
            Gets and sets the property IdentityId. A unique identifier in the format REGION:GUID.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.GetOpenIdTokenRequest.Logins">
            <summary>
            Gets and sets the property Logins. A set of optional name-value pairs that map provider
            names to provider tokens.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.GetOpenIdTokenResponse">
            <summary>
            Configuration for accessing Amazon GetOpenIdToken service
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.GetOpenIdTokenResult">
            <summary>
            Returned in response to a successful GetOpenIdToken request.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.GetOpenIdTokenResult.IdentityId">
            <summary>
            Gets and sets the property IdentityId. A unique identifier in the format REGION:GUID.
            Note that the IdentityId returned may not match the one passed on input.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.GetOpenIdTokenResult.Token">
            <summary>
            Gets and sets the property Token. An OpenID token, valid for 15 minutes.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.GetOpenIdTokenResponse.GetOpenIdTokenResult">
            <summary>
            Gets and sets the GetOpenIdTokenResult property.
            Represents the output of a GetOpenIdToken operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.IdentityDescription">
            <summary>
            A description of the identity.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.IdentityDescription.IdentityId">
            <summary>
            Gets and sets the property IdentityId. A unique identifier in the format REGION:GUID.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.IdentityDescription.Logins">
            <summary>
            Gets and sets the property Logins. A set of optional name-value pairs that map provider
            names to provider tokens.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.IdentityPoolShortDescription">
            <summary>
            A description of the identity pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.IdentityPoolShortDescription.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. An identity pool ID in the format REGION:GUID.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.IdentityPoolShortDescription.IdentityPoolName">
            <summary>
            Gets and sets the property IdentityPoolName. A string that you provide.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.InternalErrorException">
            <summary>
             CognitoIdentity exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentity.Model.InternalErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.CreateIdentityPoolRequestMarshaller">
            <summary>
            CreateIdentityPool Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.CreateIdentityPoolResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateIdentityPool operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DeleteIdentityPoolRequestMarshaller">
            <summary>
            DeleteIdentityPool Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DeleteIdentityPoolResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteIdentityPool operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DescribeIdentityPoolRequestMarshaller">
            <summary>
            DescribeIdentityPool Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.DescribeIdentityPoolResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeIdentityPool operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetIdRequestMarshaller">
            <summary>
            GetId Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetIdResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetId operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetOpenIdTokenForDeveloperIdentityRequestMarshaller">
            <summary>
            GetOpenIdTokenForDeveloperIdentity Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetOpenIdTokenForDeveloperIdentityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetOpenIdTokenForDeveloperIdentity operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetOpenIdTokenRequestMarshaller">
            <summary>
            GetOpenIdToken Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.GetOpenIdTokenResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetOpenIdToken operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.IdentityDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityDescription Object
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.IdentityPoolShortDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityPoolShortDescription Object
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.ListIdentitiesRequestMarshaller">
            <summary>
            ListIdentities Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.ListIdentitiesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListIdentities operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.ListIdentityPoolsRequestMarshaller">
            <summary>
            ListIdentityPools Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.ListIdentityPoolsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListIdentityPools operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.LookupDeveloperIdentityRequestMarshaller">
            <summary>
            LookupDeveloperIdentity Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.LookupDeveloperIdentityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for LookupDeveloperIdentity operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.MergeDeveloperIdentitiesRequestMarshaller">
            <summary>
            MergeDeveloperIdentities Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.MergeDeveloperIdentitiesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for MergeDeveloperIdentities operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UnlinkDeveloperIdentityRequestMarshaller">
            <summary>
            UnlinkDeveloperIdentity Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UnlinkDeveloperIdentityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UnlinkDeveloperIdentity operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UnlinkIdentityRequestMarshaller">
            <summary>
            UnlinkIdentity Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UnlinkIdentityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UnlinkIdentity operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UpdateIdentityPoolRequestMarshaller">
            <summary>
            UpdateIdentityPool Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.Internal.MarshallTransformations.UpdateIdentityPoolResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateIdentityPool operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.InvalidParameterException">
            <summary>
             CognitoIdentity exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentity.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.LimitExceededException">
            <summary>
             CognitoIdentity exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentity.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.ListIdentitiesRequest">
            <summary>
            Container for the parameters to the ListIdentities operation.
            Lists the identities in a pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.ListIdentitiesRequest.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. An identity pool ID in the format REGION:GUID.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.ListIdentitiesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. The maximum number of identities to return.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.ListIdentitiesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. A pagination token.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.ListIdentitiesResponse">
            <summary>
            Configuration for accessing Amazon ListIdentities service
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.ListIdentitiesResult">
            <summary>
            The response to a ListIdentities request.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.ListIdentitiesResult.Identities">
            <summary>
            Gets and sets the property Identities. An object containing a set of identities and
            associated mappings.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.ListIdentitiesResult.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. An identity pool ID in the format REGION:GUID.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.ListIdentitiesResult.NextToken">
            <summary>
            Gets and sets the property NextToken. A pagination token.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.ListIdentitiesResponse.ListIdentitiesResult">
            <summary>
            Gets and sets the ListIdentitiesResult property.
            Represents the output of a ListIdentities operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.ListIdentityPoolsRequest">
            <summary>
            Container for the parameters to the ListIdentityPools operation.
            Lists all of the Cognito identity pools registered for your account.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.ListIdentityPoolsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. The maximum number of identities to return.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.ListIdentityPoolsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. A pagination token.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.ListIdentityPoolsResponse">
            <summary>
            Configuration for accessing Amazon ListIdentityPools service
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.ListIdentityPoolsResult">
            <summary>
            The result of a successful ListIdentityPools action.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.ListIdentityPoolsResult.IdentityPools">
            <summary>
            Gets and sets the property IdentityPools. The identity pools returned by the ListIdentityPools
            action.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.ListIdentityPoolsResult.NextToken">
            <summary>
            Gets and sets the property NextToken. A pagination token.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.ListIdentityPoolsResponse.ListIdentityPoolsResult">
            <summary>
            Gets and sets the ListIdentityPoolsResult property.
            Represents the output of a ListIdentityPools operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.LookupDeveloperIdentityRequest">
            <summary>
            Container for the parameters to the LookupDeveloperIdentity operation.
            Retrieves the <code>IdentityID</code> associated with a <code>DeveloperUserIdentifier</code>
            or the list of <code>DeveloperUserIdentifier</code>s associated with an <code>IdentityId</code>
            for an existing identity. Either <code>IdentityID</code> or <code>DeveloperUserIdentifier</code>
            must not be null. If you supply only one of these values, the other value will be
            searched in the database and returned as a part of the response. If you supply both,
            <code>DeveloperUserIdentifier</code> will be matched against <code>IdentityID</code>.
            If the values are verified against the database, the response returns both values
            and is the same as the request. Otherwise a <code>ResourceConflictException</code>
            is thrown.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.LookupDeveloperIdentityRequest.DeveloperUserIdentifier">
            <summary>
            Gets and sets the property DeveloperUserIdentifier. 
            <para>
            A unique ID used by your backend authentication process to identify a user. Typically,
            a developer identity provider would issue many developer user identifiers, in keeping
            with the number of users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.LookupDeveloperIdentityRequest.IdentityId">
            <summary>
            Gets and sets the property IdentityId. 
            <para>
            A unique identifier in the format REGION:GUID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.LookupDeveloperIdentityRequest.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. 
            <para>
            An identity pool ID in the format REGION:GUID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.LookupDeveloperIdentityRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of identities to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.LookupDeveloperIdentityRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token. The first call you make will have <code>NextToken</code> set to
            null. After that the service will return <code>NextToken</code> values as needed.
            For example, let's say you make a request with <code>MaxResults</code> set to 10,
            and there are 20 matches in the database. The service will return a pagination token
            as a part of the response. This token can be used to call the API again and get results
            starting from the 11th match.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.LookupDeveloperIdentityResponse">
            <summary>
            Configuration for accessing Amazon LookupDeveloperIdentity service
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.LookupDeveloperIdentityResult">
            <summary>
            Returned in response to a successful <code>LookupDeveloperIdentity</code> action.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.LookupDeveloperIdentityResult.DeveloperUserIdentifierList">
            <summary>
            Gets and sets the property DeveloperUserIdentifierList. 
            <para>
            This is the list of developer user identifiers associated with an identity ID. Cognito
            supports the association of multiple developer user identifiers with an identity ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.LookupDeveloperIdentityResult.IdentityId">
            <summary>
            Gets and sets the property IdentityId. 
            <para>
            A unique identifier in the format REGION:GUID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.LookupDeveloperIdentityResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A pagination token. The first call you make will have <code>NextToken</code> set to
            null. After that the service will return <code>NextToken</code> values as needed.
            For example, let's say you make a request with <code>MaxResults</code> set to 10,
            and there are 20 matches in the database. The service will return a pagination token
            as a part of the response. This token can be used to call the API again and get results
            starting from the 11th match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.LookupDeveloperIdentityResponse.LookupDeveloperIdentityResult">
            <summary>
            Gets and sets the LookupDeveloperIdentityResult property.
            Represents the output of a LookupDeveloperIdentity operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.MergeDeveloperIdentitiesRequest">
            <summary>
            Container for the parameters to the MergeDeveloperIdentities operation.
            Merges two users having different <code>IdentityId</code>s, existing in the same identity
            pool, and identified by the same developer provider. You can use this action to request
            that discrete users be merged and identified as a single user in the Cognito environment.
            Cognito associates the given source user (<code>SourceUserIdentifier</code>) with
            the <code>IdentityId</code> of the <code>DestinationUserIdentifier</code>. Only developer-authenticated
            users can be merged. If the users to be merged are associated with the same public
            provider, but as two different users, an exception will be thrown.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.MergeDeveloperIdentitiesRequest.DestinationUserIdentifier">
            <summary>
            Gets and sets the property DestinationUserIdentifier. 
            <para>
            User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.MergeDeveloperIdentitiesRequest.DeveloperProviderName">
            <summary>
            Gets and sets the property DeveloperProviderName. 
            <para>
            The "domain" by which Cognito will refer to your users. This is a (pseudo) domain
            name that you provide while creating an identity pool. This name acts as a placeholder
            that allows your backend and the Cognito service to communicate about the developer
            provider. For the <code>DeveloperProviderName</code>, you can use letters as well
            as period (.), underscore (_), and dash (-).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.MergeDeveloperIdentitiesRequest.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. 
            <para>
            An identity pool ID in the format REGION:GUID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.MergeDeveloperIdentitiesRequest.SourceUserIdentifier">
            <summary>
            Gets and sets the property SourceUserIdentifier. 
            <para>
            User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.MergeDeveloperIdentitiesResponse">
            <summary>
            Configuration for accessing Amazon MergeDeveloperIdentities service
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.MergeDeveloperIdentitiesResult">
            <summary>
            Returned in response to a successful <code>MergeDeveloperIdentities</code> action.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.MergeDeveloperIdentitiesResult.IdentityId">
            <summary>
            Gets and sets the property IdentityId. 
            <para>
            A unique identifier in the format REGION:GUID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.MergeDeveloperIdentitiesResponse.MergeDeveloperIdentitiesResult">
            <summary>
            Gets and sets the MergeDeveloperIdentitiesResult property.
            Represents the output of a MergeDeveloperIdentities operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.NotAuthorizedException">
            <summary>
             CognitoIdentity exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentity.Model.NotAuthorizedException.#ctor(System.String)">
            <summary>
            Constructs a new NotAuthorizedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.ResourceConflictException">
            <summary>
             CognitoIdentity exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentity.Model.ResourceConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.ResourceNotFoundException">
            <summary>
             CognitoIdentity exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentity.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.TooManyRequestsException">
            <summary>
             CognitoIdentity exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoIdentity.Model.TooManyRequestsException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyRequestsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.UnlinkDeveloperIdentityRequest">
            <summary>
            Container for the parameters to the UnlinkDeveloperIdentity operation.
            Unlinks a <code>DeveloperUserIdentifier</code> from an existing identity. Unlinked
            developer users will be considered new identities next time they are seen. If, for
            a given Cognito identity, you remove all federated identities as well as the developer
            user identifier, the Cognito identity becomes inaccessible.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.UnlinkDeveloperIdentityRequest.DeveloperProviderName">
            <summary>
            Gets and sets the property DeveloperProviderName. 
            <para>
            The "domain" by which Cognito will refer to your users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.UnlinkDeveloperIdentityRequest.DeveloperUserIdentifier">
            <summary>
            Gets and sets the property DeveloperUserIdentifier. A unique ID used by your backend
            authentication process to identify a user.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.UnlinkDeveloperIdentityRequest.IdentityId">
            <summary>
            Gets and sets the property IdentityId. 
            <para>
            A unique identifier in the format REGION:GUID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.UnlinkDeveloperIdentityRequest.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. 
            <para>
            An identity pool ID in the format REGION:GUID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.UnlinkDeveloperIdentityResponse">
            <summary>
            Configuration for accessing Amazon UnlinkDeveloperIdentity service
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.UnlinkDeveloperIdentityResponse.UnlinkDeveloperIdentityResult">
            <summary>
            Gets and sets the UnlinkDeveloperIdentityResult property.
            Represents the output of a UnlinkDeveloperIdentity operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.UnlinkIdentityRequest">
            <summary>
            Container for the parameters to the UnlinkIdentity operation.
            Unlinks a federated identity from an existing account. Unlinked logins will be considered
            new identities next time they are seen. Removing the last linked login will make this
            identity inaccessible.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.UnlinkIdentityRequest.IdentityId">
            <summary>
            Gets and sets the property IdentityId. A unique identifier in the format REGION:GUID.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.UnlinkIdentityRequest.Logins">
            <summary>
            Gets and sets the property Logins. A set of optional name-value pairs that map provider
            names to provider tokens.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.UnlinkIdentityRequest.LoginsToRemove">
            <summary>
            Gets and sets the property LoginsToRemove. Provider names to unlink from this identity.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.UnlinkIdentityResponse">
            <summary>
            Configuration for accessing Amazon UnlinkIdentity service
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.UnlinkIdentityResponse.UnlinkIdentityResult">
            <summary>
            Gets and sets the UnlinkIdentityResult property.
            Represents the output of a UnlinkIdentity operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.UpdateIdentityPoolRequest">
            <summary>
            Container for the parameters to the UpdateIdentityPool operation.
            Updates a user pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.UpdateIdentityPoolRequest.AllowUnauthenticatedIdentities">
            <summary>
            Gets and sets the property AllowUnauthenticatedIdentities. TRUE if the identity pool
            supports unauthenticated logins.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.UpdateIdentityPoolRequest.DeveloperProviderName">
            <summary>
            Gets and sets the property DeveloperProviderName. 
            <para>
            The "domain" by which Cognito will refer to your users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.UpdateIdentityPoolRequest.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. An identity pool ID in the format REGION:GUID.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.UpdateIdentityPoolRequest.IdentityPoolName">
            <summary>
            Gets and sets the property IdentityPoolName. 
            <para>
            A string that you provide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.UpdateIdentityPoolRequest.SupportedLoginProviders">
            <summary>
            Gets and sets the property SupportedLoginProviders. 
            <para>
            Optional key:value pairs mapping provider names to provider app IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.UpdateIdentityPoolResponse">
            <summary>
            Configuration for accessing Amazon UpdateIdentityPool service
            </summary>
        </member>
        <member name="T:Amazon.CognitoIdentity.Model.UpdateIdentityPoolResult">
            <summary>
            An object representing a Cognito identity pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.UpdateIdentityPoolResult.AllowUnauthenticatedIdentities">
            <summary>
            Gets and sets the property AllowUnauthenticatedIdentities. TRUE if the identity pool
            supports unauthenticated logins.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.UpdateIdentityPoolResult.DeveloperProviderName">
            <summary>
            Gets and sets the property DeveloperProviderName. 
            <para>
            The "domain" by which Cognito will refer to your users.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.UpdateIdentityPoolResult.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. An identity pool ID in the format REGION:GUID.
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.UpdateIdentityPoolResult.IdentityPoolName">
            <summary>
            Gets and sets the property IdentityPoolName. 
            <para>
            A string that you provide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.UpdateIdentityPoolResult.SupportedLoginProviders">
            <summary>
            Gets and sets the property SupportedLoginProviders. 
            <para>
            Optional key:value pairs mapping provider names to provider app IDs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CognitoIdentity.Model.UpdateIdentityPoolResponse.UpdateIdentityPoolResult">
            <summary>
            Gets and sets the UpdateIdentityPoolResult property.
            Represents the output of a UpdateIdentityPool operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.AmazonCognitoSyncClient">
             <summary>
             Implementation for accessing CognitoSync
            
             Amazon Cognito Sync 
             <para>
             Amazon Cognito Sync provides an AWS service and client library that enable cross-device
             syncing of application-related user data. High-level client libraries are available
             for both iOS and Android. You can use these libraries to persist data locally so that
             it's available even if the device is offline. Developer credentials don't need to
             be stored on the mobile device to access the service. You can use Amazon Cognito to
             obtain a normalized user ID and credentials. User data is persisted in a dataset that
             can store up to 1 MB of key-value pairs, and you can have up to 20 datasets per user
             identity.
             </para>
             </summary>
        </member>
        <member name="T:Amazon.CognitoSync.IAmazonCognitoSync">
             <summary>
             Interface for accessing CognitoSync
            
             Amazon Cognito Sync 
             <para>
             Amazon Cognito Sync provides an AWS service and client library that enable cross-device
             syncing of application-related user data. High-level client libraries are available
             for both iOS and Android. You can use these libraries to persist data locally so that
             it's available even if the device is offline. Developer credentials don't need to
             be stored on the mobile device to access the service. You can use Amazon Cognito to
             obtain a normalized user ID and credentials. User data is persisted in a dataset that
             can store up to 1 MB of key-value pairs, and you can have up to 20 datasets per user
             identity.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.CognitoSync.IAmazonCognitoSync.DeleteDatasetAsync(Amazon.CognitoSync.Model.DeleteDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteDataset operation.
            <seealso cref="T:Amazon.CognitoSync.IAmazonCognitoSync"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteDataset operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoSync.IAmazonCognitoSync.DescribeDatasetAsync(Amazon.CognitoSync.Model.DescribeDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeDataset operation.
            <seealso cref="T:Amazon.CognitoSync.IAmazonCognitoSync"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeDataset operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoSync.IAmazonCognitoSync.DescribeIdentityPoolUsageAsync(Amazon.CognitoSync.Model.DescribeIdentityPoolUsageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeIdentityPoolUsage operation.
            <seealso cref="T:Amazon.CognitoSync.IAmazonCognitoSync"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeIdentityPoolUsage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoSync.IAmazonCognitoSync.DescribeIdentityUsageAsync(Amazon.CognitoSync.Model.DescribeIdentityUsageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeIdentityUsage operation.
            <seealso cref="T:Amazon.CognitoSync.IAmazonCognitoSync"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeIdentityUsage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoSync.IAmazonCognitoSync.ListDatasetsAsync(Amazon.CognitoSync.Model.ListDatasetsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListDatasets operation.
            <seealso cref="T:Amazon.CognitoSync.IAmazonCognitoSync"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListDatasets operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoSync.IAmazonCognitoSync.ListIdentityPoolUsageAsync(Amazon.CognitoSync.Model.ListIdentityPoolUsageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListIdentityPoolUsage operation.
            <seealso cref="T:Amazon.CognitoSync.IAmazonCognitoSync"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListIdentityPoolUsage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoSync.IAmazonCognitoSync.ListRecordsAsync(Amazon.CognitoSync.Model.ListRecordsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListRecords operation.
            <seealso cref="T:Amazon.CognitoSync.IAmazonCognitoSync"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListRecords operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoSync.IAmazonCognitoSync.UpdateRecordsAsync(Amazon.CognitoSync.Model.UpdateRecordsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateRecords operation.
            <seealso cref="T:Amazon.CognitoSync.IAmazonCognitoSync"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateRecords operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoSync.AmazonCognitoSyncClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonCognitoSyncClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.CognitoSync.AmazonCognitoSyncClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCognitoSyncClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CognitoSync.AmazonCognitoSyncClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.CognitoSync.AmazonCognitoSyncConfig)">
            <summary>
            Constructs AmazonCognitoSyncClient with AWS Credentials and an
            AmazonCognitoSyncClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonCognitoSyncClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CognitoSync.AmazonCognitoSyncClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonCognitoSyncClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.CognitoSync.AmazonCognitoSyncClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCognitoSyncClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CognitoSync.AmazonCognitoSyncClient.#ctor(System.String,System.String,Amazon.CognitoSync.AmazonCognitoSyncConfig)">
            <summary>
            Constructs AmazonCognitoSyncClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCognitoSyncClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonCognitoSyncClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CognitoSync.AmazonCognitoSyncClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonCognitoSyncClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.CognitoSync.AmazonCognitoSyncClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCognitoSyncClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CognitoSync.AmazonCognitoSyncClient.#ctor(System.String,System.String,System.String,Amazon.CognitoSync.AmazonCognitoSyncConfig)">
            <summary>
            Constructs AmazonCognitoSyncClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCognitoSyncClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonCognitoSyncClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CognitoSync.AmazonCognitoSyncClient.DeleteDatasetAsync(Amazon.CognitoSync.Model.DeleteDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteDataset operation.
            <seealso cref="T:Amazon.CognitoSync.IAmazonCognitoSync"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteDataset operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoSync.AmazonCognitoSyncClient.DescribeDatasetAsync(Amazon.CognitoSync.Model.DescribeDatasetRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeDataset operation.
            <seealso cref="T:Amazon.CognitoSync.IAmazonCognitoSync"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeDataset operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoSync.AmazonCognitoSyncClient.DescribeIdentityPoolUsageAsync(Amazon.CognitoSync.Model.DescribeIdentityPoolUsageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeIdentityPoolUsage operation.
            <seealso cref="T:Amazon.CognitoSync.IAmazonCognitoSync"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeIdentityPoolUsage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoSync.AmazonCognitoSyncClient.DescribeIdentityUsageAsync(Amazon.CognitoSync.Model.DescribeIdentityUsageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeIdentityUsage operation.
            <seealso cref="T:Amazon.CognitoSync.IAmazonCognitoSync"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeIdentityUsage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoSync.AmazonCognitoSyncClient.ListDatasetsAsync(Amazon.CognitoSync.Model.ListDatasetsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListDatasets operation.
            <seealso cref="T:Amazon.CognitoSync.IAmazonCognitoSync"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListDatasets operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoSync.AmazonCognitoSyncClient.ListIdentityPoolUsageAsync(Amazon.CognitoSync.Model.ListIdentityPoolUsageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListIdentityPoolUsage operation.
            <seealso cref="T:Amazon.CognitoSync.IAmazonCognitoSync"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListIdentityPoolUsage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoSync.AmazonCognitoSyncClient.ListRecordsAsync(Amazon.CognitoSync.Model.ListRecordsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListRecords operation.
            <seealso cref="T:Amazon.CognitoSync.IAmazonCognitoSync"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListRecords operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.CognitoSync.AmazonCognitoSyncClient.UpdateRecordsAsync(Amazon.CognitoSync.Model.UpdateRecordsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateRecords operation.
            <seealso cref="T:Amazon.CognitoSync.IAmazonCognitoSync"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateRecords operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.CognitoSync.AmazonCognitoSyncConfig">
            <summary>
            Configuration for accessing Amazon CognitoSync service
            </summary>
        </member>
        <member name="M:Amazon.CognitoSync.AmazonCognitoSyncConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.AmazonCognitoSyncConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.AmazonCognitoSyncConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Internal.CognitoCredentialsRetriever">
            <summary>
            This handler overrides the base CredentialsRetriever which is removed from the pipeline. When
            the service client is using the CognitoAWSCredentials credentials object it makes sure that all
            CognitoSync calls have the latest identity id and identity pool id.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.CredentialsRetriever">
            <summary>
            This handler retrieved the AWS credentials to be used for the current call.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.CredentialsRetriever.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            The constructor for CredentialsRetriever.
            </summary>
            <param name="credentials">An AWSCredentials instance.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.CredentialsRetriever.PreInvoke(Amazon.Runtime.IExecutionContext)">
            <summary>
            Retrieves the credentials to be used for the current call before 
            invoking the next handler.
            </summary>
            <param name="executionContext"></param>
        </member>
        <member name="T:Amazon.CognitoSync.Internal.CognitoCredentialsRetriever.CSRequestCache">
            <summary>
            A cache of objects that store the reflection objects. This is done so that reflection is only used once in order to 
            set the fields on the request.
            </summary>
        </member>
        <member name="M:Amazon.CognitoSync.Internal.CognitoCredentialsRetriever.CSRequestCache.SetFields(Amazon.CognitoSync.AmazonCognitoSyncRequest,System.String,System.String)">
            <summary>
            Set the IdentityId and IdentityPoolId properties on the request object
            </summary>
            <param name="request"></param>
            <param name="identityPoolId"></param>
            <param name="identityId"></param>
        </member>
        <member name="T:Amazon.CognitoSync.Internal.CognitoCredentialsRetriever.CSRequestCache.CSRequest">
            <summary>
            This class holds on to the reflection objects to invoke the setters for IdentityId and IdentityPoolId for the given type.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.AmazonCognitoSyncRequest">
            <summary>
            Base class for CognitoSync operation requests.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.Dataset">
            <summary>
            A collection of data for an identity pool. An identity pool can have multiple datasets.
            A dataset is per identity and can be general or associated with a particular entity
            in an application (like a saved game). Datasets are automatically created if they
            don't exist. Data is synced by dataset, and a dataset can hold up to 1MB of key-value
            pairs.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.Dataset.CreationDate">
            <summary>
            Gets and sets the property CreationDate. Date.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.Dataset.DatasetName">
            <summary>
            Gets and sets the property DatasetName. A string of up to 128 characters. Allowed
            characters are a-z, A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot).
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.Dataset.DataStorage">
            <summary>
            Gets and sets the property DataStorage. Total size in bytes of the records in this
            dataset.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.Dataset.IdentityId">
            <summary>
            Gets and sets the property IdentityId. A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.Dataset.LastModifiedBy">
            <summary>
            Gets and sets the property LastModifiedBy. The device that made the last change to
            this dataset.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.Dataset.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. Date when the dataset was last modified.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.Dataset.NumRecords">
            <summary>
            Gets and sets the property NumRecords. Number of records in this dataset.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.DeleteDatasetRequest">
            <summary>
            Container for the parameters to the DeleteDataset operation.
            Deletes the specific dataset. The dataset will be deleted permanently, and the action
            can't be undone. Datasets that this dataset was merged with will no longer report
            the merge. Any consequent operation on this dataset will result in a ResourceNotFoundException.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.DeleteDatasetRequest.DatasetName">
            <summary>
            Gets and sets the property DatasetName. A string of up to 128 characters. Allowed
            characters are a-z, A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot).
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.DeleteDatasetRequest.IdentityId">
            <summary>
            Gets and sets the property IdentityId. A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.DeleteDatasetRequest.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.DeleteDatasetResponse">
            <summary>
            Configuration for accessing Amazon DeleteDataset service
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.DeleteDatasetResult">
            <summary>
            Response to a successful DeleteDataset request.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.DeleteDatasetResult.Dataset">
            <summary>
            Gets and sets the property Dataset. A collection of data for an identity pool. An
            identity pool can have multiple datasets. A dataset is per identity and can be general
            or associated with a particular entity in an application (like a saved game). Datasets
            are automatically created if they don't exist. Data is synced by dataset, and a dataset
            can hold up to 1MB of key-value pairs.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.DeleteDatasetResponse.DeleteDatasetResult">
            <summary>
            Gets and sets the DeleteDatasetResult property.
            Represents the output of a DeleteDataset operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.DescribeDatasetRequest">
            <summary>
            Container for the parameters to the DescribeDataset operation.
            Gets metadata about a dataset by identity and dataset name.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.DescribeDatasetRequest.DatasetName">
            <summary>
            Gets and sets the property DatasetName. A string of up to 128 characters. Allowed
            characters are a-z, A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot).
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.DescribeDatasetRequest.IdentityId">
            <summary>
            Gets and sets the property IdentityId. A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.DescribeDatasetRequest.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.DescribeDatasetResponse">
            <summary>
            Configuration for accessing Amazon DescribeDataset service
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.DescribeDatasetResult">
            <summary>
            Response to a successful DescribeDataset request.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.DescribeDatasetResult.Dataset">
            <summary>
            Gets and sets the property Dataset. Metadata for a collection of data for an identity.
            An identity can have multiple datasets. A dataset can be general or associated with
            a particular entity in an application (like a saved game). Datasets are automatically
            created if they don't exist. Data is synced by dataset, and a dataset can hold up
            to 1MB of key-value pairs.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.DescribeDatasetResponse.DescribeDatasetResult">
            <summary>
            Gets and sets the DescribeDatasetResult property.
            Represents the output of a DescribeDataset operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.DescribeIdentityPoolUsageRequest">
            <summary>
            Container for the parameters to the DescribeIdentityPoolUsage operation.
            Gets usage details (for example, data storage) about a particular identity pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.DescribeIdentityPoolUsageRequest.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.DescribeIdentityPoolUsageResponse">
            <summary>
            Configuration for accessing Amazon DescribeIdentityPoolUsage service
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.DescribeIdentityPoolUsageResult">
            <summary>
            Response to a successful DescribeIdentityPoolUsage request.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.DescribeIdentityPoolUsageResult.IdentityPoolUsage">
            <summary>
            Gets and sets the property IdentityPoolUsage. Information about the usage of the identity
            pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.DescribeIdentityPoolUsageResponse.DescribeIdentityPoolUsageResult">
            <summary>
            Gets and sets the DescribeIdentityPoolUsageResult property.
            Represents the output of a DescribeIdentityPoolUsage operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.DescribeIdentityUsageRequest">
            <summary>
            Container for the parameters to the DescribeIdentityUsage operation.
            Gets usage information for an identity, including number of datasets and data usage.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.DescribeIdentityUsageRequest.IdentityId">
            <summary>
            Gets and sets the property IdentityId. A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.DescribeIdentityUsageRequest.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.DescribeIdentityUsageResponse">
            <summary>
            Configuration for accessing Amazon DescribeIdentityUsage service
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.DescribeIdentityUsageResult">
            <summary>
            The response to a successful DescribeIdentityUsage request.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.DescribeIdentityUsageResult.IdentityUsage">
            <summary>
            Gets and sets the property IdentityUsage. Usage information for the identity.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.DescribeIdentityUsageResponse.DescribeIdentityUsageResult">
            <summary>
            Gets and sets the DescribeIdentityUsageResult property.
            Represents the output of a DescribeIdentityUsage operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.IdentityPoolUsage">
            <summary>
            Usage information for the identity pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.IdentityPoolUsage.DataStorage">
            <summary>
            Gets and sets the property DataStorage. Data storage information for the identity
            pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.IdentityPoolUsage.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.IdentityPoolUsage.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. Date on which the identity pool was last
            modified.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.IdentityPoolUsage.SyncSessionsCount">
            <summary>
            Gets and sets the property SyncSessionsCount. Number of sync sessions for the identity
            pool.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.IdentityUsage">
            <summary>
            Usage information for the identity.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.IdentityUsage.DatasetCount">
            <summary>
            Gets and sets the property DatasetCount. Number of datasets for the identity.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.IdentityUsage.DataStorage">
            <summary>
            Gets and sets the property DataStorage. Total data storage for this identity.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.IdentityUsage.IdentityId">
            <summary>
            Gets and sets the property IdentityId. A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.IdentityUsage.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.IdentityUsage.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. Date on which the identity was last modified.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.InternalErrorException">
            <summary>
             CognitoSync exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoSync.Model.InternalErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.DatasetUnmarshaller">
            <summary>
            Response Unmarshaller for Dataset Object
            </summary>  
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.DeleteDatasetRequestMarshaller">
            <summary>
            DeleteDataset Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.DeleteDatasetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDataset operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.DescribeDatasetRequestMarshaller">
            <summary>
            DescribeDataset Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.DescribeDatasetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDataset operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.DescribeIdentityPoolUsageRequestMarshaller">
            <summary>
            DescribeIdentityPoolUsage Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.DescribeIdentityPoolUsageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeIdentityPoolUsage operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.DescribeIdentityUsageRequestMarshaller">
            <summary>
            DescribeIdentityUsage Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.DescribeIdentityUsageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeIdentityUsage operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.IdentityPoolUsageUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityPoolUsage Object
            </summary>  
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.IdentityUsageUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityUsage Object
            </summary>  
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.ListDatasetsRequestMarshaller">
            <summary>
            ListDatasets Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.ListDatasetsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDatasets operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.ListIdentityPoolUsageRequestMarshaller">
            <summary>
            ListIdentityPoolUsage Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.ListIdentityPoolUsageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListIdentityPoolUsage operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.ListRecordsRequestMarshaller">
            <summary>
            ListRecords Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.ListRecordsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListRecords operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.RecordPatchMarshaller">
            <summary>
            RecordPatch Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.RecordUnmarshaller">
            <summary>
            Response Unmarshaller for Record Object
            </summary>  
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.UpdateRecordsRequestMarshaller">
            <summary>
            UpdateRecords Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.CognitoSync.Model.Internal.MarshallTransformations.UpdateRecordsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateRecords operation
            </summary>  
        </member>
        <member name="T:Amazon.CognitoSync.Model.InvalidParameterException">
            <summary>
             CognitoSync exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoSync.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CognitoSync.Model.LimitExceededException">
            <summary>
             CognitoSync exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoSync.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CognitoSync.Model.ListDatasetsRequest">
            <summary>
            Container for the parameters to the ListDatasets operation.
            Lists datasets for an identity.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListDatasetsRequest.IdentityId">
            <summary>
            Gets and sets the property IdentityId. A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListDatasetsRequest.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListDatasetsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. The maximum number of results to be returned.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListDatasetsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. A pagination token for obtaining the next page
            of results.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.ListDatasetsResponse">
            <summary>
            Configuration for accessing Amazon ListDatasets service
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.ListDatasetsResult">
            <summary>
            Returned for a successful ListDatasets request.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListDatasetsResult.Count">
            <summary>
            Gets and sets the property Count. Number of datasets returned.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListDatasetsResult.Datasets">
            <summary>
            Gets and sets the property Datasets. A set of datasets.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListDatasetsResult.NextToken">
            <summary>
            Gets and sets the property NextToken. A pagination token for obtaining the next page
            of results.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListDatasetsResponse.ListDatasetsResult">
            <summary>
            Gets and sets the ListDatasetsResult property.
            Represents the output of a ListDatasets operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.ListIdentityPoolUsageRequest">
            <summary>
            Container for the parameters to the ListIdentityPoolUsage operation.
            Gets a list of identity pools registered with Cognito.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListIdentityPoolUsageRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. The maximum number of results to be returned.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListIdentityPoolUsageRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. A pagination token for obtaining the next page
            of results.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.ListIdentityPoolUsageResponse">
            <summary>
            Configuration for accessing Amazon ListIdentityPoolUsage service
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.ListIdentityPoolUsageResult">
            <summary>
            Returned for a successful ListIdentityPoolUsage request.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListIdentityPoolUsageResult.Count">
            <summary>
            Gets and sets the property Count. Total number of identities for the identity pool.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListIdentityPoolUsageResult.IdentityPoolUsages">
            <summary>
            Gets and sets the property IdentityPoolUsages. Usage information for the identity
            pools.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListIdentityPoolUsageResult.MaxResults">
            <summary>
            Gets and sets the property MaxResults. The maximum number of results to be returned.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListIdentityPoolUsageResult.NextToken">
            <summary>
            Gets and sets the property NextToken. A pagination token for obtaining the next page
            of results.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListIdentityPoolUsageResponse.ListIdentityPoolUsageResult">
            <summary>
            Gets and sets the ListIdentityPoolUsageResult property.
            Represents the output of a ListIdentityPoolUsage operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.ListRecordsRequest">
            <summary>
            Container for the parameters to the ListRecords operation.
            Gets paginated records, optionally changed after a particular sync count for a dataset
            and identity.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListRecordsRequest.DatasetName">
            <summary>
            Gets and sets the property DatasetName. A string of up to 128 characters. Allowed
            characters are a-z, A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot).
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListRecordsRequest.IdentityId">
            <summary>
            Gets and sets the property IdentityId. A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListRecordsRequest.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListRecordsRequest.LastSyncCount">
            <summary>
            Gets and sets the property LastSyncCount. The last server sync count for this record.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListRecordsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. The maximum number of results to be returned.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListRecordsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. A pagination token for obtaining the next page
            of results.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListRecordsRequest.SyncSessionToken">
            <summary>
            Gets and sets the property SyncSessionToken. A token containing a session ID, identity
            ID, and expiration.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.ListRecordsResponse">
            <summary>
            Configuration for accessing Amazon ListRecords service
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.ListRecordsResult">
            <summary>
            Returned for a successful ListRecordsRequest.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListRecordsResult.Count">
            <summary>
            Gets and sets the property Count. Total number of records.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListRecordsResult.DatasetDeletedAfterRequestedSyncCount">
            <summary>
            Gets and sets the property DatasetDeletedAfterRequestedSyncCount. A boolean value
            specifying whether to delete the dataset locally.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListRecordsResult.DatasetExists">
            <summary>
            Gets and sets the property DatasetExists. Indicates whether the dataset exists.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListRecordsResult.DatasetSyncCount">
            <summary>
            Gets and sets the property DatasetSyncCount. Server sync count for this dataset.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListRecordsResult.LastModifiedBy">
            <summary>
            Gets and sets the property LastModifiedBy.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListRecordsResult.MergedDatasetNames">
            <summary>
            Gets and sets the property MergedDatasetNames. Names of merged datasets.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListRecordsResult.NextToken">
            <summary>
            Gets and sets the property NextToken. A pagination token for obtaining the next page
            of results.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListRecordsResult.Records">
            <summary>
            Gets and sets the property Records. A list of all records.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListRecordsResult.SyncSessionToken">
            <summary>
            Gets and sets the property SyncSessionToken. A token containing a session ID, identity
            ID, and expiration.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.ListRecordsResponse.ListRecordsResult">
            <summary>
            Gets and sets the ListRecordsResult property.
            Represents the output of a ListRecords operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.NotAuthorizedException">
            <summary>
             CognitoSync exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoSync.Model.NotAuthorizedException.#ctor(System.String)">
            <summary>
            Constructs a new NotAuthorizedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CognitoSync.Model.Record">
            <summary>
            The basic data structure of a dataset.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.Record.DeviceLastModifiedDate">
            <summary>
            Gets and sets the property DeviceLastModifiedDate. The last modified date of the client
            device.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.Record.Key">
            <summary>
            Gets and sets the property Key. The key for the record.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.Record.LastModifiedBy">
            <summary>
            Gets and sets the property LastModifiedBy. The user/device that made the last change
            to this record.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.Record.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. The date on which the record was last
            modified.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.Record.SyncCount">
            <summary>
            Gets and sets the property SyncCount. The server sync count for this record.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.Record.Value">
            <summary>
            Gets and sets the property Value. The value for the record.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.RecordPatch">
            <summary>
            An update operation for a record.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.RecordPatch.DeviceLastModifiedDate">
            <summary>
            Gets and sets the property DeviceLastModifiedDate. The last modified date of the client
            device.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.RecordPatch.Key">
            <summary>
            Gets and sets the property Key. The key associated with the record patch.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.RecordPatch.Op">
            <summary>
            Gets and sets the property Op. An operation, either replace or remove.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.RecordPatch.SyncCount">
            <summary>
            Gets and sets the property SyncCount. Last known server sync count for this record.
            Set to 0 if unknown.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.RecordPatch.Value">
            <summary>
            Gets and sets the property Value. The value associated with the record patch.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.ResourceConflictException">
            <summary>
             CognitoSync exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoSync.Model.ResourceConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CognitoSync.Model.ResourceNotFoundException">
            <summary>
             CognitoSync exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoSync.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CognitoSync.Model.TooManyRequestsException">
            <summary>
             CognitoSync exception
             </summary>
        </member>
        <member name="M:Amazon.CognitoSync.Model.TooManyRequestsException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyRequestsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.CognitoSync.Model.UpdateRecordsRequest">
            <summary>
            Container for the parameters to the UpdateRecords operation.
            Posts updates to records and add and delete records for a dataset and user.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.UpdateRecordsRequest.ClientContext">
            <summary>
            Gets and sets the property ClientContext.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.UpdateRecordsRequest.DatasetName">
            <summary>
            Gets and sets the property DatasetName. A string of up to 128 characters. Allowed
            characters are a-z, A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot).
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.UpdateRecordsRequest.IdentityId">
            <summary>
            Gets and sets the property IdentityId. A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.UpdateRecordsRequest.IdentityPoolId">
            <summary>
            Gets and sets the property IdentityPoolId. A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.UpdateRecordsRequest.RecordPatches">
            <summary>
            Gets and sets the property RecordPatches.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.UpdateRecordsRequest.SyncSessionToken">
            <summary>
            Gets and sets the property SyncSessionToken. The SyncSessionToken returned by a previous
            call to ListRecords for this dataset and identity.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.UpdateRecordsResponse">
            <summary>
            Configuration for accessing Amazon UpdateRecords service
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Model.UpdateRecordsResult">
            <summary>
            Returned for a successful UpdateRecordsRequest.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.UpdateRecordsResult.Records">
            <summary>
            Gets and sets the property Records. A list of records that have been updated.
            </summary>
        </member>
        <member name="P:Amazon.CognitoSync.Model.UpdateRecordsResponse.UpdateRecordsResult">
            <summary>
            Gets and sets the UpdateRecordsResult property.
            Represents the output of a UpdateRecords operation.
            </summary>
        </member>
        <member name="T:Amazon.CognitoSync.Operation">
            <summary>
            Constants used for properties of type Operation.
            </summary>
        </member>
        <member name="F:Amazon.CognitoSync.Operation.Remove">
            <summary>
            Constant Remove for Operation
            </summary>
        </member>
        <member name="F:Amazon.CognitoSync.Operation.Replace">
            <summary>
            Constant Replace for Operation
            </summary>
        </member>
        <member name="M:Amazon.CognitoSync.Operation.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.CognitoSync.Operation.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.AmazonDynamoDBClient">
             <summary>
             Implementation for accessing DynamoDB
            
             Amazon DynamoDB    <b>Overview</b>    
             <para>
             This is the Amazon DynamoDB API Reference. This guide provides descriptions and samples
             of the low-level      DynamoDB API. For information about DynamoDB application development,
             go to the <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/">Amazon
             DynamoDB Developer Guide</a>.
             </para>
                 
             <para>
             Instead of making the requests to the low-level DynamoDB API directly from your application,
             we      recommend that you use the AWS Software Development Kits (SDKs). The easy-to-use
             libraries in      the AWS SDKs make it unnecessary to call the low-level DynamoDB
             API directly from your      application. The libraries take care of request authentication,
             serialization, and connection      management. For more information, go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/UsingAWSSDK.html">Using
             the AWS        SDKs with DynamoDB</a> in the <i>Amazon DynamoDB Developer Guide</i>.
             </para>
                 
             <para>
             If you decide to code against the low-level DynamoDB API directly, you will need to
             write the      necessary code to authenticate your requests. For more information
             on signing your requests,      go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/API.html">Using
             the DynamoDB API</a> in the      <i>Amazon DynamoDB Developer Guide</i>.
             </para>
                 
             <para>
             The following are short descriptions of each low-level API action, organized by function.
             </para>
                 
             <para>
                   <b>Managing Tables</b>    
             </para>
                 
             <para>
                   <ul>        <li>          
             <para>
             <i>CreateTable</i> - Creates a table with user-specified provisioned throughput  
                      settings. You must designate one attribute as the hash primary key for the
             table; you            can optionally designate a second attribute as the range primary
             key. DynamoDB creates            indexes on these key attributes for fast data access.
             Optionally, you can create one or            more secondary indexes, which provide
             fast data access using non-key attributes.
             </para>
                     </li>        <li>          
             <para>
             <i>DescribeTable</i> - Returns metadata for a table, such as table size, status, and
                        index information.
             </para>
                     </li>        <li>          
             <para>
             <i>UpdateTable</i> - Modifies the provisioned throughput settings for a table.   
                     Optionally, you can modify the provisioned throughput settings for global
             secondary indexes on the            table.
             </para>
                     </li>        <li>          
             <para>
             <i>ListTables</i> - Returns a list of all tables associated with the current AWS 
                       account and endpoint.
             </para>
                     </li>        <li>          
             <para>
             <i>DeleteTable</i> - Deletes a table and all of its indexes.
             </para>
                     </li>      </ul>    
             </para>
                 
             <para>
             For conceptual information about managing tables, go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html">Working
             with Tables</a> in the        <i>Amazon DynamoDB Developer Guide</i>.
             </para>
                 
             <para>
                   <b>Reading Data</b>    
             </para>
                 
             <para>
                   <ul>        <li>          
             <para>
             <i>GetItem</i> - Returns a set of attributes for the item that has a given primary
             key.            By default, <i>GetItem</i> performs an eventually consistent read;
             however, applications            can specify a strongly consistent read instead.
             </para>
                     </li>        <li>          
             <para>
             <i>BatchGetItem</i> - Performs multiple <i>GetItem</i> requests for data items using
                        their primary keys, from one table or multiple tables. The response from
                          <i>BatchGetItem</i> has a size limit of 1 MB and returns a maximum of
                        100 items. Both eventually consistent and strongly            consistent
             reads can be used.
             </para>
                     </li>        <li>          
             <para>
             <i>Query</i> - Returns one or more items from a table or a secondary index. You must
             provide a            specific hash key value. You can narrow the scope of the query
             using comparison            operators against a range key value, or on the index key.
             <i>Query</i> supports either            eventual or strong consistency. A single response
             has a size limit of            1 MB.
             </para>
                     </li>        <li>          
             <para>
             <i>Scan</i> - Reads every item in a table; the result set is eventually consistent.
             You            can limit the number of items returned by filtering the data attributes,
             using            conditional expressions. <i>Scan</i> can be used to enable ad-hoc
             querying of a table            against non-key attributes; however, since this is
             a full table scan without using an            index, <i>Scan</i> should not be used
             for any application query use case that requires            predictable performance.
             </para>
                     </li>      </ul>    
             </para>
                 
             <para>
             For conceptual information about reading data, go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html">Working
             with Items</a> and <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html">Query
             and Scan Operations</a> in the        <i>Amazon DynamoDB Developer Guide</i>.
             </para>
                 
             <para>
                   <b>Modifying Data</b>    
             </para>
                 
             <para>
                   <ul>        <li>          
             <para>
             <i>PutItem</i> - Creates a new item, or replaces an existing item with a new item
                        (including all the attributes). By default, if an item in the table already
             exists with            the same primary key, the new item completely replaces the
             existing item. You can use            conditional operators to replace an item only
             if its attribute values match certain            conditions, or to insert a new item
             only if that item doesn't already exist.
             </para>
                     </li>        <li>          
             <para>
             <i>UpdateItem</i> - Modifies the attributes of an existing item. You can also use
                        conditional operators to perform an update only if the item's attribute
             values match            certain conditions.
             </para>
                     </li>        <li>          
             <para>
             <i>DeleteItem</i> - Deletes an item in a table by primary key. You can use conditional
                        operators to perform a delete an item only if the item's attribute values
             match certain            conditions.
             </para>
                     </li>        <li>          
             <para>
             <i>BatchWriteItem</i> - Performs multiple <i>PutItem</i> and <i>DeleteItem</i> requests
                        across multiple tables in a single request. A failure of any request(s)
             in the batch            will not cause the entire <i>BatchWriteItem</i> operation
             to fail. Supports batches of            up to 25 items to put or delete, with a maximum
             total            request size of 1 MB. 
             </para>
                     </li>      </ul>    
             </para>
                 
             <para>
             For conceptual information about modifying data, go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html">Working
             with Items</a> and <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html">Query
             and Scan Operations</a> in the        <i>Amazon DynamoDB Developer Guide</i>.
             </para>
             </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.IAmazonDynamoDB">
             <summary>
             Interface for accessing DynamoDB
            
             Amazon DynamoDB    <b>Overview</b>    
             <para>
             This is the Amazon DynamoDB API Reference. This guide provides descriptions and samples
             of the low-level      DynamoDB API. For information about DynamoDB application development,
             go to the <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/">Amazon
             DynamoDB Developer Guide</a>.
             </para>
                 
             <para>
             Instead of making the requests to the low-level DynamoDB API directly from your application,
             we      recommend that you use the AWS Software Development Kits (SDKs). The easy-to-use
             libraries in      the AWS SDKs make it unnecessary to call the low-level DynamoDB
             API directly from your      application. The libraries take care of request authentication,
             serialization, and connection      management. For more information, go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/UsingAWSSDK.html">Using
             the AWS        SDKs with DynamoDB</a> in the <i>Amazon DynamoDB Developer Guide</i>.
             </para>
                 
             <para>
             If you decide to code against the low-level DynamoDB API directly, you will need to
             write the      necessary code to authenticate your requests. For more information
             on signing your requests,      go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/API.html">Using
             the DynamoDB API</a> in the      <i>Amazon DynamoDB Developer Guide</i>.
             </para>
                 
             <para>
             The following are short descriptions of each low-level API action, organized by function.
             </para>
                 
             <para>
                   <b>Managing Tables</b>    
             </para>
                 
             <para>
                   <ul>        <li>          
             <para>
             <i>CreateTable</i> - Creates a table with user-specified provisioned throughput  
                      settings. You must designate one attribute as the hash primary key for the
             table; you            can optionally designate a second attribute as the range primary
             key. DynamoDB creates            indexes on these key attributes for fast data access.
             Optionally, you can create one or            more secondary indexes, which provide
             fast data access using non-key attributes.
             </para>
                     </li>        <li>          
             <para>
             <i>DescribeTable</i> - Returns metadata for a table, such as table size, status, and
                        index information.
             </para>
                     </li>        <li>          
             <para>
             <i>UpdateTable</i> - Modifies the provisioned throughput settings for a table.   
                     Optionally, you can modify the provisioned throughput settings for global
             secondary indexes on the            table.
             </para>
                     </li>        <li>          
             <para>
             <i>ListTables</i> - Returns a list of all tables associated with the current AWS 
                       account and endpoint.
             </para>
                     </li>        <li>          
             <para>
             <i>DeleteTable</i> - Deletes a table and all of its indexes.
             </para>
                     </li>      </ul>    
             </para>
                 
             <para>
             For conceptual information about managing tables, go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html">Working
             with Tables</a> in the        <i>Amazon DynamoDB Developer Guide</i>.
             </para>
                 
             <para>
                   <b>Reading Data</b>    
             </para>
                 
             <para>
                   <ul>        <li>          
             <para>
             <i>GetItem</i> - Returns a set of attributes for the item that has a given primary
             key.            By default, <i>GetItem</i> performs an eventually consistent read;
             however, applications            can specify a strongly consistent read instead.
             </para>
                     </li>        <li>          
             <para>
             <i>BatchGetItem</i> - Performs multiple <i>GetItem</i> requests for data items using
                        their primary keys, from one table or multiple tables. The response from
                          <i>BatchGetItem</i> has a size limit of 1 MB and returns a maximum of
                        100 items. Both eventually consistent and strongly            consistent
             reads can be used.
             </para>
                     </li>        <li>          
             <para>
             <i>Query</i> - Returns one or more items from a table or a secondary index. You must
             provide a            specific hash key value. You can narrow the scope of the query
             using comparison            operators against a range key value, or on the index key.
             <i>Query</i> supports either            eventual or strong consistency. A single response
             has a size limit of            1 MB.
             </para>
                     </li>        <li>          
             <para>
             <i>Scan</i> - Reads every item in a table; the result set is eventually consistent.
             You            can limit the number of items returned by filtering the data attributes,
             using            conditional expressions. <i>Scan</i> can be used to enable ad-hoc
             querying of a table            against non-key attributes; however, since this is
             a full table scan without using an            index, <i>Scan</i> should not be used
             for any application query use case that requires            predictable performance.
             </para>
                     </li>      </ul>    
             </para>
                 
             <para>
             For conceptual information about reading data, go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html">Working
             with Items</a> and <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html">Query
             and Scan Operations</a> in the        <i>Amazon DynamoDB Developer Guide</i>.
             </para>
                 
             <para>
                   <b>Modifying Data</b>    
             </para>
                 
             <para>
                   <ul>        <li>          
             <para>
             <i>PutItem</i> - Creates a new item, or replaces an existing item with a new item
                        (including all the attributes). By default, if an item in the table already
             exists with            the same primary key, the new item completely replaces the
             existing item. You can use            conditional operators to replace an item only
             if its attribute values match certain            conditions, or to insert a new item
             only if that item doesn't already exist.
             </para>
                     </li>        <li>          
             <para>
             <i>UpdateItem</i> - Modifies the attributes of an existing item. You can also use
                        conditional operators to perform an update only if the item's attribute
             values match            certain conditions.
             </para>
                     </li>        <li>          
             <para>
             <i>DeleteItem</i> - Deletes an item in a table by primary key. You can use conditional
                        operators to perform a delete an item only if the item's attribute values
             match certain            conditions.
             </para>
                     </li>        <li>          
             <para>
             <i>BatchWriteItem</i> - Performs multiple <i>PutItem</i> and <i>DeleteItem</i> requests
                        across multiple tables in a single request. A failure of any request(s)
             in the batch            will not cause the entire <i>BatchWriteItem</i> operation
             to fail. Supports batches of            up to 25 items to put or delete, with a maximum
             total            request size of 1 MB. 
             </para>
                     </li>      </ul>    
             </para>
                 
             <para>
             For conceptual information about modifying data, go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html">Working
             with Items</a> and <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html">Query
             and Scan Operations</a> in the        <i>Amazon DynamoDB Developer Guide</i>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.BatchGetItemAsync(Amazon.DynamoDBv2.Model.BatchGetItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the BatchGetItem operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the BatchGetItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.BatchWriteItemAsync(Amazon.DynamoDBv2.Model.BatchWriteItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the BatchWriteItem operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the BatchWriteItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.CreateTableAsync(Amazon.DynamoDBv2.Model.CreateTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateTable operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.DeleteItemAsync(Amazon.DynamoDBv2.Model.DeleteItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteItem operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.DeleteTableAsync(Amazon.DynamoDBv2.Model.DeleteTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteTable operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.DescribeTableAsync(Amazon.DynamoDBv2.Model.DescribeTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeTable operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.GetItemAsync(Amazon.DynamoDBv2.Model.GetItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetItem operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.ListTablesAsync(Amazon.DynamoDBv2.Model.ListTablesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListTables operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTables operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.PutItemAsync(Amazon.DynamoDBv2.Model.PutItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutItem operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.QueryAsync(Amazon.DynamoDBv2.Model.QueryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Query operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Query operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.ScanAsync(Amazon.DynamoDBv2.Model.ScanRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Scan operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Scan operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.UpdateItemAsync(Amazon.DynamoDBv2.Model.UpdateItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateItem operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.IAmazonDynamoDB.UpdateTableAsync(Amazon.DynamoDBv2.Model.UpdateTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateTable operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonDynamoDBClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDynamoDBClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.DynamoDBv2.AmazonDynamoDBConfig)">
            <summary>
            Constructs AmazonDynamoDBClient with AWS Credentials and an
            AmazonDynamoDBClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonDynamoDBClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonDynamoDBClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDynamoDBClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor(System.String,System.String,Amazon.DynamoDBv2.AmazonDynamoDBConfig)">
            <summary>
            Constructs AmazonDynamoDBClient with AWS Access Key ID, AWS Secret Key and an
            AmazonDynamoDBClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonDynamoDBClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonDynamoDBClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDynamoDBClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.#ctor(System.String,System.String,System.String,Amazon.DynamoDBv2.AmazonDynamoDBConfig)">
            <summary>
            Constructs AmazonDynamoDBClient with AWS Access Key ID, AWS Secret Key and an
            AmazonDynamoDBClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonDynamoDBClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.BatchGetItemAsync(Amazon.DynamoDBv2.Model.BatchGetItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the BatchGetItem operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the BatchGetItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.BatchWriteItemAsync(Amazon.DynamoDBv2.Model.BatchWriteItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the BatchWriteItem operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the BatchWriteItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.CreateTableAsync(Amazon.DynamoDBv2.Model.CreateTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateTable operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.DeleteItemAsync(Amazon.DynamoDBv2.Model.DeleteItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteItem operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.DeleteTableAsync(Amazon.DynamoDBv2.Model.DeleteTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteTable operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.DescribeTableAsync(Amazon.DynamoDBv2.Model.DescribeTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeTable operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.GetItemAsync(Amazon.DynamoDBv2.Model.GetItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetItem operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.ListTablesAsync(Amazon.DynamoDBv2.Model.ListTablesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListTables operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTables operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.PutItemAsync(Amazon.DynamoDBv2.Model.PutItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutItem operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.QueryAsync(Amazon.DynamoDBv2.Model.QueryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Query operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Query operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.ScanAsync(Amazon.DynamoDBv2.Model.ScanRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Scan operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Scan operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.UpdateItemAsync(Amazon.DynamoDBv2.Model.UpdateItemRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateItem operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateItem operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBClient.UpdateTableAsync(Amazon.DynamoDBv2.Model.UpdateTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateTable operation.
            <seealso cref="T:Amazon.DynamoDBv2.IAmazonDynamoDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.AmazonDynamoDBConfig">
            <summary>
            Configuration for accessing Amazon DynamoDB service
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.AmazonDynamoDBConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.AmazonDynamoDBConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.AmazonDynamoDBConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.AsyncSearch`1">
            <summary>
            A strongly-typed object for retrieving search results (Query or Scan)
            from DynamoDB.
            </summary>
            <typeparam name="T"></typeparam>
            <summary>
            A strongly-typed object for retrieving search results (Query or Scan)
            from DynamoDB.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.AsyncSearch`1.GetNextSetAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution to get the next set of results from DynamoDB.
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>
            A Task that can be used to poll or wait for results, or both.
            Results will include the next set of result items from DynamoDB.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.AsyncSearch`1.GetRemainingAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution to get all the remaining results from DynamoDB.
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>
            A Task that can be used to poll or wait for results, or both.
            Results will include the remaining result items from DynamoDB.
            </returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.AsyncSearch`1.IsDone">
            <summary>
            Flag that, if true, indicates that the search is done
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.DynamoDBAttribute">
            <summary>
            Base DynamoDB attribute.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.DynamoDBTableAttribute">
            <summary>
            DynamoDB attribute that marks a class.
            Specifies that this object can be stored in DynamoDB, the name
            of the target table, and if attribute names must be automatically
            converted to lowerCamelCase.
            
            Need not be declared on subclasses if present on base class.
            Can be defined on subclasses to specify different target table
            or specify different attribute casing.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.DynamoDBIgnoreAttribute">
            <summary>
            DynamoDB attribute that directs the specified attribute not to
            be included when saving or loading objects.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.DynamoDBRenamableAttribute">
            <summary>
            DynamoDB property attribute.
            Can be used to specify an alternative attribute name or configure
            a custom converter.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBRenamableAttribute.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBRenamableAttribute.#ctor(System.String)">
            <summary>
            Constructor that specifies an alternate attribute name
            </summary>
            <param name="attributeName">
            Name of attribute to be associated with property or field.
            </param>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBRenamableAttribute.AttributeName">
            <summary>
            Name of attribute that is associated with this member.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.DynamoDBVersionAttribute">
            <summary>
            DynamoDB property that marks up current member as item version.
            At most one member in a class may be marked with this attribute.
            
            Members that are marked as version must be of primitive,
            numeric, integer, nullable type (e.g. int?, long?, byte?)
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.DynamoDBPropertyAttribute">
            <summary>
            DynamoDB property attribute.
            Can be used to specify an alternative attribute name or configure
            a custom converter.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBPropertyAttribute.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBPropertyAttribute.#ctor(System.String)">
            <summary>
            Constructor that specifies an alternate attribute name
            </summary>
            <param name="attributeName">
            Name of attribute to be associated with property or field.
            </param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBPropertyAttribute.#ctor(System.Type)">
            <summary>
            Constructor that specifies a custom converter.
            
            Converter must be the type of a class that implements IPropertyConverter.
            </summary>
            <param name="converter">Custom converter type.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBPropertyAttribute.#ctor(System.String,System.Type)">
            <summary>
            Constructor that specifies an alternate attribute name and a custom converter.
            
            Converter must be the type of a class that implements IPropertyConverter.
            </summary>
            <param name="attributeName">
            Name of attribute to be associated with property or field.
            </param>
            <param name="converter">Custom converter type.</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBPropertyAttribute.Converter">
            <summary>
            Type of the custom converter.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.DynamoDBHashKeyAttribute">
            <summary>
            DynamoDB property that marks up current member as a hash key element.
            Exactly one member in a class must be marked with this attribute.
            
            Members that are marked as hash key must be convertible to
            a Primitive object.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBHashKeyAttribute.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBHashKeyAttribute.#ctor(System.String)">
            <summary>
            Constructor that specifies an alternate attribute name
            </summary>
            <param name="attributeName">
            Name of attribute to be associated with property or field.
            </param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBHashKeyAttribute.#ctor(System.Type)">
            <summary>
            Constructor that specifies a custom converter.
            
            Converter must be the type of a class that implements IPropertyConverter.
            </summary>
            <param name="converter">Custom converter type.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBHashKeyAttribute.#ctor(System.String,System.Type)">
            <summary>
            Constructor that specifies an alternate attribute name and a custom converter.
            
            Converter must be the type of a class that implements IPropertyConverter.
            </summary>
            <param name="attributeName">
            Name of attribute to be associated with property or field.
            </param>
            <param name="converter">Custom converter type.</param>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.DynamoDBRangeKeyAttribute">
            <summary>
            DynamoDB property that marks up current member as range key element (for a hash-and-range primary key).
            At most one member in a class may be marked with this attribute.
            
            Members that are marked as a range key element must be convertible to
            a Primitive object.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBRangeKeyAttribute.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBRangeKeyAttribute.#ctor(System.String)">
            <summary>
            Constructor that specifies an alternate attribute name
            </summary>
            <param name="attributeName">
            Name of attribute to be associated with property or field.
            </param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBRangeKeyAttribute.#ctor(System.Type)">
            <summary>
            Constructor that specifies a custom converter.
            
            Converter must be the type of a class that implements IPropertyConverter.
            </summary>
            <param name="converter">Custom converter type.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBRangeKeyAttribute.#ctor(System.String,System.Type)">
            <summary>
            Constructor that specifies an alternate attribute name and a custom converter.
            
            Converter must be the type of a class that implements IPropertyConverter.
            </summary>
            <param name="attributeName">
            Name of attribute to be associated with property or field.
            </param>
            <param name="converter">Custom converter type.</param>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.DynamoDBGlobalSecondaryIndexHashKeyAttribute">
            DynamoDB property attribute that marks up current member as a hash key element for a Global Secondary Index on a table.
            
            Members that are marked as a Global Secondary Index hash key element must be convertible to a Primitive object.
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBGlobalSecondaryIndexHashKeyAttribute.#ctor(System.String)">
            <summary>
            Constructor that accepts a single inde name.
            </summary>
            <param name="indexName">Name of the Local Secondary Index this range key belongs to.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBGlobalSecondaryIndexHashKeyAttribute.#ctor(System.String[])">
            <summary>
            Constructor that accepts multiple index names.
            </summary>
            <param name="indexNames">Names of the Local Secondary Indexes this range key belongs to.</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBGlobalSecondaryIndexHashKeyAttribute.IndexNames">
            <summary>
            Index associated with this range key
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.DynamoDBGlobalSecondaryIndexRangeKeyAttribute">
            DynamoDB property attribute that marks up current member as range key element for a Global Secondary Index on a table.
            
            Members that are marked as a Global Secondary Index range key element must be convertible to a Primitive object.
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBGlobalSecondaryIndexRangeKeyAttribute.#ctor(System.String)">
            <summary>
            Constructor that accepts a single inde name.
            </summary>
            <param name="indexName">Name of the Local Secondary Index this range key belongs to.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBGlobalSecondaryIndexRangeKeyAttribute.#ctor(System.String[])">
            <summary>
            Constructor that accepts multiple index names.
            </summary>
            <param name="indexNames">Names of the Local Secondary Indexes this range key belongs to.</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBGlobalSecondaryIndexRangeKeyAttribute.IndexNames">
            <summary>
            Index associated with this range key
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.DynamoDBLocalSecondaryIndexRangeKeyAttribute">
            <summary>
            DynamoDB property that marks up current member as range key element for a Local Secondary Index on a table.
            
            Members that are marked as a Local Secondary Index range key element must be convertible to a Primitive object.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBLocalSecondaryIndexRangeKeyAttribute.#ctor(System.String)">
            <summary>
            Constructor that accepts a single inde name.
            </summary>
            <param name="indexName">Name of the Local Secondary Index this range key belongs to.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBLocalSecondaryIndexRangeKeyAttribute.#ctor(System.String[])">
            <summary>
            Constructor that accepts multiple index names.
            </summary>
            <param name="indexNames">Names of the Local Secondary Indexes this range key belongs to.</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBLocalSecondaryIndexRangeKeyAttribute.IndexNames">
            <summary>
            Index associated with this range key
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.BatchGet">
            <summary>
            Represents a non-generic object for retrieving a batch of items
            from a single DynamoDB table
            </summary>
            <summary>
            Represents a non-generic object for retrieving a batch of items
            from a single DynamoDB table
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchGet.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Execute operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.BatchGet.Execute"/>
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchGet.ExecuteHelper(System.Boolean)">
            <summary>
            Executes a server call to batch-get the items requested.
            Populates Results with the retrieved items.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.BatchGet.Results">
            <summary>
            List of results retrieved from DynamoDB.
            Populated after Execute is called.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.BatchGet.ConsistentRead">
            <summary>
            If set to true, a consistent read is issued. Otherwise eventually-consistent is used.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.MultiTableBatchGet">
            <summary>
            Class for retrieving a batch of items from multiple DynamoDB tables,
            using multiple strongly-typed BatchGet objects
            </summary>
            <summary>
            Class for retrieving a batch of items from multiple DynamoDB tables,
            using multiple strongly-typed BatchGet objects
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.MultiTableBatchGet.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Execute operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.MultiTableBatchGet.Execute"/>
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.MultiTableBatchGet.#ctor(Amazon.DynamoDBv2.DataModel.BatchGet[])">
            <summary>
            Constructs a MultiTableBatchGet object from a number of
            BatchGet objects
            </summary>
            <param name="batches">Collection of BatchGet objects</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.MultiTableBatchGet.AddBatch(Amazon.DynamoDBv2.DataModel.BatchGet)">
            <summary>
            Add a BatchGet object to the multi-table batch request
            </summary>
            <param name="batch">BatchGet to add</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.MultiTableBatchGet.TotalKeys">
            <summary>
            Gets the total number of primary keys to be loaded from DynamoDB,
            across all batches
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.BatchGet`1">
            <summary>
            Represents a strongly-typed object for retrieving a batch of items
            from a single DynamoDB table
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchGet`1.AddKey(System.Object)">
            <summary>
            Add a single item to get, identified by its hash primary key.
            </summary>
            <param name="hashKey">Hash key of the item to get</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchGet`1.AddKey(System.Object,System.Object)">
            <summary>
            Add a single item to get, identified by its hash-and-range primary key.
            </summary>
            <param name="hashKey">Hash key of the item to get</param>
            <param name="rangeKey">Range key of the item to get</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchGet`1.AddKey(`0)">
            <summary>
            Add a single item to get.
            </summary>
            <param name="keyObject">Object key of the item to get</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchGet`1.Combine(Amazon.DynamoDBv2.DataModel.BatchGet[])">
            <summary>
            Creates a MultiTableBatchGet object that is a combination
            of the current BatchGet and the specified BatchGets
            </summary>
            <param name="otherBatches">Other BatchGet objects</param>
            <returns>
            MultiTableBatchGet consisting of the multiple BatchGet objects:
            the current batch and the passed-in batches.
            </returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.BatchGet`1.Results">
            <summary>
            List of results retrieved from DynamoDB.
            Populated after Execute is called.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.BatchWrite">
            <summary>
            Represents a non-generic object for writing/deleting a batch of items
            in a single DynamoDB table
            </summary>
            <summary>
            Represents a non-generic object for writing/deleting a batch of items
            in a single DynamoDB table
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchWrite.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Execute operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.BatchWrite.Execute"/>
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchWrite.ExecuteHelper(System.Boolean)">
            <summary>
            Executes a server call to batch-write/delete the items requested.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.MultiTableBatchWrite">
            <summary>
            Class for writing/deleting a batch of items in multiple DynamoDB tables,
            using multiple strongly-typed BatchWrite objects
            </summary>
            <summary>
            Class for writing/deleting a batch of items in multiple DynamoDB tables,
            using multiple strongly-typed BatchWrite objects
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.MultiTableBatchWrite.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Execute operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.MultiTableBatchWrite.Execute"/>
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.MultiTableBatchWrite.#ctor(Amazon.DynamoDBv2.DataModel.BatchWrite[])">
            <summary>
            Constructs a MultiTableBatchGet object from a number of
            BatchGet objects
            </summary>
            <param name="batches">Collection of BatchGet objects</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.MultiTableBatchWrite.AddBatch(Amazon.DynamoDBv2.DataModel.BatchWrite)">
            <summary>
            Add a BatchWrite object to the multi-table batch request
            </summary>
            <param name="batch">BatchGet to add</param>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.BatchWrite`1">
            <summary>
            Represents a strongly-typed object for writing/deleting a batch of items
            in a single DynamoDB table
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchWrite`1.Combine(Amazon.DynamoDBv2.DataModel.BatchWrite[])">
            <summary>
            Creates a MultiTableBatchWrite object that is a combination
            of the current BatchWrite and the specified BatchWrites
            </summary>
            <param name="otherBatches">Other BatchWrite objects</param>
            <returns>
            MultiTableBatchWrite consisting of the multiple BatchWrite objects:
            the current batch and the passed-in batches.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchWrite`1.AddPutItems(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Add a number of items to be put in the current batch operation
            </summary>
            <param name="values">Items to put</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchWrite`1.AddPutItem(`0)">
            <summary>
            Add a single item to be put in the current batch operation
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchWrite`1.AddDeleteItems(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Add a number of items to be deleted in the current batch operation
            </summary>
            <param name="values">Items to be deleted</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchWrite`1.AddDeleteItem(`0)">
            <summary>
            Add a single item to be deleted in the current batch operation.
            </summary>
            <param name="item">Item to be deleted</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchWrite`1.AddDeleteKey(System.Object)">
            <summary>
            Add a single item to be deleted in the current batch operation.
            Item is identified by its hash primary key.
            </summary>
            <param name="hashKey">Hash key of the item to delete</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.BatchWrite`1.AddDeleteKey(System.Object,System.Object)">
            <summary>
            Add a single item to be deleted in the current batch operation.
            Item is identified by its hash-and-range primary key.
            </summary>
            <param name="hashKey">Hash key of the item to delete</param>
            <param name="rangeKey">Range key of the item to delete</param>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.IPropertyConverter">
            <summary>
            Interface for converting arbitrary objects to DynamoDB-supported
            object types.
            
            Implementing type must be public, instantiable, and should have
            a zero-parameter constructor.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IPropertyConverter.ToEntry(System.Object)">
            <summary>
            Convert object to DynamoDBEntry
            </summary>
            <param name="value">Object to be deserialized</param>
            <returns>Object deserialized as DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IPropertyConverter.FromEntry(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)">
            <summary>
            Convert DynamoDBEntry to the specified object
            </summary>
            <param name="entry">DynamoDBEntry to be serialized</param>
            <returns>Serialized object</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.DynamoDBContextConfig">
            <summary>
            Configuration object for setting options on the DynamoDBContext.
            and individual operations.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBContextConfig.ConsistentRead">
            <summary>
            Property that directs DynamoDBContext to use consistent reads.
            If property is not set, behavior defaults to non-consistent reads.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBContextConfig.SkipVersionCheck">
            <summary>
            Property that directs DynamoDBContext to skip version checks
            when saving or deleting an object with a version attribute.
            If property is not set, version checks are performed.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBContextConfig.TableNamePrefix">
            <summary>
            Property that directs DynamoDBContext to prefix all table names
            with a specific string.
            If property is null or empty, no prefix is used and default
            table names are used.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBContextConfig.IgnoreNullValues">
            <summary>
            Property that directs DynamoDBContext to ignore null values
            on attributes during a Save operation.
            If the property is false (or not set), null values will be
            interpreted as directives to delete the specific attribute.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig">
            <summary>
            Configuration object for setting options for individual operations.
            This will override any settings specified by the DynamoDBContext's DynamoDBContextConfig object.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig.OverrideTableName">
            <summary>
            Property that indicates the table to save an object to overriding the DynamoDBTable attribute 
            declared for the type.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig.BackwardQuery">
            <summary>
            Property that indicates a query should traverse the index backward.
            If the property is false (or not set), traversal shall be forward.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig.IndexName">
            <summary>
            Property indicating the name of the index to query against.
            This value is optional if the index name can be inferred from the query call.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig.ConditionalOperator">
            <summary>
            A logical operator to apply to the filter conditions:
            AND - If all of the conditions evaluate to true, then the entire filter evaluates to true.
            OR - If at least one of the conditions evaluate to true, then the entire filter evaluates to true.
            
            Default value is AND.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig.QueryFilter">
            <summary>
            Query filter for the Query operation operation. Evaluates the query results and returns only
            the matching values. If you specify more than one condition, then by default all of the
            conditions must evaluate to true. To match only some conditions, set ConditionalOperator to Or.
            Note: Conditions must be against non-key properties.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.ScanCondition">
            <summary>
            Class describing a single scan condition
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.ScanCondition.#ctor(System.String,Amazon.DynamoDBv2.DocumentModel.ScanOperator,System.Object[])">
            <summary>
            Initializes a ScanCondition with the target property, the
            comparison operator and values being tested against.
            </summary>
            <param name="propertyName">Name of the property</param>
            <param name="op">Comparison operator</param>
            <param name="values">
            Value(s) being tested against.
            
            The values should be of the same type as the property.
            In the cases where the property is a collection, the values
            should be of the same type as the items in the collection.
            </param>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.ScanCondition.PropertyName">
            <summary>
            Name of the property being tested
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.ScanCondition.Operator">
            <summary>
            Comparison operator
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.ScanCondition.Values">
            <summary>
            Values being tested against.
            
            The values should be of the same type as the property.
            In the cases where the property is a collection, the values
            should be of the same type as the items in the collection.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.QueryCondition">
            <summary>
            Class describing a single query condition
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.QueryCondition.#ctor(System.String,Amazon.DynamoDBv2.DocumentModel.QueryOperator,System.Object[])">
            <summary>
            Initializes a ScanCondition with the target property, the
            comparison operator and values being tested against.
            </summary>
            <param name="propertyName">Name of the property</param>
            <param name="op">Comparison operator</param>
            <param name="values">
            Value(s) being tested against.
            
            The values should be of the same type as the property.
            In the cases where the property is a collection, the values
            should be of the same type as the items in the collection.
            </param>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.QueryCondition.PropertyName">
            <summary>
            Name of the property being tested
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.QueryCondition.Operator">
            <summary>
            Comparison operator
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.QueryCondition.Values">
            <summary>
            Values being tested against.
            
            The values should be of the same type as the property.
            In the cases where the property is a collection, the values
            should be of the same type as the items in the collection.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBFlatConfig.ConsistentRead">
            <summary>
            Property that directs DynamoDBContext to use consistent reads.
            If property is not set, behavior defaults to non-consistent reads.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBFlatConfig.SkipVersionCheck">
            <summary>
            Property that directs DynamoDBContext to skip version checks
            when saving or deleting an object with a version attribute.
            If property is not set, version checks are performed.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBFlatConfig.TableNamePrefix">
            <summary>
            Property that directs DynamoDBContext to prefix all table names
            with a specific string.
            If property is null or empty, no prefix is used and default
            table names are used.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBFlatConfig.IgnoreNullValues">
            <summary>
            Property that directs DynamoDBContext to ignore null values
            on attributes during a Save operation.
            If the property is false (or not set), null values will be
            interpreted as directives to delete the specific attribute.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBFlatConfig.OverrideTableName">
            <summary>
            Property that indicates the table to save an object to overriding the DynamoDBTable attribute 
            declared for the type.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBFlatConfig.BackwardQuery">
            <summary>
            Property that indicates a query should traverse the index backward.
            If the property is false (or not set), traversal shall be forward.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBFlatConfig.IndexName">
            <summary>
            Property indicating the name of the index to query against.
            This value is optional if the index name can be inferred from the query call.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBFlatConfig.ConditionalOperator">
            <summary>
            A logical operator to apply to the filter conditions:
            AND - If all of the conditions evaluate to true, then the entire filter evaluates to true.
            OR - If at least one of the conditions evaluate to true, then the entire filter evaluates to true.
            
            Default value is AND.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBFlatConfig.QueryFilter">
            <summary>
            Query filter for the Query operation operation. Evaluates the query results and returns only
            the matching values. If you specify more than one condition, then by default all of the
            conditions must evaluate to true. To match only some conditions, set ConditionalOperator to Or.
            Note: Conditions must be against non-key properties.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.DynamoDBContext">
            <summary>
            Context object for using the DataModel mode of DynamoDB.
            Used to interact with the service, save/load objects, etc.
            </summary>
            <summary>
            Context object for using the DataModel mode of DynamoDB.
            Used to interact with the service, save/load objects, etc.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.IDynamoDBContext">
            <summary>
            Context interface for using the DataModel mode of DynamoDB.
            Used to interact with the service, save/load objects, etc.
            </summary>
            <summary>
            Context interface for using the DataModel mode of DynamoDB.
            Used to interact with the service, save/load objects, etc.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.SaveAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Save operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Save"/>
            </summary>
            <typeparam name="T">Type to save as.</typeparam>
            <param name="value">Object to save.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.SaveAsync``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Save operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Save"/>
            </summary>
            <typeparam name="T">Type to save as.</typeparam>
            <param name="value">Object to save.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.LoadAsync``1(System.Object,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.LoadAsync``1(System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.LoadAsync``1(System.Object,System.Object,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="rangeKey">Range key element of the target item.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.LoadAsync``1(System.Object,System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="rangeKey">Range key element of the target item.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.LoadAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="keyObject">Key of the target item.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.LoadAsync``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="keyObject">Key of the target item.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.DeleteAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="value">Object to delete.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.DeleteAsync``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="value">Object to delete.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.DeleteAsync``1(System.Object,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.DeleteAsync``1(System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.DeleteAsync``1(System.Object,System.Object,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="rangeKey">Range key element of the object to delete.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.DeleteAsync``1(System.Object,System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="rangeKey">Range key element of the object to delete.</param>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.ExecuteBatchGetAsync(Amazon.DynamoDBv2.DataModel.BatchGet[],System.Threading.CancellationToken)">
            <summary>
            Issues a batch-get request with multiple batches.
            
            Results are stored in the individual batches.
            </summary>
            <param name="batches">
            Configured BatchGet objects
            </param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.ExecuteBatchWriteAsync(Amazon.DynamoDBv2.DataModel.BatchWrite[],System.Threading.CancellationToken)">
            <summary>
            Issues a batch-write request with multiple batches.
            </summary>
            <param name="batches">
            Configured BatchWrite objects
            </param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.ScanAsync``1(System.Collections.Generic.IEnumerable{Amazon.DynamoDBv2.DataModel.ScanCondition},Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
             Configures an async Scan operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="conditions">
            Conditions that the results should meet.
            </param>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
            <returns>AsyncSearch which can be used to retrieve DynamoDB data.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.FromScanAsync``1(Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
             Configures an async Scan operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="scanConfig">Scan request object.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>AsyncSearch which can be used to retrieve DynamoDB data.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.QueryAsync``1(System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Configures an async Query operation against DynamoDB, finding items
            that match the specified hash primary key.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKeyValue">Hash key of the items to query.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>AsyncSearch which can be used to retrieve DynamoDB data.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.QueryAsync``1(System.Object,Amazon.DynamoDBv2.DocumentModel.QueryOperator,System.Collections.Generic.IEnumerable{System.Object},Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Configures an async Query operation against DynamoDB, finding items
            that match the specified range element condition for a hash-and-range primary key.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKeyValue">Hash key of the items to query.</param>
            <param name="op">Operation of the condition.</param>
            <param name="values">
            Value(s) of the condition.
            For all operations except QueryOperator.Between, values should be one value.
            For QueryOperator.Betwee, values should be two values.
            </param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>AsyncSearch which can be used to retrieve DynamoDB data.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.FromQueryAsync``1(Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Configures an async Query operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="queryConfig">Query request object.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>AsyncSearch which can be used to retrieve DynamoDB data.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.ToDocument``1(``0)">
            <summary>
            Serializes an object to a Document.
            </summary>
            <typeparam name="T">Type to serialize as.</typeparam>
            <param name="value">Object to serialize.</param>
            <returns>Document with attributes populated from object.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.ToDocument``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Serializes an object to a Document.
            </summary>
            <typeparam name="T">Type to serialize as.</typeparam>
            <param name="value">Object to serialize.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>Document with attributes populated from object.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.FromDocument``1(Amazon.DynamoDBv2.DocumentModel.Document)">
            <summary>
            Deserializes a document to an instance of type T.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="document">Document with properties to use.</param>
            <returns>
            Object of type T, populated with properties from the document.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.FromDocument``1(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Deserializes a document to an instance of type T.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="document">Document with properties to use.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>
            Object of type T, populated with properties from the document.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.FromDocuments``1(System.Collections.Generic.IEnumerable{Amazon.DynamoDBv2.DocumentModel.Document})">
            <summary>
            Deserializes a collections of documents to a collection of instances of type T.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="documents">Documents to deserialize.</param>
            <returns>
            Collection of items of type T, each populated with properties from a corresponding document.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.IDynamoDBContext.FromDocuments``1(System.Collections.Generic.IEnumerable{Amazon.DynamoDBv2.DocumentModel.Document},Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Deserializes a collections of documents to a collection of instances of type T.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="documents">Documents to deserialize.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>
            Collection of items of type T, each populated with properties from a corresponding document.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.SaveAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Save operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Save"/>
            </summary>
            <typeparam name="T">Type to save as.</typeparam>
            <param name="value">Object to save.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.SaveAsync``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Save operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Save"/>
            </summary>
            <typeparam name="T">Type to save as.</typeparam>
            <param name="value">Object to save.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.LoadAsync``1(System.Object,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.LoadAsync``1(System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.LoadAsync``1(System.Object,System.Object,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="rangeKey">Range key element of the target item.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.LoadAsync``1(System.Object,System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="hashKey">Hash key element of the target item.</param>
            <param name="rangeKey">Range key element of the target item.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.LoadAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="keyObject">Key of the target item.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.LoadAsync``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Load operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Load"/>
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="keyObject">Key of the target item.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.DeleteAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="value">Object to delete.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.DeleteAsync``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="value">Object to delete.</param>
            <param name="operationConfig">Overriding configuration.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.DeleteAsync``1(System.Object,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.DeleteAsync``1(System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.DeleteAsync``1(System.Object,System.Object,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="rangeKey">Range key element of the object to delete.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.DeleteAsync``1(System.Object,System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Delete operation.
            <seealso cref="!:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Delete"/>
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKey">Hash key element of the object to delete.</param>
            <param name="rangeKey">Range key element of the object to delete.</param>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.ExecuteBatchGetAsync(Amazon.DynamoDBv2.DataModel.BatchGet[])">
            <summary>
            Issues a batch-get request with multiple batches.
            
            Results are stored in the individual batches.
            </summary>
            <param name="batches">
            Configured BatchGet objects
            </param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.ExecuteBatchGetAsync(Amazon.DynamoDBv2.DataModel.BatchGet[],System.Threading.CancellationToken)">
            <summary>
            Issues a batch-get request with multiple batches.
            
            Results are stored in the individual batches.
            </summary>
            <param name="batches">
            Configured BatchGet objects
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.ExecuteBatchWriteAsync(Amazon.DynamoDBv2.DataModel.BatchWrite[],System.Threading.CancellationToken)">
            <summary>
            Issues a batch-write request with multiple batches.
            </summary>
            <param name="batches">
            Configured BatchWrite objects
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.ScanAsync``1(System.Collections.Generic.IEnumerable{Amazon.DynamoDBv2.DataModel.ScanCondition},Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
             Configures an async Scan operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="conditions">
            Conditions that the results should meet.
            </param>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
            <returns>AsyncSearch which can be used to retrieve DynamoDB data.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.FromScanAsync``1(Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
             Configures an async Scan operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="scanConfig">Scan request object.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>AsyncSearch which can be used to retrieve DynamoDB data.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.QueryAsync``1(System.Object,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Configures an async Query operation against DynamoDB, finding items
            that match the specified hash primary key.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKeyValue">Hash key of the items to query.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>AsyncSearch which can be used to retrieve DynamoDB data.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.QueryAsync``1(System.Object,Amazon.DynamoDBv2.DocumentModel.QueryOperator,System.Collections.Generic.IEnumerable{System.Object},Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Configures an async Query operation against DynamoDB, finding items
            that match the specified range element condition for a hash-and-range primary key.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="hashKeyValue">Hash key of the items to query.</param>
            <param name="op">Operation of the condition.</param>
            <param name="values">
            Value(s) of the condition.
            For all operations except QueryOperator.Between, values should be one value.
            For QueryOperator.Betwee, values should be two values.
            </param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>AsyncSearch which can be used to retrieve DynamoDB data.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.FromQueryAsync``1(Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Configures an async Query operation against DynamoDB, finding items
            that match the specified conditions.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="queryConfig">Query request object.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>AsyncSearch which can be used to retrieve DynamoDB data.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.#ctor(Amazon.DynamoDBv2.IAmazonDynamoDB)">
            <summary>
            Constructs a DynamoDBContext object with the specified DynamoDB client.
            Uses default DynamoDBContextConfig object for configuration.
            </summary>
            <param name="client">Client to use for making calls</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.#ctor(Amazon.DynamoDBv2.IAmazonDynamoDB,Amazon.DynamoDBv2.DataModel.DynamoDBContextConfig)">
            <summary>
            Constructs a DynamoDBContext object with the specified DynamoDB client
            and configuration.
            </summary>
            <param name="client">Client to use for making calls</param>
            <param name="config">Configuration to use</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.Finalize">
            <summary>
            The destructor for the client class.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.CreateBatchGet``1">
            <summary>
            Creates a strongly-typed BatchGet object, allowing
            a batch-get operation against DynamoDB.
            </summary>
            <typeparam name="T">Type of objects to get</typeparam>
            <returns>Empty strongly-typed BatchGet object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.CreateBatchGet``1(Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Creates a strongly-typed BatchGet object, allowing
            a batch-get operation against DynamoDB.
            </summary>
            <typeparam name="T">Type of objects to get</typeparam>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
            <returns>Empty strongly-typed BatchGet object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.CreateMultiTableBatchGet(Amazon.DynamoDBv2.DataModel.BatchGet[])">
            <summary>
            Creates a MultiTableBatchGet object, composed of multiple
            individual BatchGet objects.
            </summary>
            <param name="batches">Individual BatchGet objects</param>
            <returns>Composite MultiTableBatchGet object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.CreateBatchWrite``1">
            <summary>
            Creates a strongly-typed BatchWrite object, allowing
            a batch-write operation against DynamoDB.
            </summary>
            <typeparam name="T">Type of objects to write</typeparam>
            <returns>Empty strongly-typed BatchWrite object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.CreateBatchWrite``1(Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Creates a strongly-typed BatchWrite object, allowing
            a batch-write operation against DynamoDB.
            </summary>
            <typeparam name="T">Type of objects to write</typeparam>
            <param name="operationConfig">Config object which can be used to override that table used.</param>
            <returns>Empty strongly-typed BatchWrite object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.CreateMultiTableBatchWrite(Amazon.DynamoDBv2.DataModel.BatchWrite[])">
            <summary>
            Creates a MultiTableBatchWrite object, composed of multiple
            individual BatchWrite objects.
            </summary>
            <param name="batches">Individual BatchWrite objects</param>
            <returns>Composite MultiTableBatchWrite object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.ToDocument``1(``0)">
            <summary>
            Serializes an object to a Document.
            </summary>
            <typeparam name="T">Type to serialize as.</typeparam>
            <param name="value">Object to serialize.</param>
            <returns>Document with attributes populated from object.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.ToDocument``1(``0,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Serializes an object to a Document.
            </summary>
            <typeparam name="T">Type to serialize as.</typeparam>
            <param name="value">Object to serialize.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>Document with attributes populated from object.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.FromDocument``1(Amazon.DynamoDBv2.DocumentModel.Document)">
            <summary>
            Deserializes a document to an instance of type T.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="document">Document with properties to use.</param>
            <returns>
            Object of type T, populated with properties from the document.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.FromDocument``1(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Deserializes a document to an instance of type T.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="document">Document with properties to use.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>
            Object of type T, populated with properties from the document.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.FromDocuments``1(System.Collections.Generic.IEnumerable{Amazon.DynamoDBv2.DocumentModel.Document})">
            <summary>
            Deserializes a collections of documents to a collection of instances of type T.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="documents">Documents to deserialize.</param>
            <returns>
            Collection of items of type T, each populated with properties from a corresponding document.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.DynamoDBContext.FromDocuments``1(System.Collections.Generic.IEnumerable{Amazon.DynamoDBv2.DocumentModel.Document},Amazon.DynamoDBv2.DataModel.DynamoDBOperationConfig)">
            <summary>
            Deserializes a collections of documents to a collection of instances of type T.
            </summary>
            <typeparam name="T">Type to populate.</typeparam>
            <param name="documents">Documents to deserialize.</param>
            <param name="operationConfig">Config object which can be used to override the table used.</param>
            <returns>
            Collection of items of type T, each populated with properties from a corresponding document.
            </returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.DynamoDBContext.ConverterCache">
            <summary>
            This cache is a way to store Converters for objects which provides a way to expand Context
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.PropertyStorage.Validate(Amazon.DynamoDBv2.DataModel.DynamoDBContext)">
            <summary>
            Validates configurations and sets required fields
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DataModel.S3Link">
            <summary>
            S3Link is an object that provides a connection to an S3 resource
            that can be stored in a DynamoDB field through DynamoDBContext
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.S3Link.Create(Amazon.DynamoDBv2.DataModel.DynamoDBContext,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Creates an S3Link that can be used to managed an S3 connection
            </summary>
            <param name="context">The context that is handling the S3Link</param>
            <param name="bucket">The bucket the S3Link should manage</param>
            <param name="key">The key that S3Link should store and download from</param>
            <param name="region">The region of the S3 resource</param>
            <returns>A new S3Link object that can upload and download to the target bucket</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.S3Link.SetACL(Amazon.S3.S3CannedACL)">
            <summary>
            Sets the S3 Object's ACL
            </summary>
            <param name="cannedACL">CannedACL assigned to object</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.S3Link.SetACL(Amazon.S3.Model.S3AccessControlList)">
            <summary>
            Sets the S3 Objects's ACL
            </summary>
            <param name="acl">ACL assigned to the S3 object</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.S3Link.GetPreSignedURL(System.DateTime)">
            <summary>
            Provides a URL for accessing the S3 object managed by S3Link
            </summary>
            <param name="expiration">The time the link should become invalid</param>
            <returns>A URL directing to the S3 object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.S3Link.UploadFromAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Uploads the specified file and stores it in the specified bucket with the provided key from construction.
            </summary>
            <param name="sourcePath">Path of the file to be uploaded.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>An asynchronous task of the request</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.S3Link.UploadFromAsync(Windows.Storage.IStorageFile,System.Threading.CancellationToken)">
            <summary>
            Uploads the specified file and stores it in the specified bucket with the provided key from construction.
            </summary>
            <param name="sourceFile">Path of the file to be uploaded.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>An asynchronous task of the request</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DataModel.S3Link.DownloadToAsync(Windows.Storage.IStorageFile,System.Threading.CancellationToken)">
            <summary>
            Downloads the file from the S3Link's specified bucket and key then saves it in the given path. 
            Creates directories and the file if they do not already exist.
            </summary>
            <param name="storageFile">Storage file to download to.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>An asynchronous task of the request</returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.S3Link.Key">
            <summary>
            The Key that S3Link stores and downloads a resource to and from
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.S3Link.BucketName">
            <summary>
            The name of the target Bucket for the managed resource
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.S3Link.Region">
            <summary>
            The region the S3 resource is in
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DataModel.S3Link.RegionAsEndpoint">
            <summary>
            Looks up RegionEndpoint based on region as a string
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.Document">
            <summary>
            A collection of attribute key-value pairs that defines
            an item in DynamoDB.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.#ctor">
            <summary>
            Constructs an empty Document.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.#ctor(System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry})">
            <summary>
            Constructs a Document with the passed-in values as its attribute values.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.IsAttributeChanged(System.String)">
            <summary>
            Returns true if the attribute has been changed.
            </summary>
            <param name="attributeName">Name of the attribute.</param>
            <returns>True if the attribute has been changed.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.IsDirty">
            <summary>
            Returns true if the document contains attributes that have not been saved.
            </summary>
            <returns>True if the document contains attributes that have not been saved.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.TryGetValue(System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry@)">
            <summary>
            Gets the value associated with the specified attribute value.
            </summary>
            <param name="attributeName">Attribute name</param>
            <param name="entry">
            If the specified attribute value is found, returns the value associated with the 
            attribute; otherwise, null.
            </param>
            <returns>True if attribute is found; false otherwise</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.Contains(System.String)">
            <summary>
            Determines if a specific attribute is set on the Document.
            </summary>
            <param name="attributeName">Attribute name</param>
            <returns>Returns true if the specified attribute is found; false otherwise.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.ToAttributeMap">
            <summary>
            Creates a map of attribute names mapped to AttributeValue objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.ToExpectedAttributeMap">
            <summary>
            Creates a map of attribute names mapped to ExpectedAttributeValue objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.ToAttributeUpdateMap(System.Boolean)">
            <summary>
            Creates a map of attribute names mapped to AttributeValueUpdate objects.
            </summary>
            <param name="changedAttributesOnly">If true, only attributes that have been changed will be in the map.</param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.GetAttributeNames">
            <summary>
            Returns the names of all the attributes.
            </summary>
            <returns>List of attribute names.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Document.FromAttributeMap(System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValue})">
            <summary>
            Creates a Document from an attribute map.
            </summary>
            <param name="data">Map of attribute names to attribute values.</param>
            <returns>Document representing the data.</returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Document.Item(System.String)">
            <summary>
            Attribute accessor, allows getting or setting of an individual attribute.
            </summary>
            <param name="key">Name of the attribute.</param>
            <returns>Current value of the attribute.</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet">
            <summary>
            Class for retrieving a batch of Documents from a single DynamoDB table.
            </summary>
            <summary>
            Class for retrieving a batch of Documents from a single DynamoDB table.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Execute operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.Execute"/>
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.#ctor(Amazon.DynamoDBv2.DocumentModel.Table)">
            <summary>
            Constructs a DocumentBatchGet instance for a specific table.
            </summary>
            <param name="targetTable">Table to get items from.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.AddKey(Amazon.DynamoDBv2.DocumentModel.Primitive)">
            <summary>
            Add a single item to get, identified by its hash primary key.
            </summary>
            <param name="hashKey">Hash key element of the item to get.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.AddKey(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.Primitive)">
            <summary>
            Add a single item to get, identified by its hash-and-range primary key.
            </summary>
            <param name="hashKey">Hash key element of the item to get.</param>
            <param name="rangeKey">Range key element of the item to get.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.AddKey(System.Collections.Generic.IDictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry})">
            <summary>
            Add a single item to get, identified by its key.
            </summary>
            <param name="key">Key of the item to get.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.Combine(Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet)">
            <summary>
            Creates a MultiTableDocumentBatchGet object that is a combination
            of the current DocumentBatchGet and the specified DocumentBatchGet.
            </summary>
            <param name="otherBatch">Other DocumentBatchGet object.</param>
            <returns>
            MultiTableDocumentBatchGet consisting of the two DocumentBatchGet
            objects.
            </returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.Results">
            <summary>
            List of results retrieved from DynamoDB.
            Populated after Execute is called.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.AttributesToGet">
            <summary>
            List of attributes to retrieve.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet.ConsistentRead">
            <summary>
            If set to true, a consistent read is issued. Otherwise eventually-consistent is used.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchGet">
            <summary>
            Class for retrieving a batch of Documents from multiple DynamoDB tables.
            </summary>
            <summary>
            Class for retrieving a batch of Documents from multiple DynamoDB tables.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchGet.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Execute operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchGet.Execute"/>
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchGet.#ctor(Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet[])">
            <summary>
            Constructs a MultiTableDocumentBatchGet object from a number of
            DocumentBatchGet objects.
            </summary>
            <param name="batches">Collection of DocumentBatchGet objects.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchGet.AddBatch(Amazon.DynamoDBv2.DocumentModel.DocumentBatchGet)">
            <summary>
            Add a DocumentBatchGet object to the multi-table batch request.
            </summary>
            <param name="batch">DocumentBatchGet to add.</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchGet.Batches">
            <summary>
            List of DocumentBatchGet objects to include in the multi-table
            batch request.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchGet.TotalKeys">
            <summary>
            Total number of primary keys in the multi-table batch request.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.MultiBatchGet">
            <summary>
            Internal class for handling multi-table batch gets.
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.DocumentModel.MultiBatchGet.MaxItemsPerCall">
            <summary>
            Maximum number of items that can be sent in a single BatchGet request
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.MultiBatchGet.GetItems">
            <summary>
            Gets items ocnfigured in Batches from the server
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.MultiBatchGet.Batches">
            <summary>
            Batches that comprise the current BatchGet operation
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite">
            <summary>
            Class for putting and/or deleting a batch of items in a single DynamoDB table.
            </summary>
            <summary>
            Class for putting and/or deleting a batch of items in a single DynamoDB table.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Execute operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite.Execute"/>
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite.#ctor(Amazon.DynamoDBv2.DocumentModel.Table)">
            <summary>
            Constructs a DocumentBatchWrite instance for a specific table.
            </summary>
            <param name="targetTable">Table to get items from.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite.AddKeyToDelete(Amazon.DynamoDBv2.DocumentModel.Primitive)">
            <summary>
            Add a single item to delete, identified by its hash primary key.
            </summary>
            <param name="hashKey">Hash key element of the item to delete.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite.AddKeyToDelete(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.Primitive)">
            <summary>
            Add a single item to delete, identified by its hash-and-range primary key.
            </summary>
            <param name="hashKey">Hash key element of the item to delete.</param>
            <param name="rangeKey">Range key element of the item to delete.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite.AddKeyToDelete(System.Collections.Generic.IDictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry})">
            <summary>
            Add a single item to delete, identified by its key.
            </summary>
            <param name="key">Key of the item to delete.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite.AddItemToDelete(Amazon.DynamoDBv2.DocumentModel.Document)">
            <summary>
            Add a single item to delete, identified by a Document object.
            </summary>
            <param name="document">Document representing the item to be deleted.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite.AddDocumentToPut(Amazon.DynamoDBv2.DocumentModel.Document)">
            <summary>
            Add a single Document to put.
            </summary>
            <param name="document">Document to put.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite.Combine(Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite)">
            <summary>
            Creates a MultiTableDocumentBatchWrite object that is a combination
            of the current DocumentBatchWrite and the specified DocumentBatchWrite.
            </summary>
            <param name="otherBatch">Other DocumentBatchWrite object.</param>
            <returns>
            MultiTableDocumentBatchWrite consisting of the two DocumentBatchWrite
            objects.
            </returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchWrite">
            <summary>
            Class for putting and/or deleting a batch of items in multiple DynamoDB tables.
            </summary>
            <summary>
            Class for putting and/or deleting a batch of items in multiple DynamoDB tables.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchWrite.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Execute operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchWrite.Execute"/>
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchWrite.#ctor(Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite[])">
            <summary>
            Constructs a MultiTableDocumentBatchWrite object from a number of
            DocumentBatchWrite objects.
            </summary>
            <param name="batches">Collection of DocumentBatchWrite objects.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchWrite.AddBatch(Amazon.DynamoDBv2.DocumentModel.DocumentBatchWrite)">
            <summary>
            Add a DocumentBatchWrite object to the multi-table batch request.
            </summary>
            <param name="batch">DocumentBatchWrite to add.</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.MultiTableDocumentBatchWrite.Batches">
            <summary>
            List of DocumentBatchWrite objects to include in the multi-table
            batch request.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.MultiBatchWrite">
            <summary>
            Internal class for handling multi-table batch writes.
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.DocumentModel.MultiBatchWrite.MaxItemsPerCall">
            <summary>
            Maximum number of items that can be sent in a single BatchWrite request
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.DocumentModel.MultiBatchWrite.tableMap">
            <summary>
            Map which stores tables by its name.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.MultiBatchWrite.WriteItems(System.Boolean)">
            <summary>
            Pushes items configured in Batches to the server
            </summary>
            <param name="isAsync"></param>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.MultiBatchWrite.Batches">
            <summary>
            Batches that comprise the current BatchWrite operation
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntryType">
            <summary>
            Enumerator describing type of DynamoDB data
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Abstract class representing an arbitrary DynamoDB attribute value
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsPrimitive">
            <summary>
            Convert DynamoDBEntry to Primitive
            </summary>
            <returns>
            Primitive if DynamoDBEntry is of Primitive type; otherwise null
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsPrimitiveList">
            <summary>
            Convert DynamoDBEntry to PrimitiveList
            </summary>
            <returns>
            AsPrimitiveList if DynamoDBEntry is of AsPrimitiveList type; otherwise null
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsBoolean">
            <summary>
            Explicitly convert DynamoDBEntry to Boolean
            </summary>
            <returns>Boolean value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Boolean)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert Boolean to DynamoDBEntry
            </summary>
            <param name="data">Boolean data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Boolean">
            <summary>
            Explicitly convert DynamoDBEntry to Boolean
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>Boolean value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsByte">
            <summary>
            Explicitly convert DynamoDBEntry to Byte
            </summary>
            <returns>Byte value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Byte)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert Byte to DynamoDBEntry
            </summary>
            <param name="data">Byte data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Byte">
            <summary>
            Explicitly convert DynamoDBEntry to Byte
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>Byte value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsSByte">
            <summary>
            Explicitly convert DynamoDBEntry to SByte
            </summary>
            <returns>SByte value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.SByte)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert SByte to DynamoDBEntry
            </summary>
            <param name="data">SByte data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.SByte">
            <summary>
            Explicitly convert DynamoDBEntry to SByte
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>SByte value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsUShort">
            <summary>
            Explicitly convert DynamoDBEntry to UInt16
            </summary>
            <returns>UInt16 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.UInt16)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert UInt16 to DynamoDBEntry
            </summary>
            <param name="data">UInt16 data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.UInt16">
            <summary>
            Explicitly convert DynamoDBEntry to UInt16
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>UInt16 value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsShort">
            <summary>
            Explicitly convert DynamoDBEntry to Int16
            </summary>
            <returns>Int16 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Int16)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert Int16 to DynamoDBEntry
            </summary>
            <param name="data">Int16 data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Int16">
            <summary>
            Explicitly convert DynamoDBEntry to Int16
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>Int16 value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsUInt">
            <summary>
            Explicitly convert DynamoDBEntry to UInt32
            </summary>
            <returns>UInt32 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.UInt32)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert UInt32 to DynamoDBEntry
            </summary>
            <param name="data">UInt32 data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.UInt32">
            <summary>
            Explicitly convert DynamoDBEntry to UInt32
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>UInt32 value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsInt">
            <summary>
            Explicitly convert DynamoDBEntry to Int32
            </summary>
            <returns>Int32 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Int32)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert Int32 to DynamoDBEntry
            </summary>
            <param name="data">Int32 data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Int32">
            <summary>
            Explicitly convert DynamoDBEntry to Int32
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>Int32 value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsULong">
            <summary>
            Explicitly convert DynamoDBEntry to UInt64
            </summary>
            <returns>UInt64 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.UInt64)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert UInt64 to DynamoDBEntry
            </summary>
            <param name="data">UInt64 data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.UInt64">
            <summary>
            Explicitly convert DynamoDBEntry to UInt64
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>UInt64 value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsLong">
            <summary>
            Explicitly convert DynamoDBEntry to Int64
            </summary>
            <returns>Int64 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Int64)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert Int64 to DynamoDBEntry
            </summary>
            <param name="data">Int64 data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Int64">
            <summary>
            Explicitly convert DynamoDBEntry to Int64
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>Int64 value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsSingle">
            <summary>
            Explicitly convert DynamoDBEntry to Single
            </summary>
            <returns>Single value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Single)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert Single to DynamoDBEntry
            </summary>
            <param name="data">Single data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Single">
            <summary>
            Explicitly convert DynamoDBEntry to Single
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>Single value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsDouble">
            <summary>
            Explicitly convert DynamoDBEntry to Double
            </summary>
            <returns>Double value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Double)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert Double to DynamoDBEntry
            </summary>
            <param name="data">Double data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Double">
            <summary>
            Explicitly convert DynamoDBEntry to Double
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>Double value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsDecimal">
            <summary>
            Explicitly convert DynamoDBEntry to Decimal
            </summary>
            <returns>Decimal value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Decimal)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert Decimal to DynamoDBEntry
            </summary>
            <param name="data">Decimal data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Decimal">
            <summary>
            Explicitly convert DynamoDBEntry to Decimal
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>Decimal value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsChar">
            <summary>
            Explicitly convert DynamoDBEntry to Char
            </summary>
            <returns>Char value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Char)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert Char to DynamoDBEntry
            </summary>
            <param name="data">Char data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Char">
            <summary>
            Explicitly convert DynamoDBEntry to Char
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>Char value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsString">
            <summary>
            Explicitly convert DynamoDBEntry to String
            </summary>
            <returns>String value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.String)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert String to DynamoDBEntry
            </summary>
            <param name="data">String data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.String">
            <summary>
            Explicitly convert DynamoDBEntry to String
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>String value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsDateTime">
            <summary>
            Explicitly convert DynamoDBEntry to DateTime
            </summary>
            <returns>DateTime value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.DateTime)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert DateTime to DynamoDBEntry
            </summary>
            <param name="data">DateTime data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.DateTime">
            <summary>
            Explicitly convert DynamoDBEntry to DateTime
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>DateTime value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsGuid">
            <summary>
            Explicitly convert DynamoDBEntry to Guid
            </summary>
            <returns>Guid value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Guid)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert Guid to DynamoDBEntry
            </summary>
            <param name="data">Guid data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Guid">
            <summary>
            Explicitly convert DynamoDBEntry to Guid
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>Guid value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsByteArray">
            <summary>
            Explicitly convert DynamoDBEntry to byte[]
            </summary>
            <returns>byte[] value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Byte[])~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert byte[] to DynamoDBEntry
            </summary>
            <param name="data">byte[] data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Byte[]">
            <summary>
            Explicitly convert DynamoDBEntry to byte[]
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>byte[] value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsMemoryStream">
            <summary>
            Explicitly convert DynamoDBEntry to MemoryStream
            </summary>
            <returns>MemoryStream value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.IO.MemoryStream)~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert MemoryStream to DynamoDBEntry
            </summary>
            <param name="data">MemoryStream data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.IO.MemoryStream">
            <summary>
            Explicitly convert DynamoDBEntry to MemoryStream
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>MemoryStream value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsListOfPrimitives">
            <summary>
            Explicitly convert DynamoDBEntry to List&lt;Primitive&gt;
            </summary>
            <returns>List&lt;Primitive&gt; value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Collections.Generic.List{Amazon.DynamoDBv2.DocumentModel.Primitive})~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert List&lt;Primitive&gt; to DynamoDBEntry
            </summary>
            <param name="data">List&lt;Primitive&gt; data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Collections.Generic.List{Amazon.DynamoDBv2.DocumentModel.Primitive}">
            <summary>
            Explicitly convert DynamoDBEntry to List&lt;Primitive&gt;
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>List&lt;Primitive&gt; value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsListOfString">
            <summary>
            Explicitly convert DynamoDBEntry to List&lt;String&gt;
            </summary>
            <returns>List&lt;String&gt; value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Collections.Generic.List{System.String})~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert List&lt;String&gt; to DynamoDBEntry
            </summary>
            <param name="data">List&lt;String&gt; data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Collections.Generic.List{System.String}">
            <summary>
            Explicitly convert DynamoDBEntry to List&lt;String&gt;
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>List&lt;String&gt; value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsListOfByteArray">
            <summary>
            Explicitly convert DynamoDBEntry to List&lt;byte[]&gt;
            </summary>
            <returns>List&lt;byte[]&gt; value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Collections.Generic.List{System.Byte[]})~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert List&lt;byte[]&gt; to DynamoDBEntry
            </summary>
            <param name="data">List&lt;byte[]&gt; data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Collections.Generic.List{System.Byte[]}">
            <summary>
            Explicitly convert DynamoDBEntry to List&lt;byte[]&gt;
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>List&lt;byte[]&gt; value of DynamoDBEntry</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.AsListOfMemoryStream">
            <summary>
            Explicitly convert DynamoDBEntry to List&lt;MemoryStream&gt;
            </summary>
            <returns>List&lt;MemoryStream&gt; value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Implicit(System.Collections.Generic.List{System.IO.MemoryStream})~Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry">
            <summary>
            Implicitly convert List&lt;MemoryStream&gt; to DynamoDBEntry
            </summary>
            <param name="data">List&lt;MemoryStream&gt; data to convert</param>
            <returns>DynamoDBEntry representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry.op_Explicit(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry)~System.Collections.Generic.List{System.IO.MemoryStream}">
            <summary>
            Explicitly convert DynamoDBEntry to List&lt;MemoryStream&gt;
            </summary>
            <param name="p">DynamoDBEntry to convert</param>
            <returns>List&lt;MemoryStream&gt; value of DynamoDBEntry</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.ExpectedValue">
            <summary>
            Expected state of an attribute in DynamoDB.
            Exists cannot be set at the same time as Comparison and Values.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.ExpectedValue.#ctor(System.Boolean)">
            <summary>
            Constructs an ExpectedValue with a given Exists value.
            </summary>
            <param name="exists">
            Flag whether the attribute should exist or not.
            </param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.ExpectedValue.#ctor(Amazon.DynamoDBv2.DocumentModel.ScanOperator,Amazon.DynamoDBv2.DocumentModel.Primitive[])">
            <summary>
            Constructs an ExpectedValue with a given comparison and value(s).
            </summary>
            <param name="comparison"></param>
            <param name="values"></param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.ExpectedValue.ToExpectedAttributeValue">
            <summary>
            Converts this ExpectedValue instance to Amazon.DynamoDBv2.Model.ExpectedAttributeValue
            </summary>
            <returns>Amazon.DynamoDBv2.Model.ExpectedAttributeValue</returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ExpectedValue.Exists">
            <summary>
            Flag whether the attribute should exist or not.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ExpectedValue.Comparison">
            <summary>
            Comparison operator for the expected value.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ExpectedValue.Values">
            <summary>
            Values to compare the attribute against.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.ExpectedState">
            <summary>
            Expected state of an item in DynamoDB.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.ExpectedState.#ctor">
            <summary>
            Constructs an empty ExpectedState with ConditionalOeprator set to AND.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.ExpectedState.AddExpected(System.String,System.Boolean)">
            <summary>
            Adds an ExpectedValue with the specific Exists value for the attribute.
            </summary>
            <param name="attributeName">Attribute that is being tested</param>
            <param name="exists">Flag whether the attribute should exist or not.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.ExpectedState.AddExpected(System.String,Amazon.DynamoDBv2.DocumentModel.ScanOperator,Amazon.DynamoDBv2.DocumentModel.Primitive[])">
            <summary>
            Adds an ExpectedValue with the specific Comparison and Values for the attribute.
            </summary>
            <param name="attributeName">Attribute that is being tested</param>
            <param name="comparison">Comparison operator for the expected value.</param>
            <param name="values">Values to compare the attribute against.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.ExpectedState.ToExpectedAttributeMap">
            <summary>
            Creates a map of attribute names mapped to ExpectedAttributeValue objects.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ExpectedState.ExpectedValues">
            <summary>
            Attribute name to ExpectedValue mapping.
            Represents the expected state of a number of attributes of a DynamoDB item.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ExpectedState.ConditionalOperator">
            <summary>
            Operator dictating whether ALL or SOME of the expected values must be true to
            satisfy the overall expected state.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.Filter">
            <summary>
            Filter for use with scan and query operations
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Filter.ToConditions">
            <summary>
            Converts filter to a map of conditions
            </summary>
            <returns>Map from attribute name to condition</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Filter.FromConditions(System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.Condition})">
            <summary>
            Creates a Filter from a conditions map
            </summary>
            <param name="conditions">Map from attribute name to condition</param>
            <returns>Equivalent Filter</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Filter.op_Implicit(Amazon.DynamoDBv2.DocumentModel.Filter)~System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.Condition}">
            <summary>
            Implicitly converts Filter to map of conditions
            </summary>
            <param name="f">Filter to convert</param>
            <returns>Map from attribute name to condition</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Filter.op_Implicit(System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.Condition})~Amazon.DynamoDBv2.DocumentModel.Filter">
            <summary>
            Implicitly converts map of conditions to Filter
            </summary>
            <param name="conditions">Map from attribute name to condition</param>
            <returns>Equivalent Filter</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Filter.AddCondition(System.String,Amazon.DynamoDBv2.Model.Condition)">
            <summary>
            Adds a condition for a specified attribute.
            
            If a condition for the attribute already exists,
            it will be replaced with the new condition.
            </summary>
            <param name="attributeName">Target attribute name</param>
            <param name="condition">Condition to be added</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Filter.RemoveCondition(System.String)">
            <summary>
            Removes a condition for a specific attribute name.
            </summary>
            <param name="attributeName">Target attribute</param>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.ScanFilter">
            <summary>
            Scan filter.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.ScanFilter.AddCondition(System.String,Amazon.DynamoDBv2.DocumentModel.ScanOperator,System.Collections.Generic.List{Amazon.DynamoDBv2.Model.AttributeValue})">
            <summary>
            Adds a condition for a specified attribute that consists
            of an operator and any number of AttributeValues.
            </summary>
            <param name="attributeName">Target attribute name</param>
            <param name="op">Comparison operator</param>
            <param name="values">AttributeValues to compare to</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.ScanFilter.AddCondition(System.String,Amazon.DynamoDBv2.DocumentModel.ScanOperator,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry[])">
            <summary>
            Adds a condition for a specified attribute that consists
            of an operator and any number of values
            </summary>
            <param name="attributeName">Target attribute name</param>
            <param name="op">Comparison operator</param>
            <param name="values">Values to compare to</param>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.QueryFilter">
            <summary>
            Query filter.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.QueryFilter.#ctor">
            <summary>
            Constructs an empty QueryFilter instance
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.QueryFilter.#ctor(System.String,Amazon.DynamoDBv2.DocumentModel.QueryOperator,System.Collections.Generic.List{Amazon.DynamoDBv2.Model.AttributeValue})">
            <summary>
            Constructs an instance of QueryFilter with a single condition.
            More conditions can be added after initialization.
            </summary>
            <param name="attributeName">Target attribute name</param>
            <param name="op">Comparison operator</param>
            <param name="values">Attributes to compare</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.QueryFilter.#ctor(System.String,Amazon.DynamoDBv2.DocumentModel.QueryOperator,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry[])">
            <summary>
            Constructs an instance of QueryFilter with a single condition.
            More conditions can be added after initialization.
            </summary>
            <param name="attributeName">Target attribute name</param>
            <param name="op">Comparison operator</param>
            <param name="values">Attributes to compare</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.QueryFilter.AddCondition(System.String,Amazon.DynamoDBv2.DocumentModel.QueryOperator,System.Collections.Generic.List{Amazon.DynamoDBv2.Model.AttributeValue})">
            <summary>
            Adds a condition for a specified key attribute that consists
            of an operator and any number of AttributeValues.
            </summary>
            <param name="keyAttributeName">Target key attribute name</param>
            <param name="op">Comparison operator</param>
            <param name="values">AttributeValues to compare to</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.QueryFilter.AddCondition(System.String,Amazon.DynamoDBv2.DocumentModel.QueryOperator,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry[])">
            <summary>
            Adds a condition for a specified key attribute that consists
            of an operator and any number of values
            </summary>
            <param name="keyAttributeName">Target key attribute name</param>
            <param name="op">Comparison operator</param>
            <param name="values">Values to compare to</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.QueryFilter.AddCondition(System.String,Amazon.DynamoDBv2.DocumentModel.ScanOperator,System.Collections.Generic.List{Amazon.DynamoDBv2.Model.AttributeValue})">
            <summary>
            Adds a condition for a specified non-key attribute that consists
            of an operator and any number of AttributeValues.
            </summary>
            <param name="nonKeyAttributeName">Target non-key attribute name</param>
            <param name="op">Comparison operator</param>
            <param name="values">AttributeValues to compare to</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.QueryFilter.AddCondition(System.String,Amazon.DynamoDBv2.DocumentModel.ScanOperator,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry[])">
            <summary>
            Adds a condition for a specified non-key attribute that consists
            of an operator and any number of values
            </summary>
            <param name="nonKeyAttributeName">Target non-key attribute name</param>
            <param name="op">Comparison operator</param>
            <param name="values">Values to compare to</param>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            A DynamoDBEntry that represents a primitive DynamoDB type
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.#ctor">
            <summary>
            Constructs an empty Primitive
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.#ctor(System.String)">
            <summary>
            Constructs a Primitive with the specified value.
            Value is stored as a string, not numeric.
            </summary>
            <param name="value">Value of the Primitive</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.#ctor(System.String,System.Boolean)">
            <summary>
            Constructs a Primitive with the specified value
            and specifies whether it should be stored as a number or not.
            </summary>
            <param name="value">Value of the Primitive</param>
            <param name="saveAsNumeric">
            Flag, set to true if value should be treated as a number instead of a string
            </param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.#ctor(System.IO.MemoryStream)">
            <summary>
            Constructs a Binary Primitive with the specified MemoryStream value.
            Note: Primitive's Value is set to the stream's ToArray() response.
            </summary>
            <param name="value">Value of the Primitive</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.#ctor(System.Byte[])">
            <summary>
            Constructs a Binary Primitive with the specified byte[] value.
            </summary>
            <param name="value">Value of the Primitive</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsBoolean">
            <summary>
            Explicitly convert Primitive to Boolean
            </summary>
            <returns>Boolean value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Boolean)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert Boolean to Primitive
            </summary>
            <param name="data">Boolean data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Boolean">
            <summary>
            Explicitly convert Primitive to Boolean
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>Boolean value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsByte">
            <summary>
            Explicitly convert Primitive to Byte
            </summary>
            <returns>Byte value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Byte)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert Byte to Primitive
            </summary>
            <param name="data">Byte data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Byte">
            <summary>
            Explicitly convert Primitive to Byte
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>Byte value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsSByte">
            <summary>
            Explicitly convert Primitive to SByte
            </summary>
            <returns>SByte value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.SByte)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert SByte to Primitive
            </summary>
            <param name="data">SByte data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.SByte">
            <summary>
            Explicitly convert Primitive to SByte
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>SByte value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsUShort">
            <summary>
            Explicitly convert Primitive to UInt16
            </summary>
            <returns>UInt16 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.UInt16)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert UInt16 to Primitive
            </summary>
            <param name="data">UInt16 data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.UInt16">
            <summary>
            Explicitly convert Primitive to UInt16
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>UInt16 value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsShort">
            <summary>
            Explicitly convert Primitive to Int16
            </summary>
            <returns>Int16 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Int16)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert Int16 to Primitive
            </summary>
            <param name="data">Int16 data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Int16">
            <summary>
            Explicitly convert Primitive to Int16
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>Int16 value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsUInt">
            <summary>
            Explicitly convert Primitive to UInt32
            </summary>
            <returns>UInt32 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.UInt32)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert UInt32 to Primitive
            </summary>
            <param name="data">UInt32 data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.UInt32">
            <summary>
            Explicitly convert Primitive to UInt32
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>UInt32 value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsInt">
            <summary>
            Explicitly convert Primitive to Int32
            </summary>
            <returns>Int32 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Int32)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert Int32 to Primitive
            </summary>
            <param name="data">Int32 data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Int32">
            <summary>
            Explicitly convert Primitive to Int32
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>Int32 value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsULong">
            <summary>
            Explicitly convert Primitive to UInt64
            </summary>
            <returns>UInt64 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.UInt64)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert UInt64 to Primitive
            </summary>
            <param name="data">UInt64 data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.UInt64">
            <summary>
            Explicitly convert Primitive to UInt64
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>UInt64 value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsLong">
            <summary>
            Explicitly convert Primitive to Int64
            </summary>
            <returns>Int64 value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Int64)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert Int64 to Primitive
            </summary>
            <param name="data">Int64 data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Int64">
            <summary>
            Explicitly convert Primitive to Int64
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>Int64 value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsSingle">
            <summary>
            Explicitly convert Primitive to Single
            </summary>
            <returns>Single value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Single)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert Single to Primitive
            </summary>
            <param name="data">Single data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Single">
            <summary>
            Explicitly convert Primitive to Single
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>Single value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsDouble">
            <summary>
            Explicitly convert Primitive to Double
            </summary>
            <returns>Double value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Double)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert Double to Primitive
            </summary>
            <param name="data">Double data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Double">
            <summary>
            Explicitly convert Primitive to Double
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>Double value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsDecimal">
            <summary>
            Explicitly convert Primitive to Decimal
            </summary>
            <returns>Decimal value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Decimal)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert Decimal to Primitive
            </summary>
            <param name="data">Decimal data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Decimal">
            <summary>
            Explicitly convert Primitive to Decimal
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>Decimal value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsChar">
            <summary>
            Explicitly convert Primitive to Char
            </summary>
            <returns>Char value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Char)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert Char to Primitive
            </summary>
            <param name="data">Char data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Char">
            <summary>
            Explicitly convert Primitive to Char
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>Char value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsString">
            <summary>
            Explicitly convert Primitive to String
            </summary>
            <returns>String value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.String)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert String to Primitive
            </summary>
            <param name="data">String data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.String">
            <summary>
            Explicitly convert Primitive to String
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>String value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsDateTime">
            <summary>
            Explicitly convert Primitive to DateTime
            </summary>
            <returns>DateTime value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.DateTime)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert DateTime to Primitive
            </summary>
            <param name="data">DateTime data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.DateTime">
            <summary>
            Explicitly convert Primitive to DateTime
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>DateTime value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsGuid">
            <summary>
            Explicitly convert Primitive to Guid
            </summary>
            <returns>Guid value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Guid)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert Guid to Primitive
            </summary>
            <param name="data">Guid data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Guid">
            <summary>
            Explicitly convert Primitive to Guid
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>Guid value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsByteArray">
            <summary>
            Explicitly convert Primitive to byte[]
            </summary>
            <returns>byte[] value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.Byte[])~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert byte[] to Primitive
            </summary>
            <param name="data">byte[] data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.Byte[]">
            <summary>
            Explicitly convert Primitive to byte[]
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>byte[] value of Primitive</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.AsMemoryStream">
            <summary>
            Explicitly convert Primitive to MemoryStream
            </summary>
            <returns>MemoryStream value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Implicit(System.IO.MemoryStream)~Amazon.DynamoDBv2.DocumentModel.Primitive">
            <summary>
            Implicitly convert MemoryStream to Primitive
            </summary>
            <param name="data">MemoryStream data to convert</param>
            <returns>Primitive representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Primitive.op_Explicit(Amazon.DynamoDBv2.DocumentModel.Primitive)~System.IO.MemoryStream">
            <summary>
            Explicitly convert Primitive to MemoryStream
            </summary>
            <param name="p">Primitive to convert</param>
            <returns>MemoryStream value of Primitive</returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Primitive.Value">
            <summary>
            Value of the Primitive.
            If Type is String or Numeric, this property is a string.
            If Type is Binary, this property is a byte array.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Primitive.Type">
            <summary>
            Type of this primitive object
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.PrimitiveList">
            <summary>
            A DynamoDBEntry that represents a primitive list DynamoDB type
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.#ctor">
            <summary>
            Constructs an empty PrimitiveList.
            Values are configured to be saved as strings.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.#ctor(Amazon.DynamoDBv2.DocumentModel.DynamoDBEntryType)">
            <summary>
            Constructs an empty PrimitiveList and specifies
            the type of its elements.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.Add(Amazon.DynamoDBv2.DocumentModel.Primitive)">
            <summary>
            Adds a Primitive to the end of the list.
            </summary>
            <param name="value">Primitive to add.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.AsListOfPrimitives">
            <summary>
            Explicitly convert PrimitiveList to List&lt;Primitive&gt;
            </summary>
            <returns>List&lt;Primitive&gt; value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.op_Implicit(System.Collections.Generic.List{Amazon.DynamoDBv2.DocumentModel.Primitive})~Amazon.DynamoDBv2.DocumentModel.PrimitiveList">
            <summary>
            Implicitly convert List&lt;Primitive&gt; to PrimitiveList
            </summary>
            <param name="data">List&lt;Primitive&gt; data to convert</param>
            <returns>PrimitiveList representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.op_Explicit(Amazon.DynamoDBv2.DocumentModel.PrimitiveList)~System.Collections.Generic.List{Amazon.DynamoDBv2.DocumentModel.Primitive}">
            <summary>
            Explicitly convert PrimitiveList to List&lt;Primitive&gt;
            </summary>
            <param name="p">PrimitiveList to convert</param>
            <returns>List&lt;Primitive&gt; value of PrimitiveList</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.AsListOfString">
            <summary>
            Explicitly convert PrimitiveList to List&lt;String&gt;
            </summary>
            <returns>List&lt;String&gt; value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.op_Implicit(System.Collections.Generic.List{System.String})~Amazon.DynamoDBv2.DocumentModel.PrimitiveList">
            <summary>
            Implicitly convert List&lt;String&gt; to PrimitiveList
            </summary>
            <param name="data">List&lt;String&gt; data to convert</param>
            <returns>PrimitiveList representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.op_Explicit(Amazon.DynamoDBv2.DocumentModel.PrimitiveList)~System.Collections.Generic.List{System.String}">
            <summary>
            Explicitly convert PrimitiveList to List&lt;String&gt;
            </summary>
            <param name="p">PrimitiveList to convert</param>
            <returns>List&lt;String&gt; value of PrimitiveList</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.AsListOfByteArray">
            <summary>
            Explicitly convert PrimitiveList to byte[]
            </summary>
            <returns>List&lt;byte[]&gt; value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.op_Implicit(System.Collections.Generic.List{System.Byte[]})~Amazon.DynamoDBv2.DocumentModel.PrimitiveList">
            <summary>
            Implicitly convert List&lt;byte[]&gt; to PrimitiveList
            </summary>
            <param name="data">List&lt;byte[]&gt; data to convert</param>
            <returns>PrimitiveList representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.op_Explicit(Amazon.DynamoDBv2.DocumentModel.PrimitiveList)~System.Collections.Generic.List{System.Byte[]}">
            <summary>
            Explicitly convert PrimitiveList to List&lt;byte[]&gt;
            </summary>
            <param name="p">PrimitiveList to convert</param>
            <returns>List&lt;byte[]&gt; value of PrimitiveList</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.AsListOfMemoryStream">
            <summary>
            Explicitly convert PrimitiveList to List&lt;MemoryStream&gt;
            </summary>
            <returns>List&lt;MemoryStream&gt; value of this object</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.op_Implicit(System.Collections.Generic.List{System.IO.MemoryStream})~Amazon.DynamoDBv2.DocumentModel.PrimitiveList">
            <summary>
            Implicitly convert List&lt;MemoryStream&gt; to PrimitiveList
            </summary>
            <param name="data">List&lt;MemoryStream&gt; data to convert</param>
            <returns>PrimitiveList representing the data</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.op_Explicit(Amazon.DynamoDBv2.DocumentModel.PrimitiveList)~System.Collections.Generic.List{System.IO.MemoryStream}">
            <summary>
            Explicitly convert PrimitiveList to List&lt;MemoryStream&gt;
            </summary>
            <param name="p">PrimitiveList to convert</param>
            <returns>List&lt;MemoryStream&gt; value of PrimitiveList</returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.Entries">
            <summary>
            Collection of Primitive entries
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.Type">
            <summary>
            Type of Primitive items in the list
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.PrimitiveList.Item(System.Int32)">
            <summary>
            Gets or sets Primitive at a specific location in the list.
            </summary>
            <param name="i">Index of the Primitive in question.</param>
            <returns>Primitive in question.</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.Search">
            <summary>
            Search response object
            </summary>
            <summary>
            Search response object
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Search.GetNextSetAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetNextSet operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Search.GetNextSet"/>
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Search.GetRemainingAsync(System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetRemaining operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Search.GetRemaining"/>
            </summary>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Search.Reset">
            <summary>
            Resets the Search object to default state.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.TableName">
            <summary>
            Name of the table being searched
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.CollectResults">
            <summary>
            Whether to collect GetNextSet and GetRemaining results in Matches property.
            Default is true. If set to false, Matches will always be empty.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.Limit">
            <summary>
            Upper limit on the number of items returned.
            For Queries: upper limit on the number of items returned.
            For Scan: limit on the number of items scanned.
            
            Maps directly to Limit property on Query and Scan operations.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.Filter">
            <summary>
            Filter for the search operation
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.ConditionalOperator">
            <summary>
            Conditional operator for the search operation
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.AttributesToGet">
            <summary>
            List of attribute names to retrieve
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.IsConsistentRead">
            <summary>
            Flag that, if true, indicates that the search is operating in consistent-read mode
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.IsBackwardSearch">
            <summary>
            Flag that, if true, indicates that the search is traversing backwards
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.IsDone">
            <summary>
            Flag that, if true, indicates that the search is done
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.NextKey">
            <summary>
            Key denoting the starting point of the next set of results
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.Matches">
            <summary>
            List of currently found items
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.TotalSegments">
            <summary>
            For parallel <i>Scan</i> requests, <i>TotalSegments</i>represents the total number of segments for a table that is being scanned. Segments
            are a way to logically divide a table into equally sized portions, for the duration of the <i>Scan</i> request. The value of
            <i>TotalSegments</i> corresponds to the number of application "workers" (such as threads or processes) that will perform the parallel
            <i>Scan</i>. For example, if you want to scan a table using four application threads, you would specify a <i>TotalSegments</i> value of 4.
            The value for <i>TotalSegments</i> must be greater than or equal to 1, and less than or equal to 4096. If you specify a <i>TotalSegments</i>
            value of 1, the <i>Scan</i> will be sequential rather than parallel. If you specify <i>TotalSegments</i>, you must also specify
            <i>Segment</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 4096</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.Segment">
            <summary>
            For parallel <i>Scan</i> requests, <i>Segment</i> identifies an individual segment to be scanned by an application "worker" (such as a
            thread or a process). Each worker issues a <i>Scan</i> request with a distinct value for the segment it will scan. Segment IDs are
            zero-based, so the first segment is always 0. For example, if you want to scan a table using four application threads, the first thread
            would specify a <i>Segment</i> value of 0, the second thread would specify 1, and so on. LastEvaluatedKey returned from a parallel scan
            request must be used with same Segment id in a subsequent operation. The value for <i>Segment</i> must be less than or equal to 0, and less
            than the value provided for <i>TotalSegments</i>. If you specify <i>Segment</i>, you must also specify <i>TotalSegments</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>0 - 4095</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.Count">
            <summary>
            Gets the total number of items that match the search parameters.
            
            If IsDone is true and CollectResults is true, returns Matches.Count.
            Otherwise, makes a call to DynamoDB to find out the number of
            matching items, without retrieving the items. Count is then cached.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.IndexName">
            <summary>
            Name of the index to query against.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Search.Select">
            <summary>
            Enum specifying what data to return from query.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.PutItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.PutItem"/>
            </summary>
            <param name="doc">Document to save.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.PutItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.PutItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.PutItem"/>
            </summary>
            <param name="doc">Document to save.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItemAsync(Amazon.DynamoDBv2.DocumentModel.Primitive,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.GetItem"/>
            </summary>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItemAsync(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.GetItem"/>
            </summary>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItemAsync(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.Primitive,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.GetItem"/>
            </summary>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="rangeKey">Range key element of the document.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItemAsync(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.GetItem"/>
            </summary>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="rangeKey">Range key element of the document.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItemAsync(System.Collections.Generic.IDictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry},System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.GetItem"/>
            </summary>
            <param name="key">Ley of the document.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.GetItemAsync(System.Collections.Generic.IDictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry},Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.GetItem"/>
            </summary>
            <param name="key">Ley of the document.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItem"/>
            </summary>
            <param name="doc">Attributes to update.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItem"/>
            </summary>
            <param name="doc">Attributes to update.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,System.Collections.Generic.IDictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry},System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItem"/>
            </summary>
            <param name="doc">Attributes to update.</param>
            <param name="key">Key of the document.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,System.Collections.Generic.IDictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry},Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItem"/>
            </summary>
            <param name="doc">Attributes to update.</param>
            <param name="key">Key of the document.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.Primitive,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItem"/>
            </summary>
            <param name="doc">Attributes to update.</param>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItem"/>
            </summary>
            <param name="doc">Attributes to update.</param>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.Primitive,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItem"/>
            </summary>
            <param name="doc">Attributes to update.</param>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="rangeKey">Range key element of the document.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.UpdateItem"/>
            </summary>
            <param name="doc">Attributes to update.</param>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="rangeKey">Range key element of the document.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItem"/>
            </summary>
            <param name="document">Document to delete.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItemAsync(Amazon.DynamoDBv2.DocumentModel.Document,Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItem"/>
            </summary>
            <param name="document">Document to delete.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItemAsync(Amazon.DynamoDBv2.DocumentModel.Primitive,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItem"/>
            </summary>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItemAsync(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItem"/>
            </summary>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItemAsync(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.Primitive,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItem"/>
            </summary>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="rangeKey">Range key element of the document.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItemAsync(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItem"/>
            </summary>
            <param name="hashKey">Hash key element of the document.</param>
            <param name="rangeKey">Range key element of the document.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItemAsync(System.Collections.Generic.IDictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry},System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItem"/>
            </summary>
            <param name="key">Key of the document.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItemAsync(System.Collections.Generic.IDictionary{System.String,Amazon.DynamoDBv2.DocumentModel.DynamoDBEntry},Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteItem operation.
            <seealso cref="!:Amazon.DynamoDBv2.DocumentModel.Table.DeleteItem"/>
            </summary>
            <param name="key">Key of the document.</param>
            <param name="config">Configuration to use.</param>
            <param name="cancellationToken">Token which can be used to cancel the task.</param>
            <returns>A Task that can be used to poll or wait for results, or both.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.LoadTable(Amazon.DynamoDBv2.IAmazonDynamoDB,System.String)">
            <summary>
            Creates a Table object with the specified name, using the
            passed-in client to load the table definition.
            
            This method will throw an exception if the table does not exist.
            </summary>
            <param name="ddbClient">Client to use to access DynamoDB.</param>
            <param name="tableName">Name of the table.</param>
            <returns>Table object representing the specified table.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.TryLoadTable(Amazon.DynamoDBv2.IAmazonDynamoDB,System.String,Amazon.DynamoDBv2.DocumentModel.Table@)">
            <summary>
            Creates a Table object with the specified name, using the
            passed-in client to load the table definition.
            
            This method will return false if the table does not exist.
            </summary>
            <param name="ddbClient">Client to use to access DynamoDB.</param>
            <param name="tableName">Name of the table.</param>
            <param name="table">Loaded table.</param>
            <returns>
            True if table was successfully loaded; otherwise false.
            </returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.Scan(Amazon.DynamoDBv2.DocumentModel.ScanFilter)">
            <summary>
            Initiates a Search object to Scan a DynamoDB table, with the
            specified filter.
            
            No calls are made until the Search object is used.
            </summary>
            <param name="filter">Filter to apply to the scan.</param>
            <returns>Resultant Search container.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.Scan(Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig)">
            <summary>
            Initiates a Search object to Scan a DynamoDB table, with the
            specified config.
            
            No calls are made until the Search object is used.
            </summary>
            <param name="config">Configuration to use.</param>
            <returns>Resultant Search container.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.Query(Amazon.DynamoDBv2.DocumentModel.Primitive,Amazon.DynamoDBv2.DocumentModel.QueryFilter)">
            <summary>
            Initiates a Search object to Query a DynamoDB table, with the
            specified hash primary key and filter.
            
            No calls are made until the Search object is used.
            </summary>
            <param name="hashKey">Value of the hash key for the query operation.</param>
            <param name="filter">Filter to use.</param>
            <returns>Resultant Search container.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.Query(Amazon.DynamoDBv2.DocumentModel.QueryFilter)">
            <summary>
            Initiates a Search object to Query a DynamoDB table, with the
            specified filter.
            
            No calls are made until the Search object is used.
            </summary>
            <param name="filter">Filter to use.</param>
            <returns>Resultant Search container.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.Query(Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig)">
            <summary>
            Initiates a Search object to Query a DynamoDB table, with the
            specified config.
            
            No calls are made until the Search object is used.
            </summary>
            <param name="config">Configuration to use.</param>
            <returns>Resultant Search container.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.CreateBatchGet">
            <summary>
            Creates a DocumentBatchGet object for the current table, allowing
            a batch-get operation against DynamoDB.
            </summary>
            <returns>Empty DocumentBatchGet object.</returns>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.Table.CreateBatchWrite">
            <summary>
            Creates a DocumentBatchWrite object for the current table, allowing
            a batch-put/delete operation against DynamoDB.
            </summary>
            <returns>Empty DocumentBatchWrite object.</returns>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Table.TableName">
            <summary>
            Name of the table.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Table.Keys">
            <summary>
            Keys of the table.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Table.GlobalSecondaryIndexes">
            <summary>
            Global secondary indexes of the table.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Table.LocalSecondaryIndexes">
            <summary>
            Local secondary indexes of the table.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Table.LocalSecondaryIndexNames">
            <summary>
            Names of the local secondary indexes of the table.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Table.GlobalSecondaryIndexNames">
            <summary>
            Names of the global secondary indexes of the table.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Table.HashKeys">
            <summary>
            List of keys on the table marked HASH
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Table.RangeKeys">
            <summary>
            List of keys on the table marked RANGE
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.Table.Attributes">
            <summary>
            List of key attributes on the table.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.PutItemOperationConfig">
            <summary>
            Configuration for the Table.PutItem operation
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.PutItemOperationConfig.ExpectedState">
            <summary>
            The expected state of data in DynamoDB.
            Note: setting both Expected and ExpectedState is not supported and
            will result in an exception being thrown.
            
            For the operation to succeed, the data in DynamoDB must match the conditions
            specified in the ExpectedState.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.PutItemOperationConfig.Expected">
            <summary>
            Document representing the expected state of data in DynamoDB.
            Note: setting both Expected and ExpectedState is not supported and
            will result in an exception being thrown.
            
            For the operation to succeed, the data in DynamoDB must be equal
            to the attributes in Expected. If an attribute in Expected
            is set to null, that attribute must not be preset on the item in DynamoDB.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.PutItemOperationConfig.ReturnValues">
            <summary>
            Flag specifying what values should be returned.
            
            PutItem only supports ReturnValues.AllOldAttributes and ReturnValues.None
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig">
            <summary>
            Configuration for the Table.GetItem operation
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig.AttributesToGet">
            <summary>
            List of attributes to retrieve
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.GetItemOperationConfig.ConsistentRead">
            <summary>
            If set to true, this flag ensures that the most recently written data is
            returned.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig">
            <summary>
            Configuration for the Table.UpdateItem operation
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig.ExpectedState">
            <summary>
            The expected state of data in DynamoDB.
            Note: setting both Expected and ExpectedState is not supported and
            will result in an exception being thrown.
            
            For the operation to succeed, the data in DynamoDB must match the conditions
            specified in the ExpectedState.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig.Expected">
            <summary>
            Document representing the expected state of data in DynamoDB.
            Note: setting both Expected and ExpectedState is not supported and
            will result in an exception being thrown.
            
            For the operation to succeed, the data in DynamoDB must be equal
            to the attributes in Expected. If an attribute in Expected
            is set to null, that attribute must not be preset on the item in DynamoDB.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.UpdateItemOperationConfig.ReturnValues">
            <summary>
            Flag specifying what values should be returned.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig">
            <summary>
            Configuration for the Table.DeleteItem operation
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig.ExpectedState">
            <summary>
            The expected state of data in DynamoDB.
            Note: setting both Expected and ExpectedState is not supported and
            will result in an exception being thrown.
            
            For the operation to succeed, the data in DynamoDB must match the conditions
            specified in the ExpectedState.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig.Expected">
            <summary>
            Document representing the expected state of data in DynamoDB.
            Note: setting both Expected and ExpectedState is not supported and
            will result in an exception being thrown.
            
            For the operation to succeed, the data in DynamoDB must be equal
            to the attributes in Expected. If an attribute in Expected
            is set to null, that attribute must not be preset on the item in DynamoDB.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.DeleteItemOperationConfig.ReturnValues">
            <summary>
            Flag specifying what values should be returned.
            
            DeleteItem only supports ReturnValues.AllOldAttributes and ReturnValues.None
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig">
            <summary>
            Configuration for the Table.Scan operation
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig.#ctor">
            <summary>
            Initializes a default Table.Scan config object
            Filter is empty, Limit is Int32.MaxValue
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig.AttributesToGet">
            <summary>
            List of attributes to retrieve as part of the search
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig.Limit">
            <summary>
            Upper limit on the number of items scanned per request
            for matching conditions.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig.Filter">
            <summary>
            Filter for the search operation
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig.Select">
            <summary>
            Enum specifying what data to return from query.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig.TotalSegments">
            <summary>
            For parallel <i>Scan</i> requests, <i>TotalSegments</i>represents the total number of segments for a table that is being scanned. Segments
            are a way to logically divide a table into equally sized portions, for the duration of the <i>Scan</i> request. The value of
            <i>TotalSegments</i> corresponds to the number of application "workers" (such as threads or processes) that will perform the parallel
            <i>Scan</i>. For example, if you want to scan a table using four application threads, you would specify a <i>TotalSegments</i> value of 4.
            The value for <i>TotalSegments</i> must be greater than or equal to 1, and less than or equal to 4096. If you specify a <i>TotalSegments</i>
            value of 1, the <i>Scan</i> will be sequential rather than parallel. If you specify <i>TotalSegments</i>, you must also specify
            <i>Segment</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>1 - 4096</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig.Segment">
            <summary>
            For parallel <i>Scan</i> requests, <i>Segment</i> identifies an individual segment to be scanned by an application "worker" (such as a
            thread or a process). Each worker issues a <i>Scan</i> request with a distinct value for the segment it will scan. Segment IDs are
            zero-based, so the first segment is always 0. For example, if you want to scan a table using four application threads, the first thread
            would specify a <i>Segment</i> value of 0, the second thread would specify 1, and so on. LastEvaluatedKey returned from a parallel scan
            request must be used with same Segment id in a subsequent operation. The value for <i>Segment</i> must be less than or equal to 0, and less
            than the value provided for <i>TotalSegments</i>. If you specify <i>Segment</i>, you must also specify <i>TotalSegments</i>.
             
            <para>
            <b>Constraints:</b>
            <list type="definition">
                <item>
                    <term>Range</term>
                    <description>0 - 4095</description>
                </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig.CollectResults">
            <summary>
            Whether to collect GetNextSet and GetRemaining results in Matches property.
            Default is true. If set to false, Matches will always be empty.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.ScanOperationConfig.ConditionalOperator">
            <summary>
            A logical operator to apply to the conditions in the Filter property:
            AND - If all of the conditions evaluate to true, then the entire filter evaluates to true.
            OR - If at least one of the conditions evaluate to true, then the entire filter evaluates to true.
            
            Default value is AND.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig">
            <summary>
            Configuration for the Table.Query operation
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig.#ctor">
            <summary>
            Initializes a default Table.Query config object
            Filter is empty, Limit is Int32.MaxValue
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig.Filter">
            <summary>
            Filter for the search operation
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig.ConsistentRead">
            <summary>
            If set to true, this flag ensures that the most recently written data is
            returned.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig.AttributesToGet">
            <summary>
            List of attributes to retrieve as part of the search
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig.Limit">
            <summary>
            Upper limit on the number of items to return per request
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig.BackwardSearch">
            <summary>
            Flag that signals if the search is traversing backwards
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig.IndexName">
            <summary>
            Name of the index to query against.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig.Select">
            <summary>
            Enum specifying what data to return from query.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig.CollectResults">
            <summary>
            Whether to collect GetNextSet and GetRemaining results in Matches property.
            Default is true. If set to false, Matches will always be empty.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.DocumentModel.QueryOperationConfig.ConditionalOperator">
            <summary>
            A logical operator to apply to the conditions in the Filter property:
            AND - If all of the conditions evaluate to true, then the entire filter evaluates to true.
            OR - If at least one of the conditions evaluate to true, then the entire filter evaluates to true.
            
            Default value is AND.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.ReturnValues">
            <summary>
            An enumeration of all supported return value directives
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.ScanOperator">
            <summary>
            An enumeration of all supported scan operator directives
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.QueryOperator">
            <summary>
            An enumeration of all supported query operator directives
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.SelectValues">
            <summary>
            An enumeration of all supported Select values for Query and Scan.
            Value of Count will force service to return the number of items,
            not the items themselves.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.DocumentModel.ConditionalOperatorValues">
            <summary>
            An enumeration of all supported ConditionalOperator values.
            Value of And for an operation will require that all conditions match.
            Value of Or for an operation will require that at least one of the conditons match.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.DynamoDBAsyncResult.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.DynamoDBAsyncResult.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.DefaultRetryPolicy">
            <summary>
            The default implementation of the retry policy.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.RetryPolicy">
            <summary>
            A retry policy specifies all aspects of retry behavior. This includes conditions when the request should be retried,
            checks of retry limit, preparing the request before retry and introducing delay (backoff) before retries.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.RetryPolicy.Retry(Amazon.Runtime.IExecutionContext,System.Exception)">
            <summary>
            
            </summary>
            <param name="requestContext"></param>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.RetryPolicy.CanRetry(Amazon.Runtime.IExecutionContext)">
            <summary>
            Returns true if the request is in a state where it can be retried, else false.
            </summary>
            <param name="executionContext">Request context containing the state of the request.</param>
            <returns>Returns true if the request is in a state where it can be retried, else false.</returns>
        </member>
        <member name="M:Amazon.Runtime.RetryPolicy.RetryForException(Amazon.Runtime.IExecutionContext,System.Exception)">
            <summary>
            Return true if the request should be retried for the given exception.
            </summary>
            <param name="executionContext">Request context containing the state of the request.</param>
            <param name="exception">The exception thrown by the previous request.</param>
            <returns>Return true if the request should be retried.</returns>
        </member>
        <member name="M:Amazon.Runtime.RetryPolicy.RetryLimitReached(Amazon.Runtime.IExecutionContext)">
            <summary>
            Checks if the retry limit is reached.
            </summary>
            <param name="executionContext">Request context containing the state of the request.</param>
            <returns>Return true if the request should be retried.</returns>
        </member>
        <member name="M:Amazon.Runtime.RetryPolicy.WaitBeforeRetry(Amazon.Runtime.IExecutionContext)">
            <summary>
            Waits before retrying a request.
            </summary>
            <param name="executionContext">Request context containing the state of the request.</param>
        </member>
        <member name="P:Amazon.Runtime.RetryPolicy.MaxRetries">
            <summary>
            Maximum number of retries to be performed.
            This does not count the initial request.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.DefaultRetryPolicy.#ctor(System.Int32)">
            <summary>
            Constructor for DefaultRetryPolicy.
            </summary>
            <param name="maxRetries">The maximum number of retries before throwing
            back a exception. This does not count the initial request.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.DefaultRetryPolicy.CanRetry(Amazon.Runtime.IExecutionContext)">
            <summary>
            Returns true if the request is in a state where it can be retried, else false.
            </summary>
            <param name="executionContext">Request context containing the state of the request.</param>
            <returns>Returns true if the request is in a state where it can be retried, else false.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.DefaultRetryPolicy.RetryForException(Amazon.Runtime.IExecutionContext,System.Exception)">
            <summary>
            Return true if the request should be retried.
            </summary>
            <param name="executionContext">Request context containing the state of the request.</param>
            <param name="exception">The exception thrown by the previous request.</param>
            <returns>Return true if the request should be retried.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.DefaultRetryPolicy.RetryLimitReached(Amazon.Runtime.IExecutionContext)">
            <summary>
            Checks if the retry limit is reached.
            </summary>
            <param name="executionContext">Request context containing the state of the request.</param>
            <returns>Return true if the request should be retried.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.DefaultRetryPolicy.WaitBeforeRetry(Amazon.Runtime.IExecutionContext)">
            <summary>
            Waits before retrying a request. The default policy implements a exponential backoff.
            </summary>
            <param name="executionContext">Request context containing the state of the request.</param>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRetryPolicy.MaxBackoffInMilliseconds">
            <summary>
            The maximum value of exponential backoff in milliseconds, which will be used to wait
            before retrying a request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRetryPolicy.ErrorCodesToRetryOn">
            <summary>
            List of AWS specific error codes which are returned as part of the error response.
            These error codes will be retried.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRetryPolicy.WebExceptionStatusesToRetryOn">
            <summary>
            List of WebExceptionStatus for a WebException which will be retried.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Internal.DynamoDBRetryPolicy.pauseExponentially(System.Int32)">
            <summary>
            Override the pausing function so retries would happen more frequent then the default operation.
            </summary>
            <param name="retries">Current number of retries.</param>
        </member>
        <member name="T:Amazon.DynamoDBv2.AmazonDynamoDBRequest">
            <summary>
            Base class for DynamoDB operation requests.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.AmazonDynamoDBv2Request">
            <summary>
            Base class for AmazonDynamoDBv2 operation requests.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.AttributeDefinition">
            <summary>
            Represents an attribute for describing the key schema for the table and indexes.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.AttributeDefinition.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.AttributeDefinition.#ctor(System.String,Amazon.DynamoDBv2.ScalarAttributeType)">
            <summary>
            Instantiates AttributeDefinition with the parameterized properties
            </summary>
            <param name="attributeName">A name for the attribute.</param>
            <param name="attributeType">The data type for the attribute.</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.AttributeDefinition.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            A name for the attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.AttributeDefinition.AttributeType">
            <summary>
            Gets and sets the property AttributeType. 
            <para>
            The data type for the attribute.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.AttributeValue">
            <summary>
            Represents the data for an attribute. You can set one, and only one, of the elements.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.AttributeValue.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.AttributeValue.#ctor(System.String)">
            <summary>
            Instantiates AttributeValue with the parameterized properties
            </summary>
            <param name="s">A String data type</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.AttributeValue.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates AttributeValue with the parameterized properties
            </summary>
            <param name="ss">A String set data type</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.AttributeValue.B">
            <summary>
            Gets and sets the property B. 
            <para>
            A Binary data type
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.AttributeValue.BS">
            <summary>
            Gets and sets the property BS. 
            <para>
            A Binary set data type
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.AttributeValue.N">
            <summary>
            Gets and sets the property N. 
            <para>
            A Number data type
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.AttributeValue.NS">
            <summary>
            Gets and sets the property NS. 
            <para>
             Number set data type
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.AttributeValue.S">
            <summary>
            Gets and sets the property S. 
            <para>
            A String data type
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.AttributeValue.SS">
            <summary>
            Gets and sets the property SS. 
            <para>
            A String set data type
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.AttributeValueUpdate">
            <summary>
            For the <i>UpdateItem</i> operation, represents the attributes to be modified, the
            action to      perform on each, and the new value for each.
            
                <note>      
            <para>
            You cannot use <i>UpdateItem</i> to update any primary key attributes. Instead, you
            will        need to delete the item, and then use <i>PutItem</i> to create a new item
            with new        attributes.
            </para>
                </note>    
            <para>
            Attribute values cannot be null; string and binary type attributes must have lengths
            greater      than zero; and set type attributes must not be empty. Requests with empty
            values will be      rejected with a <i>ValidationException</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.AttributeValueUpdate.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.AttributeValueUpdate.#ctor(Amazon.DynamoDBv2.Model.AttributeValue,Amazon.DynamoDBv2.AttributeAction)">
            <summary>
            Instantiates AttributeValueUpdate with the parameterized properties
            </summary>
            <param name="value">Sets the AttributeValueUpdate Value property</param>
            <param name="action">Specifies how to perform the update. Valid values are <code>PUT</code>, <code>DELETE</code>,   and <code>ADD</code>. The behavior depends on whether the specified primary key already exists   in the table.    <b>If an item with the specified <i>Key</i> is found in the table:</b>  <ul>   <li>  <code>PUT</code> - Adds the specified attribute to the item. If the attribute already    exists, it is replaced by the new value.    </li>   <li>  <code>DELETE</code> - If no value is specified, the attribute and its value are removed    from the item. The data type of the specified value must match the existing value's data    type.  If a <i>set</i> of values is specified, then those values are subtracted from the old    set. For example, if the attribute value was the set <code>[a,b,c]</code> and the   <i>DELETE</i> action specified <code>[a,c]</code>, then the final attribute value would    be <code>[b]</code>. Specifying an empty set is an error.   </li>   <li>  <code>ADD</code> - If the attribute does not already exist, then the attribute and its    values are added to the item. If the attribute does exist, then the behavior of   <code>ADD</code> depends on the data type of the attribute:  <ul>    <li>   If the existing attribute is a number, and if <i>Value</i> is also a number, then the    <i>Value</i> is mathematically added to the existing attribute. If <i>Value</i> is a     negative number, then it is subtracted from the existing attribute.   <note>      If you use <code>ADD</code> to increment or decrement a number value for an item    that doesn't exist before the update, DynamoDB uses 0 as the initial value.     In addition, if you use <code>ADD</code> to update an existing item, and intend to    increment or decrement an attribute value which does not yet exist, DynamoDB uses      <code>0</code> as the initial value. For example, suppose that the item you want    to update does not yet have an attribute named <i>itemcount</i>, but you decide to      <code>ADD</code> the number <code>3</code> to this attribute anyway, even though    it currently does not exist. DynamoDB will create the <i>itemcount</i> attribute, set    its initial value to <code>0</code>, and finally add <code>3</code> to it. The    result will be a new <i>itemcount</i> attribute in the item, with a value of      <code>3</code>.   </note>    </li>    <li>   If the existing data type is a set, and if the <i>Value</i> is also a set, then the    <i>Value</i> is added to the existing set. (This is a <i>set</i> operation, not     mathematical addition.) For example, if the attribute value was the set    <code>[1,2]</code>, and the <code>ADD</code> action specified <code>[3]</code>, then     the final attribute value would be <code>[1,2,3]</code>. An error occurs if an Add     action is specified for a set attribute and the attribute type specified does not     match the existing set type.    Both sets must have the same primitive data type. For example, if the existing data     type is a set of strings, the <i>Value</i> must also be a set of strings. The same     holds true for number sets and binary sets.    </li>  </ul>  This action is only valid for an existing attribute whose data type is number or is a    set. Do not use <code>ADD</code> for any other data types.   </li> </ul>    <b>If no item with the specified <i>Key</i> is found:</b>  <ul>   <li>  <code>PUT</code> - DynamoDB creates a new item with the specified primary key, and then adds    the attribute.    </li>   <li>  <code>DELETE</code> - Nothing happens; there is no attribute to delete.   </li>   <li>  <code>ADD</code> - DynamoDB creates an item with the supplied primary key and number (or set    of numbers) for the attribute value. The only data types allowed are number and number    set; no other data types can be specified.   </li> </ul></param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.AttributeValueUpdate.Action">
            <summary>
            Gets and sets the property Action. 
            <para>
            Specifies how to perform the update. Valid values are <code>PUT</code>, <code>DELETE</code>,
                 and <code>ADD</code>. The behavior depends on whether the specified primary key
            already exists      in the table.
            </para>
                
            <para>
                  <b>If an item with the specified <i>Key</i> is found in the table:</b>    
            </para>
                <ul>      <li>        
            <para>
            <code>PUT</code> - Adds the specified attribute to the item. If the attribute already
                     exists, it is replaced by the new value. 
            </para>
                  </li>      <li>        
            <para>
            <code>DELETE</code> - If no value is specified, the attribute and its value are removed
                     from the item. The data type of the specified value must match the existing
            value's data          type.
            </para>
                    
            <para>
            If a <i>set</i> of values is specified, then those values are subtracted from the
            old          set. For example, if the attribute value was the set <code>[a,b,c]</code>
            and the            <i>DELETE</i> action specified <code>[a,c]</code>, then the final
            attribute value would          be <code>[b]</code>. Specifying an empty set is an
            error.
            </para>
                  </li>      <li>        
            <para>
            <code>ADD</code> - If the attribute does not already exist, then the attribute and
            its          values are added to the item. If the attribute does exist, then the behavior
            of            <code>ADD</code> depends on the data type of the attribute:
            </para>
                    <ul>          <li>            
            <para>
            If the existing attribute is a number, and if <i>Value</i> is also a number, then
            the                <i>Value</i> is mathematically added to the existing attribute.
            If <i>Value</i> is a              negative number, then it is subtracted from the
            existing attribute.
            </para>
                        <note>              
            <para>
             If you use <code>ADD</code> to increment or decrement a number value for an item
                           that doesn't exist before the update, DynamoDB uses 0 as the initial
            value.
            </para>
                          
            <para>
            In addition, if you use <code>ADD</code> to update an existing item, and intend to
                           increment or decrement an attribute value which does not yet exist,
            DynamoDB uses                  <code>0</code> as the initial value. For example, suppose
            that the item you want                to update does not yet have an attribute named
            <i>itemcount</i>, but you decide to                  <code>ADD</code> the number <code>3</code>
            to this attribute anyway, even though                it currently does not exist.
            DynamoDB will create the <i>itemcount</i> attribute, set                its initial
            value to <code>0</code>, and finally add <code>3</code> to it. The               
            result will be a new <i>itemcount</i> attribute in the item, with a value of     
                        <code>3</code>.
            </para>
                        </note>          </li>          <li>            
            <para>
            If the existing data type is a set, and if the <i>Value</i> is also a set, then the
                           <i>Value</i> is added to the existing set. (This is a <i>set</i> operation,
            not              mathematical addition.) For example, if the attribute value was the
            set                <code>[1,2]</code>, and the <code>ADD</code> action specified <code>[3]</code>,
            then              the final attribute value would be <code>[1,2,3]</code>. An error
            occurs if an Add              action is specified for a set attribute and the attribute
            type specified does not              match the existing set type. 
            </para>
                        
            <para>
            Both sets must have the same primitive data type. For example, if the existing data
                         type is a set of strings, the <i>Value</i> must also be a set of strings.
            The same              holds true for number sets and binary sets.
            </para>
                      </li>        </ul>        
            <para>
            This action is only valid for an existing attribute whose data type is number or is
            a          set. Do not use <code>ADD</code> for any other data types.
            </para>
                  </li>    </ul>    
            <para>
                  <b>If no item with the specified <i>Key</i> is found:</b>    
            </para>
                <ul>      <li>        
            <para>
            <code>PUT</code> - DynamoDB creates a new item with the specified primary key, and
            then adds          the attribute. 
            </para>
                  </li>      <li>        
            <para>
            <code>DELETE</code> - Nothing happens; there is no attribute to delete.
            </para>
                  </li>      <li>        
            <para>
            <code>ADD</code> - DynamoDB creates an item with the supplied primary key and number
            (or set          of numbers) for the attribute value. The only data types allowed
            are number and number          set; no other data types can be specified.
            </para>
                  </li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.AttributeValueUpdate.Value">
            <summary>
            Gets and sets the property Value.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.BatchGetItemRequest">
            <summary>
            Container for the parameters to the BatchGetItem operation.
            The <i>BatchGetItem</i> operation returns the attributes of one or more items from
            one or      more tables. You identify requested items by primary key.
            
                
            <para>
            A single operation can retrieve up to 1 MB of data, which can contain as many    
             as 100 items. <i>BatchGetItem</i> will return a partial result      if the response
            size limit is exceeded, the table's provisioned throughput is exceeded, or an    
             internal processing failure occurs. If a partial result is returned, the operation
            returns a      value for <i>UnprocessedKeys</i>. You can use this value to retry the
            operation starting with      the next item to get.
            </para>
                
            <para>
            For example, if you ask to retrieve 100 items, but each individual item is 50 KB in
            size, the      system returns 20 items (1 MB) and an appropriate <i>UnprocessedKeys</i>
            value      so you can get the next page of results. If desired, your application can
            include its own      logic to assemble the pages of results into one dataset.
            </para>
                
            <para>
            If <i>none</i> of the items can be processed due to insufficient provisioned throughput
            on      all of the tables in the request, then <i>BatchGetItem</i> will throw a  
                 <i>ProvisionedThroughputExceededException</i>. If <i>at least one</i> of the
            items is      successfully processed, then <i>BatchGetItem</i> completes successfully,
            while returning the      keys of the unread items in <i>UnprocessedKeys</i>.
            </para>
                <important>
            <para>
            If DynamoDB returns any unprocessed items, you should retry the batch operation on
            those items. However, <i>we strongly recommend that you use an exponential backoff
            algorithm</i>. If you retry the batch operation immediately, the underlying read or
            write requests can still fail due to throttling on the individual tables. If you delay
            the batch operation using exponential backoff, the individual requests in the batch
            are much more likely to succeed.
            </para>
                  
            <para>
            For more information, go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ErrorHandling.html#BatchOperations">Batch
            Operations and Error Handling</a> in the Amazon DynamoDB Developer Guide.
            </para>
            </important>    
            <para>
            By default, <i>BatchGetItem</i> performs eventually consistent reads on every table
            in the      request. If you want strongly consistent reads instead, you can set <i>ConsistentRead</i>
            to        <code>true</code> for any or all tables.
            </para>
                
            <para>
            In order to minimize response latency, <i>BatchGetItem</i> retrieves items in parallel.
            </para>
                
            <para>
            When designing your application, keep in mind that DynamoDB does not return attributes
            in any      particular order. To help parse the response by item, include the primary
            key values for the      items in your request in the <i>AttributesToGet</i> parameter.
            </para>
                
            <para>
            If a requested item does not exist, it is not returned in the result. Requests for
                 nonexistent items consume the minimum read capacity units according to the type
            of read. For      more information, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#CapacityUnitCalculations">Capacity
            Units Calculations</a> in the Amazon DynamoDB Developer Guide.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.BatchGetItemRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.BatchGetItemRequest.#ctor(System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.KeysAndAttributes})">
            <summary>
            Instantiates BatchGetItemRequest with the parameterized properties
            </summary>
            <param name="requestItems">A map of one or more table names and, for each table, the corresponding primary keys for the   items to retrieve. Each table name can be invoked only once. Each element in the map consists of the following: <ul>   <li>  <i>Keys</i> - An array of primary key attribute values that define specific items in the    table. For each primary key, you must provide <i>all</i> of the key attributes. For    example, with a hash type primary key, you only need to specify the hash attribute. For a    hash-and-range type primary key, you must specify <i>both</i> the hash attribute and the    range attribute.   </li>   <li>  <i>AttributesToGet</i> - One or more attributes to be retrieved from the table. By    default, all attributes are returned. If a specified attribute is not found, it does not    appear in the result.  Note that <i>AttributesToGet</i> has no effect on provisioned throughput consumption.    DynamoDB determines capacity units consumed based on item size, not on the amount of data    that is returned to an application.   </li>   <li>  <i>ConsistentRead</i> - If <code>true</code>, a strongly consistent read is used; if   <code>false</code> (the default), an eventually consistent read is used.   </li> </ul></param>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.BatchGetItemRequest.#ctor(System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.KeysAndAttributes},Amazon.DynamoDBv2.ReturnConsumedCapacity)">
            <summary>
            Instantiates BatchGetItemRequest with the parameterized properties
            </summary>
            <param name="requestItems">A map of one or more table names and, for each table, the corresponding primary keys for the   items to retrieve. Each table name can be invoked only once. Each element in the map consists of the following: <ul>   <li>  <i>Keys</i> - An array of primary key attribute values that define specific items in the    table. For each primary key, you must provide <i>all</i> of the key attributes. For    example, with a hash type primary key, you only need to specify the hash attribute. For a    hash-and-range type primary key, you must specify <i>both</i> the hash attribute and the    range attribute.   </li>   <li>  <i>AttributesToGet</i> - One or more attributes to be retrieved from the table. By    default, all attributes are returned. If a specified attribute is not found, it does not    appear in the result.  Note that <i>AttributesToGet</i> has no effect on provisioned throughput consumption.    DynamoDB determines capacity units consumed based on item size, not on the amount of data    that is returned to an application.   </li>   <li>  <i>ConsistentRead</i> - If <code>true</code>, a strongly consistent read is used; if   <code>false</code> (the default), an eventually consistent read is used.   </li> </ul></param>
            <param name="returnConsumedCapacity">Sets the BatchGetItemRequest ReturnConsumedCapacity property</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchGetItemRequest.RequestItems">
            <summary>
            Gets and sets the property RequestItems. 
            <para>
            A map of one or more table names and, for each table, the corresponding primary keys
            for the      items to retrieve. Each table name can be invoked only once.
            </para>
                
            <para>
            Each element in the map consists of the following:
            </para>
                <ul>      <li>        
            <para>
            <i>Keys</i> - An array of primary key attribute values that define specific items
            in the          table. For each primary key, you must provide <i>all</i> of the key
            attributes. For          example, with a hash type primary key, you only need to specify
            the hash attribute. For a          hash-and-range type primary key, you must specify
            <i>both</i> the hash attribute and the          range attribute.
            </para>
                  </li>      <li>        
            <para>
            <i>AttributesToGet</i> - One or more attributes to be retrieved from the table. By
                     default, all attributes are returned. If a specified attribute is not found,
            it does not          appear in the result.
            </para>
                    
            <para>
            Note that <i>AttributesToGet</i> has no effect on provisioned throughput consumption.
                     DynamoDB determines capacity units consumed based on item size, not on the
            amount of data          that is returned to an application.
            </para>
                  </li>      <li>        
            <para>
            <i>ConsistentRead</i> - If <code>true</code>, a strongly consistent read is used;
            if            <code>false</code> (the default), an eventually consistent read is used.
            </para>
                  </li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchGetItemRequest.ReturnConsumedCapacity">
            <summary>
            Gets and sets the property ReturnConsumedCapacity.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.BatchGetItemResponse">
            <summary>
            Configuration for accessing Amazon BatchGetItem service
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.BatchGetItemResult">
            <summary>
            Represents the output of a <i>BatchGetItem</i> operation.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchGetItemResult.ConsumedCapacity">
            <summary>
            Gets and sets the property ConsumedCapacity. 
            <para>
            The write capacity units consumed by the operation.
            </para>
                
            <para>
            Each element consists of:
            </para>
                <ul>      <li>        
            <para>
            <i>TableName</i> - The table that consumed the provisioned throughput.
            </para>
                  </li>      <li>        
            <para>
            <i>CapacityUnits</i> - The total number of capacity units consumed.
            </para>
                  </li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchGetItemResult.Responses">
            <summary>
            Gets and sets the property Responses. 
            <para>
            A map of table name to a list of items. Each object in <i>Responses</i> consists of
            a table      name, along with a map of attribute data consisting of the data type
            and attribute value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchGetItemResult.UnprocessedKeys">
            <summary>
            Gets and sets the property UnprocessedKeys. 
            <para>
            A map of tables and their respective keys that were not processed with the current
            response.      The <i>UnprocessedKeys</i> value is in the same form as <i>RequestItems</i>,
            so the value can      be provided directly to a subsequent <i>BatchGetItem</i> operation.
            For more information, see        <i>RequestItems</i> in the Request Parameters section.
            </para>
                
            <para>
            Each element consists of:
            </para>
                <ul>      <li>        
            <para>
            <i>Keys</i> - An array of primary key attribute values that define specific items
            in the          table.
            </para>
                  </li>      <li>        
            <para>
            <i>AttributesToGet</i> - One or more attributes to be retrieved from the table or
            index.          By default, all attributes are returned. If a specified attribute
            is not found, it does          not appear in the result.
            </para>
                  </li>      <li>        
            <para>
            <i>ConsistentRead</i> - The consistency of a read operation. If set to <code>true</code>,
                     then a strongly consistent read is used; otherwise, an eventually consistent
            read is          used.
            </para>
                  </li>    </ul>    
            <para>
            If there are no unprocessed keys remaining, the response contains an empty       
            <i>UnprocessedKeys</i> map.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchGetItemResponse.BatchGetItemResult">
            <summary>
            Gets and sets the BatchGetItemResult property.
            Represents the output of a BatchGetItem operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.BatchWriteItemRequest">
            <summary>
            Container for the parameters to the BatchWriteItem operation.
            The <i>BatchWriteItem</i> operation puts or deletes multiple items in one or more
            tables. A      single call to <i>BatchWriteItem</i> can write up to 1 MB of data,
            which can      comprise as many as 25 put or delete requests. Individual items   
              to be written can be as large as 64 KB.
            
                <note>      
            <para>
            <i>BatchWriteItem</i> cannot update items. To update items, use the <i>UpdateItem</i>
                   API.
            </para>
                </note>    
            <para>
            The individual <i>PutItem</i> and <i>DeleteItem</i> operations specified in      
             <i>BatchWriteItem</i> are atomic; however <i>BatchWriteItem</i> as a whole is not.
            If any      requested operations fail because the table's provisioned throughput is
            exceeded or an      internal processing failure occurs, the failed operations are
            returned in the        <i>UnprocessedItems</i> response parameter. You can investigate
            and optionally resend the      requests. Typically, you would call <i>BatchWriteItem</i>
            in a loop. Each iteration would      check for unprocessed items and submit a new
            <i>BatchWriteItem</i> request with those      unprocessed items until all items have
            been processed.
            </para>
                
            <para>
            Note that if <i>none</i> of the items can be processed due to insufficient provisioned
                 throughput on all of the tables in the request, then <i>BatchGetItem</i> will
            throw a        <i>ProvisionedThroughputExceededException</i>.
            </para>
                <important>
            <para>
            If DynamoDB returns any unprocessed items, you should retry the batch operation on
            those items. However, <i>we strongly recommend that you use an exponential backoff
            algorithm</i>. If you retry the batch operation immediately, the underlying read or
            write requests can still fail due to throttling on the individual tables. If you delay
            the batch operation using exponential backoff, the individual requests in the batch
            are much more likely to succeed.
            </para>
                  
            <para>
            For more information, go to <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ErrorHandling.html#BatchOperations">Batch
            Operations and Error Handling</a> in the Amazon DynamoDB Developer Guide.
            </para>
            </important>        
            <para>
            With <i>BatchWriteItem</i>, you can efficiently write or delete large amounts of data,
            such      as from Amazon Elastic MapReduce (EMR), or copy data from another database
            into DynamoDB. In      order to improve performance with these large-scale operations,
            <i>BatchWriteItem</i> does not      behave in the same way as individual <i>PutItem</i>
            and <i>DeleteItem</i> calls would For      example, you cannot specify conditions
            on individual put and delete requests, and        <i>BatchWriteItem</i> does not return
            deleted items in the response.
            </para>
                
            <para>
            If you use a programming language that supports concurrency, such as Java, you can
            use      threads to write items in parallel. Your application must include the necessary
            logic to      manage the threads. With languages that don't support threading, such
            as PHP, you must update      or delete the specified items one at a time. In both
            situations, <i>BatchWriteItem</i>      provides an alternative where the API performs
            the specified put and delete operations in      parallel, giving you the power of
            the thread pool approach without having to introduce      complexity into your application.
            </para>
                
            <para>
            Parallel processing reduces latency, but each specified put and delete request consumes
            the      same number of write capacity units whether it is processed in parallel or
            not. Delete      operations on nonexistent items consume one write capacity unit.
            </para>
                
            <para>
            If one or more of the following is true, DynamoDB rejects the entire batch write operation:
            </para>
                <ul>      <li>        
            <para>
            One or more tables specified in the <i>BatchWriteItem</i> request does not exist.
            </para>
                  </li>      <li>        
            <para>
            Primary key attributes specified on an item in the request do not match those in the
                     corresponding table's primary key schema.
            </para>
                  </li>      <li>        
            <para>
            You try to perform multiple operations on the same item in the same <i>BatchWriteItem</i>
                     request. For example, you cannot put and delete the same item in the same
                       <i>BatchWriteItem</i> request. 
            </para>
                  </li>      <li>        
            <para>
            The total request size exceeds 1 MB.
            </para>
                  </li>      <li>        
            <para>
            Any individual item in a batch exceeds 64 KB.
            </para>
                  </li>    </ul>
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.BatchWriteItemRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.BatchWriteItemRequest.#ctor(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Amazon.DynamoDBv2.Model.WriteRequest}})">
            <summary>
            Instantiates BatchWriteItemRequest with the parameterized properties
            </summary>
            <param name="requestItems">A map of one or more table names and, for each table, a list of operations to be performed  (<i>DeleteRequest</i> or <i>PutRequest</i>). Each element in the map consists of the   following: <ul>   <li>  <i>DeleteRequest</i> - Perform a <i>DeleteItem</i> operation on the specified item. The    item to be deleted is identified by a <i>Key</i> subelement:  <ul>    <li>   <i>Key</i> - A map of primary key attribute values that uniquely identify the ! item.     Each entry in this map consists of an attribute name and an attribute value. For each     primary key, you must provide <i>all</i> of the key attributes. For example, with a     hash type primary key, you only need to specify the hash attribute. For a     hash-and-range type primary key, you must specify <i>both</i> the hash attribute and     the range attribute.    </li>  </ul>   </li>   <li>  <i>PutRequest</i> - Perform a <i>PutItem</i> operation on the specified item. The item to    be put is identified by an <i>Item</i> subelement:  <ul>    <li>   <i>Item</i> - A map of attributes and their values. Each entry in this map consists     of an attribute name and an attribute value. Attribute values must not be null; string     and binary type attributes must have lengths greater than zero; and set type     attributes must not be empty. Requests that contain empty values will be rejected with     a <i>ValidationException</i>.   If you specify any attributes that are part of an index key, then the data types for     those attributes must match those of the schema in the table's attribute     definition.    </li>  </ul>   </li> </ul></param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchWriteItemRequest.RequestItems">
            <summary>
            Gets and sets the property RequestItems. 
            <para>
            A map of one or more table names and, for each table, a list of operations to be performed
                   (<i>DeleteRequest</i> or <i>PutRequest</i>). Each element in the map consists
            of the      following:
            </para>
                <ul>      <li>        
            <para>
            <i>DeleteRequest</i> - Perform a <i>DeleteItem</i> operation on the specified item.
            The          item to be deleted is identified by a <i>Key</i> subelement:
            </para>
                    <ul>          <li>            
            <para>
            <i>Key</i> - A map of primary key attribute values that uniquely identify the ! item.
                         Each entry in this map consists of an attribute name and an attribute
            value. For each              primary key, you must provide <i>all</i> of the key attributes.
            For example, with a              hash type primary key, you only need to specify the
            hash attribute. For a              hash-and-range type primary key, you must specify
            <i>both</i> the hash attribute and              the range attribute.
            </para>
                      </li>        </ul>      </li>      <li>        
            <para>
            <i>PutRequest</i> - Perform a <i>PutItem</i> operation on the specified item. The
            item to          be put is identified by an <i>Item</i> subelement:
            </para>
                    <ul>          <li>            
            <para>
            <i>Item</i> - A map of attributes and their values. Each entry in this map consists
                         of an attribute name and an attribute value. Attribute values must not
            be null; string              and binary type attributes must have lengths greater
            than zero; and set type              attributes must not be empty. Requests that contain
            empty values will be rejected with              a <i>ValidationException</i>.
            </para>
                        
            <para>
            If you specify any attributes that are part of an index key, then the data types for
                         those attributes must match those of the schema in the table's attribute
                         definition.
            </para>
                      </li>        </ul>      </li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchWriteItemRequest.ReturnConsumedCapacity">
            <summary>
            Gets and sets the property ReturnConsumedCapacity.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchWriteItemRequest.ReturnItemCollectionMetrics">
            <summary>
            Gets and sets the property ReturnItemCollectionMetrics. 
            <para>
            If set to <code>SIZE</code>, statistics about item collections, if any, that were
            modified during      the operation are returned in the response. If set to <code>NONE</code>
            (the default), no statistics are returned.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.BatchWriteItemResponse">
            <summary>
            Configuration for accessing Amazon BatchWriteItem service
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.BatchWriteItemResult">
            <summary>
            Represents the output of a <i>BatchWriteItem</i> operation.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchWriteItemResult.ConsumedCapacity">
            <summary>
            Gets and sets the property ConsumedCapacity. 
            <para>
            The capacity units consumed by the operation.
            </para>
                
            <para>
            Each element consists of:
            </para>
                <ul>      <li>        
            <para>
            <i>TableName</i> - The table that consumed the provisioned throughput.
            </para>
                  </li>      <li>        
            <para>
            <i>CapacityUnits</i> - The total number of capacity units consumed.
            </para>
                  </li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchWriteItemResult.ItemCollectionMetrics">
            <summary>
            Gets and sets the property ItemCollectionMetrics. 
            <para>
            A list of tables that were processed by <i>BatchWriteItem</i> and, for each table,
                 information about any item collections that were affected by individual <i>DeleteItem</i>
            or        <i>PutItem</i> operations.
            </para>
                
            <para>
            Each entry consists of the following subelements:
            </para>
                <ul>      <li>        
            <para>
            <i>ItemCollectionKey</i> - The hash key value of the item collection. This is the
            same as          the hash key of the item.
            </para>
                  </li>      <li>        
            <para>
            <i>SizeEstimateRange</i> - An estimate of item collection size, expressed in GB. This
            is          a two-element array containing a lower bound and an upper bound for the
            estimate. The          estimate includes the size of all the items in the table, plus
            the size of all attributes          projected into all of the local secondary indexes
            on the table. Use this estimate to measure whether a          local secondary index
            is approaching its size limit.
            </para>
                    
            <para>
            The estimate is subject to change over time; therefore, do not rely on the precision
            or          accuracy of the estimate.
            </para>
                  </li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchWriteItemResult.UnprocessedItems">
            <summary>
            Gets and sets the property UnprocessedItems. 
            <para>
            A map of tables and requests against those tables that were not processed. The   
                <i>UnprocessedItems</i> value is in the same form as <i>RequestItems</i>, so you
            can provide      this value directly to a subsequent <i>BatchGetItem</i> operation.
            For more information, see        <i>RequestItems</i> in the Request Parameters section.
            </para>
                
            <para>
            Each <i>UnprocessedItems</i> entry consists of a table name and, for that table, a
            list of      operations to perform (<i>DeleteRequest</i> or <i>PutRequest</i>).
            </para>
                <ul>      <li>        
            <para>
            <i>DeleteRequest</i> - Perform a <i>DeleteItem</i> operation on the specified item.
            The          item to be deleted is identified by a <i>Key</i> subelement:
            </para>
                    <ul>          <li>            
            <para>
            <i>Key</i> - A map of primary key attribute values that uniquely identify the item.
                         Each entry in this map consists of an attribute name and an attribute
            value.
            </para>
                      </li>        </ul>      </li>      <li>        
            <para>
            <i>PutRequest</i> - Perform a <i>PutItem</i> operation on the specified item. The
            item to          be put is identified by an <i>Item</i> subelement:
            </para>
                    <ul>          <li>            
            <para>
            <i>Item</i> - A map of attributes and their values. Each entry in this map consists
                         of an attribute name and an attribute value. Attribute values must not
            be null; string              and binary type attributes must have lengths greater
            than zero; and set type              attributes must not be empty. Requests that contain
            empty values will be rejected with              a <i>ValidationException</i>.
            </para>
                        
            <para>
            If you specify any attributes that are part of an index key, then the data types for
                         those attributes must match those of the schema in the table's attribute
                         definition.
            </para>
                      </li>        </ul>      </li>    </ul>    
            <para>
            If there are no unprocessed items remaining, the response contains an empty      
             <i>UnprocessedItems</i> map.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.BatchWriteItemResponse.BatchWriteItemResult">
            <summary>
            Gets and sets the BatchWriteItemResult property.
            Represents the output of a BatchWriteItem operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Capacity">
            <summary>
            Represents the amount of provisioned throughput capacity consumed on a table or an
            index.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.Capacity.CapacityUnits">
            <summary>
            Gets and sets the property CapacityUnits. 
            <para>
            The total number of capacity units consumed on a table or an index.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Condition">
            <summary>
            Represents the selection criteria for a <i>Query</i> or <i>Scan</i> operation:
            
                <ul>      <li>        
            <para>
            For a <i>Query</i> operation, <i>Condition</i> is used for specifying the        
               <i>KeyConditions</i> to use when querying a table or an index. For <i>KeyConditions</i>,
                     only the following comparison operators are supported:
            </para>
                    
            <para>
                      <code>EQ | LE | LT | GE | GT | BEGINS_WITH | BETWEEN</code>        
            </para>
                    
            <para>
            <i>Condition</i> is also used in a <i>QueryFilter</i>, which evaluates the query results
                     and returns only the desired values.
            </para>
                  </li>      <li>        
            <para>
            For a <i>Scan</i> operation, <i>Condition</i> is used in a <i>ScanFilter</i>, which
                     evaluates the scan results and returns only the desired values.
            </para>
                  </li>    </ul>
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.Condition.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.Condition.AttributeValueList">
            <summary>
            Gets and sets the property AttributeValueList. 
            <para>
            One or more values to evaluate against the supplied attribute. The number of values
            in the      list depends on the <i>ComparisonOperator</i> being used.
            </para>
                
            <para>
            For type Number, value comparisons are numeric.
            </para>
                
            <para>
            String value comparisons for greater than, equals, or less than are based on ASCII
            character      code values. For example, <code>a</code> is greater than <code>A</code>,
            and <code>aa</code>      is greater than <code>B</code>. For a list of code values,
            see <a href="http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters">http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>.
            </para>
                
            <para>
            For Binary, DynamoDB treats each byte of the binary data as unsigned when it compares
            binary      values, for example when evaluating query expressions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.Condition.ComparisonOperator">
            <summary>
            Gets and sets the property ComparisonOperator. 
            <para>
            A comparator for evaluating attributes. For example, equals, greater than, less than,
                 etc.
            </para>
                 
            <para>
            The following comparison operators are available:
            </para>
                  
            <para>
            <code>EQ | NE | LE | LT | GE | GT | NOT_NULL | NULL | CONTAINS | NOT_CONTAINS | BEGINS_WITH
            | IN | BETWEEN</code>
            </para>
                 
            <para>
            The following are descriptions of each comparison      operator.
            </para>
                <ul>      <li>        
            <para>
            <code>EQ</code> : Equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, Binary, String Set, Number Set, or Binary Set. If an item contains
            an <i>AttributeValue</i> of a different          type than the one specified in the
            request, the value does not match. For example,            <code>{"S":"6"}</code>
            does not equal <code>{"N":"6"}</code>. Also,            <code>{"N":"6"}</code> does
            not equal <code>{"NS":["6", "2", "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>NE</code> : Not equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, Binary, String Set, Number Set, or Binary Set. If an item contains
            an <i>AttributeValue</i> of a different          type than the one specified in the
            request, the value does not match. For example,            <code>{"S":"6"}</code>
            does not equal <code>{"N":"6"}</code>. Also,            <code>{"N":"6"}</code> does
            not equal <code>{"NS":["6", "2", "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>LE</code> : Less than or equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>LT</code> : Less than. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>GE</code> : Greater than or equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>GT</code> : Greater than. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>NOT_NULL</code> : The attribute exists. 
            </para>
            </li>      <li>        
            <para>
            <code>NULL</code> : The attribute does not exist. 
            </para>
            </li>      <li>        
            <para>
            <code>CONTAINS</code> : checks for a subsequence, or value in a set.
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If the target attribute of the comparison
            is a String, then          the operation checks for a substring match. If the target
            attribute of the comparison is          Binary, then the operation looks for a subsequence
            of the target that matches the input.          If the target attribute of the comparison
            is a set ("SS", "NS", or "BS"), then the          operation checks for a member of
            the set (not as a substring).
            </para>
            </li>      <li>        
            <para>
            <code>NOT_CONTAINS</code> : checks for absence of a subsequence, or absence of a value
            in          a set.
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If the target attribute of the comparison
            is a String, then          the operation checks for the absence of a substring match.
            If the target attribute of the          comparison is Binary, then the operation checks
            for the absence of a subsequence of the          target that matches the input. If
            the target attribute of the comparison is a set ("SS",          "NS", or "BS"), then
            the operation checks for the absence of a member of the set (not as a          substring).
            </para>
            </li>      <li>        
            <para>
            <code>BEGINS_WITH</code> : checks for a prefix. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String
            or          Binary (not a Number or a set). The target attribute of the comparison
            must be a String or          Binary (not a Number or a set).
            </para>
                    <p/></li>      <li>        
            <para>
            <code>IN</code> : checks for exact matches.
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain more than one <i>AttributeValue</i> of type
            String,          Number, or Binary (not a set). The target attribute of the comparison
            must be of the same          type and exact value to match. A String never matches
            a String set.
            </para>
            </li>      <li>        
            <para>
            <code>BETWEEN</code> : Greater than or equal to the first value, and less than or
            equal          to the second value. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> must contain two <i>AttributeValue</i> elements of the same
                     type, either String, Number, or Binary (not a set). A target attribute matches
            if the          target value is greater than, or equal to, the first element and less
            than, or equal to,          the second element. If an item contains an <i>AttributeValue</i>
            of a different type than          the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not compare to <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>
            </para>
            </li>    </ul>    
            <para>
            For usage examples of <i>AttributeValueList</i> and <i>ComparisonOperator</i>, see
            <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html#ConditionalExpressions">Conditional
            Expressions</a> in the Amazon DynamoDB Developer Guide.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ConditionalCheckFailedException">
            <summary>
             DynamoDB exception
             </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.ConditionalCheckFailedException.#ctor(System.String)">
            <summary>
            Constructs a new ConditionalCheckFailedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ConsumedCapacity">
            <summary>
            Represents the capacity units consumed by an operation. The data returned includes
            the total      provisioned throughput consumed, along with statistics for the table
            and any indexes involved      in the operation. <i>ConsumedCapacity</i> is only returned
            if it was asked for in the request.      For more information, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html">Provisioned
                   Throughput</a> in the Amazon DynamoDB Developer Guide.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ConsumedCapacity.CapacityUnits">
            <summary>
            Gets and sets the property CapacityUnits. 
            <para>
            The total number of capacity units consumed by the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ConsumedCapacity.GlobalSecondaryIndexes">
            <summary>
            Gets and sets the property GlobalSecondaryIndexes. 
            <para>
            The amount of throughput consumed on each global index affected by the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ConsumedCapacity.LocalSecondaryIndexes">
            <summary>
            Gets and sets the property LocalSecondaryIndexes. 
            <para>
            The amount of throughput consumed on each local index affected by the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ConsumedCapacity.Table">
            <summary>
            Gets and sets the property Table. 
            <para>
            The amount of throughput consumed on the table affected by the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ConsumedCapacity.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            The name of the table that was affected by the operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.CreateTableRequest">
            <summary>
            Container for the parameters to the CreateTable operation.
            The <i>CreateTable</i> operation adds a new table to your account. In an AWS account,
            table      names must be unique within each region. That is, you can have two tables
            with same name if      you create the tables in different regions.
            
                
            <para>
            <i>CreateTable</i> is an asynchronous operation. Upon receiving a <i>CreateTable</i>
            request,      DynamoDB immediately returns a response with a <i>TableStatus</i> of
            <code>CREATING</code>. After      the table is created, DynamoDB sets the <i>TableStatus</i>
            to <code>ACTIVE</code>. You can      perform read and write operations only on an
            <code>ACTIVE</code> table. 
            </para>
                
            <para>
            If you want to create multiple tables with secondary indexes on them, you must create
            them sequentially.      Only one table with secondary indexes can be in the <code>CREATING</code>
            state at any given time.
            </para>
                
            <para>
            You can use the <i>DescribeTable</i> API to check the table status.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.CreateTableRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.CreateTableRequest.#ctor(System.String,System.Collections.Generic.List{Amazon.DynamoDBv2.Model.KeySchemaElement})">
            <summary>
            Instantiates CreateTableRequest with the parameterized properties
            </summary>
            <param name="tableName">The name of the table to create.</param>
            <param name="keySchema">Specifies the attributes that make up the primary key for a table or an index. The attributes   in <i>KeySchema</i> must also be defined in the <i>AttributeDefinitions</i> array. For more   information, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html">Data Model</a> in the   Amazon DynamoDB Developer Guide. Each <i>KeySchemaElement</i> in the array is composed of: <ul>   <li>  <i>AttributeName</i> - The name of this key attribute.   </li>   <li>  <i>KeyType</i> - Determines whether the key attribute is <code>HASH</code> or   <code>RANGE</code>.   </li> </ul> For a primary key that consists of a hash attribute, you must specify exactly one element   with a <i>KeyType</i> of <code>HASH</code>. For a primary key that consists of hash and range attributes, you must specify exactly two   elements, in this order: The first element must have a <i>KeyType</i> of <code>HASH</code>,   and the second element must have a <i>KeyType</i> of <code>RANGE</code>. For more information, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#WorkingWithTables.primary.key">Specifying the  Primary Key</a> in the Amazon DynamoDB Developer Guide.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.CreateTableRequest.#ctor(System.String,System.Collections.Generic.List{Amazon.DynamoDBv2.Model.KeySchemaElement},System.Collections.Generic.List{Amazon.DynamoDBv2.Model.AttributeDefinition},Amazon.DynamoDBv2.Model.ProvisionedThroughput)">
            <summary>
            Instantiates CreateTableRequest with the parameterized properties
            </summary>
            <param name="tableName">The name of the table to create.</param>
            <param name="keySchema">Specifies the attributes that make up the primary key for a table or an index. The attributes   in <i>KeySchema</i> must also be defined in the <i>AttributeDefinitions</i> array. For more   information, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html">Data Model</a> in the   Amazon DynamoDB Developer Guide. Each <i>KeySchemaElement</i> in the array is composed of: <ul>   <li>  <i>AttributeName</i> - The name of this key attribute.   </li>   <li>  <i>KeyType</i> - Determines whether the key attribute is <code>HASH</code> or   <code>RANGE</code>.   </li> </ul> For a primary key that consists of a hash attribute, you must specify exactly one element   with a <i>KeyType</i> of <code>HASH</code>. For a primary key that consists of hash and range attributes, you must specify exactly two   elements, in this order: The first element must have a <i>KeyType</i> of <code>HASH</code>,   and the second element must have a <i>KeyType</i> of <code>RANGE</code>. For more information, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#WorkingWithTables.primary.key">Specifying the  Primary Key</a> in the Amazon DynamoDB Developer Guide.</param>
            <param name="attributeDefinitions">An array of attributes that describe the key schema for the table and indexes.</param>
            <param name="provisionedThroughput">Sets the CreateTableRequest ProvisionedThroughput property</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.CreateTableRequest.AttributeDefinitions">
            <summary>
            Gets and sets the property AttributeDefinitions. 
            <para>
            An array of attributes that describe the key schema for the table and indexes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.CreateTableRequest.GlobalSecondaryIndexes">
            <summary>
            Gets and sets the property GlobalSecondaryIndexes. 
            <para>
            One or more global secondary indexes (the maximum is five) to be created on the table.
            Each global secondary index in the array      includes the following:
            </para>
                <ul>      <li>        
            <para>
            <i>IndexName</i> - The name of the global secondary index. Must be unique only for
            this table.
            </para>
                    
            <para>
            
            </para>
                  </li>      <li>        
            <para>
            <i>KeySchema</i> - Specifies the key schema for the global secondary index.
            </para>
                  </li>      <li>         
            <para>
            <i>Projection</i> - Specifies          attributes that are copied (projected) from
            the table into the index. These are in          addition to the primary key attributes
            and index key          attributes, which are automatically projected. Each       
              attribute specification is composed of:
            </para>
                    <ul>          <li>            
            <para>
            <i>ProjectionType</i> - One              of the following:
            </para>
                        <ul>              <li>                
            <para>
            <code>KEYS_ONLY</code> - Only the index and primary keys are projected into the  
                           index.
            </para>
                          </li>              <li>                
            <para>
            <code>INCLUDE</code> - Only the specified table attributes are projected into the
                             index. The list of projected attributes are                  in <i>NonKeyAttributes</i>.
            </para>
                          </li>              <li>                
            <para>
            <code>ALL</code> - All of the table attributes are projected into the            
                 index.
            </para>
                          </li>            </ul>          </li>          <li>            
            <para>
            <i>NonKeyAttributes</i> - A list of one or more non-key attribute names that are 
                         projected into the secondary index. The total count of attributes specified
            in <i>NonKeyAttributes</i>, summed across all of the secondary indexes, must not exceed
            20. If you project the same attribute into two different indexes, this counts as two
            distinct attributes when determining the total.
            </para>
                      </li>        </ul> </li>      <li>        
            <para>
            <i>ProvisionedThroughput</i> - The provisioned throughput settings for the global
            secondary index,          consisting of read and write capacity units.
            </para>
                  </li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.CreateTableRequest.KeySchema">
            <summary>
            Gets and sets the property KeySchema. 
            <para>
            Specifies the attributes that make up the primary key for a table or an index. The
            attributes      in <i>KeySchema</i> must also be defined in the <i>AttributeDefinitions</i>
            array. For more      information, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html">Data
            Model</a> in the      Amazon DynamoDB Developer Guide.
            </para>
                
            <para>
            Each <i>KeySchemaElement</i> in the array is composed of:
            </para>
                <ul>      <li>        
            <para>
            <i>AttributeName</i> - The name of this key attribute.
            </para>
                  </li>      <li>        
            <para>
            <i>KeyType</i> - Determines whether the key attribute is <code>HASH</code> or    
                   <code>RANGE</code>.
            </para>
                  </li>    </ul>    
            <para>
            For a primary key that consists of a hash attribute, you must specify exactly one
            element      with a <i>KeyType</i> of <code>HASH</code>.
            </para>
                
            <para>
            For a primary key that consists of hash and range attributes, you must specify exactly
            two      elements, in this order: The first element must have a <i>KeyType</i> of
            <code>HASH</code>,      and the second element must have a <i>KeyType</i> of <code>RANGE</code>.
            </para>
                
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#WorkingWithTables.primary.key">Specifying
            the        Primary Key</a> in the Amazon DynamoDB Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.CreateTableRequest.LocalSecondaryIndexes">
            <summary>
            Gets and sets the property LocalSecondaryIndexes. 
            <para>
            One or more local secondary indexes (the maximum is five) to be created on the table.
            Each index is scoped to      a given hash key value. There is a 10 GB size limit per
            hash key;      otherwise, the size of a local secondary index is unconstrained.
            </para>
                
            <para>
            Each local secondary index in the array includes the following:
            </para>
                <ul>      <li>        
            <para>
            <i>IndexName</i> - The name of the local secondary index. Must be unique only for
            this table.
            </para>
                    
            <para>
            
            </para>
                  </li>      <li>        
            <para>
            <i>KeySchema</i> - Specifies the key schema for the local secondary index. The key
            schema must begin with          the same hash key attribute as the table.
            </para>
                  </li>      <li>         
            <para>
            <i>Projection</i> - Specifies          attributes that are copied (projected) from
            the table into the index. These are in          addition to the primary key attributes
            and index key          attributes, which are automatically projected. Each       
              attribute specification is composed of:
            </para>
                    <ul>          <li>            
            <para>
            <i>ProjectionType</i> - One              of the following:
            </para>
                        <ul>              <li>                
            <para>
            <code>KEYS_ONLY</code> - Only the index and primary keys are projected into the  
                           index.
            </para>
                          </li>              <li>                
            <para>
            <code>INCLUDE</code> - Only the specified table attributes are projected into the
                             index. The list of projected attributes are                  in <i>NonKeyAttributes</i>.
            </para>
                          </li>              <li>                
            <para>
            <code>ALL</code> - All of the table attributes are projected into the            
                 index.
            </para>
                          </li>            </ul>          </li>          <li>            
            <para>
            <i>NonKeyAttributes</i> - A list of one or more non-key attribute names that are 
                         projected into the secondary index. The total count of attributes specified
            in <i>NonKeyAttributes</i>, summed across all of the secondary indexes, must not exceed
            20. If you project the same attribute into two different indexes, this counts as two
            distinct attributes when determining the total.
            </para>
                      </li>        </ul> </li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.CreateTableRequest.ProvisionedThroughput">
            <summary>
            Gets and sets the property ProvisionedThroughput.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.CreateTableRequest.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            The name of the table to create.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.CreateTableResponse">
            <summary>
            Configuration for accessing Amazon CreateTable service
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.CreateTableResult">
            <summary>
            Represents the output of a <i>CreateTable</i> operation.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.CreateTableResult.TableDescription">
            <summary>
            Gets and sets the property TableDescription.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.CreateTableResponse.CreateTableResult">
            <summary>
            Gets and sets the CreateTableResult property.
            Represents the output of a CreateTable operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.DeleteItemRequest">
            <summary>
            Container for the parameters to the DeleteItem operation.
            Deletes a single item in a table by primary key. You can perform a conditional delete
                 operation that deletes the item if it exists, or if it has an expected attribute
            value.
            
                
            <para>
            In addition to deleting an item, you can also return the item's attribute values in
            the same      operation, using the <i>ReturnValues</i> parameter.
            </para>
                
            <para>
            Unless you specify conditions, the <i>DeleteItem</i> is an idempotent operation; running
            it      multiple times on the same item or attribute does <i>not</i> result in an
            error response.
            </para>
                
            <para>
            Conditional deletes are useful for only deleting items if specific conditions are
            met. If      those conditions are met, DynamoDB performs the delete. Otherwise, the
            item is not deleted. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.DeleteItemRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.DeleteItemRequest.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValue})">
            <summary>
            Instantiates DeleteItemRequest with the parameterized properties
            </summary>
            <param name="tableName">The name of the table from which to delete the item.</param>
            <param name="key">A map of attribute names to <i>AttributeValue</i> objects, representing the primary key of   the item to delete. For the primary key, you must provide <i>all</i> of the attributes. For example, with a hash   type primary key, you only need to specify the hash attribute. For a hash-and-range type   primary key, you must specify <i>both</i> the hash attribute and the range attribute.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.DeleteItemRequest.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValue},Amazon.DynamoDBv2.ReturnValue)">
            <summary>
            Instantiates DeleteItemRequest with the parameterized properties
            </summary>
            <param name="tableName">The name of the table from which to delete the item.</param>
            <param name="key">A map of attribute names to <i>AttributeValue</i> objects, representing the primary key of   the item to delete. For the primary key, you must provide <i>all</i> of the attributes. For example, with a hash   type primary key, you only need to specify the hash attribute. For a hash-and-range type   primary key, you must specify <i>both</i> the hash attribute and the range attribute.</param>
            <param name="returnValues">Use <i>ReturnValues</i> if you want to get the item attributes as they appeared before they   were deleted. For <i>DeleteItem</i>, the valid values are: <ul>   <li>  <code>NONE</code> - If <i>ReturnValues</i> is not specified, or if its value is   <code>NONE</code>, then nothing is returned. (This is the default for   <i>ReturnValues</i>.)   </li>   <li>  <code>ALL_OLD</code> - The content of the old item is returned.   </li> </ul></param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemRequest.ConditionalOperator">
            <summary>
            Gets and sets the property ConditionalOperator. 
            <para>
            A logical operator to apply to the conditions in the <i>Expected</i> map:
            </para>
                          <ul>               <li>
            <para>
            <code>AND</code> - If <i>all</i> of the conditions evaluate to true, then the entire
            map  evaluates to true.
            </para>
            </li>               <li>
            <para>
            <code>OR</code> - If <i>at least one</i> of the conditions evaluate to true, then
            the entire map evaluates to true.
            </para>
            </li>           </ul>           
            <para>
            If you omit <i>ConditionalOperator</i>, then <code>AND</code> is the default.
            </para>
                       
            <para>
            The operation will succeed only if the entire map evaluates to true.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemRequest.Expected">
            <summary>
            Gets and sets the property Expected. 
            <para>
            A map of attribute/condition pairs. This is the conditional block for the <i>DeleteItem</i>
                 operation.
            </para>
                  
            <para>
            Each element of <i>Expected</i> consists of an attribute name, a comparison operator,
            and one or more values.  DynamoDB compares the attribute with the value(s) you supplied,
            using the comparison operator. For each <i>Expected</i> element, the result of the
            evaluation is either true or false.
            </para>
                
            <para>
            If you specify more than one element in the <i>Expected</i> map, then by default all
            of the conditions must evaluate to true. In other words, the conditions are ANDed
            together. (You can use the <i>ConditionalOperator</i> parameter to OR the conditions
            instead. If you do this, then at least one of the conditions must evaluate to true,
            rather than all of them.)
            </para>
                
            <para>
            If the <i>Expected</i> map evaluates to true, then the conditional operation succeeds;
            otherwise, it fails.
            </para>
                    
            <para>
            Each item in <i>Expected</i> represents an attribute name for DynamoDB to check, along
            with an <i>AttributeValueList</i> and a <i>ComparisonOperator</i>:
            </para>
                     <ul>         <li>             
            <para>
            <i>AttributeValueList</i> - One or more values to evaluate against the supplied  
                          attribute. The number of values in the list depends on the <i>ComparisonOperator</i>
                            being used.
            </para>
                         
            <para>
            For type Number, value comparisons are numeric.
            </para>
                         
            <para>
            String value comparisons for greater than, equals, or less than are based on ASCII
                            character code values. For example, <code>a</code> is greater than
            <code>A</code>, and                     <code>aa</code> is greater than <code>B</code>.
            For a list of code values, see <a                     href="http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters"
                                >http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>.
            </para>
                         
            <para>
            For Binary, DynamoDB treats each byte of the binary data as unsigned when it compares
            binary                 values, for example when evaluating query expressions.
            </para>
                     </li>         <li>        
            <para>
            <i>ComparisonOperator</i> - A comparator for evaluating attributes in the        
                   <i>AttributeValueList</i>. When performing the comparison, DynamoDB uses strongly
            consistent reads.
            </para>
                            
            <para>
            The following comparison operators are available:
            </para>
                  
            <para>
            <code>EQ | NE | LE | LT | GE | GT | NOT_NULL | NULL | CONTAINS | NOT_CONTAINS | BEGINS_WITH
            | IN | BETWEEN</code>
            </para>
                          
            <para>
            The following are descriptions of each comparison operator.
            </para>
                <ul>      <li>        
            <para>
            <code>EQ</code> : Equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, Binary, String Set, Number Set, or Binary Set. If an item contains
            an <i>AttributeValue</i> of a different          type than the one specified in the
            request, the value does not match. For example,            <code>{"S":"6"}</code>
            does not equal <code>{"N":"6"}</code>. Also,            <code>{"N":"6"}</code> does
            not equal <code>{"NS":["6", "2", "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>NE</code> : Not equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, Binary, String Set, Number Set, or Binary Set. If an item contains
            an <i>AttributeValue</i> of a different          type than the one specified in the
            request, the value does not match. For example,            <code>{"S":"6"}</code>
            does not equal <code>{"N":"6"}</code>. Also,            <code>{"N":"6"}</code> does
            not equal <code>{"NS":["6", "2", "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>LE</code> : Less than or equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>LT</code> : Less than. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>GE</code> : Greater than or equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>GT</code> : Greater than. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>NOT_NULL</code> : The attribute exists. 
            </para>
            </li>      <li>        
            <para>
            <code>NULL</code> : The attribute does not exist. 
            </para>
            </li>      <li>        
            <para>
            <code>CONTAINS</code> : checks for a subsequence, or value in a set.
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If the target attribute of the comparison
            is a String, then          the operation checks for a substring match. If the target
            attribute of the comparison is          Binary, then the operation looks for a subsequence
            of the target that matches the input.          If the target attribute of the comparison
            is a set ("SS", "NS", or "BS"), then the          operation checks for a member of
            the set (not as a substring).
            </para>
            </li>      <li>        
            <para>
            <code>NOT_CONTAINS</code> : checks for absence of a subsequence, or absence of a value
            in          a set.
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If the target attribute of the comparison
            is a String, then          the operation checks for the absence of a substring match.
            If the target attribute of the          comparison is Binary, then the operation checks
            for the absence of a subsequence of the          target that matches the input. If
            the target attribute of the comparison is a set ("SS",          "NS", or "BS"), then
            the operation checks for the absence of a member of the set (not as a          substring).
            </para>
            </li>      <li>        
            <para>
            <code>BEGINS_WITH</code> : checks for a prefix. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String
            or          Binary (not a Number or a set). The target attribute of the comparison
            must be a String or          Binary (not a Number or a set).
            </para>
                    <p/></li>      <li>        
            <para>
            <code>IN</code> : checks for exact matches.
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain more than one <i>AttributeValue</i> of type
            String,          Number, or Binary (not a set). The target attribute of the comparison
            must be of the same          type and exact value to match. A String never matches
            a String set.
            </para>
            </li>      <li>        
            <para>
            <code>BETWEEN</code> : Greater than or equal to the first value, and less than or
            equal          to the second value. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> must contain two <i>AttributeValue</i> elements of the same
                     type, either String, Number, or Binary (not a set). A target attribute matches
            if the          target value is greater than, or equal to, the first element and less
            than, or equal to,          the second element. If an item contains an <i>AttributeValue</i>
            of a different type than          the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not compare to <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>
            </para>
            </li>    </ul>    </li>     </ul>    
            <para>
            For usage examples of <i>AttributeValueList</i> and <i>ComparisonOperator</i>, see
            <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html#ConditionalExpressions"
                   >Conditional Expressions</a> in the Amazon DynamoDB Developer Guide.
            </para>
                <note>      
            <para>
            For backward compatibility with previous DynamoDB releases, the following parameters
            can be        used instead of <i>AttributeValueList</i> and <i>ComparisonOperator</i>:
            </para>
                  <ul>        <li>          
            <para>
            <i>Value</i> - A value for DynamoDB to compare with an attribute.
            </para>
                    </li>        <li>          
            <para>
            <i>Exists</i> - Causes DynamoDB to evaluate the value before attempting the conditional
                       operation:
            </para>
                      <ul>            <li>              
            <para>
            If <i>Exists</i> is <code>true</code>, DynamoDB will check to see if that attribute
                           value already exists in the table. If it is found, then the condition
            evaluates to                true; otherwise the condition evaluate to false.
            </para>
                        </li>            <li>
            <para>
            If <i>Exists</i> is <code>false</code>, DynamoDB assumes that the attribute value
                           does <i>not</i> exist in the table. If in fact the value does not exist,
            then the                assumption is valid and the condition evaluates to true. If
            the value is found,                despite the assumption that it does not exist,
            the condition evaluates to              false.
            </para>
            </li>          </ul>        </li>      </ul>      
            <para>
            Even though DynamoDB continues to accept the <i>Value</i> and <i>Exists</i> parameters,
            they        are now deprecated. We recommend that you use <i>AttributeValueList</i>
            and          <i>ComparisonOperator</i> instead, since they allow you to construct
            a much wider range of        conditions.
            </para>
                  
            <para>
            The <i>Value</i> and <i>Exists</i> parameters are incompatible with          <i>AttributeValueList</i>
            and <i>ComparisonOperator</i>. If you attempt to use both sets        of parameters
            at once, DynamoDB will throw a <i>ValidationException</i>.
            </para>
                </note>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemRequest.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            A map of attribute names to <i>AttributeValue</i> objects, representing the primary
            key of      the item to delete.
            </para>
                
            <para>
            For the primary key, you must provide <i>all</i> of the attributes. For example, with
            a hash      type primary key, you only need to specify the hash attribute. For a hash-and-range
            type      primary key, you must specify <i>both</i> the hash attribute and the range
            attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemRequest.ReturnConsumedCapacity">
            <summary>
            Gets and sets the property ReturnConsumedCapacity.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemRequest.ReturnItemCollectionMetrics">
            <summary>
            Gets and sets the property ReturnItemCollectionMetrics. 
            <para>
            If set to <code>SIZE</code>, statistics about item collections, if any, that were
            modified during      the operation are returned in the response. If set to <code>NONE</code>
            (the default), no statistics are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemRequest.ReturnValues">
            <summary>
            Gets and sets the property ReturnValues. 
            <para>
            Use <i>ReturnValues</i> if you want to get the item attributes as they appeared before
            they      were deleted. For <i>DeleteItem</i>, the valid values are:
            </para>
                <ul>      <li>        
            <para>
            <code>NONE</code> - If <i>ReturnValues</i> is not specified, or if its value is  
                     <code>NONE</code>, then nothing is returned. (This is the default for   
                    <i>ReturnValues</i>.)
            </para>
                  </li>      <li>        
            <para>
            <code>ALL_OLD</code> - The content of the old item is returned.
            </para>
                  </li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemRequest.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            The name of the table from which to delete the item.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.DeleteItemResponse">
            <summary>
            Configuration for accessing Amazon DeleteItem service
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.DeleteItemResult">
            <summary>
            Represents the output of a <i>DeleteItem</i> operation.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemResult.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A map of attribute names to <i>AttributeValue</i> objects, representing the item as
            it      appeared before the <i>DeleteItem</i> operation. This map appears in the response
            only if        <i>ReturnValues</i> was specified as <code>ALL_OLD</code> in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemResult.ConsumedCapacity">
            <summary>
            Gets and sets the property ConsumedCapacity.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemResult.ItemCollectionMetrics">
            <summary>
            Gets and sets the property ItemCollectionMetrics. 
            <para>
            Information about item collections, if any, that were affected by the operation. <i>ItemCollectionMetrics</i>
            is only returned if it was asked for in the request. If the table      does not have
            any local secondary indexes, this information is not      returned in the response.
            </para>
                  
            <para>
            Each <i>ItemCollectionMetrics</i>        element consists of:
            </para>
                  <ul>        <li>
            <para>
            <i>ItemCollectionKey</i> - The hash key value of the item          collection. This
            is the same as the hash key of the item.
            </para>
            </li>        <li>
            <para>
            <i>SizeEstimateRange</i> - An estimate of item collection size,          measured
            in gigabytes. This is a two-element array          containing a lower bound and an
            upper bound for the          estimate. The estimate includes the size of all the 
                    items in the table, plus the size of all attributes          projected into
            all of the local secondary indexes on that          table. Use this estimate to measure
            whether a local secondary index is approaching its size limit.
            </para>
                      
            <para>
            The estimate is subject to change over time; therefore, do not rely on the precision
            or accuracy of the estimate.
            </para>
            </li>      </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteItemResponse.DeleteItemResult">
            <summary>
            Gets and sets the DeleteItemResult property.
            Represents the output of a DeleteItem operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.DeleteRequest">
            <summary>
            Represents a request to perform a <i>DeleteItem</i> operation on an item.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.DeleteRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.DeleteRequest.#ctor(System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValue})">
            <summary>
            Instantiates DeleteRequest with the parameterized properties
            </summary>
            <param name="key">A map of attribute name to attribute values, representing the primary key of the item to   delete. All of the table's primary key attributes must be specified, and their data types must   match those of the table's key schema.</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteRequest.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            A map of attribute name to attribute values, representing the primary key of the item
            to      delete. All of the table's primary key attributes must be specified, and their
            data types must      match those of the table's key schema.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.DeleteTableRequest">
            <summary>
            Container for the parameters to the DeleteTable operation.
            The <i>DeleteTable</i> operation deletes a table and all of its items. After a   
                <i>DeleteTable</i> request, the specified table is in the <code>DELETING</code>
            state until      DynamoDB completes the deletion. If the table is in the <code>ACTIVE</code>
            state, you can delete      it. If a table is in <code>CREATING</code> or <code>UPDATING</code>
            states, then DynamoDB returns      a <i>ResourceInUseException</i>. If the specified
            table does not exist, DynamoDB returns a        <i>ResourceNotFoundException</i>.
            If table is already in the <code>DELETING</code> state, no      error is returned.
            
            
                <note>      
            <para>
            DynamoDB might continue to accept data read and write operations, such as <i>GetItem</i>
            and          <i>PutItem</i>, on a table in the <code>DELETING</code> state until the
            table deletion is        complete.
            </para>
                </note>    
            <para>
            When you delete a table, any indexes on that table are also deleted.
            </para>
                
            <para>
            Use the <i>DescribeTable</i> API to check the status of the table. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.DeleteTableRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.DeleteTableRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteTableRequest with the parameterized properties
            </summary>
            <param name="tableName"> The name of the table to delete.</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteTableRequest.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
             The name of the table to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.DeleteTableResponse">
            <summary>
            Configuration for accessing Amazon DeleteTable service
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.DeleteTableResult">
            <summary>
            Represents the output of a <i>DeleteTable</i> operation.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteTableResult.TableDescription">
            <summary>
            Gets and sets the property TableDescription.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DeleteTableResponse.DeleteTableResult">
            <summary>
            Gets and sets the DeleteTableResult property.
            Represents the output of a DeleteTable operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.DescribeTableRequest">
            <summary>
            Container for the parameters to the DescribeTable operation.
            Returns information about the table, including the current status of the table, when
            it was      created, the primary key schema, and any indexes on the table.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.DescribeTableRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.DescribeTableRequest.#ctor(System.String)">
            <summary>
            Instantiates DescribeTableRequest with the parameterized properties
            </summary>
            <param name="tableName"> The name of the table to describe.</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DescribeTableRequest.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
             The name of the table to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.DescribeTableResponse">
            <summary>
            Configuration for accessing Amazon DescribeTable service
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.DescribeTableResult">
            <summary>
            Represents the output of a <i>DescribeTable</i> operation.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DescribeTableResult.Table">
            <summary>
            Gets and sets the property Table.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.DescribeTableResponse.DescribeTableResult">
            <summary>
            Gets and sets the DescribeTableResult property.
            Represents the output of a DescribeTable operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ExpectedAttributeValue">
            <summary>
            Represents a condition to be compared with an attribute value. This condition can
            be used      with <i>DeleteItem</i>, <i>PutItem</i> or <i>UpdateItem</i> operations;
            if the comparison      evaluates to true, the operation succeeds; if not the operation
            fails. You can use        <i>ExpectedAttributeValue</i> in one of two different ways:
            
                <ul>      <li>        
            <para>
            Use <i>AttributeValueList</i> to specify one or more values to compare against an
                     attribute. Use <i>ComparisonOperator</i> to specify how you want to perform
            the          comparison. If the comparison evaluates to true, then the conditional
            operation          succeeds.
            </para>
                  </li>      <li>        
            <para>
            Use <i>Value</i> to specify a value that DynamoDB will compare against an attribute.
            If the          values match, then <i>ExpectedAttributeValue</i> evaluates to true
            and the conditional          operation succeeds. Optionally, you can also set <i>Exists</i>
            to false, indicating that          you <i>do not</i> expect to find the attribute
            value in the table. In this case, the          conditional operation succeeds only
            if the comparison evaluates to false.
            </para>
                  </li>    </ul>    
            <para>
            <i>Value</i> and <i>Exists</i> are incompatible with <i>AttributeValueList</i> and
                  <i>ComparisonOperator</i>. If you attempt to use both sets of parameters at
            once, DynamoDB will      throw a <i>ValidationException</i>.
            </para>
                <important>      
            <para>
            The <i>Value</i> and <i>Exists</i> parameters are deprecated. Even though DynamoDB
            will        continue to support these parameters, we recommend that you use <i>AttributeValueList</i>
                   and <i>ComparisonOperator</i> instead. <i>AttributeValueList</i> and      
               <i>ComparisonOperator</i> let you construct a much wider range of conditions than
            is        possible with <i>Value</i> and <i>Exists</i>.
            </para>
                </important>
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.ExpectedAttributeValue.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.ExpectedAttributeValue.#ctor(Amazon.DynamoDBv2.Model.AttributeValue)">
            <summary>
            Instantiates ExpectedAttributeValue with the parameterized properties
            </summary>
            <param name="value">Sets the ExpectedAttributeValue Value property</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.ExpectedAttributeValue.#ctor(System.Boolean)">
            <summary>
            Instantiates ExpectedAttributeValue with the parameterized properties
            </summary>
            <param name="exists">Causes DynamoDB to evaluate the value before attempting a conditional operation: <ul>   <li>  If <i>Exists</i> is <code>true</code>, DynamoDB will check to see if that attribute value    already exists in the table. If it is found, then the operation succeeds. If it is not    found, the operation fails with a <i>ConditionalCheckFailedException</i>.   </li>   <li>  If <i>Exists</i> is <code>false</code>, DynamoDB assumes that the attribute value does   <i>not</i> exist in the table. If in fact the value does not exist, then the assumption    is valid and the operation succeeds. If the value is found, despite the assumption that it    does not exist, the operation fails with a <i>ConditionalCheckFailedException</i>.   </li> </ul> The default setting for <i>Exists</i> is <code>true</code>. If you supply a <i>Value</i> all   by itself, DynamoDB assumes the attribute exists: You don't have to set <i>Exists</i> to  <code>true</code>, because it is implied. DynamoDB returns a <i>ValidationException</i> if: <ul>   <li>  <i>Exists</i> is <code>true</code> but there is no <i>Value</i> to check. (You expect a    value to exist, but don't specify what that value is.)   </li>   <li>  <i>Exists</i> is <code>false</code> but you also specify a <i>Value</i>. (You cannot    expect an attribute to have a value, while also expecting it not to exist.)   </li> </ul></param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ExpectedAttributeValue.AttributeValueList">
            <summary>
            Gets and sets the property AttributeValueList. 
            <para>
            One or more values to evaluate against the supplied attribute.      The number of
            values in the list depends on the <i>ComparisonOperator</i> being used.
            </para>
                
            <para>
            For type Number, value comparisons are numeric.
            </para>
                
            <para>
            String value comparisons for greater than, equals, or less than are based on ASCII
            character      code values. For example, <code>a</code> is greater than <code>A</code>,
            and <code>aa</code>      is greater than <code>B</code>. For a list of code values,
            see <a href="http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters">http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>.
            </para>
                
            <para>
            For Binary, DynamoDB treats each byte of the binary data as unsigned when it compares
            binary      values, for example when evaluating query expressions.
            </para>
                
            <para>
            For information on specifying data types in JSON, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataFormat.html">JSON
            Data Format</a> in the Amazon DynamoDB Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ExpectedAttributeValue.ComparisonOperator">
            <summary>
            Gets and sets the property ComparisonOperator. 
            <para>
            A comparator for evaluating attributes in the <i>AttributeValueList</i>. For example,
            equals,      greater than, less than, etc.
            </para>
                 
            <para>
            The following comparison operators are available:
            </para>
                  
            <para>
            <code>EQ | NE | LE | LT | GE | GT | NOT_NULL | NULL | CONTAINS | NOT_CONTAINS | BEGINS_WITH
            | IN | BETWEEN</code>
            </para>
                 
            <para>
            The following are descriptions of each comparison operator.
            </para>
                <ul>      <li>        
            <para>
            <code>EQ</code> : Equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, Binary, String Set, Number Set, or Binary Set. If an item contains
            an <i>AttributeValue</i> of a different          type than the one specified in the
            request, the value does not match. For example,            <code>{"S":"6"}</code>
            does not equal <code>{"N":"6"}</code>. Also,            <code>{"N":"6"}</code> does
            not equal <code>{"NS":["6", "2", "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>NE</code> : Not equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, Binary, String Set, Number Set, or Binary Set. If an item contains
            an <i>AttributeValue</i> of a different          type than the one specified in the
            request, the value does not match. For example,            <code>{"S":"6"}</code>
            does not equal <code>{"N":"6"}</code>. Also,            <code>{"N":"6"}</code> does
            not equal <code>{"NS":["6", "2", "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>LE</code> : Less than or equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>LT</code> : Less than. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>GE</code> : Greater than or equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>GT</code> : Greater than. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>NOT_NULL</code> : The attribute exists. 
            </para>
            </li>      <li>        
            <para>
            <code>NULL</code> : The attribute does not exist. 
            </para>
            </li>      <li>        
            <para>
            <code>CONTAINS</code> : checks for a subsequence, or value in a set.
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If the target attribute of the comparison
            is a String, then          the operation checks for a substring match. If the target
            attribute of the comparison is          Binary, then the operation looks for a subsequence
            of the target that matches the input.          If the target attribute of the comparison
            is a set ("SS", "NS", or "BS"), then the          operation checks for a member of
            the set (not as a substring).
            </para>
            </li>      <li>        
            <para>
            <code>NOT_CONTAINS</code> : checks for absence of a subsequence, or absence of a value
            in          a set.
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If the target attribute of the comparison
            is a String, then          the operation checks for the absence of a substring match.
            If the target attribute of the          comparison is Binary, then the operation checks
            for the absence of a subsequence of the          target that matches the input. If
            the target attribute of the comparison is a set ("SS",          "NS", or "BS"), then
            the operation checks for the absence of a member of the set (not as a          substring).
            </para>
            </li>      <li>        
            <para>
            <code>BEGINS_WITH</code> : checks for a prefix. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String
            or          Binary (not a Number or a set). The target attribute of the comparison
            must be a String or          Binary (not a Number or a set).
            </para>
                    <p/></li>      <li>        
            <para>
            <code>IN</code> : checks for exact matches.
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain more than one <i>AttributeValue</i> of type
            String,          Number, or Binary (not a set). The target attribute of the comparison
            must be of the same          type and exact value to match. A String never matches
            a String set.
            </para>
            </li>      <li>        
            <para>
            <code>BETWEEN</code> : Greater than or equal to the first value, and less than or
            equal          to the second value. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> must contain two <i>AttributeValue</i> elements of the same
                     type, either String, Number, or Binary (not a set). A target attribute matches
            if the          target value is greater than, or equal to, the first element and less
            than, or equal to,          the second element. If an item contains an <i>AttributeValue</i>
            of a different type than          the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not compare to <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>
            </para>
            </li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ExpectedAttributeValue.Exists">
            <summary>
            Gets and sets the property Exists. 
            <para>
            Causes DynamoDB to evaluate the value before attempting a conditional operation:
            </para>
                <ul>      <li>        
            <para>
            If <i>Exists</i> is <code>true</code>, DynamoDB will check to see if that attribute
            value          already exists in the table. If it is found, then the operation succeeds.
            If it is not          found, the operation fails with a <i>ConditionalCheckFailedException</i>.
            </para>
                  </li>      <li>        
            <para>
            If <i>Exists</i> is <code>false</code>, DynamoDB assumes that the attribute value
            does            <i>not</i> exist in the table. If in fact the value does not exist,
            then the assumption          is valid and the operation succeeds. If the value is
            found, despite the assumption that it          does not exist, the operation fails
            with a <i>ConditionalCheckFailedException</i>.
            </para>
                  </li>    </ul>    
            <para>
            The default setting for <i>Exists</i> is <code>true</code>. If you supply a <i>Value</i>
            all      by itself, DynamoDB assumes the attribute exists: You don't have to set <i>Exists</i>
            to        <code>true</code>, because it is implied.
            </para>
                
            <para>
            DynamoDB returns a <i>ValidationException</i> if:
            </para>
                <ul>      <li>        
            <para>
            <i>Exists</i> is <code>true</code> but there is no <i>Value</i> to check. (You expect
            a          value to exist, but don't specify what that value is.)
            </para>
                  </li>      <li>        
            <para>
            <i>Exists</i> is <code>false</code> but you also specify a <i>Value</i>. (You cannot
                     expect an attribute to have a value, while also expecting it not to exist.)
            </para>
                  </li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ExpectedAttributeValue.Value">
            <summary>
            Gets and sets the property Value.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.GetItemRequest">
            <summary>
            Container for the parameters to the GetItem operation.
            The <i>GetItem</i> operation returns a set of attributes for the item with the given
            primary      key. If there is no matching item, <i>GetItem</i> does not return any
            data.
            
                
            <para>
            <i>GetItem</i> provides an eventually consistent read by default. If your application
                 requires a strongly consistent read, set <i>ConsistentRead</i> to <code>true</code>.
            Although      a strongly consistent read might take more time than an eventually consistent
            read, it always      returns the last updated value.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.GetItemRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.GetItemRequest.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValue})">
            <summary>
            Instantiates GetItemRequest with the parameterized properties
            </summary>
            <param name="tableName">The name of the table containing the requested item.</param>
            <param name="key">A map of attribute names to <i>AttributeValue</i> objects, representing the primary key of   the item to retrieve. For the primary key, you must provide <i>all</i> of the attributes. For example, with a hash   type primary key, you only need to specify the hash attribute. For a hash-and-range type   primary key, you must specify <i>both</i> the hash attribute and the range attribute.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.GetItemRequest.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValue},System.Boolean)">
            <summary>
            Instantiates GetItemRequest with the parameterized properties
            </summary>
            <param name="tableName">The name of the table containing the requested item.</param>
            <param name="key">A map of attribute names to <i>AttributeValue</i> objects, representing the primary key of   the item to retrieve. For the primary key, you must provide <i>all</i> of the attributes. For example, with a hash   type primary key, you only need to specify the hash attribute. For a hash-and-range type   primary key, you must specify <i>both</i> the hash attribute and the range attribute.</param>
            <param name="consistentRead">If set to <code>true</code>, then the operation uses strongly consistent reads; otherwise, eventually   consistent reads are used.</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GetItemRequest.AttributesToGet">
            <summary>
            Gets and sets the property AttributesToGet. 
            <para>
            The names of one or more attributes to retrieve.  If no attribute      names are specified,
            then all attributes will be returned. If      any of the requested attributes are
            not found, they will not      appear in the result.
            </para>
                  
            <para>
            Note that <i>AttributesToGet</i> has no effect on provisioned throughput consumption.
                  DynamoDB determines capacity units consumed based on item size, not on the amount
            of data that is returned to an application.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GetItemRequest.ConsistentRead">
            <summary>
            Gets and sets the property ConsistentRead. 
            <para>
            If set to <code>true</code>, then the operation uses strongly consistent reads; otherwise,
            eventually      consistent reads are used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GetItemRequest.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            A map of attribute names to <i>AttributeValue</i> objects, representing the primary
            key of      the item to retrieve.
            </para>
                
            <para>
            For the primary key, you must provide <i>all</i> of the attributes. For example, with
            a hash      type primary key, you only need to specify the hash attribute. For a hash-and-range
            type      primary key, you must specify <i>both</i> the hash attribute and the range
            attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GetItemRequest.ReturnConsumedCapacity">
            <summary>
            Gets and sets the property ReturnConsumedCapacity.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GetItemRequest.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            The name of the table containing the requested item.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.GetItemResponse">
            <summary>
            Configuration for accessing Amazon GetItem service
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.GetItemResult">
            <summary>
            Represents the output of a <i>GetItem</i> operation.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GetItemResult.ConsumedCapacity">
            <summary>
            Gets and sets the property ConsumedCapacity.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GetItemResult.Item">
            <summary>
            Gets and sets the property Item. 
            <para>
            A map of attribute names to <i>AttributeValue</i> objects, as specified by       
            <i>AttributesToGet</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GetItemResponse.GetItemResult">
            <summary>
            Gets and sets the GetItemResult property.
            Represents the output of a GetItem operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.GlobalSecondaryIndex">
            <summary>
            Represents a global secondary index.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndex.IndexName">
            <summary>
            Gets and sets the property IndexName. 
            <para>
            The name of the global secondary index. The name must be unique among all other indexes
            on this table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndex.KeySchema">
            <summary>
            Gets and sets the property KeySchema. 
            <para>
            The complete key schema for a global secondary index, which consists of one or more
            pairs of attribute names      and key types (<code>HASH</code> or <code>RANGE</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndex.Projection">
            <summary>
            Gets and sets the property Projection.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndex.ProvisionedThroughput">
            <summary>
            Gets and sets the property ProvisionedThroughput.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.GlobalSecondaryIndexDescription">
            <summary>
            Represents the properties of a global secondary index.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndexDescription.IndexName">
            <summary>
            Gets and sets the property IndexName. 
            <para>
            The name of the global secondary index.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndexDescription.IndexSizeBytes">
            <summary>
            Gets and sets the property IndexSizeBytes. 
            <para>
            The total size of the specified index, in bytes. DynamoDB updates this value approximately
            every six      hours. Recent changes might not be reflected in this value.      
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndexDescription.IndexStatus">
            <summary>
            Gets and sets the property IndexStatus. 
            <para>
            The current state of the global secondary index:
            </para>
                <ul>      <li>        
            <para>
            <i>CREATING</i> - The index is being created, as the result of a <i>CreateTable</i>
            or            <i>UpdateTable</i> operation.
            </para>
                  </li>      <li>        
            <para>
            <i>UPDATING</i> - The index is being updated, as the result of a <i>CreateTable</i>
            or            <i>UpdateTable</i> operation.
            </para>
                  </li>      <li>        
            <para>
            <i>DELETING</i> - The index is being deleted, as the result of a <i>DeleteTable</i>
                     operation.
            </para>
                  </li>      <li>        
            <para>
            <i>ACTIVE</i> - The index is ready for use.
            </para>
                  </li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndexDescription.ItemCount">
            <summary>
            Gets and sets the property ItemCount. 
            <para>
            The number of items in the specified index. DynamoDB updates this value approximately
            every six      hours. Recent changes might not be reflected in this value.      
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndexDescription.KeySchema">
            <summary>
            Gets and sets the property KeySchema. 
            <para>
            The complete key schema for the global secondary index, consisting of one or more
            pairs of attribute names and      key types (<code>HASH</code> or <code>RANGE</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndexDescription.Projection">
            <summary>
            Gets and sets the property Projection.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndexDescription.ProvisionedThroughput">
            <summary>
            Gets and sets the property ProvisionedThroughput.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.GlobalSecondaryIndexUpdate">
            <summary>
            Represents the new provisioned throughput settings to apply to a global secondary
            index.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.GlobalSecondaryIndexUpdate.Update">
            <summary>
            Gets and sets the property Update. 
            <para>
            The name of a global secondary index, along with the updated provisioned throughput
            settings that are to be      applied to that index.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.InternalServerErrorException">
            <summary>
             DynamoDB exception
             </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.InternalServerErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AttributeDefinitionMarshaller">
            <summary>
            AttributeDefinition Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AttributeDefinitionUnmarshaller">
            <summary>
            Response Unmarshaller for AttributeDefinition Object
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AttributeValueMarshaller">
            <summary>
            AttributeValue Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AttributeValueUnmarshaller">
            <summary>
            Response Unmarshaller for AttributeValue Object
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.AttributeValueUpdateMarshaller">
            <summary>
            AttributeValueUpdate Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchGetItemRequestMarshaller">
            <summary>
            BatchGetItem Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchGetItemResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchGetItem operation
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchWriteItemRequestMarshaller">
            <summary>
            BatchWriteItem Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.BatchWriteItemResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchWriteItem operation
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CapacityUnmarshaller">
            <summary>
            Response Unmarshaller for Capacity Object
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ConditionMarshaller">
            <summary>
            Condition Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ConsumedCapacityUnmarshaller">
            <summary>
            Response Unmarshaller for ConsumedCapacity Object
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CreateTableRequestMarshaller">
            <summary>
            CreateTable Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.CreateTableResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateTable operation
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteItemRequestMarshaller">
            <summary>
            DeleteItem Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteItemResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteItem operation
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteRequestMarshaller">
            <summary>
            DeleteRequest Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteRequestUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteRequest Object
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteTableRequestMarshaller">
            <summary>
            DeleteTable Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DeleteTableResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteTable operation
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeTableRequestMarshaller">
            <summary>
            DescribeTable Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.DescribeTableResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTable operation
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ExpectedAttributeValueMarshaller">
            <summary>
            ExpectedAttributeValue Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetItemRequestMarshaller">
            <summary>
            GetItem Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GetItemResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetItem operation
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GlobalSecondaryIndexDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for GlobalSecondaryIndexDescription Object
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GlobalSecondaryIndexMarshaller">
            <summary>
            GlobalSecondaryIndex Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.GlobalSecondaryIndexUpdateMarshaller">
            <summary>
            GlobalSecondaryIndexUpdate Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ItemCollectionMetricsUnmarshaller">
            <summary>
            Response Unmarshaller for ItemCollectionMetrics Object
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.KeysAndAttributesMarshaller">
            <summary>
            KeysAndAttributes Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.KeysAndAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for KeysAndAttributes Object
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.KeySchemaElementMarshaller">
            <summary>
            KeySchemaElement Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.KeySchemaElementUnmarshaller">
            <summary>
            Response Unmarshaller for KeySchemaElement Object
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListTablesRequestMarshaller">
            <summary>
            ListTables Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ListTablesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTables operation
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.LocalSecondaryIndexDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for LocalSecondaryIndexDescription Object
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.LocalSecondaryIndexMarshaller">
            <summary>
            LocalSecondaryIndex Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ProjectionMarshaller">
            <summary>
            Projection Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ProjectionUnmarshaller">
            <summary>
            Response Unmarshaller for Projection Object
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ProvisionedThroughputDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for ProvisionedThroughputDescription Object
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ProvisionedThroughputMarshaller">
            <summary>
            ProvisionedThroughput Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PutItemRequestMarshaller">
            <summary>
            PutItem Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PutItemResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutItem operation
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PutRequestMarshaller">
            <summary>
            PutRequest Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.PutRequestUnmarshaller">
            <summary>
            Response Unmarshaller for PutRequest Object
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.QueryRequestMarshaller">
            <summary>
            Query Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.QueryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for Query operation
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ScanRequestMarshaller">
            <summary>
            Scan Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.ScanResponseUnmarshaller">
            <summary>
            Response Unmarshaller for Scan operation
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.TableDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for TableDescription Object
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateGlobalSecondaryIndexActionMarshaller">
            <summary>
            UpdateGlobalSecondaryIndexAction Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateItemRequestMarshaller">
            <summary>
            UpdateItem Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateItemResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateItem operation
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateTableRequestMarshaller">
            <summary>
            UpdateTable Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.UpdateTableResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateTable operation
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.WriteRequestMarshaller">
            <summary>
            WriteRequest Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Internal.MarshallTransformations.WriteRequestUnmarshaller">
            <summary>
            Response Unmarshaller for WriteRequest Object
            </summary>  
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ItemCollectionMetrics">
            <summary>
            Information about item collections, if any, that were affected by the operation. 
                  <i>ItemCollectionMetrics</i> is only returned if it was asked for in the request.
            If the      table does not have any local secondary indexes, this information is not
            returned in the response.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ItemCollectionMetrics.ItemCollectionKey">
            <summary>
            Gets and sets the property ItemCollectionKey. 
            <para>
            The hash key value of the item collection. This is the same as the hash key of the
            item.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ItemCollectionMetrics.SizeEstimateRangeGB">
            <summary>
            Gets and sets the property SizeEstimateRangeGB. 
            <para>
            An estimate of item collection size, measured in gigabytes. This is a two-element
            array      containing a lower bound and an upper bound for the estimate. The estimate
            includes the size      of all the items in the table, plus the size of all attributes
            projected into all of the      local secondary indexes on that table. Use this estimate
            to measure whether a local secondary index is approaching its size      limit.
            </para>
                
            <para>
            The estimate is subject to change over time; therefore, do not rely on the precision
            or      accuracy of the estimate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ItemCollectionSizeLimitExceededException">
            <summary>
             DynamoDB exception
             </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.ItemCollectionSizeLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ItemCollectionSizeLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.KeysAndAttributes">
            <summary>
            Represents a set of primary keys and, for each key, the attributes to retrieve from
            the      table.
            
                
            <para>
            For each primary key, you must provide <i>all</i> of the key attributes. For example,
            with a      hash type primary key, you only need to specify the hash attribute. For
            a hash-and-range type      primary key, you must specify <i>both</i> the hash attribute
            and the range attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.KeysAndAttributes.AttributesToGet">
            <summary>
            Gets and sets the property AttributesToGet. 
            <para>
            One or more attributes to retrieve from the table or index. If no attribute names
            are      specified then all attributes will be returned. If any of the specified attributes
            are not      found, they will not appear in the result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.KeysAndAttributes.ConsistentRead">
            <summary>
            Gets and sets the property ConsistentRead. 
            <para>
            The consistency of a read operation. If set to <code>true</code>, then a strongly
            consistent      read is used; otherwise, an eventually consistent read is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.KeysAndAttributes.Keys">
            <summary>
            Gets and sets the property Keys. 
            <para>
            The primary key attribute values that define the items and the attributes associated
            with the      items.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.KeySchemaElement">
            <summary>
            Represents <i>a single element</i> of a key schema. A key schema specifies the attributes
                 that make up the primary key of a table, or the key attributes of an index.
            
                
            <para>
            A <i>KeySchemaElement</i> represents exactly one attribute of the primary key. For
            example, a      hash type primary key would be represented by one <i>KeySchemaElement</i>.
            A hash-and-range      type primary key would require one <i>KeySchemaElement</i> for
            the hash attribute, and another        <i>KeySchemaElement</i> for the range attribute.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.KeySchemaElement.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.KeySchemaElement.#ctor(System.String,Amazon.DynamoDBv2.KeyType)">
            <summary>
            Instantiates KeySchemaElement with the parameterized properties
            </summary>
            <param name="attributeName">The name of a key attribute.</param>
            <param name="keyType">The attribute data, consisting of the data type and the attribute value itself.</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.KeySchemaElement.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The name of a key attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.KeySchemaElement.KeyType">
            <summary>
            Gets and sets the property KeyType. 
            <para>
            The attribute data, consisting of the data type and the attribute value itself.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.LimitExceededException">
            <summary>
             DynamoDB exception
             </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ListTablesRequest">
            <summary>
            Container for the parameters to the ListTables operation.
            Returns an array of table names associated with the current account and endpoint.
            The output      from <i>ListTables</i> is paginated, with each page returning a maximum
            of 100 table      names.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.ListTablesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.ListTablesRequest.#ctor(System.String)">
            <summary>
            Instantiates ListTablesRequest with the parameterized properties
            </summary>
            <param name="exclusiveStartTableName">The first table name that this operation will evaluate. Use the value that was returned for  <i>LastEvaluatedTableName</i> in a previous operation, so that you can obtain the next page   of results.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.ListTablesRequest.#ctor(System.String,System.Int32)">
            <summary>
            Instantiates ListTablesRequest with the parameterized properties
            </summary>
            <param name="exclusiveStartTableName">The first table name that this operation will evaluate. Use the value that was returned for  <i>LastEvaluatedTableName</i> in a previous operation, so that you can obtain the next page   of results.</param>
            <param name="limit"> A maximum number of table names to return. If this parameter is not specified, the limit is   100.</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ListTablesRequest.ExclusiveStartTableName">
            <summary>
            Gets and sets the property ExclusiveStartTableName. 
            <para>
            The first table name that this operation will evaluate. Use the value that was returned
            for        <i>LastEvaluatedTableName</i> in a previous operation, so that you can
            obtain the next page      of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ListTablesRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
             A maximum number of table names to return. If this parameter is not specified, the
            limit is      100.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ListTablesResponse">
            <summary>
            Configuration for accessing Amazon ListTables service
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ListTablesResult">
            <summary>
            Represents the output of a <i>ListTables</i> operation.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ListTablesResult.LastEvaluatedTableName">
            <summary>
            Gets and sets the property LastEvaluatedTableName. 
            <para>
            The name of the last table in the current page of results. Use this value as the 
                  <i>ExclusiveStartTableName</i> in a new request to obtain the next page of results,
            until      all the table names are returned.
            </para>
                
            <para>
            If you do not receive a <i>LastEvaluatedTableName</i> value in the response, this
            means that      there are no more table names to be retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ListTablesResult.TableNames">
            <summary>
            Gets and sets the property TableNames. 
            <para>
            The names of the tables associated with the current account at the current endpoint.
            The      maximum size of this array is 100. 
            </para>
                
            <para>
            If <i>LastEvaluatedTableName</i> also appears in the output, you can use this value
            as the        <i>ExclusiveStartTableName</i> parameter in a subsequent <i>ListTables</i>
            request and      obtain the next page of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ListTablesResponse.ListTablesResult">
            <summary>
            Gets and sets the ListTablesResult property.
            Represents the output of a ListTables operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.LocalSecondaryIndex">
            <summary>
            Represents a local secondary index.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.LocalSecondaryIndex.IndexName">
            <summary>
            Gets and sets the property IndexName. 
            <para>
            The name of the local secondary index. The name must be unique among all other indexes
            on this table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.LocalSecondaryIndex.KeySchema">
            <summary>
            Gets and sets the property KeySchema. 
            <para>
            The complete key schema for the local secondary index, consisting of one or more pairs
            of attribute names and      key types (<code>HASH</code> or <code>RANGE</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.LocalSecondaryIndex.Projection">
            <summary>
            Gets and sets the property Projection.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.LocalSecondaryIndexDescription">
            <summary>
            Represents the properties of a local secondary index.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.LocalSecondaryIndexDescription.IndexName">
            <summary>
            Gets and sets the property IndexName. 
            <para>
            Represents the name of the local secondary index.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.LocalSecondaryIndexDescription.IndexSizeBytes">
            <summary>
            Gets and sets the property IndexSizeBytes. 
            <para>
            The total size of the specified index, in bytes. DynamoDB updates this value approximately
            every six      hours. Recent changes might not be reflected in this value.      
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.LocalSecondaryIndexDescription.ItemCount">
            <summary>
            Gets and sets the property ItemCount. 
            <para>
            The number of items in the specified index. DynamoDB updates this value approximately
            every six      hours. Recent changes might not be reflected in this value.      
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.LocalSecondaryIndexDescription.KeySchema">
            <summary>
            Gets and sets the property KeySchema. The complete index key schema,    which consists
            of one or more pairs of attribute names and key types (<code>HASH</code> or      <code>RANGE</code>).
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.LocalSecondaryIndexDescription.Projection">
            <summary>
            Gets and sets the property Projection.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.Projection">
            <summary>
            Represents attributes that are copied (projected) from the table into an index. These
            are in      addition to the primary key attributes and index key attributes, which
            are automatically      projected.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.Projection.NonKeyAttributes">
            <summary>
            Gets and sets the property NonKeyAttributes. 
            <para>
            Represents the non-key attribute names which will be projected into the index.
            </para>
                
            <para>
            For local secondary indexes, the total count of <i>NonKeyAttributes</i> summed across
            all of the local secondary indexes,      must not exceed 20. If you project the same
            attribute into two      different indexes, this counts as two distinct attributes
            when determining the total.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.Projection.ProjectionType">
            <summary>
            Gets and sets the property ProjectionType. 
            <para>
            The set of attributes that are projected into the index:
            </para>
                <ul>      <li>        
            <para>
            <code>KEYS_ONLY</code> - Only the index and primary keys are projected into the  
                   index.
            </para>
                  </li>      <li>        
            <para>
            <code>INCLUDE</code> - Only the specified table attributes are projected into the
            index.          The list of projected attributes are in <i>NonKeyAttributes</i>.
            </para>
                  </li>      <li>        
            <para>
            <code>ALL</code> - All of the table attributes are projected into the index.
            </para>
                  </li>    </ul>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ProvisionedThroughput">
            <summary>
            Represents the provisioned throughput settings for a specified table or index. The
            settings      can be modified using the <i>UpdateTable</i> operation.
            
                
            <para>
            For current minimum and maximum provisioned throughput values, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html">Limits</a>
            in the Amazon DynamoDB Developer Guide.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.ProvisionedThroughput.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.ProvisionedThroughput.#ctor(System.Int64,System.Int64)">
            <summary>
            Instantiates ProvisionedThroughput with the parameterized properties
            </summary>
            <param name="readCapacityUnits">The maximum number of strongly consistent reads consumed per second before DynamoDB returns a  <i>ThrottlingException</i>. For more information, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput">Specifying Read and Write  Requirements</a> in the Amazon DynamoDB Developer Guide.</param>
            <param name="writeCapacityUnits">The maximum number of writes consumed per second before DynamoDB returns a  <i>ThrottlingException</i>. For more information, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput">Specifying Read and Write  Requirements</a> in the Amazon DynamoDB Developer Guide.</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ProvisionedThroughput.ReadCapacityUnits">
            <summary>
            Gets and sets the property ReadCapacityUnits. 
            <para>
            The maximum number of strongly consistent reads consumed per second before DynamoDB
            returns a        <i>ThrottlingException</i>. For more information, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput">Specifying
            Read and Write        Requirements</a> in the Amazon DynamoDB Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ProvisionedThroughput.WriteCapacityUnits">
            <summary>
            Gets and sets the property WriteCapacityUnits. 
            <para>
            The maximum number of writes consumed per second before DynamoDB returns a       
            <i>ThrottlingException</i>. For more information, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput">Specifying
            Read and Write        Requirements</a> in the Amazon DynamoDB Developer Guide.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ProvisionedThroughputDescription">
            <summary>
            Represents the provisioned throughput settings for the table, consisting of read and
            write      capacity units, along with data about increases and decreases.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ProvisionedThroughputDescription.LastDecreaseDateTime">
            <summary>
            Gets and sets the property LastDecreaseDateTime. 
            <para>
            The date and time of the last provisioned throughput decrease for this table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ProvisionedThroughputDescription.LastIncreaseDateTime">
            <summary>
            Gets and sets the property LastIncreaseDateTime. 
            <para>
            The date and time of the last provisioned throughput increase for this table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ProvisionedThroughputDescription.NumberOfDecreasesToday">
            <summary>
            Gets and sets the property NumberOfDecreasesToday. 
            <para>
            The number of provisioned throughput decreases for this table during this UTC calendar
            day.      For current maximums on provisioned throughput decreases, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html">Limits</a>
            in the Amazon DynamoDB Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ProvisionedThroughputDescription.ReadCapacityUnits">
            <summary>
            Gets and sets the property ReadCapacityUnits. 
            <para>
            The maximum number of strongly consistent reads consumed per second before DynamoDB
            returns a        <i>ThrottlingException</i>. Eventually consistent reads require less
            effort than strongly      consistent reads, so a setting of 50 <i>ReadCapacityUnits</i>
            per second provides 100      eventually consistent <i>ReadCapacityUnits</i> per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ProvisionedThroughputDescription.WriteCapacityUnits">
            <summary>
            Gets and sets the property WriteCapacityUnits. 
            <para>
            The maximum number of writes consumed per second before DynamoDB returns a       
            <i>ThrottlingException</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException">
            <summary>
             DynamoDB exception
             </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.ProvisionedThroughputExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ProvisionedThroughputExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.PutItemRequest">
            <summary>
            Container for the parameters to the PutItem operation.
            Creates a new item, or replaces an old item with a new item. If an item already exists
            in the      specified table with the same primary key, the new item completely replaces
            the existing item.      You can perform a conditional put (insert a new item if one
            with the specified primary key      doesn't exist), or replace an existing item if
            it has certain attribute values. 
            
                
            <para>
            In addition to putting an item, you can also return the item's attribute values in
            the same      operation, using the <i>ReturnValues</i> parameter.
            </para>
                
            <para>
            When you add an item, the primary key attribute(s) are the only required attributes.
                 Attribute values cannot be null. String and binary type attributes must have
            lengths greater      than zero. Set type attributes cannot be empty. Requests with
            empty values will be rejected      with a <i>ValidationException</i>.
            </para>
                
            <para>
            You can request that <i>PutItem</i> return either a copy of the old item (before the
            update)      or a copy of the new item (after the update). For more information, see
            the        <i>ReturnValues</i> description.
            </para>
                <note>      
            <para>
            To prevent a new item from replacing an existing item, use a conditional put operation
            with          <i>ComparisonOperator</i> set to <code>NULL</code> for the primary key
            attribute, or attributes.
            </para>
                </note>    
            <para>
            For more information about using this API, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html">Working
            with Items</a> in the Amazon DynamoDB Developer Guide.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.PutItemRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.PutItemRequest.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValue})">
            <summary>
            Instantiates PutItemRequest with the parameterized properties
            </summary>
            <param name="tableName">The name of the table to contain the item.</param>
            <param name="item">A map of attribute name/value pairs, one for each attribute. Only the primary key attributes   are required; you can optionally provide other attribute name-value pairs for the item. You must provide <i>all</i> of the attributes for the primary key. For example, with a hash   type primary key, you only need to specify the hash attribute. For a hash-and-range type   primary key, you must specify <i>both</i> the hash attribute and the range attribute. If you specify any attributes that are part of an index key, then the data types for those   attributes must match those of the schema in the table's attribute definition. For more information about primary keys, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html#DataModelPrimaryKey">Primary Key</a> in the   Amazon DynamoDB Developer Guide. Each element in the <i>Item</i> map is an <i>AttributeValue</i> object.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.PutItemRequest.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValue},Amazon.DynamoDBv2.ReturnValue)">
            <summary>
            Instantiates PutItemRequest with the parameterized properties
            </summary>
            <param name="tableName">The name of the table to contain the item.</param>
            <param name="item">A map of attribute name/value pairs, one for each attribute. Only the primary key attributes   are required; you can optionally provide other attribute name-value pairs for the item. You must provide <i>all</i> of the attributes for the primary key. For example, with a hash   type primary key, you only need to specify the hash attribute. For a hash-and-range type   primary key, you must specify <i>both</i> the hash attribute and the range attribute. If you specify any attributes that are part of an index key, then the data types for those   attributes must match those of the schema in the table's attribute definition. For more information about primary keys, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html#DataModelPrimaryKey">Primary Key</a> in the   Amazon DynamoDB Developer Guide. Each element in the <i>Item</i> map is an <i>AttributeValue</i> object.</param>
            <param name="returnValues">Use <i>ReturnValues</i> if you want to get the item attributes as they appeared before they   were updated with the <i>PutItem</i> request. For <i>PutItem</i>, the valid values are: <ul>   <li>  <code>NONE</code> - If <i>ReturnValues</i> is not specified, or if its value is   <code>NONE</code>, then nothing is returned. (This is the default for   <i>ReturnValues</i>.)   </li>   <li>  <code>ALL_OLD</code> - If <i>PutItem</i> overwrote an attribute name-value pair, then the    content of the old item is returned.   </li> </ul></param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemRequest.ConditionalOperator">
            <summary>
            Gets and sets the property ConditionalOperator. 
            <para>
            A logical operator to apply to the conditions in the <i>Expected</i> map:
            </para>
                          <ul>               <li>
            <para>
            <code>AND</code> - If <i>all</i> of the conditions evaluate to true, then the entire
            map  evaluates to true.
            </para>
            </li>               <li>
            <para>
            <code>OR</code> - If <i>at least one</i> of the conditions evaluate to true, then
            the entire map evaluates to true.
            </para>
            </li>           </ul>           
            <para>
            If you omit <i>ConditionalOperator</i>, then <code>AND</code> is the default.
            </para>
                       
            <para>
            The operation will succeed only if the entire map evaluates to true.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemRequest.Expected">
            <summary>
            Gets and sets the property Expected. 
            <para>
            A map of attribute/condition pairs. This is the conditional block for the <i>PutItem</i>
                 operation.
            </para>
                  
            <para>
            Each element of <i>Expected</i> consists of an attribute name, a comparison operator,
            and one or more values.  DynamoDB compares the attribute with the value(s) you supplied,
            using the comparison operator. For each <i>Expected</i> element, the result of the
            evaluation is either true or false.
            </para>
                
            <para>
            If you specify more than one element in the <i>Expected</i> map, then by default all
            of the conditions must evaluate to true. In other words, the conditions are ANDed
            together. (You can use the <i>ConditionalOperator</i> parameter to OR the conditions
            instead. If you do this, then at least one of the conditions must evaluate to true,
            rather than all of them.)
            </para>
                
            <para>
            If the <i>Expected</i> map evaluates to true, then the conditional operation succeeds;
            otherwise, it fails.
            </para>
                    
            <para>
            Each item in <i>Expected</i> represents an attribute name for DynamoDB to check, along
            with an <i>AttributeValueList</i> and a <i>ComparisonOperator</i>:
            </para>
                     <ul>         <li>             
            <para>
            <i>AttributeValueList</i> - One or more values to evaluate against the supplied  
                          attribute. The number of values in the list depends on the <i>ComparisonOperator</i>
                            being used.
            </para>
                         
            <para>
            For type Number, value comparisons are numeric.
            </para>
                         
            <para>
            String value comparisons for greater than, equals, or less than are based on ASCII
                            character code values. For example, <code>a</code> is greater than
            <code>A</code>, and                     <code>aa</code> is greater than <code>B</code>.
            For a list of code values, see <a                     href="http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters"
                                >http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>.
            </para>
                         
            <para>
            For Binary, DynamoDB treats each byte of the binary data as unsigned when it compares
            binary                 values, for example when evaluating query expressions.
            </para>
                     </li>         <li>        
            <para>
            <i>ComparisonOperator</i> - A comparator for evaluating attributes in the        
                   <i>AttributeValueList</i>. When performing the comparison, DynamoDB uses strongly
            consistent reads.
            </para>
                            
            <para>
            The following comparison operators are available:
            </para>
                  
            <para>
            <code>EQ | NE | LE | LT | GE | GT | NOT_NULL | NULL | CONTAINS | NOT_CONTAINS | BEGINS_WITH
            | IN | BETWEEN</code>
            </para>
                          
            <para>
            The following are descriptions of each comparison operator.
            </para>
                <ul>      <li>        
            <para>
            <code>EQ</code> : Equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, Binary, String Set, Number Set, or Binary Set. If an item contains
            an <i>AttributeValue</i> of a different          type than the one specified in the
            request, the value does not match. For example,            <code>{"S":"6"}</code>
            does not equal <code>{"N":"6"}</code>. Also,            <code>{"N":"6"}</code> does
            not equal <code>{"NS":["6", "2", "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>NE</code> : Not equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, Binary, String Set, Number Set, or Binary Set. If an item contains
            an <i>AttributeValue</i> of a different          type than the one specified in the
            request, the value does not match. For example,            <code>{"S":"6"}</code>
            does not equal <code>{"N":"6"}</code>. Also,            <code>{"N":"6"}</code> does
            not equal <code>{"NS":["6", "2", "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>LE</code> : Less than or equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>LT</code> : Less than. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>GE</code> : Greater than or equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>GT</code> : Greater than. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>NOT_NULL</code> : The attribute exists. 
            </para>
            </li>      <li>        
            <para>
            <code>NULL</code> : The attribute does not exist. 
            </para>
            </li>      <li>        
            <para>
            <code>CONTAINS</code> : checks for a subsequence, or value in a set.
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If the target attribute of the comparison
            is a String, then          the operation checks for a substring match. If the target
            attribute of the comparison is          Binary, then the operation looks for a subsequence
            of the target that matches the input.          If the target attribute of the comparison
            is a set ("SS", "NS", or "BS"), then the          operation checks for a member of
            the set (not as a substring).
            </para>
            </li>      <li>        
            <para>
            <code>NOT_CONTAINS</code> : checks for absence of a subsequence, or absence of a value
            in          a set.
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If the target attribute of the comparison
            is a String, then          the operation checks for the absence of a substring match.
            If the target attribute of the          comparison is Binary, then the operation checks
            for the absence of a subsequence of the          target that matches the input. If
            the target attribute of the comparison is a set ("SS",          "NS", or "BS"), then
            the operation checks for the absence of a member of the set (not as a          substring).
            </para>
            </li>      <li>        
            <para>
            <code>BEGINS_WITH</code> : checks for a prefix. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String
            or          Binary (not a Number or a set). The target attribute of the comparison
            must be a String or          Binary (not a Number or a set).
            </para>
                    <p/></li>      <li>        
            <para>
            <code>IN</code> : checks for exact matches.
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain more than one <i>AttributeValue</i> of type
            String,          Number, or Binary (not a set). The target attribute of the comparison
            must be of the same          type and exact value to match. A String never matches
            a String set.
            </para>
            </li>      <li>        
            <para>
            <code>BETWEEN</code> : Greater than or equal to the first value, and less than or
            equal          to the second value. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> must contain two <i>AttributeValue</i> elements of the same
                     type, either String, Number, or Binary (not a set). A target attribute matches
            if the          target value is greater than, or equal to, the first element and less
            than, or equal to,          the second element. If an item contains an <i>AttributeValue</i>
            of a different type than          the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not compare to <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>
            </para>
            </li>    </ul>    </li>     </ul>    
            <para>
            For usage examples of <i>AttributeValueList</i> and <i>ComparisonOperator</i>, see
            <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html#ConditionalExpressions"
                   >Conditional Expressions</a> in the Amazon DynamoDB Developer Guide.
            </para>
                <note>      
            <para>
            For backward compatibility with previous DynamoDB releases, the following parameters
            can be        used instead of <i>AttributeValueList</i> and <i>ComparisonOperator</i>:
            </para>
                  <ul>        <li>          
            <para>
            <i>Value</i> - A value for DynamoDB to compare with an attribute.
            </para>
                    </li>        <li>          
            <para>
            <i>Exists</i> - Causes DynamoDB to evaluate the value before attempting the conditional
                       operation:
            </para>
                      <ul>            <li>              
            <para>
            If <i>Exists</i> is <code>true</code>, DynamoDB will check to see if that attribute
                           value already exists in the table. If it is found, then the condition
            evaluates to                true; otherwise the condition evaluate to false.
            </para>
                        </li>            <li>
            <para>
            If <i>Exists</i> is <code>false</code>, DynamoDB assumes that the attribute value
                           does <i>not</i> exist in the table. If in fact the value does not exist,
            then the                assumption is valid and the condition evaluates to true. If
            the value is found,                despite the assumption that it does not exist,
            the condition evaluates to              false.
            </para>
            </li>          </ul>        </li>      </ul>      
            <para>
            Even though DynamoDB continues to accept the <i>Value</i> and <i>Exists</i> parameters,
            they        are now deprecated. We recommend that you use <i>AttributeValueList</i>
            and          <i>ComparisonOperator</i> instead, since they allow you to construct
            a much wider range of        conditions.
            </para>
                  
            <para>
            The <i>Value</i> and <i>Exists</i> parameters are incompatible with          <i>AttributeValueList</i>
            and <i>ComparisonOperator</i>. If you attempt to use both sets        of parameters
            at once, DynamoDB will throw a <i>ValidationException</i>.
            </para>
                </note>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemRequest.Item">
            <summary>
            Gets and sets the property Item. 
            <para>
            A map of attribute name/value pairs, one for each attribute. Only the primary key
            attributes      are required; you can optionally provide other attribute name-value
            pairs for the item.
            </para>
                
            <para>
            You must provide <i>all</i> of the attributes for the primary key. For example, with
            a hash      type primary key, you only need to specify the hash attribute. For a hash-and-range
            type      primary key, you must specify <i>both</i> the hash attribute and the range
            attribute.
            </para>
                
            <para>
            If you specify any attributes that are part of an index key, then the data types for
            those      attributes must match those of the schema in the table's attribute definition.
            </para>
                
            <para>
            For more information about primary keys, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html#DataModelPrimaryKey">Primary
            Key</a> in the      Amazon DynamoDB Developer Guide.
            </para>
                
            <para>
            Each element in the <i>Item</i> map is an <i>AttributeValue</i> object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemRequest.ReturnConsumedCapacity">
            <summary>
            Gets and sets the property ReturnConsumedCapacity.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemRequest.ReturnItemCollectionMetrics">
            <summary>
            Gets and sets the property ReturnItemCollectionMetrics. 
            <para>
            If set to <code>SIZE</code>, statistics about item collections, if any, that were
            modified during      the operation are returned in the response. If set to <code>NONE</code>
            (the default), no statistics are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemRequest.ReturnValues">
            <summary>
            Gets and sets the property ReturnValues. 
            <para>
            Use <i>ReturnValues</i> if you want to get the item attributes as they appeared before
            they      were updated with the <i>PutItem</i> request. For <i>PutItem</i>, the valid
            values are:
            </para>
                <ul>      <li>        
            <para>
            <code>NONE</code> - If <i>ReturnValues</i> is not specified, or if its value is  
                     <code>NONE</code>, then nothing is returned. (This is the default for   
                    <i>ReturnValues</i>.)
            </para>
                  </li>      <li>        
            <para>
            <code>ALL_OLD</code> - If <i>PutItem</i> overwrote an attribute name-value pair, then
            the          content of the old item is returned.
            </para>
                  </li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemRequest.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            The name of the table to contain the item.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.PutItemResponse">
            <summary>
            Configuration for accessing Amazon PutItem service
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.PutItemResult">
            <summary>
            Represents the output of a <i>PutItem</i> operation.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemResult.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            The attribute values as they appeared before the <i>PutItem</i> operation, but only
            if        <i>ReturnValues</i> is specified as <code>ALL_OLD</code> in the request.
            Each element      consists of an attribute name and an attribute value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemResult.ConsumedCapacity">
            <summary>
            Gets and sets the property ConsumedCapacity.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemResult.ItemCollectionMetrics">
            <summary>
            Gets and sets the property ItemCollectionMetrics. 
            <para>
            Information about item collections, if any, that were affected by the operation. <i>ItemCollectionMetrics</i>
            is only returned if it was asked for in the request. If the table      does not have
            any local secondary indexes, this information is not      returned in the response.
            </para>
                  
            <para>
            Each <i>ItemCollectionMetrics</i>        element consists of:
            </para>
                  <ul>        <li>
            <para>
            <i>ItemCollectionKey</i> - The hash key value of the item          collection. This
            is the same as the hash key of the item.
            </para>
            </li>        <li>
            <para>
            <i>SizeEstimateRange</i> - An estimate of item collection size,          measured
            in gigabytes. This is a two-element array          containing a lower bound and an
            upper bound for the          estimate. The estimate includes the size of all the 
                    items in the table, plus the size of all attributes          projected into
            all of the local secondary indexes on that          table. Use this estimate to measure
            whether a local secondary index is approaching its size limit.
            </para>
                      
            <para>
            The estimate is subject to change over time; therefore, do not rely on the precision
            or accuracy of the estimate.
            </para>
            </li>      </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutItemResponse.PutItemResult">
            <summary>
            Gets and sets the PutItemResult property.
            Represents the output of a PutItem operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.PutRequest">
            <summary>
            Represents a request to perform a <i>PutItem</i> operation on an item.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.PutRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.PutRequest.#ctor(System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValue})">
            <summary>
            Instantiates PutRequest with the parameterized properties
            </summary>
            <param name="item">A map of attribute name to attribute values, representing the primary key of an item to be   processed by <i>PutItem</i>. All of the table's primary key attributes must be specified, and   their data types must match those of the table's key schema. If any attributes are present in   the item which are part of an index key schema for the table, their types must match the index   key schema.</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.PutRequest.Item">
            <summary>
            Gets and sets the property Item. 
            <para>
            A map of attribute name to attribute values, representing the primary key of an item
            to be      processed by <i>PutItem</i>. All of the table's primary key attributes
            must be specified, and      their data types must match those of the table's key schema.
            If any attributes are present in      the item which are part of an index key schema
            for the table, their types must match the index      key schema.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.QueryRequest">
            <summary>
            Container for the parameters to the Query operation.
            A <i>Query</i> operation directly accesses items from a table using the table primary
            key, or      from an index using the index key. You must provide a specific hash key
            value. You can narrow      the scope of the query by using comparison operators on
            the range key value, or on the index      key. You can use the <i>ScanIndexForward</i>
            parameter to get results in forward or reverse      order, by range key or by index
            key. 
            
                
            <para>
            Queries that do not return results consume the minimum read capacity units according
            to the      type of read.
            </para>
                
            <para>
            If the total number of items meeting the query criteria exceeds the result set size
            limit of      1 MB, the query stops and results are returned to the user with a  
                 <i>LastEvaluatedKey</i> to continue the query in a subsequent operation. Unlike
            a        <i>Scan</i> operation, a <i>Query</i> operation never returns an empty result
            set <i>and</i>      a <i>LastEvaluatedKey</i>. The <i>LastEvaluatedKey</i> is only
            provided if the results exceed      1 MB, or if you have used <i>Limit</i>. 
            </para>
                
            <para>
            You can query a table, a local secondary index, or a global secondary index. For a
            query on a table or on a local secondary index, you can set        <i>ConsistentRead</i>
            to true and obtain a strongly consistent result. Global secondary indexes support
                 eventually consistent reads only, so do not specify <i>ConsistentRead</i> when
            querying a      global secondary index.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.QueryRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.QueryRequest.#ctor(System.String)">
            <summary>
            Instantiates QueryRequest with the parameterized properties
            </summary>
            <param name="tableName">The name of the table containing the requested items. </param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.AttributesToGet">
            <summary>
            Gets and sets the property AttributesToGet. 
            <para>
            The names of one or more attributes to retrieve.  If no attribute      names are specified,
            then all attributes will be returned. If      any of the requested attributes are
            not found, they will not      appear in the result.
            </para>
                  
            <para>
            Note that <i>AttributesToGet</i> has no effect on provisioned throughput consumption.
                  DynamoDB determines capacity units consumed based on item size, not on the amount
            of data that is returned to an application.
            </para>
             
            <para>
            You cannot use both        <i>AttributesToGet</i> and <i>Select</i> together in a
            <i>Query</i> request, <i>unless</i>      the value for <i>Select</i> is <code>SPECIFIC_ATTRIBUTES</code>.
            (This usage is equivalent to      specifying <i>AttributesToGet</i> without any value
            for <i>Select</i>.)
            </para>
             
            <para>
            If you are querying a local secondary index and request only attributes that are projected
            into that index, the operation will read only the index and not the table. If any
            of the requested attributes are not projected into the local secondary index, DynamoDB
            will fetch each of these attributes from the parent table. This extra fetching incurs
            additional throughput cost and latency.
            </para>
            
            <para>
            If you are querying a global secondary index, you can only request attributes that
            are projected into the index. Global secondary index queries cannot fetch attributes
            from the parent table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.ConditionalOperator">
            <summary>
            Gets and sets the property ConditionalOperator. 
            <para>
            A logical operator to apply to the conditions in the <i>QueryFilter</i> map:
            </para>
                          <ul>               <li>
            <para>
            <code>AND</code> - If <i>all</i> of the conditions evaluate to true, then the entire
            map  evaluates to true.
            </para>
            </li>               <li>
            <para>
            <code>OR</code> - If <i>at least one</i> of the conditions evaluate to true, then
            the entire map evaluates to true.
            </para>
            </li>           </ul>           
            <para>
            If you omit <i>ConditionalOperator</i>, then <code>AND</code> is the default.
            </para>
                       
            <para>
            The operation will succeed only if the entire map evaluates to true.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.ConsistentRead">
            <summary>
            Gets and sets the property ConsistentRead. 
            <para>
            If set to <code>true</code>, then the operation uses strongly consistent reads; otherwise,
            eventually      consistent reads are used.
            </para>
             
            <para>
            Strongly consistent reads      are not supported on global secondary indexes. If you
            query a global secondary index with <i>ConsistentRead</i> set to        <code>true</code>,
            you will receive an error message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.ExclusiveStartKey">
            <summary>
            Gets and sets the property ExclusiveStartKey. 
            <para>
            The primary key of the first item that this operation will evaluate. Use the value
            that was returned for <i>LastEvaluatedKey</i> in the previous operation.
            </para>
                   
            <para>
            The data type for <i>ExclusiveStartKey</i> must be String, Number or Binary. No set
            data types are allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.IndexName">
            <summary>
            Gets and sets the property IndexName. 
            <para>
            The name of an index to query. This can be any local secondary index or global secondary
            index on the table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.KeyConditions">
            <summary>
            Gets and sets the property KeyConditions. 
            <para>
            The selection criteria for the query.
            </para>
                
            <para>
            For a query on a table, you can only have conditions on the table primary key attributes.
            You        <i>must</i> specify the hash key attribute name and value as an <code>EQ</code>
            condition.      You can <i>optionally</i> specify a second condition, referring to
            the range key      attribute.
            </para>
                
            <para>
            For a query on an index, you can only have conditions on the index key attributes.
            You        <i>must</i> specify the index hash attribute name and value as an EQ condition.
            You can        <i>optionally</i> specify a second condition, referring to the index
            key range      attribute.
            </para>
                
            <para>
            If you specify more than one condition in the <i>KeyConditions</i> map, then by default
            all      of the conditions must evaluate to true. In other words, the conditions are
            ANDed together.      (You can use the <i>ConditionalOperator</i> parameter to OR the
            conditions instead. If you do      this, then at least one of the conditions must
            evaluate to true, rather than all of them.)
            </para>
                
            <para>
            Each <i>KeyConditions</i> element consists of an attribute name to compare, along
            with the      following:
            </para>
                <ul>      <li>        
            <para>
            <i>AttributeValueList</i> - One or more values to evaluate against the supplied  
                   attribute. The number of values in the list depends on the <i>ComparisonOperator</i>
            being          used.
            </para>
                    
            <para>
            For type Number, value comparisons are numeric.
            </para>
                    
            <para>
            String value comparisons for greater than, equals, or less than are based on ASCII
                     character code values. For example, <code>a</code> is greater than <code>A</code>,
            and            <code>aa</code> is greater than <code>B</code>. For a list of code
            values, see <a href="http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters">http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>.
            </para>
                    
            <para>
            For Binary, DynamoDB treats each byte of the binary data as unsigned when it compares
            binary          values, for example when evaluating query expressions.
            </para>
                  </li>      <li>        
            <para>
            <i>ComparisonOperator</i> - A comparator for evaluating attributes. For example, equals,
                     greater than, less than, etc.
            </para>
                    
            <para>
            For <i>KeyConditions</i>, only the following comparison operators are supported:
            </para>
                    
            <para>
                      <code>EQ | LE | LT | GE | GT | BEGINS_WITH | BETWEEN</code>        
            </para>
                    
            <para>
            The following are descriptions of these comparison operators.
            </para>
                    <ul>          <li>            
            <para>
            <code>EQ</code> : Equal. 
            </para>
                        
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                         Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a              different type than the one specified in the request, the value
            does not match. For              example, <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,                <code>{"N":"6"}</code> does not equal <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                        
            <para>
            
            </para>
                      </li>          <li>        
            <para>
            <code>LE</code> : Less than or equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>          <li>        
            <para>
            <code>LT</code> : Less than. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>          <li>        
            <para>
            <code>GE</code> : Greater than or equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>          <li>        
            <para>
            <code>GT</code> : Greater than. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>          <li>        
            <para>
            <code>BEGINS_WITH</code> : checks for a prefix. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String
            or          Binary (not a Number or a set). The target attribute of the comparison
            must be a String or          Binary (not a Number or a set).
            </para>
                    <p/></li>          <li>        
            <para>
            <code>BETWEEN</code> : Greater than or equal to the first value, and less than or
            equal          to the second value. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> must contain two <i>AttributeValue</i> elements of the same
                     type, either String, Number, or Binary (not a set). A target attribute matches
            if the          target value is greater than, or equal to, the first element and less
            than, or equal to,          the second element. If an item contains an <i>AttributeValue</i>
            of a different type than          the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not compare to <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>
            </para>
            </li>        </ul>      </li>    </ul>    
            <para>
            For usage examples of <i>AttributeValueList</i> and <i>ComparisonOperator</i>, see
            <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html#ConditionalExpressions">Conditional
            Expressions</a>      in the Amazon DynamoDB Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of items to evaluate (not necessarily the number of matching items).
            If      DynamoDB processes the number of items up to the limit while processing the
            results, it stops the      operation and returns the matching values up to that point,
            and a <i>LastEvaluatedKey</i> to       apply in      a subsequent operation, so that
            you can pick up where you left off. Also, if the processed data set size      exceeds
            1 MB before DynamoDB reaches this limit, it stops the operation and returns the matching
            values      up to the limit, and a <i>LastEvaluatedKey</i> to apply in a subsequent
            operation to      continue the operation. For more information, see <a        href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html"
                   >Query and Scan</a> in the Amazon DynamoDB Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.QueryFilter">
            <summary>
            Gets and sets the property QueryFilter. 
            <para>
            Evaluates the query results and returns only the desired values.
            </para>
                
            <para>
            If you specify more than one condition in the <i>QueryFilter</i> map, then by default
            all of      the conditions must evaluate to true. In other words, the conditions are
            ANDed together. (You      can use the <i>ConditionalOperator</i> parameter to OR the
            conditions instead. If you do this,      then at least one of the conditions must
            evaluate to true, rather than all of them.)
            </para>
                
            <para>
            Each <i>QueryFilter</i> element consists of an attribute name to compare, along with
            the      following:
            </para>
                <ul>      <li>        
            <para>
            <i>AttributeValueList</i> - One or more values to evaluate against the supplied  
                   attribute. The number of values in the list depends on the <i>ComparisonOperator</i>
            being          used.
            </para>
                    
            <para>
            For type Number, value comparisons are numeric.
            </para>
                    
            <para>
            String value comparisons for greater than, equals, or less than are based on ASCII
                     character code values. For example, <code>a</code> is greater than <code>A</code>,
            and            <code>aa</code> is greater than <code>B</code>. For a list of code
            values, see <a href="http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters">http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>.
            </para>
                    
            <para>
            For Binary, DynamoDB treats each byte of the binary data as unsigned when it compares
            binary          values, for example when evaluating query expressions.
            </para>
                    
            <para>
            For information on specifying data types in JSON, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataFormat.html">JSON
            Data Format</a> in the Amazon DynamoDB Developer Guide.
            </para>
                  </li>      <li>
            <para>
            <i>ComparisonOperator</i> - A comparator for evaluating attributes. For example, 
                    equals, greater than, less than, etc.
            </para>
             
            <para>
            The following comparison operators are available:
            </para>
                  
            <para>
            <code>EQ | NE | LE | LT | GE | GT | NOT_NULL | NULL | CONTAINS | NOT_CONTAINS | BEGINS_WITH
            | IN | BETWEEN</code>
            </para>
             
            <para>
            For complete          descriptions of all comparison operators, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Condition.html">API_Condition.html</a>.
            </para>
                  </li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.ReturnConsumedCapacity">
            <summary>
            Gets and sets the property ReturnConsumedCapacity.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.ScanIndexForward">
            <summary>
            Gets and sets the property ScanIndexForward. 
            <para>
            Specifies ascending (true) or descending (false) traversal of the index. DynamoDB
            returns      results reflecting the requested order determined by the range key. If
            the data type is      Number, the results are returned in numeric order. For String,
            the results are returned in      order of ASCII character code values. For Binary,
            DynamoDB treats each byte of the binary data as      unsigned when it compares binary
            values.
            </para>
                
            <para>
            If <i>ScanIndexForward</i> is not specified, the results are returned in ascending
            order.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.Select">
            <summary>
            Gets and sets the property Select. 
            <para>
            The attributes to be returned in the result. You can retrieve all item attributes,
            specific      item attributes, the count of matching items, or in the case of an index,
            some or all of the      attributes projected into the index.
            </para>
                <ul>      <li>        
            <para>
            <code>ALL_ATTRIBUTES</code>: Returns all of the item attributes from the specified
            table          or index. If you are querying a local secondary index, then for each
            matching item in the index DynamoDB will          fetch the entire item from the parent
            table. If the index is configured to project all          item attributes, then all
            of the data can be obtained from the local secondary index, and no fetching is   
                  required..
            </para>
                  </li>      <li>        
            <para>
            <code>ALL_PROJECTED_ATTRIBUTES</code>: Allowed only when querying an index. Retrieves
            all          attributes which have been projected into the index. If the index is
            configured to project          all attributes, this is equivalent to specifying <code>ALL_ATTRIBUTES</code>.
            </para>
                  </li>      <li>        
            <para>
            <code>COUNT</code>: Returns the number of matching items, rather than the matching
            items          themselves.
            </para>
                  </li>      <li>        
            <para>
                      <code>SPECIFIC_ATTRIBUTES</code> : Returns only the attributes listed in
                       <i>AttributesToGet</i>. This is equivalent to specifying <i>AttributesToGet</i>
            without          specifying any value for <i>Select</i>.
            </para>
             
            <para>
            If you are querying a local secondary index and request only attributes that are projected
            into that index, the operation will read only the index and not the table. If any
            of the requested attributes are not projected into the local secondary index, DynamoDB
            will fetch each of these attributes from the parent table. This extra fetching incurs
            additional throughput cost and latency.
            </para>
            
            <para>
            If you are querying a global secondary index, you can only request attributes that
            are projected into the index. Global secondary index queries cannot fetch attributes
            from the parent table.
            </para>
             </li>    </ul>    
            <para>
            If neither <i>Select</i> nor <i>AttributesToGet</i> are specified, DynamoDB defaults
            to        <code>ALL_ATTRIBUTES</code> when accessing a table, and        <code>ALL_PROJECTED_ATTRIBUTES</code>
            when accessing an index. You cannot use both        <i>Select</i> and <i>AttributesToGet</i>
            together in a single request, <i>unless</i> the      value for <i>Select</i> is <code>SPECIFIC_ATTRIBUTES</code>.
            (This usage is equivalent to      specifying <i>AttributesToGet</i> without any value
            for <i>Select</i>.)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryRequest.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            The name of the table containing the requested items. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.QueryResponse">
            <summary>
            Configuration for accessing Amazon Query service
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.QueryResult">
            <summary>
            Represents the output of a <i>Query</i> operation.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryResult.ConsumedCapacity">
            <summary>
            Gets and sets the property ConsumedCapacity.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryResult.Count">
            <summary>
            Gets and sets the property Count. 
            <para>
            The number of items in the response.
            </para>
                
            <para>
            If you used a <i>QueryFilter</i> in the request, then <i>Count</i> is the number of
            items returned <i>after</i> the filter was applied, and <i>ScannedCount</i> is the
            number of matching items <i>before</i> the filter was applied.
            </para>
                
            <para>
            If you did not use a filter in the request, then <i>Count</i> and <i>ScannedCount</i>
            are the same.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryResult.Items">
            <summary>
            Gets and sets the property Items. 
            <para>
            An array of item attributes that match the query criteria. Each element in this array
                 consists of an attribute name and the value for that attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryResult.LastEvaluatedKey">
            <summary>
            Gets and sets the property LastEvaluatedKey. 
            <para>
            The primary key of the item where the operation      stopped, inclusive of the previous
            result set. Use this value to      start a new operation, excluding this value in
            the new      request.
            </para>
                
            <para>
            If <i>LastEvaluatedKey</i> is empty, then the "last page" of results has been processed
            and there is no more data to be retrieved.
            </para>
                
            <para>
            If <i>LastEvaluatedKey</i> is not empty, this does not necessarily mean that there
            is more data in the result set. The only way to know when you have reached the end
            of the result set is when <i>LastEvaluatedKey</i> is empty.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryResult.ScannedCount">
            <summary>
            Gets and sets the property ScannedCount. 
            <para>
            The number of items evaluated, <i>before</i> any <i>QueryFilter</i> is applied. A
            high      <i>ScannedCount</i> value with few, or no, <i>Count</i> results indicates
            an inefficient      <i>Query</i> operation. For more information, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#Count">Count
            and ScannedCount</a> in the      Amazon DynamoDB Developer Guide.
            </para>
                
            <para>
            If you did not use a filter in the request, then <i>ScannedCount</i> is the same as
            <i>Count</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.QueryResponse.QueryResult">
            <summary>
            Gets and sets the QueryResult property.
            Represents the output of a Query operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ResourceInUseException">
            <summary>
             DynamoDB exception
             </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.ResourceInUseException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ResourceNotFoundException">
            <summary>
             DynamoDB exception
             </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ScanRequest">
            <summary>
            Container for the parameters to the Scan operation.
            The <i>Scan</i> operation returns one or more items and item attributes by accessing
            every      item in the table. To have DynamoDB return fewer items, you can provide
            a <i>ScanFilter</i>.
            
                
            <para>
            If the total number of scanned items exceeds the maximum data set size limit of  
               1 MB, the scan stops and results are returned to the user with a        <i>LastEvaluatedKey</i>
            to continue the scan in a subsequent operation. The results also      include the
            number of items exceeding the limit. A scan can result in no table data meeting  
               the filter criteria. 
            </para>
                
            <para>
            The result set is eventually consistent. 
            </para>
                
            <para>
            By default, <i>Scan</i> operations proceed sequentially; however, for faster performance
            on      large tables, applications can request a parallel <i>Scan</i> by specifying
            the <i>Segment</i>      and <i>TotalSegments</i> parameters. For more information,
            see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#QueryAndScanParallelScan">Parallel
            Scan</a> in the      Amazon DynamoDB Developer Guide.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.ScanRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.ScanRequest.#ctor(System.String)">
            <summary>
            Instantiates ScanRequest with the parameterized properties
            </summary>
            <param name="tableName">The name of the table containing the requested items.</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanRequest.AttributesToGet">
            <summary>
            Gets and sets the property AttributesToGet. 
            <para>
            The names of one or more attributes to retrieve.  If no attribute      names are specified,
            then all attributes will be returned. If      any of the requested attributes are
            not found, they will not      appear in the result.
            </para>
                  
            <para>
            Note that <i>AttributesToGet</i> has no effect on provisioned throughput consumption.
                  DynamoDB determines capacity units consumed based on item size, not on the amount
            of data that is returned to an application.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanRequest.ConditionalOperator">
            <summary>
            Gets and sets the property ConditionalOperator. 
            <para>
            A logical operator to apply to the conditions in the <i>ScanFilter</i> map:
            </para>
                          <ul>               <li>
            <para>
            <code>AND</code> - If <i>all</i> of the conditions evaluate to true, then the entire
            map  evaluates to true.
            </para>
            </li>               <li>
            <para>
            <code>OR</code> - If <i>at least one</i> of the conditions evaluate to true, then
            the entire map evaluates to true.
            </para>
            </li>           </ul>           
            <para>
            If you omit <i>ConditionalOperator</i>, then <code>AND</code> is the default.
            </para>
                       
            <para>
            The operation will succeed only if the entire map evaluates to true.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanRequest.ExclusiveStartKey">
            <summary>
            Gets and sets the property ExclusiveStartKey. 
            <para>
            The primary key of the first item that this operation will evaluate. Use the value
            that was returned for <i>LastEvaluatedKey</i> in the previous operation.
            </para>
                   
            <para>
            The data type for <i>ExclusiveStartKey</i> must be String, Number or Binary. No set
            data types are allowed.
            </para>
              
            <para>
            In a parallel scan, a        <i>Scan</i> request that includes <i>ExclusiveStartKey</i>
            must specify the same segment      whose previous <i>Scan</i> returned the corresponding
            value of <i>LastEvaluatedKey</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of items to evaluate (not necessarily the number of matching items).
            If      DynamoDB processes the number of items up to the limit while processing the
            results, it stops the      operation and returns the matching values up to that point,
            and a <i>LastEvaluatedKey</i> to       apply in      a subsequent operation, so that
            you can pick up where you left off. Also, if the processed data set size      exceeds
            1 MB before DynamoDB reaches this limit, it stops the operation and returns the matching
            values      up to the limit, and a <i>LastEvaluatedKey</i> to apply in a subsequent
            operation to      continue the operation. For more information, see <a        href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html"
                   >Query and Scan</a> in the Amazon DynamoDB Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanRequest.ReturnConsumedCapacity">
            <summary>
            Gets and sets the property ReturnConsumedCapacity.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanRequest.ScanFilter">
            <summary>
            Gets and sets the property ScanFilter. 
            <para>
            Evaluates the scan results and returns only the desired values.
            </para>
                
            <para>
            If you specify more than one condition in the <i>ScanFilter</i> map, then by default
            all of      the conditions must evaluate to true. In other words, the conditions are
            ANDed together. (You      can use the <i>ConditionalOperator</i> parameter to OR the
            conditions instead. If you do this,      then at least one of the conditions must
            evaluate to true, rather than all of them.)
            </para>
                
            <para>
            Each <i>ScanFilter</i> element consists of an attribute name to compare, along with
            the      following:
            </para>
                <ul>      <li>        
            <para>
            <i>AttributeValueList</i> - One or more values to evaluate against the supplied  
                   attribute. The number of values in the list depends on the <i>ComparisonOperator</i>
            being          used.
            </para>
                    
            <para>
            For type Number, value comparisons are numeric.
            </para>
                    
            <para>
            String value comparisons for greater than, equals, or less than are based on ASCII
                     character code values. For example, <code>a</code> is greater than <code>A</code>,
            and            <code>aa</code> is greater than <code>B</code>. For a list of code
            values, see <a href="http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters">http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>.
            </para>
                    
            <para>
            For Binary, DynamoDB treats each byte of the binary data as unsigned when it compares
            binary          values, for example when evaluating query expressions.
            </para>
                    
            <para>
            For information on specifying data types in JSON, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataFormat.html">JSON
            Data Format</a> in the Amazon DynamoDB Developer Guide.
            </para>
                  </li>      <li>
            <para>
            <i>ComparisonOperator</i> - A comparator for evaluating attributes. For example, 
                    equals, greater than, less than, etc.
            </para>
             
            <para>
            The following comparison operators are available:
            </para>
                  
            <para>
            <code>EQ | NE | LE | LT | GE | GT | NOT_NULL | NULL | CONTAINS | NOT_CONTAINS | BEGINS_WITH
            | IN | BETWEEN</code>
            </para>
             
            <para>
            For complete          descriptions of all comparison operators, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Condition.html">Condition</a>.
            </para>
                  </li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanRequest.Segment">
            <summary>
            Gets and sets the property Segment. 
            <para>
            For a parallel <i>Scan</i> request, <i>Segment</i> identifies an individual segment
            to be      scanned by an application worker.
            </para>
                
            <para>
            Segment IDs are zero-based, so the first segment is always 0. For example, if you
            want to      scan a table using four application threads, the first thread would specify
            a <i>Segment</i>      value of 0, the second thread would specify 1, and so on.
            </para>
                
            <para>
            The value of <i>LastEvaluatedKey</i> returned from a parallel <i>Scan</i> request
            must be      used as <i>ExclusiveStartKey</i> with the same Segment ID in a subsequent
            <i>Scan</i>      operation.
            </para>
                
            <para>
            The value for <i>Segment</i> must be greater than or equal to 0, and less than the
            value      provided for <i>TotalSegments</i>.
            </para>
                
            <para>
            If you specify <i>Segment</i>, you must also specify <i>TotalSegments</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanRequest.Select">
            <summary>
            Gets and sets the property Select. 
            <para>
            The attributes to be returned in the result. You can retrieve all item attributes,
            specific      item attributes, or the count of matching items.
            </para>
                <ul>      <li>        
            <para>
            <code>ALL_ATTRIBUTES</code>: Returns all of the item attributes.
            </para>
                  </li>      <li>        
            <para>
            <code>COUNT</code>: Returns the number of matching items, rather than the matching
            items          themselves.
            </para>
                  </li>      <li>        
            <para>
                      <code>SPECIFIC_ATTRIBUTES</code> : Returns only the attributes listed in
                       <i>AttributesToGet</i>. This is equivalent to specifying <i>AttributesToGet</i>
            without          specifying any value for <i>Select</i>.
            </para>
                  </li>    </ul>    
            <para>
            If neither <i>Select</i> nor <i>AttributesToGet</i> are specified, DynamoDB defaults
            to        <code>ALL_ATTRIBUTES</code>. You cannot use both <i>Select</i> and <i>AttributesToGet</i>
                 together in a single request, <i>unless</i> the value for <i>Select</i> is  
                 <code>SPECIFIC_ATTRIBUTES</code>. (This usage is equivalent to specifying   
                <i>AttributesToGet</i> without any value for <i>Select</i>.)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanRequest.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            The name of the table containing the requested items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanRequest.TotalSegments">
            <summary>
            Gets and sets the property TotalSegments. 
            <para>
            For a parallel <i>Scan</i> request, <i>TotalSegments</i> represents the total number
            of      segments into which the <i>Scan</i> operation will be divided. The value of
                   <i>TotalSegments</i> corresponds to the number of application workers that
            will perform the      parallel scan. For example, if you want to scan a table using
            four application threads, you      would specify a <i>TotalSegments</i> value of 4.
            </para>
                
            <para>
            The value for <i>TotalSegments</i> must be greater than or equal to 1, and less than
            or equal      to 4096. If you specify a <i>TotalSegments</i> value of 1, the <i>Scan</i>
            will be sequential      rather than parallel.
            </para>
                
            <para>
            If you specify <i>TotalSegments</i>, you must also specify <i>Segment</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ScanResponse">
            <summary>
            Configuration for accessing Amazon Scan service
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.ScanResult">
            <summary>
            Represents the output of a <i>Scan</i> operation.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanResult.ConsumedCapacity">
            <summary>
            Gets and sets the property ConsumedCapacity.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanResult.Count">
            <summary>
            Gets and sets the property Count. 
            <para>
            The number of items in the response.
            </para>
                
            <para>
            If you used a <i>ScanFilter</i> in the request, then <i>Count</i> is the number of
            items returned <i>after</i> the filter was applied, and <i>ScannedCount</i> is the
            number of matching items <i>before</i> the filter was applied.
            </para>
                
            <para>
            If you did not use a filter in the request, then <i>Count</i> is the same as <i>ScannedCount</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanResult.Items">
            <summary>
            Gets and sets the property Items. 
            <para>
            An array of item attributes that match the scan criteria. Each element in this array
            consists      of an attribute name and the value for that attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanResult.LastEvaluatedKey">
            <summary>
            Gets and sets the property LastEvaluatedKey. 
            <para>
            The primary key of the item where the operation      stopped, inclusive of the previous
            result set. Use this value to      start a new operation, excluding this value in
            the new      request.
            </para>
                
            <para>
            If <i>LastEvaluatedKey</i> is empty, then the "last page" of results has been processed
            and there is no more data to be retrieved.
            </para>
                
            <para>
            If <i>LastEvaluatedKey</i> is not empty, this does not necessarily mean that there
            is more data in the result set. The only way to know when you have reached the end
            of the result set is when <i>LastEvaluatedKey</i> is empty.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanResult.ScannedCount">
            <summary>
            Gets and sets the property ScannedCount. 
            <para>
            The number of items evaluated, <i>before</i> any <i>ScanFilter</i> is applied. A high
                   <i>ScannedCount</i> value with few, or no, <i>Count</i> results indicates an
            inefficient        <i>Scan</i> operation. For more information, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#Count">Count
            and ScannedCount</a> in the      Amazon DynamoDB Developer Guide.
            </para>
                
            <para>
            If you did not use a filter in the request, then <i>ScannedCount</i> is the same as
            <i>Count</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.ScanResponse.ScanResult">
            <summary>
            Gets and sets the ScanResult property.
            Represents the output of a Scan operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.TableDescription">
            <summary>
            Represents the properties of a table.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.TableDescription.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.TableDescription.AttributeDefinitions">
            <summary>
            Gets and sets the property AttributeDefinitions. 
            <para>
            An array of <i>AttributeDefinition</i> objects. Each of these objects describes one
            attribute      in the table and index key schema.
            </para>
                
            <para>
            Each <i>AttributeDefinition</i> object in this array is composed of:
            </para>
                <ul>      <li>        
            <para>
            <i>AttributeName</i> - The name of the attribute.
            </para>
                  </li>      <li>        
            <para>
            <i>AttributeType</i> - The data type for the attribute.
            </para>
                  </li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.TableDescription.CreationDateTime">
            <summary>
            Gets and sets the property CreationDateTime. 
            <para>
            The date and time when the table was created, in <a href="http://www.epochconverter.com/">UNIX
            epoch time</a> format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.TableDescription.GlobalSecondaryIndexes">
            <summary>
            Gets and sets the property GlobalSecondaryIndexes. 
            <para>
            The global secondary indexes, if any, on the table. Each index is scoped to a given
            hash key value. Each      element is composed of:
            </para>
                <ul>      <li>        
            <para>
            <i>IndexName</i> - The name of the global secondary index.
            </para>
                  </li>      <li>        
            <para>
            <i>IndexSizeBytes</i> - The total size of the global secondary index, in bytes. DynamoDB
            updates this value approximately every six      hours. Recent changes might not be
            reflected in this value.      
            </para>
                  </li>      <li>        
            <para>
            <i>IndexStatus</i> - The current status of the global secondary index:
            </para>
                    <ul>          <li>            
            <para>
            <i>CREATING</i> - The index is being created.
            </para>
                      </li>          <li>            
            <para>
            <i>UPDATING</i> - The index is being updated.
            </para>
                      </li>          <li>            
            <para>
            <i>DELETING</i> - The index is being deleted.
            </para>
                      </li>          <li>            
            <para>
            <i>ACTIVE</i> - The index is ready for use.
            </para>
                      </li>        </ul>      </li>      <li>        
            <para>
            <i>ItemCount</i> - The number of items in the global secondary index. DynamoDB updates
            this value approximately every six      hours. Recent changes might not be reflected
            in this value.      
            </para>
                  </li>      <li>        
            <para>
            <i>KeySchema</i> - Specifies the complete index key schema. The attribute names in
            the          key schema must be between 1 and 255 characters (inclusive). The key
            schema must begin          with the same hash key attribute as the table.
            </para>
                  </li>      <li>         
            <para>
            <i>Projection</i> - Specifies          attributes that are copied (projected) from
            the table into the index. These are in          addition to the primary key attributes
            and index key          attributes, which are automatically projected. Each       
              attribute specification is composed of:
            </para>
                    <ul>          <li>            
            <para>
            <i>ProjectionType</i> - One              of the following:
            </para>
                        <ul>              <li>                
            <para>
            <code>KEYS_ONLY</code> - Only the index and primary keys are projected into the  
                           index.
            </para>
                          </li>              <li>                
            <para>
            <code>INCLUDE</code> - Only the specified table attributes are projected into the
                             index. The list of projected attributes are                  in <i>NonKeyAttributes</i>.
            </para>
                          </li>              <li>                
            <para>
            <code>ALL</code> - All of the table attributes are projected into the            
                 index.
            </para>
                          </li>            </ul>          </li>          <li>            
            <para>
            <i>NonKeyAttributes</i> - A list of one or more non-key attribute names that are 
                         projected into the secondary index. The total count of attributes specified
            in <i>NonKeyAttributes</i>, summed across all of the secondary indexes, must not exceed
            20. If you project the same attribute into two different indexes, this counts as two
            distinct attributes when determining the total.
            </para>
                      </li>        </ul> </li>      <li>        
            <para>
            <i>ProvisionedThroughput</i> - The provisioned throughput settings for the global
            secondary index,          consisting of read and write capacity units, along with
            data about increases and          decreases. 
            </para>
                  </li>    </ul>    
            <para>
            If the table is in the <code>DELETING</code> state, no information about indexes will
            be      returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.TableDescription.ItemCount">
            <summary>
            Gets and sets the property ItemCount. 
            <para>
            The number of items in the specified table. DynamoDB updates this value approximately
            every six      hours. Recent changes might not be reflected in this value.      
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.TableDescription.KeySchema">
            <summary>
            Gets and sets the property KeySchema. 
            <para>
            The primary key structure for the table. Each <i>KeySchemaElement</i> consists of:
            </para>
                <ul>      <li>        
            <para>
            <i>AttributeName</i> - The name of the attribute.
            </para>
                  </li>      <li>        
            <para>
            <i>KeyType</i> - The key type for the attribute. Can be either <code>HASH</code> or
                       <code>RANGE</code>.
            </para>
                  </li>    </ul>    
            <para>
            For more information about primary keys, see <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html#DataModelPrimaryKey">Primary
            Key</a> in the      Amazon DynamoDB Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.TableDescription.LocalSecondaryIndexes">
            <summary>
            Gets and sets the property LocalSecondaryIndexes. 
            <para>
            Represents one or more local secondary indexes on the table. Each index is scoped
            to a given hash key value.      Tables with one or more local secondary indexes are
            subject to an item collection size limit, where the amount      of data within a given
            item collection cannot exceed 10 GB. Each element is composed of:
            </para>
                <ul>      <li>        
            <para>
            <i>IndexName</i> - The name of the local secondary index.
            </para>
                  </li>      <li>        
            <para>
            <i>KeySchema</i> - Specifies the complete index key schema. The attribute names in
            the          key schema must be between 1 and 255 characters (inclusive). The key
            schema must begin          with the same hash key attribute as the table.
            </para>
                  </li>      <li>         
            <para>
            <i>Projection</i> - Specifies          attributes that are copied (projected) from
            the table into the index. These are in          addition to the primary key attributes
            and index key          attributes, which are automatically projected. Each       
              attribute specification is composed of:
            </para>
                    <ul>          <li>            
            <para>
            <i>ProjectionType</i> - One              of the following:
            </para>
                        <ul>              <li>                
            <para>
            <code>KEYS_ONLY</code> - Only the index and primary keys are projected into the  
                           index.
            </para>
                          </li>              <li>                
            <para>
            <code>INCLUDE</code> - Only the specified table attributes are projected into the
                             index. The list of projected attributes are                  in <i>NonKeyAttributes</i>.
            </para>
                          </li>              <li>                
            <para>
            <code>ALL</code> - All of the table attributes are projected into the            
                 index.
            </para>
                          </li>            </ul>          </li>          <li>            
            <para>
            <i>NonKeyAttributes</i> - A list of one or more non-key attribute names that are 
                         projected into the secondary index. The total count of attributes specified
            in <i>NonKeyAttributes</i>, summed across all of the secondary indexes, must not exceed
            20. If you project the same attribute into two different indexes, this counts as two
            distinct attributes when determining the total.
            </para>
                      </li>        </ul> </li>      <li>        
            <para>
            <i>IndexSizeBytes</i> - Represents the total size of the index, in bytes. DynamoDB
            updates          this value approximately every six hours. Recent changes might not
            be reflected in this          value.
            </para>
                  </li>      <li>        
            <para>
            <i>ItemCount</i> - Represents the number of items in the index. DynamoDB updates this
            value          approximately every six hours. Recent changes might not be reflected
            in this value.
            </para>
                  </li>    </ul>    
            <para>
            If the table is in the <code>DELETING</code> state, no information about indexes will
            be      returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.TableDescription.ProvisionedThroughput">
            <summary>
            Gets and sets the property ProvisionedThroughput. 
            <para>
            The provisioned throughput settings for the table, consisting of read and write capacity
                 units, along with data about increases and decreases.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.TableDescription.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            The name of the table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.TableDescription.TableSizeBytes">
            <summary>
            Gets and sets the property TableSizeBytes. 
            <para>
            The total size of the specified table, in bytes. DynamoDB updates this value approximately
            every six      hours. Recent changes might not be reflected in this value.      
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.TableDescription.TableStatus">
            <summary>
            Gets and sets the property TableStatus. 
            <para>
            The current state of the table:
            </para>
                <ul>      <li>        
            <para>
            <i>CREATING</i> - The table is being created, as the result of a <i>CreateTable</i>
                     operation.
            </para>
                  </li>      <li>        
            <para>
            <i>UPDATING</i> - The table is being updated, as the result of an <i>UpdateTable</i>
                     operation.
            </para>
                  </li>      <li>        
            <para>
            <i>DELETING</i> - The table is being deleted, as the result of a <i>DeleteTable</i>
                     operation.
            </para>
                  </li>      <li>        
            <para>
            <i>ACTIVE</i> - The table is ready for use.
            </para>
                  </li>    </ul>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.UpdateGlobalSecondaryIndexAction">
            <summary>
            Represents the new provisioned throughput settings to be applied to a global secondary
            index.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateGlobalSecondaryIndexAction.IndexName">
            <summary>
            Gets and sets the property IndexName. 
            <para>
            The name of the global secondary index to be updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateGlobalSecondaryIndexAction.ProvisionedThroughput">
            <summary>
            Gets and sets the property ProvisionedThroughput.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.UpdateItemRequest">
            <summary>
            Container for the parameters to the UpdateItem operation.
            Edits an existing item's attributes, or inserts a new item if it does not already
            exist. You      can put, delete, or add attribute values. You can also perform a conditional
            update (insert a      new attribute name-value pair if it doesn't exist, or replace
            an existing name-value pair if      it has certain expected attribute values).
            
                
            <para>
            In addition to updating an item, you can also return the item's attribute values in
            the same      operation, using the <i>ReturnValues</i> parameter.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.UpdateItemRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.UpdateItemRequest.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValue},System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValueUpdate})">
            <summary>
            Instantiates UpdateItemRequest with the parameterized properties
            </summary>
            <param name="tableName">The name of the table containing the item to update. </param>
            <param name="key">The primary key of the item to be updated. Each element consists of an attribute name and a   value for that attribute. For the primary key, you must provide <i>all</i> of the attributes. For example, with a hash   type primary key, you only need to specify the hash attribute. For a hash-and-range type   primary key, you must specify <i>both</i> the hash attribute and the range attribute.</param>
            <param name="attributeUpdates">The names of attributes to be modified, the action to perform on each, and the new value for   each. If you are updating an attribute that is an index key attribute for any indexes on that   table, the attribute type must match the index key type defined in the  <i>AttributesDefinition</i> of the table description. You can use <i>UpdateItem</i> to   update any non-key attributes. Attribute values cannot be null. String and binary type attributes must have lengths greater   than zero. Set type attributes must not be empty. Requests with empty values will be rejected   with a <i>ValidationException</i>. Each <i>AttributeUpdates</i> element consists of an attribute name to modify, along with the   following: <ul>   <li>  <i>Value</i> - The new value, if applicable, for this attribute.   </li>   <li>  <i>Action</i> - Specifies how to perform the update. Valid values for <i>Action</i> are   <code>PUT</code>, <code>DELETE</code>, and <code>ADD</code>. The behavior depends on    whether the specified primary key already exists in the table.      <b>If an item with the specified <i>Key</i> is found in the table:</b>    <ul>    <li>   <code>PUT</code> - Adds the specified attribute to the item. If the attribute already     exists, it is replaced by the new value.     </li>    <li>   <code>DELETE</code> - If no value is specified, the attribute and its value are     removed from the item. The data type of the specified value must match the existing     value's data type.   If a <i>set</i> of values is specified, then those values are subtracted from the old     set. For example, if the attribute value was the set <code>[a,b,c]</code> and the    <i>DELETE</i> action specified <code>[a,c]</code>, then the final attribute value     would be <code>[b]</code>. Specifying an empty set is an error.    </li>    <li>   <code>ADD</code> - If the attribute does not already exist, then the attribute and     its values are added to the item. If the attribute does exist, then the behavior of    <code>ADD</code> depends on the data type of the attribute:   <ul>     <li>    If the existing attribute is a number, and if <i>Value</i> is also a number, then      the <i>Value</i> is mathematically added to the existing attribute. If     <i>Value</i> is a negative number, then it is subtracted from the existing      attribute.    <note>       If you use <code>ADD</code> to increment or decrement a number value for an     item that doesn't exist before the update, DynamoDB uses 0 as the initial     value.      In addition, if you use <code>ADD</code> to update an existing item, and intend     to increment or decrement an attribute value which does not yet exist, DynamoDB     uses <code>0</code> as the initial value. For example, suppose that the item you     want to update does not yet have an attribute named <i>itemcount</i>, but you     decide to <code>ADD</code> the number <code>3</code> to this attribute anyway,     even though it currently does not exist. DynamoDB will create the <i>itemcount</i>     attribute, set its initial value to <code>0</code>, and finally add       <code>3</code> to it. The result will be a new <i>itemcount</i> attribute in     the item, with a value of <code>3</code>.    </note>     </li>     <li>    If the existing data type is a set, and if the <i>Value</i> is also a set, then      the <i>Value</i> is added to the existing set. (This is a <i>set</i> operation,      not mathematical addition.) For example, if the attribute value was the set     <code>[1,2]</code>, and the <code>ADD</code> action specified <code>[3]</code>,      then the final attribute value would be <code>[1,2,3]</code>. An error occurs if      an Add action is specified for a set attribute and the attribute type specified      does not match the existing set type.     Both sets must have the same primitive data type. For example, if the existing      data type is a set of strings, the <i>Value</i> must also be a set of strings. The      same holds true for number sets and binary sets.     </li>   </ul>   This action is only valid for an existing attribute whose data type is number or is a     set. Do not use <code>ADD</code> for any other data types.    </li>  </ul>      <b>If no item with the specified <i>Key</i> is found:</b>    <ul>    <li>   <code>PUT</code> - DynamoDB creates a new item with the specified primary key, and then     adds the attribute.     </li>    <li>   <code>DELETE</code> - Nothing happens; there is no attribute to delete.    </li>    <li>   <code>ADD</code> - DynamoDB creates an item with the supplied primary key and number (or     set of numbers) for the attribute value. The only data types allowed are number and     number set; no other data types can be specified.    </li>  </ul>   </li> </ul> If you specify any attributes that are part of an index key, then the data types for those   attributes must match those of the schema in the table's attribute definition.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.UpdateItemRequest.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValue},System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValueUpdate},Amazon.DynamoDBv2.ReturnValue)">
            <summary>
            Instantiates UpdateItemRequest with the parameterized properties
            </summary>
            <param name="tableName">The name of the table containing the item to update. </param>
            <param name="key">The primary key of the item to be updated. Each element consists of an attribute name and a   value for that attribute. For the primary key, you must provide <i>all</i> of the attributes. For example, with a hash   type primary key, you only need to specify the hash attribute. For a hash-and-range type   primary key, you must specify <i>both</i> the hash attribute and the range attribute.</param>
            <param name="attributeUpdates">The names of attributes to be modified, the action to perform on each, and the new value for   each. If you are updating an attribute that is an index key attribute for any indexes on that   table, the attribute type must match the index key type defined in the  <i>AttributesDefinition</i> of the table description. You can use <i>UpdateItem</i> to   update any non-key attributes. Attribute values cannot be null. String and binary type attributes must have lengths greater   than zero. Set type attributes must not be empty. Requests with empty values will be rejected   with a <i>ValidationException</i>. Each <i>AttributeUpdates</i> element consists of an attribute name to modify, along with the   following: <ul>   <li>  <i>Value</i> - The new value, if applicable, for this attribute.   </li>   <li>  <i>Action</i> - Specifies how to perform the update. Valid values for <i>Action</i> are   <code>PUT</code>, <code>DELETE</code>, and <code>ADD</code>. The behavior depends on    whether the specified primary key already exists in the table.      <b>If an item with the specified <i>Key</i> is found in the table:</b>    <ul>    <li>   <code>PUT</code> - Adds the specified attribute to the item. If the attribute already     exists, it is replaced by the new value.     </li>    <li>   <code>DELETE</code> - If no value is specified, the attribute and its value are     removed from the item. The data type of the specified value must match the existing     value's data type.   If a <i>set</i> of values is specified, then those values are subtracted from the old     set. For example, if the attribute value was the set <code>[a,b,c]</code> and the    <i>DELETE</i> action specified <code>[a,c]</code>, then the final attribute value     would be <code>[b]</code>. Specifying an empty set is an error.    </li>    <li>   <code>ADD</code> - If the attribute does not already exist, then the attribute and     its values are added to the item. If the attribute does exist, then the behavior of    <code>ADD</code> depends on the data type of the attribute:   <ul>     <li>    If the existing attribute is a number, and if <i>Value</i> is also a number, then      the <i>Value</i> is mathematically added to the existing attribute. If     <i>Value</i> is a negative number, then it is subtracted from the existing      attribute.    <note>       If you use <code>ADD</code> to increment or decrement a number value for an     item that doesn't exist before the update, DynamoDB uses 0 as the initial     value.      In addition, if you use <code>ADD</code> to update an existing item, and intend     to increment or decrement an attribute value which does not yet exist, DynamoDB     uses <code>0</code> as the initial value. For example, suppose that the item you     want to update does not yet have an attribute named <i>itemcount</i>, but you     decide to <code>ADD</code> the number <code>3</code> to this attribute anyway,     even though it currently does not exist. DynamoDB will create the <i>itemcount</i>     attribute, set its initial value to <code>0</code>, and finally add       <code>3</code> to it. The result will be a new <i>itemcount</i> attribute in     the item, with a value of <code>3</code>.    </note>     </li>     <li>    If the existing data type is a set, and if the <i>Value</i> is also a set, then      the <i>Value</i> is added to the existing set. (This is a <i>set</i> operation,      not mathematical addition.) For example, if the attribute value was the set     <code>[1,2]</code>, and the <code>ADD</code> action specified <code>[3]</code>,      then the final attribute value would be <code>[1,2,3]</code>. An error occurs if      an Add action is specified for a set attribute and the attribute type specified      does not match the existing set type.     Both sets must have the same primitive data type. For example, if the existing      data type is a set of strings, the <i>Value</i> must also be a set of strings. The      same holds true for number sets and binary sets.     </li>   </ul>   This action is only valid for an existing attribute whose data type is number or is a     set. Do not use <code>ADD</code> for any other data types.    </li>  </ul>      <b>If no item with the specified <i>Key</i> is found:</b>    <ul>    <li>   <code>PUT</code> - DynamoDB creates a new item with the specified primary key, and then     adds the attribute.     </li>    <li>   <code>DELETE</code> - Nothing happens; there is no attribute to delete.    </li>    <li>   <code>ADD</code> - DynamoDB creates an item with the supplied primary key and number (or     set of numbers) for the attribute value. The only data types allowed are number and     number set; no other data types can be specified.    </li>  </ul>   </li> </ul> If you specify any attributes that are part of an index key, then the data types for those   attributes must match those of the schema in the table's attribute definition.</param>
            <param name="returnValues">Use <i>ReturnValues</i> if you want to get the item attributes as they appeared either before   or after they were updated. For <i>UpdateItem</i>, the valid values are: <ul>   <li>  <code>NONE</code> - If <i>ReturnValues</i> is not specified, or if its value is   <code>NONE</code>, then nothing is returned. (This is the default for   <i>ReturnValues</i>.)   </li>   <li>  <code>ALL_OLD</code> - If <i>UpdateItem</i> overwrote an attribute name-value pair, then    the content of the old item is returned.   </li>   <li>  <code>UPDATED_OLD</code> - The old versions of only the updated attributes are    returned.   </li>   <li>  <code>ALL_NEW</code> - All of the attributes of the new version of the item are    returned.   </li>   <li>  <code>UPDATED_NEW</code> - The new versions of only the updated attributes are    returned.   </li> </ul></param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemRequest.AttributeUpdates">
            <summary>
            Gets and sets the property AttributeUpdates. 
            <para>
            The names of attributes to be modified, the action to perform on each, and the new
            value for      each. If you are updating an attribute that is an index key attribute
            for any indexes on that      table, the attribute type must match the index key type
            defined in the        <i>AttributesDefinition</i> of the table description. You can
            use <i>UpdateItem</i> to      update any non-key attributes.
            </para>
                
            <para>
            Attribute values cannot be null. String and binary type attributes must have lengths
            greater      than zero. Set type attributes must not be empty. Requests with empty
            values will be rejected      with a <i>ValidationException</i>.
            </para>
                
            <para>
            Each <i>AttributeUpdates</i> element consists of an attribute name to modify, along
            with the      following:
            </para>
                <ul>      <li>        
            <para>
            <i>Value</i> - The new value, if applicable, for this attribute.
            </para>
                  </li>      <li>        
            <para>
            <i>Action</i> - Specifies how to perform the update. Valid values for <i>Action</i>
            are            <code>PUT</code>, <code>DELETE</code>, and <code>ADD</code>. The behavior
            depends on          whether the specified primary key already exists in the table.
            </para>
                    
            <para>
                      <b>If an item with the specified <i>Key</i> is found in the table:</b> 
                  
            </para>
                    <ul>          <li>            
            <para>
            <code>PUT</code> - Adds the specified attribute to the item. If the attribute already
                         exists, it is replaced by the new value. 
            </para>
                      </li>          <li>            
            <para>
            <code>DELETE</code> - If no value is specified, the attribute and its value are  
                       removed from the item. The data type of the specified value must match
            the existing              value's data type.
            </para>
                        
            <para>
            If a <i>set</i> of values is specified, then those values are subtracted from the
            old              set. For example, if the attribute value was the set <code>[a,b,c]</code>
            and the                <i>DELETE</i> action specified <code>[a,c]</code>, then the
            final attribute value              would be <code>[b]</code>. Specifying an empty
            set is an error.
            </para>
                      </li>          <li>            
            <para>
            <code>ADD</code> - If the attribute does not already exist, then the attribute and
                         its values are added to the item. If the attribute does exist, then the
            behavior of                <code>ADD</code> depends on the data type of the attribute:
            </para>
                        <ul>              <li>                
            <para>
            If the existing attribute is a number, and if <i>Value</i> is also a number, then
                             the <i>Value</i> is mathematically added to the existing attribute.
            If                    <i>Value</i> is a negative number, then it is subtracted from
            the existing                  attribute.
            </para>
                            <note>                  
            <para>
             If you use <code>ADD</code> to increment or decrement a number value for an     
                          item that doesn't exist before the update, DynamoDB uses 0 as the initial
                               value.
            </para>
                              
            <para>
            In addition, if you use <code>ADD</code> to update an existing item, and intend  
                             to increment or decrement an attribute value which does not yet exist,
            DynamoDB                    uses <code>0</code> as the initial value. For example,
            suppose that the item you                    want to update does not yet have an attribute
            named <i>itemcount</i>, but you                    decide to <code>ADD</code> the
            number <code>3</code> to this attribute anyway,                    even though it
            currently does not exist. DynamoDB will create the <i>itemcount</i>              
                 attribute, set its initial value to <code>0</code>, and finally add         
                        <code>3</code> to it. The result will be a new <i>itemcount</i> attribute
            in                    the item, with a value of <code>3</code>.
            </para>
                            </note>              </li>              <li>                
            <para>
            If the existing data type is a set, and if the <i>Value</i> is also a set, then  
                           the <i>Value</i> is added to the existing set. (This is a <i>set</i>
            operation,                  not mathematical addition.) For example, if the attribute
            value was the set                    <code>[1,2]</code>, and the <code>ADD</code>
            action specified <code>[3]</code>,                  then the final attribute value
            would be <code>[1,2,3]</code>. An error occurs if                  an Add action is
            specified for a set attribute and the attribute type specified                  does
            not match the existing set type. 
            </para>
                            
            <para>
            Both sets must have the same primitive data type. For example, if the existing   
                          data type is a set of strings, the <i>Value</i> must also be a set of
            strings. The                  same holds true for number sets and binary sets.
            </para>
                          </li>            </ul>            
            <para>
            This action is only valid for an existing attribute whose data type is number or is
            a              set. Do not use <code>ADD</code> for any other data types.
            </para>
                      </li>        </ul>        
            <para>
                      <b>If no item with the specified <i>Key</i> is found:</b>        
            </para>
                    <ul>          <li>            
            <para>
            <code>PUT</code> - DynamoDB creates a new item with the specified primary key, and
            then              adds the attribute. 
            </para>
                      </li>          <li>            
            <para>
            <code>DELETE</code> - Nothing happens; there is no attribute to delete.
            </para>
                      </li>          <li>            
            <para>
            <code>ADD</code> - DynamoDB creates an item with the supplied primary key and number
            (or              set of numbers) for the attribute value. The only data types allowed
            are number and              number set; no other data types can be specified.
            </para>
                      </li>        </ul>      </li>    </ul>    
            <para>
            If you specify any attributes that are part of an index key, then the data types for
            those      attributes must match those of the schema in the table's attribute definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemRequest.ConditionalOperator">
            <summary>
            Gets and sets the property ConditionalOperator. 
            <para>
            A logical operator to apply to the conditions in the <i>Expected</i> map:
            </para>
                          <ul>               <li>
            <para>
            <code>AND</code> - If <i>all</i> of the conditions evaluate to true, then the entire
            map  evaluates to true.
            </para>
            </li>               <li>
            <para>
            <code>OR</code> - If <i>at least one</i> of the conditions evaluate to true, then
            the entire map evaluates to true.
            </para>
            </li>           </ul>           
            <para>
            If you omit <i>ConditionalOperator</i>, then <code>AND</code> is the default.
            </para>
                       
            <para>
            The operation will succeed only if the entire map evaluates to true.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemRequest.Expected">
            <summary>
            Gets and sets the property Expected. 
            <para>
            A map of attribute/condition pairs. This is the conditional block for the <i>UpdateItem</i>
                 operation.
            </para>
                     
            <para>
            Each element of <i>Expected</i> consists of an attribute name, a comparison operator,
            and one or more values.  DynamoDB compares the attribute with the value(s) you supplied,
            using the comparison operator. For each <i>Expected</i> element, the result of the
            evaluation is either true or false.
            </para>
                
            <para>
            If you specify more than one element in the <i>Expected</i> map, then by default all
            of the conditions must evaluate to true. In other words, the conditions are ANDed
            together. (You can use the <i>ConditionalOperator</i> parameter to OR the conditions
            instead. If you do this, then at least one of the conditions must evaluate to true,
            rather than all of them.)
            </para>
                
            <para>
            If the <i>Expected</i> map evaluates to true, then the conditional operation succeeds;
            otherwise, it fails.
            </para>
                    
            <para>
            Each item in <i>Expected</i> represents an attribute name for DynamoDB to check, along
            with an <i>AttributeValueList</i> and a <i>ComparisonOperator</i>:
            </para>
                     <ul>         <li>             
            <para>
            <i>AttributeValueList</i> - One or more values to evaluate against the supplied  
                          attribute. The number of values in the list depends on the <i>ComparisonOperator</i>
                            being used.
            </para>
                         
            <para>
            For type Number, value comparisons are numeric.
            </para>
                         
            <para>
            String value comparisons for greater than, equals, or less than are based on ASCII
                            character code values. For example, <code>a</code> is greater than
            <code>A</code>, and                     <code>aa</code> is greater than <code>B</code>.
            For a list of code values, see <a                     href="http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters"
                                >http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>.
            </para>
                         
            <para>
            For Binary, DynamoDB treats each byte of the binary data as unsigned when it compares
            binary                 values, for example when evaluating query expressions.
            </para>
                     </li>         <li>        
            <para>
            <i>ComparisonOperator</i> - A comparator for evaluating attributes in the        
                   <i>AttributeValueList</i>. When performing the comparison, DynamoDB uses strongly
            consistent reads.
            </para>
                            
            <para>
            The following comparison operators are available:
            </para>
                  
            <para>
            <code>EQ | NE | LE | LT | GE | GT | NOT_NULL | NULL | CONTAINS | NOT_CONTAINS | BEGINS_WITH
            | IN | BETWEEN</code>
            </para>
                          
            <para>
            The following are descriptions of each comparison operator.
            </para>
                <ul>      <li>        
            <para>
            <code>EQ</code> : Equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, Binary, String Set, Number Set, or Binary Set. If an item contains
            an <i>AttributeValue</i> of a different          type than the one specified in the
            request, the value does not match. For example,            <code>{"S":"6"}</code>
            does not equal <code>{"N":"6"}</code>. Also,            <code>{"N":"6"}</code> does
            not equal <code>{"NS":["6", "2", "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>NE</code> : Not equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, Binary, String Set, Number Set, or Binary Set. If an item contains
            an <i>AttributeValue</i> of a different          type than the one specified in the
            request, the value does not match. For example,            <code>{"S":"6"}</code>
            does not equal <code>{"N":"6"}</code>. Also,            <code>{"N":"6"}</code> does
            not equal <code>{"NS":["6", "2", "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>LE</code> : Less than or equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>LT</code> : Less than. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>GE</code> : Greater than or equal. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>GT</code> : Greater than. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If an item contains an <i>AttributeValue</i>
            of a different          type than the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not equal <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>.
            </para>
                    <p/></li>      <li>        
            <para>
            <code>NOT_NULL</code> : The attribute exists. 
            </para>
            </li>      <li>        
            <para>
            <code>NULL</code> : The attribute does not exist. 
            </para>
            </li>      <li>        
            <para>
            <code>CONTAINS</code> : checks for a subsequence, or value in a set.
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If the target attribute of the comparison
            is a String, then          the operation checks for a substring match. If the target
            attribute of the comparison is          Binary, then the operation looks for a subsequence
            of the target that matches the input.          If the target attribute of the comparison
            is a set ("SS", "NS", or "BS"), then the          operation checks for a member of
            the set (not as a substring).
            </para>
            </li>      <li>        
            <para>
            <code>NOT_CONTAINS</code> : checks for absence of a subsequence, or absence of a value
            in          a set.
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String,
                     Number, or Binary (not a set). If the target attribute of the comparison
            is a String, then          the operation checks for the absence of a substring match.
            If the target attribute of the          comparison is Binary, then the operation checks
            for the absence of a subsequence of the          target that matches the input. If
            the target attribute of the comparison is a set ("SS",          "NS", or "BS"), then
            the operation checks for the absence of a member of the set (not as a          substring).
            </para>
            </li>      <li>        
            <para>
            <code>BEGINS_WITH</code> : checks for a prefix. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain only one <i>AttributeValue</i> of type String
            or          Binary (not a Number or a set). The target attribute of the comparison
            must be a String or          Binary (not a Number or a set).
            </para>
                    <p/></li>      <li>        
            <para>
            <code>IN</code> : checks for exact matches.
            </para>
                    
            <para>
            <i>AttributeValueList</i> can contain more than one <i>AttributeValue</i> of type
            String,          Number, or Binary (not a set). The target attribute of the comparison
            must be of the same          type and exact value to match. A String never matches
            a String set.
            </para>
            </li>      <li>        
            <para>
            <code>BETWEEN</code> : Greater than or equal to the first value, and less than or
            equal          to the second value. 
            </para>
                    
            <para>
            <i>AttributeValueList</i> must contain two <i>AttributeValue</i> elements of the same
                     type, either String, Number, or Binary (not a set). A target attribute matches
            if the          target value is greater than, or equal to, the first element and less
            than, or equal to,          the second element. If an item contains an <i>AttributeValue</i>
            of a different type than          the one specified in the request, the value does
            not match. For example,            <code>{"S":"6"}</code> does not compare to <code>{"N":"6"}</code>.
            Also,            <code>{"N":"6"}</code> does not compare to <code>{"NS":["6", "2",
            "1"]}</code>
            </para>
            </li>    </ul>    </li>     </ul>    
            <para>
            For usage examples of <i>AttributeValueList</i> and <i>ComparisonOperator</i>, see
            <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html#ConditionalExpressions"
                   >Conditional Expressions</a> in the Amazon DynamoDB Developer Guide.
            </para>
                <note>      
            <para>
            For backward compatibility with previous DynamoDB releases, the following parameters
            can be        used instead of <i>AttributeValueList</i> and <i>ComparisonOperator</i>:
            </para>
                  <ul>        <li>          
            <para>
            <i>Value</i> - A value for DynamoDB to compare with an attribute.
            </para>
                    </li>        <li>          
            <para>
            <i>Exists</i> - Causes DynamoDB to evaluate the value before attempting the conditional
                       operation:
            </para>
                      <ul>            <li>              
            <para>
            If <i>Exists</i> is <code>true</code>, DynamoDB will check to see if that attribute
                           value already exists in the table. If it is found, then the condition
            evaluates to                true; otherwise the condition evaluate to false.
            </para>
                        </li>            <li>
            <para>
            If <i>Exists</i> is <code>false</code>, DynamoDB assumes that the attribute value
                           does <i>not</i> exist in the table. If in fact the value does not exist,
            then the                assumption is valid and the condition evaluates to true. If
            the value is found,                despite the assumption that it does not exist,
            the condition evaluates to              false.
            </para>
            </li>          </ul>        </li>      </ul>      
            <para>
            Even though DynamoDB continues to accept the <i>Value</i> and <i>Exists</i> parameters,
            they        are now deprecated. We recommend that you use <i>AttributeValueList</i>
            and          <i>ComparisonOperator</i> instead, since they allow you to construct
            a much wider range of        conditions.
            </para>
                  
            <para>
            The <i>Value</i> and <i>Exists</i> parameters are incompatible with          <i>AttributeValueList</i>
            and <i>ComparisonOperator</i>. If you attempt to use both sets        of parameters
            at once, DynamoDB will throw a <i>ValidationException</i>.
            </para>
                </note>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemRequest.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The primary key of the item to be updated. Each element consists of an attribute name
            and a      value for that attribute.
            </para>
                
            <para>
            For the primary key, you must provide <i>all</i> of the attributes. For example, with
            a hash      type primary key, you only need to specify the hash attribute. For a hash-and-range
            type      primary key, you must specify <i>both</i> the hash attribute and the range
            attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemRequest.ReturnConsumedCapacity">
            <summary>
            Gets and sets the property ReturnConsumedCapacity.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemRequest.ReturnItemCollectionMetrics">
            <summary>
            Gets and sets the property ReturnItemCollectionMetrics. 
            <para>
            If set to <code>SIZE</code>, statistics about item collections, if any, that were
            modified during      the operation are returned in the response. If set to <code>NONE</code>
            (the default), no statistics are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemRequest.ReturnValues">
            <summary>
            Gets and sets the property ReturnValues. 
            <para>
            Use <i>ReturnValues</i> if you want to get the item attributes as they appeared either
            before      or after they were updated. For <i>UpdateItem</i>, the valid values are:
            </para>
                <ul>      <li>        
            <para>
            <code>NONE</code> - If <i>ReturnValues</i> is not specified, or if its value is  
                     <code>NONE</code>, then nothing is returned. (This is the default for   
                    <i>ReturnValues</i>.)
            </para>
                  </li>      <li>        
            <para>
            <code>ALL_OLD</code> - If <i>UpdateItem</i> overwrote an attribute name-value pair,
            then          the content of the old item is returned.
            </para>
                  </li>      <li>        
            <para>
            <code>UPDATED_OLD</code> - The old versions of only the updated attributes are   
                  returned.
            </para>
                  </li>      <li>        
            <para>
            <code>ALL_NEW</code> - All of the attributes of the new version of the item are  
                   returned.
            </para>
                  </li>      <li>        
            <para>
            <code>UPDATED_NEW</code> - The new versions of only the updated attributes are   
                  returned.
            </para>
                  </li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemRequest.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            The name of the table containing the item to update. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.UpdateItemResponse">
            <summary>
            Configuration for accessing Amazon UpdateItem service
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.UpdateItemResult">
            <summary>
            Represents the output of an <i>UpdateItem</i> operation.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemResult.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A map of attribute values as they appeared before the <i>UpdateItem</i> operation,
            but only      if <i>ReturnValues</i> was specified as something other than <code>NONE</code>
            in the request.      Each element represents one attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemResult.ConsumedCapacity">
            <summary>
            Gets and sets the property ConsumedCapacity.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemResult.ItemCollectionMetrics">
            <summary>
            Gets and sets the property ItemCollectionMetrics.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateItemResponse.UpdateItemResult">
            <summary>
            Gets and sets the UpdateItemResult property.
            Represents the output of a UpdateItem operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.UpdateTableRequest">
            <summary>
            Container for the parameters to the UpdateTable operation.
            Updates the provisioned throughput for the given table. Setting the throughput for
            a table      helps you manage performance and is part of the provisioned throughput
            feature of DynamoDB.
            
                
            <para>
            The provisioned throughput values can be upgraded or downgraded based on the maximums
            and      minimums listed in the <a href="http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html">Limits</a>
            section in the      Amazon DynamoDB Developer Guide.
            </para>
                
            <para>
            The table must be in the <code>ACTIVE</code> state for this operation to succeed.
                   <i>UpdateTable</i> is an asynchronous operation; while executing the operation,
            the table is      in the <code>UPDATING</code> state. While the table is in the <code>UPDATING</code>
            state, the      table still has the provisioned throughput from before the call. The
            new provisioned      throughput setting is in effect only when the table returns to
            the <code>ACTIVE</code> state      after the <i>UpdateTable</i> operation. 
            </para>
                
            <para>
            You cannot add, modify or delete indexes using <i>UpdateTable</i>. Indexes can only
            be      defined at table creation time.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.UpdateTableRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.UpdateTableRequest.#ctor(System.String,Amazon.DynamoDBv2.Model.ProvisionedThroughput)">
            <summary>
            Instantiates UpdateTableRequest with the parameterized properties
            </summary>
            <param name="tableName">The name of the table to be updated.</param>
            <param name="provisionedThroughput">Sets the UpdateTableRequest ProvisionedThroughput property</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateTableRequest.GlobalSecondaryIndexUpdates">
            <summary>
            Gets and sets the property GlobalSecondaryIndexUpdates. 
            <para>
            An array of one or more global secondary indexes on the table, together with provisioned
            throughput settings      for each index.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateTableRequest.ProvisionedThroughput">
            <summary>
            Gets and sets the property ProvisionedThroughput.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateTableRequest.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            The name of the table to be updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.UpdateTableResponse">
            <summary>
            Configuration for accessing Amazon UpdateTable service
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.UpdateTableResult">
            <summary>
            Represents the output of an <i>UpdateTable</i> operation.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateTableResult.TableDescription">
            <summary>
            Gets and sets the property TableDescription.
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.UpdateTableResponse.UpdateTableResult">
            <summary>
            Gets and sets the UpdateTableResult property.
            Represents the output of a UpdateTable operation.
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.Model.WriteRequest">
            <summary>
            Represents an operation to perform - either <i>DeleteItem</i> or <i>PutItem</i>. You
            can only      specify one of these operations, not both, in a single <i>WriteRequest</i>.
            If you do need to      perform both of these operations, you will need to specify
            two separate <i>WriteRequest</i>      objects.
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.WriteRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.WriteRequest.#ctor(Amazon.DynamoDBv2.Model.PutRequest)">
            <summary>
            Instantiates WriteRequest with the parameterized properties
            </summary>
            <param name="putRequest">A request to perform a <i>PutItem</i> operation.</param>
        </member>
        <member name="M:Amazon.DynamoDBv2.Model.WriteRequest.#ctor(Amazon.DynamoDBv2.Model.DeleteRequest)">
            <summary>
            Instantiates WriteRequest with the parameterized properties
            </summary>
            <param name="deleteRequest">A request to perform a <i>DeleteItem</i> operation.</param>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.WriteRequest.DeleteRequest">
            <summary>
            Gets and sets the property DeleteRequest. 
            <para>
            A request to perform a <i>DeleteItem</i> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DynamoDBv2.Model.WriteRequest.PutRequest">
            <summary>
            Gets and sets the property PutRequest. 
            <para>
            A request to perform a <i>PutItem</i> operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DynamoDBv2.AttributeAction">
            <summary>
            Constants used for properties of type AttributeAction.
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.AttributeAction.ADD">
            <summary>
            Constant ADD for AttributeAction
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.AttributeAction.DELETE">
            <summary>
            Constant DELETE for AttributeAction
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.AttributeAction.PUT">
            <summary>
            Constant PUT for AttributeAction
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.AttributeAction.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.AttributeAction.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.ComparisonOperator">
            <summary>
            Constants used for properties of type ComparisonOperator.
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.BEGINS_WITH">
            <summary>
            Constant BEGINS_WITH for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.BETWEEN">
            <summary>
            Constant BETWEEN for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.CONTAINS">
            <summary>
            Constant CONTAINS for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.EQ">
            <summary>
            Constant EQ for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.GE">
            <summary>
            Constant GE for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.GT">
            <summary>
            Constant GT for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.IN">
            <summary>
            Constant IN for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.LE">
            <summary>
            Constant LE for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.LT">
            <summary>
            Constant LT for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.NE">
            <summary>
            Constant NE for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.NOT_CONTAINS">
            <summary>
            Constant NOT_CONTAINS for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.NOT_NULL">
            <summary>
            Constant NOT_NULL for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ComparisonOperator.NULL">
            <summary>
            Constant NULL for ComparisonOperator
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ComparisonOperator.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ComparisonOperator.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.ConditionalOperator">
            <summary>
            Constants used for properties of type ConditionalOperator.
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ConditionalOperator.AND">
            <summary>
            Constant AND for ConditionalOperator
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ConditionalOperator.OR">
            <summary>
            Constant OR for ConditionalOperator
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ConditionalOperator.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ConditionalOperator.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.IndexStatus">
            <summary>
            Constants used for properties of type IndexStatus.
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.IndexStatus.ACTIVE">
            <summary>
            Constant ACTIVE for IndexStatus
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.IndexStatus.CREATING">
            <summary>
            Constant CREATING for IndexStatus
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.IndexStatus.DELETING">
            <summary>
            Constant DELETING for IndexStatus
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.IndexStatus.UPDATING">
            <summary>
            Constant UPDATING for IndexStatus
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.IndexStatus.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.IndexStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.KeyType">
            <summary>
            Constants used for properties of type KeyType.
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.KeyType.HASH">
            <summary>
            Constant HASH for KeyType
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.KeyType.RANGE">
            <summary>
            Constant RANGE for KeyType
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.KeyType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.KeyType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.ProjectionType">
            <summary>
            Constants used for properties of type ProjectionType.
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ProjectionType.ALL">
            <summary>
            Constant ALL for ProjectionType
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ProjectionType.INCLUDE">
            <summary>
            Constant INCLUDE for ProjectionType
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ProjectionType.KEYS_ONLY">
            <summary>
            Constant KEYS_ONLY for ProjectionType
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ProjectionType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ProjectionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.ReturnConsumedCapacity">
            <summary>
            Constants used for properties of type ReturnConsumedCapacity.
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ReturnConsumedCapacity.INDEXES">
            <summary>
            Constant INDEXES for ReturnConsumedCapacity
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ReturnConsumedCapacity.NONE">
            <summary>
            Constant NONE for ReturnConsumedCapacity
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ReturnConsumedCapacity.TOTAL">
            <summary>
            Constant TOTAL for ReturnConsumedCapacity
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ReturnConsumedCapacity.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ReturnConsumedCapacity.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.ReturnItemCollectionMetrics">
            <summary>
            Constants used for properties of type ReturnItemCollectionMetrics.
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ReturnItemCollectionMetrics.NONE">
            <summary>
            Constant NONE for ReturnItemCollectionMetrics
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ReturnItemCollectionMetrics.SIZE">
            <summary>
            Constant SIZE for ReturnItemCollectionMetrics
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ReturnItemCollectionMetrics.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ReturnItemCollectionMetrics.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.ReturnValue">
            <summary>
            Constants used for properties of type ReturnValue.
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ReturnValue.ALL_NEW">
            <summary>
            Constant ALL_NEW for ReturnValue
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ReturnValue.ALL_OLD">
            <summary>
            Constant ALL_OLD for ReturnValue
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ReturnValue.NONE">
            <summary>
            Constant NONE for ReturnValue
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ReturnValue.UPDATED_NEW">
            <summary>
            Constant UPDATED_NEW for ReturnValue
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ReturnValue.UPDATED_OLD">
            <summary>
            Constant UPDATED_OLD for ReturnValue
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ReturnValue.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ReturnValue.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.ScalarAttributeType">
            <summary>
            Constants used for properties of type ScalarAttributeType.
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ScalarAttributeType.B">
            <summary>
            Constant B for ScalarAttributeType
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ScalarAttributeType.N">
            <summary>
            Constant N for ScalarAttributeType
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.ScalarAttributeType.S">
            <summary>
            Constant S for ScalarAttributeType
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ScalarAttributeType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.ScalarAttributeType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.Select">
            <summary>
            Constants used for properties of type Select.
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.Select.ALL_ATTRIBUTES">
            <summary>
            Constant ALL_ATTRIBUTES for Select
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.Select.ALL_PROJECTED_ATTRIBUTES">
            <summary>
            Constant ALL_PROJECTED_ATTRIBUTES for Select
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.Select.COUNT">
            <summary>
            Constant COUNT for Select
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.Select.SPECIFIC_ATTRIBUTES">
            <summary>
            Constant SPECIFIC_ATTRIBUTES for Select
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Select.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.Select.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.DynamoDBv2.TableStatus">
            <summary>
            Constants used for properties of type TableStatus.
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.TableStatus.ACTIVE">
            <summary>
            Constant ACTIVE for TableStatus
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.TableStatus.CREATING">
            <summary>
            Constant CREATING for TableStatus
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.TableStatus.DELETING">
            <summary>
            Constant DELETING for TableStatus
            </summary>
        </member>
        <member name="F:Amazon.DynamoDBv2.TableStatus.UPDATING">
            <summary>
            Constant UPDATING for TableStatus
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.TableStatus.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DynamoDBv2.TableStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.AmazonEC2Client">
             <summary>
             Implementation for accessing EC2
            
             Amazon Elastic Compute Cloud 
             <para>
             Amazon Elastic Compute Cloud (Amazon EC2) provides resizable computing capacity in
             the Amazon Web Services (AWS) cloud. Using Amazon EC2 eliminates your need to invest
             in hardware up front, so you can develop and deploy applications faster.
             </para>
             </summary>
            <summary>
            Implementation for accessing AmazonEC2.
             
            <para> Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides resizable compute capacity in the cloud. It is designed to
            make web-scale computing easier for developers. </para> <para> Amazon EC2's simple web service interface allows you to obtain and configure
            capacity with minimal friction. It provides you with complete control of your computing resources and lets you run on Amazon's proven
            computing environment. Amazon EC2 reduces the time required to obtain and boot new server instances to minutes, allowing you to quickly
            scale capacity, both up and down, as your computing requirements change. Amazon EC2 changes the economics of computing by allowing you to
            pay only for capacity that you actually use. Amazon EC2 provides developers the tools to build failure resilient applications and isolate
            themselves from common failure scenarios. </para> <para> Visit http://aws.amazon.com/ec2/ for more information. </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.IAmazonEC2">
             <summary>
             Interface for accessing EC2
            
             Amazon Elastic Compute Cloud 
             <para>
             Amazon Elastic Compute Cloud (Amazon EC2) provides resizable computing capacity in
             the Amazon Web Services (AWS) cloud. Using Amazon EC2 eliminates your need to invest
             in hardware up front, so you can develop and deploy applications faster.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AcceptVpcPeeringConnectionAsync(Amazon.EC2.Model.AcceptVpcPeeringConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AcceptVpcPeeringConnection operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AcceptVpcPeeringConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AllocateAddressAsync(Amazon.EC2.Model.AllocateAddressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AllocateAddress operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AllocateAddress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AssignPrivateIpAddressesAsync(Amazon.EC2.Model.AssignPrivateIpAddressesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssignPrivateIpAddresses operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssignPrivateIpAddresses operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AssociateAddressAsync(Amazon.EC2.Model.AssociateAddressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssociateAddress operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssociateAddress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AssociateDhcpOptionsAsync(Amazon.EC2.Model.AssociateDhcpOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssociateDhcpOptions operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssociateDhcpOptions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AssociateRouteTableAsync(Amazon.EC2.Model.AssociateRouteTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssociateRouteTable operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssociateRouteTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AttachInternetGatewayAsync(Amazon.EC2.Model.AttachInternetGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachInternetGateway operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachInternetGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AttachNetworkInterfaceAsync(Amazon.EC2.Model.AttachNetworkInterfaceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachNetworkInterface operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachNetworkInterface operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AttachVolumeAsync(Amazon.EC2.Model.AttachVolumeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachVolume operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachVolume operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AttachVpnGatewayAsync(Amazon.EC2.Model.AttachVpnGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachVpnGateway operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachVpnGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AuthorizeSecurityGroupEgressAsync(Amazon.EC2.Model.AuthorizeSecurityGroupEgressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AuthorizeSecurityGroupEgress operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AuthorizeSecurityGroupEgress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.AuthorizeSecurityGroupIngressAsync(Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AuthorizeSecurityGroupIngress operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AuthorizeSecurityGroupIngress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.BundleInstanceAsync(Amazon.EC2.Model.BundleInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the BundleInstance operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the BundleInstance operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CancelBundleTaskAsync(Amazon.EC2.Model.CancelBundleTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelBundleTask operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelBundleTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CancelConversionTaskAsync(Amazon.EC2.Model.CancelConversionTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelConversionTask operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelConversionTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CancelExportTaskAsync(Amazon.EC2.Model.CancelExportTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelExportTask operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelExportTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CancelReservedInstancesListingAsync(Amazon.EC2.Model.CancelReservedInstancesListingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelReservedInstancesListing operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelReservedInstancesListing operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CancelSpotInstanceRequestsAsync(Amazon.EC2.Model.CancelSpotInstanceRequestsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelSpotInstanceRequests operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelSpotInstanceRequests operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ConfirmProductInstanceAsync(Amazon.EC2.Model.ConfirmProductInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ConfirmProductInstance operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ConfirmProductInstance operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CopyImageAsync(Amazon.EC2.Model.CopyImageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CopyImage operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CopyImage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CopySnapshotAsync(Amazon.EC2.Model.CopySnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CopySnapshot operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CopySnapshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateCustomerGatewayAsync(Amazon.EC2.Model.CreateCustomerGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateCustomerGateway operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateCustomerGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateDhcpOptionsAsync(Amazon.EC2.Model.CreateDhcpOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateDhcpOptions operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateDhcpOptions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateImageAsync(Amazon.EC2.Model.CreateImageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateImage operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateImage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateInstanceExportTaskAsync(Amazon.EC2.Model.CreateInstanceExportTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateInstanceExportTask operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateInstanceExportTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateInternetGatewayAsync(Amazon.EC2.Model.CreateInternetGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateInternetGateway operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateInternetGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateKeyPairAsync(Amazon.EC2.Model.CreateKeyPairRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateKeyPair operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateKeyPair operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateNetworkAclAsync(Amazon.EC2.Model.CreateNetworkAclRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateNetworkAcl operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateNetworkAcl operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateNetworkAclEntryAsync(Amazon.EC2.Model.CreateNetworkAclEntryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateNetworkAclEntry operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateNetworkAclEntry operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateNetworkInterfaceAsync(Amazon.EC2.Model.CreateNetworkInterfaceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateNetworkInterface operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateNetworkInterface operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreatePlacementGroupAsync(Amazon.EC2.Model.CreatePlacementGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreatePlacementGroup operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreatePlacementGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateReservedInstancesListingAsync(Amazon.EC2.Model.CreateReservedInstancesListingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateReservedInstancesListing operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateReservedInstancesListing operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateRouteAsync(Amazon.EC2.Model.CreateRouteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateRoute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateRoute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateRouteTableAsync(Amazon.EC2.Model.CreateRouteTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateRouteTable operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateRouteTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateSecurityGroupAsync(Amazon.EC2.Model.CreateSecurityGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSecurityGroup operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSecurityGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateSnapshotAsync(Amazon.EC2.Model.CreateSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSnapshot operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSnapshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateSpotDatafeedSubscriptionAsync(Amazon.EC2.Model.CreateSpotDatafeedSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSpotDatafeedSubscription operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSpotDatafeedSubscription operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateSubnetAsync(Amazon.EC2.Model.CreateSubnetRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSubnet operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSubnet operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateTagsAsync(Amazon.EC2.Model.CreateTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateTags operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateVolumeAsync(Amazon.EC2.Model.CreateVolumeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVolume operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVolume operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateVpcAsync(Amazon.EC2.Model.CreateVpcRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpc operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpc operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateVpcPeeringConnectionAsync(Amazon.EC2.Model.CreateVpcPeeringConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpcPeeringConnection operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpcPeeringConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateVpnConnectionAsync(Amazon.EC2.Model.CreateVpnConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpnConnection operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpnConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateVpnConnectionRouteAsync(Amazon.EC2.Model.CreateVpnConnectionRouteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpnConnectionRoute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpnConnectionRoute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.CreateVpnGatewayAsync(Amazon.EC2.Model.CreateVpnGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpnGateway operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpnGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteCustomerGatewayAsync(Amazon.EC2.Model.DeleteCustomerGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteCustomerGateway operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteCustomerGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteDhcpOptionsAsync(Amazon.EC2.Model.DeleteDhcpOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteDhcpOptions operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteDhcpOptions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteInternetGatewayAsync(Amazon.EC2.Model.DeleteInternetGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteInternetGateway operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteInternetGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteKeyPairAsync(Amazon.EC2.Model.DeleteKeyPairRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteKeyPair operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteKeyPair operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteNetworkAclAsync(Amazon.EC2.Model.DeleteNetworkAclRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteNetworkAcl operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteNetworkAcl operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteNetworkAclEntryAsync(Amazon.EC2.Model.DeleteNetworkAclEntryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteNetworkAclEntry operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteNetworkAclEntry operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteNetworkInterfaceAsync(Amazon.EC2.Model.DeleteNetworkInterfaceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteNetworkInterface operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteNetworkInterface operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeletePlacementGroupAsync(Amazon.EC2.Model.DeletePlacementGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeletePlacementGroup operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeletePlacementGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteRouteAsync(Amazon.EC2.Model.DeleteRouteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteRoute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRoute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteRouteTableAsync(Amazon.EC2.Model.DeleteRouteTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteRouteTable operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRouteTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteSecurityGroupAsync(Amazon.EC2.Model.DeleteSecurityGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSecurityGroup operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSecurityGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteSnapshotAsync(Amazon.EC2.Model.DeleteSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSnapshot operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSnapshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteSpotDatafeedSubscriptionAsync(Amazon.EC2.Model.DeleteSpotDatafeedSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSpotDatafeedSubscription operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSpotDatafeedSubscription operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteSubnetAsync(Amazon.EC2.Model.DeleteSubnetRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSubnet operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSubnet operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteTagsAsync(Amazon.EC2.Model.DeleteTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteTags operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteVolumeAsync(Amazon.EC2.Model.DeleteVolumeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVolume operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVolume operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteVpcAsync(Amazon.EC2.Model.DeleteVpcRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpc operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpc operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteVpcPeeringConnectionAsync(Amazon.EC2.Model.DeleteVpcPeeringConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpcPeeringConnection operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpcPeeringConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteVpnConnectionAsync(Amazon.EC2.Model.DeleteVpnConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpnConnection operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpnConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteVpnConnectionRouteAsync(Amazon.EC2.Model.DeleteVpnConnectionRouteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpnConnectionRoute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpnConnectionRoute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeleteVpnGatewayAsync(Amazon.EC2.Model.DeleteVpnGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpnGateway operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpnGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DeregisterImageAsync(Amazon.EC2.Model.DeregisterImageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeregisterImage operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeregisterImage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeAccountAttributesAsync(Amazon.EC2.Model.DescribeAccountAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAccountAttributes operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAccountAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeAddressesAsync(Amazon.EC2.Model.DescribeAddressesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAddresses operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAddresses operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeAvailabilityZonesAsync(Amazon.EC2.Model.DescribeAvailabilityZonesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAvailabilityZones operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAvailabilityZones operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeBundleTasksAsync(Amazon.EC2.Model.DescribeBundleTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeBundleTasks operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeBundleTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeConversionTasksAsync(Amazon.EC2.Model.DescribeConversionTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeConversionTasks operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeConversionTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeCustomerGatewaysAsync(Amazon.EC2.Model.DescribeCustomerGatewaysRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeCustomerGateways operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeCustomerGateways operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeDhcpOptionsAsync(Amazon.EC2.Model.DescribeDhcpOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeDhcpOptions operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeDhcpOptions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeExportTasksAsync(Amazon.EC2.Model.DescribeExportTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeExportTasks operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeExportTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeImageAttributeAsync(Amazon.EC2.Model.DescribeImageAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeImageAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeImageAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeImagesAsync(Amazon.EC2.Model.DescribeImagesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeImages operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeImages operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeInstanceAttributeAsync(Amazon.EC2.Model.DescribeInstanceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeInstanceAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeInstanceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeInstancesAsync(Amazon.EC2.Model.DescribeInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeInstanceStatusAsync(Amazon.EC2.Model.DescribeInstanceStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeInstanceStatus operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeInstanceStatus operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeInternetGatewaysAsync(Amazon.EC2.Model.DescribeInternetGatewaysRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeInternetGateways operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeInternetGateways operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeKeyPairsAsync(Amazon.EC2.Model.DescribeKeyPairsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeKeyPairs operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeKeyPairs operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeNetworkAclsAsync(Amazon.EC2.Model.DescribeNetworkAclsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeNetworkAcls operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeNetworkAcls operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeNetworkInterfaceAttributeAsync(Amazon.EC2.Model.DescribeNetworkInterfaceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeNetworkInterfaceAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeNetworkInterfaceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeNetworkInterfacesAsync(Amazon.EC2.Model.DescribeNetworkInterfacesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeNetworkInterfaces operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeNetworkInterfaces operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribePlacementGroupsAsync(Amazon.EC2.Model.DescribePlacementGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribePlacementGroups operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribePlacementGroups operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeRegionsAsync(Amazon.EC2.Model.DescribeRegionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeRegions operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeRegions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeReservedInstancesAsync(Amazon.EC2.Model.DescribeReservedInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeReservedInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeReservedInstancesListingsAsync(Amazon.EC2.Model.DescribeReservedInstancesListingsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeReservedInstancesListings operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstancesListings operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeReservedInstancesModificationsAsync(Amazon.EC2.Model.DescribeReservedInstancesModificationsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeReservedInstancesModifications operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstancesModifications operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeReservedInstancesOfferingsAsync(Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeReservedInstancesOfferings operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstancesOfferings operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeRouteTablesAsync(Amazon.EC2.Model.DescribeRouteTablesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeRouteTables operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeRouteTables operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSecurityGroupsAsync(Amazon.EC2.Model.DescribeSecurityGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSecurityGroups operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSecurityGroups operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSnapshotAttributeAsync(Amazon.EC2.Model.DescribeSnapshotAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSnapshotAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSnapshotAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSnapshotsAsync(Amazon.EC2.Model.DescribeSnapshotsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSnapshots operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSnapshots operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotDatafeedSubscriptionAsync(Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSpotDatafeedSubscription operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSpotDatafeedSubscription operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotInstanceRequestsAsync(Amazon.EC2.Model.DescribeSpotInstanceRequestsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSpotInstanceRequests operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSpotInstanceRequests operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSpotPriceHistoryAsync(Amazon.EC2.Model.DescribeSpotPriceHistoryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSpotPriceHistory operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSpotPriceHistory operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeSubnetsAsync(Amazon.EC2.Model.DescribeSubnetsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSubnets operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSubnets operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeTagsAsync(Amazon.EC2.Model.DescribeTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeTags operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVolumeAttributeAsync(Amazon.EC2.Model.DescribeVolumeAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVolumeAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVolumeAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVolumesAsync(Amazon.EC2.Model.DescribeVolumesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVolumes operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVolumes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVolumeStatusAsync(Amazon.EC2.Model.DescribeVolumeStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVolumeStatus operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVolumeStatus operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcAttributeAsync(Amazon.EC2.Model.DescribeVpcAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpcAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpcAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcPeeringConnectionsAsync(Amazon.EC2.Model.DescribeVpcPeeringConnectionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpcPeeringConnections operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpcPeeringConnections operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpcsAsync(Amazon.EC2.Model.DescribeVpcsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpcs operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpcs operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpnConnectionsAsync(Amazon.EC2.Model.DescribeVpnConnectionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpnConnections operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpnConnections operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DescribeVpnGatewaysAsync(Amazon.EC2.Model.DescribeVpnGatewaysRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpnGateways operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpnGateways operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DetachInternetGatewayAsync(Amazon.EC2.Model.DetachInternetGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachInternetGateway operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachInternetGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DetachNetworkInterfaceAsync(Amazon.EC2.Model.DetachNetworkInterfaceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachNetworkInterface operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachNetworkInterface operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DetachVolumeAsync(Amazon.EC2.Model.DetachVolumeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachVolume operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachVolume operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DetachVpnGatewayAsync(Amazon.EC2.Model.DetachVpnGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachVpnGateway operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachVpnGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DisableVgwRoutePropagationAsync(Amazon.EC2.Model.DisableVgwRoutePropagationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableVgwRoutePropagation operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableVgwRoutePropagation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DisassociateAddressAsync(Amazon.EC2.Model.DisassociateAddressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisassociateAddress operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisassociateAddress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.DisassociateRouteTableAsync(Amazon.EC2.Model.DisassociateRouteTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisassociateRouteTable operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisassociateRouteTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.EnableVgwRoutePropagationAsync(Amazon.EC2.Model.EnableVgwRoutePropagationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableVgwRoutePropagation operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableVgwRoutePropagation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.EnableVolumeIOAsync(Amazon.EC2.Model.EnableVolumeIORequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableVolumeIO operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableVolumeIO operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.GetConsoleOutputAsync(Amazon.EC2.Model.GetConsoleOutputRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetConsoleOutput operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetConsoleOutput operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.GetPasswordDataAsync(Amazon.EC2.Model.GetPasswordDataRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetPasswordData operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetPasswordData operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ImportInstanceAsync(Amazon.EC2.Model.ImportInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ImportInstance operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ImportInstance operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ImportKeyPairAsync(Amazon.EC2.Model.ImportKeyPairRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ImportKeyPair operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ImportKeyPair operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ImportVolumeAsync(Amazon.EC2.Model.ImportVolumeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ImportVolume operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ImportVolume operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyImageAttributeAsync(Amazon.EC2.Model.ModifyImageAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyImageAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyImageAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyInstanceAttributeAsync(Amazon.EC2.Model.ModifyInstanceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyInstanceAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyInstanceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyNetworkInterfaceAttributeAsync(Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyNetworkInterfaceAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyNetworkInterfaceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyReservedInstancesAsync(Amazon.EC2.Model.ModifyReservedInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyReservedInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyReservedInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifySnapshotAttributeAsync(Amazon.EC2.Model.ModifySnapshotAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifySnapshotAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifySnapshotAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifySubnetAttributeAsync(Amazon.EC2.Model.ModifySubnetAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifySubnetAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifySubnetAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyVolumeAttributeAsync(Amazon.EC2.Model.ModifyVolumeAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyVolumeAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyVolumeAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ModifyVpcAttributeAsync(Amazon.EC2.Model.ModifyVpcAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyVpcAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyVpcAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.MonitorInstancesAsync(Amazon.EC2.Model.MonitorInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the MonitorInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the MonitorInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.PurchaseReservedInstancesOfferingAsync(Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PurchaseReservedInstancesOffering operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PurchaseReservedInstancesOffering operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RebootInstancesAsync(Amazon.EC2.Model.RebootInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RebootInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RebootInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RegisterImageAsync(Amazon.EC2.Model.RegisterImageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RegisterImage operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RegisterImage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RejectVpcPeeringConnectionAsync(Amazon.EC2.Model.RejectVpcPeeringConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RejectVpcPeeringConnection operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RejectVpcPeeringConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ReleaseAddressAsync(Amazon.EC2.Model.ReleaseAddressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReleaseAddress operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReleaseAddress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ReplaceNetworkAclAssociationAsync(Amazon.EC2.Model.ReplaceNetworkAclAssociationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReplaceNetworkAclAssociation operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReplaceNetworkAclAssociation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ReplaceNetworkAclEntryAsync(Amazon.EC2.Model.ReplaceNetworkAclEntryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReplaceNetworkAclEntry operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReplaceNetworkAclEntry operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ReplaceRouteAsync(Amazon.EC2.Model.ReplaceRouteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReplaceRoute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReplaceRoute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ReplaceRouteTableAssociationAsync(Amazon.EC2.Model.ReplaceRouteTableAssociationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReplaceRouteTableAssociation operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReplaceRouteTableAssociation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ReportInstanceStatusAsync(Amazon.EC2.Model.ReportInstanceStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReportInstanceStatus operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReportInstanceStatus operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RequestSpotInstancesAsync(Amazon.EC2.Model.RequestSpotInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RequestSpotInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RequestSpotInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ResetImageAttributeAsync(Amazon.EC2.Model.ResetImageAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResetImageAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResetImageAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ResetInstanceAttributeAsync(Amazon.EC2.Model.ResetInstanceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResetInstanceAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResetInstanceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ResetNetworkInterfaceAttributeAsync(Amazon.EC2.Model.ResetNetworkInterfaceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResetNetworkInterfaceAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResetNetworkInterfaceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.ResetSnapshotAttributeAsync(Amazon.EC2.Model.ResetSnapshotAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResetSnapshotAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResetSnapshotAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RevokeSecurityGroupEgressAsync(Amazon.EC2.Model.RevokeSecurityGroupEgressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RevokeSecurityGroupEgress operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RevokeSecurityGroupEgress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RevokeSecurityGroupIngressAsync(Amazon.EC2.Model.RevokeSecurityGroupIngressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RevokeSecurityGroupIngress operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RevokeSecurityGroupIngress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.RunInstancesAsync(Amazon.EC2.Model.RunInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RunInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RunInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.StartInstancesAsync(Amazon.EC2.Model.StartInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.StopInstancesAsync(Amazon.EC2.Model.StopInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StopInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StopInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.TerminateInstancesAsync(Amazon.EC2.Model.TerminateInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the TerminateInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the TerminateInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.UnassignPrivateIpAddressesAsync(Amazon.EC2.Model.UnassignPrivateIpAddressesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UnassignPrivateIpAddresses operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UnassignPrivateIpAddresses operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.IAmazonEC2.UnmonitorInstancesAsync(Amazon.EC2.Model.UnmonitorInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UnmonitorInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UnmonitorInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonEC2Client with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonEC2Client with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor(Amazon.Runtime.AWSCredentials,Amazon.EC2.AmazonEC2Config)">
            <summary>
            Constructs AmazonEC2Client with AWS Credentials and an
            AmazonEC2Client Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonEC2Client Configuration Object</param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonEC2Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonEC2Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor(System.String,System.String,Amazon.EC2.AmazonEC2Config)">
            <summary>
            Constructs AmazonEC2Client with AWS Access Key ID, AWS Secret Key and an
            AmazonEC2Client Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonEC2Client Configuration Object</param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonEC2Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonEC2Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.#ctor(System.String,System.String,System.String,Amazon.EC2.AmazonEC2Config)">
            <summary>
            Constructs AmazonEC2Client with AWS Access Key ID, AWS Secret Key and an
            AmazonEC2Client Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonEC2Client Configuration Object</param>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AcceptVpcPeeringConnectionAsync(Amazon.EC2.Model.AcceptVpcPeeringConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AcceptVpcPeeringConnection operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AcceptVpcPeeringConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AllocateAddressAsync(Amazon.EC2.Model.AllocateAddressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AllocateAddress operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AllocateAddress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AssignPrivateIpAddressesAsync(Amazon.EC2.Model.AssignPrivateIpAddressesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssignPrivateIpAddresses operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssignPrivateIpAddresses operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AssociateAddressAsync(Amazon.EC2.Model.AssociateAddressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssociateAddress operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssociateAddress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AssociateDhcpOptionsAsync(Amazon.EC2.Model.AssociateDhcpOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssociateDhcpOptions operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssociateDhcpOptions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AssociateRouteTableAsync(Amazon.EC2.Model.AssociateRouteTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssociateRouteTable operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssociateRouteTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AttachInternetGatewayAsync(Amazon.EC2.Model.AttachInternetGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachInternetGateway operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachInternetGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AttachNetworkInterfaceAsync(Amazon.EC2.Model.AttachNetworkInterfaceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachNetworkInterface operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachNetworkInterface operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AttachVolumeAsync(Amazon.EC2.Model.AttachVolumeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachVolume operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachVolume operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AttachVpnGatewayAsync(Amazon.EC2.Model.AttachVpnGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachVpnGateway operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachVpnGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AuthorizeSecurityGroupEgressAsync(Amazon.EC2.Model.AuthorizeSecurityGroupEgressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AuthorizeSecurityGroupEgress operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AuthorizeSecurityGroupEgress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.AuthorizeSecurityGroupIngressAsync(Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AuthorizeSecurityGroupIngress operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AuthorizeSecurityGroupIngress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.BundleInstanceAsync(Amazon.EC2.Model.BundleInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the BundleInstance operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the BundleInstance operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CancelBundleTaskAsync(Amazon.EC2.Model.CancelBundleTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelBundleTask operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelBundleTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CancelConversionTaskAsync(Amazon.EC2.Model.CancelConversionTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelConversionTask operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelConversionTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CancelExportTaskAsync(Amazon.EC2.Model.CancelExportTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelExportTask operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelExportTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CancelReservedInstancesListingAsync(Amazon.EC2.Model.CancelReservedInstancesListingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelReservedInstancesListing operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelReservedInstancesListing operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CancelSpotInstanceRequestsAsync(Amazon.EC2.Model.CancelSpotInstanceRequestsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelSpotInstanceRequests operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelSpotInstanceRequests operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ConfirmProductInstanceAsync(Amazon.EC2.Model.ConfirmProductInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ConfirmProductInstance operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ConfirmProductInstance operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CopyImageAsync(Amazon.EC2.Model.CopyImageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CopyImage operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CopyImage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CopySnapshotAsync(Amazon.EC2.Model.CopySnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CopySnapshot operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CopySnapshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateCustomerGatewayAsync(Amazon.EC2.Model.CreateCustomerGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateCustomerGateway operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateCustomerGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateDhcpOptionsAsync(Amazon.EC2.Model.CreateDhcpOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateDhcpOptions operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateDhcpOptions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateImageAsync(Amazon.EC2.Model.CreateImageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateImage operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateImage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateInstanceExportTaskAsync(Amazon.EC2.Model.CreateInstanceExportTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateInstanceExportTask operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateInstanceExportTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateInternetGatewayAsync(Amazon.EC2.Model.CreateInternetGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateInternetGateway operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateInternetGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateKeyPairAsync(Amazon.EC2.Model.CreateKeyPairRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateKeyPair operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateKeyPair operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateNetworkAclAsync(Amazon.EC2.Model.CreateNetworkAclRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateNetworkAcl operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateNetworkAcl operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateNetworkAclEntryAsync(Amazon.EC2.Model.CreateNetworkAclEntryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateNetworkAclEntry operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateNetworkAclEntry operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateNetworkInterfaceAsync(Amazon.EC2.Model.CreateNetworkInterfaceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateNetworkInterface operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateNetworkInterface operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreatePlacementGroupAsync(Amazon.EC2.Model.CreatePlacementGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreatePlacementGroup operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreatePlacementGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateReservedInstancesListingAsync(Amazon.EC2.Model.CreateReservedInstancesListingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateReservedInstancesListing operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateReservedInstancesListing operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateRouteAsync(Amazon.EC2.Model.CreateRouteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateRoute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateRoute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateRouteTableAsync(Amazon.EC2.Model.CreateRouteTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateRouteTable operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateRouteTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateSecurityGroupAsync(Amazon.EC2.Model.CreateSecurityGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSecurityGroup operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSecurityGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateSnapshotAsync(Amazon.EC2.Model.CreateSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSnapshot operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSnapshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateSpotDatafeedSubscriptionAsync(Amazon.EC2.Model.CreateSpotDatafeedSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSpotDatafeedSubscription operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSpotDatafeedSubscription operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateSubnetAsync(Amazon.EC2.Model.CreateSubnetRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSubnet operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSubnet operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateTagsAsync(Amazon.EC2.Model.CreateTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateTags operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateVolumeAsync(Amazon.EC2.Model.CreateVolumeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVolume operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVolume operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateVpcAsync(Amazon.EC2.Model.CreateVpcRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpc operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpc operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateVpcPeeringConnectionAsync(Amazon.EC2.Model.CreateVpcPeeringConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpcPeeringConnection operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpcPeeringConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateVpnConnectionAsync(Amazon.EC2.Model.CreateVpnConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpnConnection operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpnConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateVpnConnectionRouteAsync(Amazon.EC2.Model.CreateVpnConnectionRouteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpnConnectionRoute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpnConnectionRoute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.CreateVpnGatewayAsync(Amazon.EC2.Model.CreateVpnGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateVpnGateway operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateVpnGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteCustomerGatewayAsync(Amazon.EC2.Model.DeleteCustomerGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteCustomerGateway operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteCustomerGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteDhcpOptionsAsync(Amazon.EC2.Model.DeleteDhcpOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteDhcpOptions operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteDhcpOptions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteInternetGatewayAsync(Amazon.EC2.Model.DeleteInternetGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteInternetGateway operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteInternetGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteKeyPairAsync(Amazon.EC2.Model.DeleteKeyPairRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteKeyPair operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteKeyPair operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteNetworkAclAsync(Amazon.EC2.Model.DeleteNetworkAclRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteNetworkAcl operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteNetworkAcl operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteNetworkAclEntryAsync(Amazon.EC2.Model.DeleteNetworkAclEntryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteNetworkAclEntry operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteNetworkAclEntry operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteNetworkInterfaceAsync(Amazon.EC2.Model.DeleteNetworkInterfaceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteNetworkInterface operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteNetworkInterface operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeletePlacementGroupAsync(Amazon.EC2.Model.DeletePlacementGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeletePlacementGroup operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeletePlacementGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteRouteAsync(Amazon.EC2.Model.DeleteRouteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteRoute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRoute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteRouteTableAsync(Amazon.EC2.Model.DeleteRouteTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteRouteTable operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRouteTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteSecurityGroupAsync(Amazon.EC2.Model.DeleteSecurityGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSecurityGroup operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSecurityGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteSnapshotAsync(Amazon.EC2.Model.DeleteSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSnapshot operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSnapshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteSpotDatafeedSubscriptionAsync(Amazon.EC2.Model.DeleteSpotDatafeedSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSpotDatafeedSubscription operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSpotDatafeedSubscription operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteSubnetAsync(Amazon.EC2.Model.DeleteSubnetRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSubnet operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSubnet operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteTagsAsync(Amazon.EC2.Model.DeleteTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteTags operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteVolumeAsync(Amazon.EC2.Model.DeleteVolumeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVolume operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVolume operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteVpcAsync(Amazon.EC2.Model.DeleteVpcRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpc operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpc operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteVpcPeeringConnectionAsync(Amazon.EC2.Model.DeleteVpcPeeringConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpcPeeringConnection operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpcPeeringConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteVpnConnectionAsync(Amazon.EC2.Model.DeleteVpnConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpnConnection operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpnConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteVpnConnectionRouteAsync(Amazon.EC2.Model.DeleteVpnConnectionRouteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpnConnectionRoute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpnConnectionRoute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeleteVpnGatewayAsync(Amazon.EC2.Model.DeleteVpnGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVpnGateway operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVpnGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DeregisterImageAsync(Amazon.EC2.Model.DeregisterImageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeregisterImage operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeregisterImage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeAccountAttributesAsync(Amazon.EC2.Model.DescribeAccountAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAccountAttributes operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAccountAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeAddressesAsync(Amazon.EC2.Model.DescribeAddressesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAddresses operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAddresses operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeAvailabilityZonesAsync(Amazon.EC2.Model.DescribeAvailabilityZonesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeAvailabilityZones operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeAvailabilityZones operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeBundleTasksAsync(Amazon.EC2.Model.DescribeBundleTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeBundleTasks operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeBundleTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeConversionTasksAsync(Amazon.EC2.Model.DescribeConversionTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeConversionTasks operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeConversionTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeCustomerGatewaysAsync(Amazon.EC2.Model.DescribeCustomerGatewaysRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeCustomerGateways operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeCustomerGateways operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeDhcpOptionsAsync(Amazon.EC2.Model.DescribeDhcpOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeDhcpOptions operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeDhcpOptions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeExportTasksAsync(Amazon.EC2.Model.DescribeExportTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeExportTasks operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeExportTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeImageAttributeAsync(Amazon.EC2.Model.DescribeImageAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeImageAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeImageAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeImagesAsync(Amazon.EC2.Model.DescribeImagesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeImages operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeImages operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeInstanceAttributeAsync(Amazon.EC2.Model.DescribeInstanceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeInstanceAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeInstanceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeInstancesAsync(Amazon.EC2.Model.DescribeInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeInstanceStatusAsync(Amazon.EC2.Model.DescribeInstanceStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeInstanceStatus operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeInstanceStatus operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeInternetGatewaysAsync(Amazon.EC2.Model.DescribeInternetGatewaysRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeInternetGateways operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeInternetGateways operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeKeyPairsAsync(Amazon.EC2.Model.DescribeKeyPairsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeKeyPairs operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeKeyPairs operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeNetworkAclsAsync(Amazon.EC2.Model.DescribeNetworkAclsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeNetworkAcls operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeNetworkAcls operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeNetworkInterfaceAttributeAsync(Amazon.EC2.Model.DescribeNetworkInterfaceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeNetworkInterfaceAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeNetworkInterfaceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeNetworkInterfacesAsync(Amazon.EC2.Model.DescribeNetworkInterfacesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeNetworkInterfaces operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeNetworkInterfaces operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribePlacementGroupsAsync(Amazon.EC2.Model.DescribePlacementGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribePlacementGroups operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribePlacementGroups operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeRegionsAsync(Amazon.EC2.Model.DescribeRegionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeRegions operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeRegions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeReservedInstancesAsync(Amazon.EC2.Model.DescribeReservedInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeReservedInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeReservedInstancesListingsAsync(Amazon.EC2.Model.DescribeReservedInstancesListingsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeReservedInstancesListings operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstancesListings operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeReservedInstancesModificationsAsync(Amazon.EC2.Model.DescribeReservedInstancesModificationsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeReservedInstancesModifications operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstancesModifications operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeReservedInstancesOfferingsAsync(Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeReservedInstancesOfferings operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeReservedInstancesOfferings operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeRouteTablesAsync(Amazon.EC2.Model.DescribeRouteTablesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeRouteTables operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeRouteTables operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSecurityGroupsAsync(Amazon.EC2.Model.DescribeSecurityGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSecurityGroups operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSecurityGroups operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSnapshotAttributeAsync(Amazon.EC2.Model.DescribeSnapshotAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSnapshotAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSnapshotAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSnapshotsAsync(Amazon.EC2.Model.DescribeSnapshotsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSnapshots operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSnapshots operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotDatafeedSubscriptionAsync(Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSpotDatafeedSubscription operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSpotDatafeedSubscription operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotInstanceRequestsAsync(Amazon.EC2.Model.DescribeSpotInstanceRequestsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSpotInstanceRequests operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSpotInstanceRequests operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSpotPriceHistoryAsync(Amazon.EC2.Model.DescribeSpotPriceHistoryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSpotPriceHistory operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSpotPriceHistory operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeSubnetsAsync(Amazon.EC2.Model.DescribeSubnetsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSubnets operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSubnets operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeTagsAsync(Amazon.EC2.Model.DescribeTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeTags operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVolumeAttributeAsync(Amazon.EC2.Model.DescribeVolumeAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVolumeAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVolumeAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVolumesAsync(Amazon.EC2.Model.DescribeVolumesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVolumes operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVolumes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVolumeStatusAsync(Amazon.EC2.Model.DescribeVolumeStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVolumeStatus operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVolumeStatus operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcAttributeAsync(Amazon.EC2.Model.DescribeVpcAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpcAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpcAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcPeeringConnectionsAsync(Amazon.EC2.Model.DescribeVpcPeeringConnectionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpcPeeringConnections operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpcPeeringConnections operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpcsAsync(Amazon.EC2.Model.DescribeVpcsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpcs operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpcs operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpnConnectionsAsync(Amazon.EC2.Model.DescribeVpnConnectionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpnConnections operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpnConnections operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DescribeVpnGatewaysAsync(Amazon.EC2.Model.DescribeVpnGatewaysRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeVpnGateways operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeVpnGateways operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DetachInternetGatewayAsync(Amazon.EC2.Model.DetachInternetGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachInternetGateway operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachInternetGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DetachNetworkInterfaceAsync(Amazon.EC2.Model.DetachNetworkInterfaceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachNetworkInterface operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachNetworkInterface operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DetachVolumeAsync(Amazon.EC2.Model.DetachVolumeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachVolume operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachVolume operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DetachVpnGatewayAsync(Amazon.EC2.Model.DetachVpnGatewayRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachVpnGateway operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachVpnGateway operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DisableVgwRoutePropagationAsync(Amazon.EC2.Model.DisableVgwRoutePropagationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableVgwRoutePropagation operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableVgwRoutePropagation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DisassociateAddressAsync(Amazon.EC2.Model.DisassociateAddressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisassociateAddress operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisassociateAddress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DisassociateRouteTableAsync(Amazon.EC2.Model.DisassociateRouteTableRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisassociateRouteTable operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisassociateRouteTable operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.EnableVgwRoutePropagationAsync(Amazon.EC2.Model.EnableVgwRoutePropagationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableVgwRoutePropagation operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableVgwRoutePropagation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.EnableVolumeIOAsync(Amazon.EC2.Model.EnableVolumeIORequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableVolumeIO operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableVolumeIO operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.GetConsoleOutputAsync(Amazon.EC2.Model.GetConsoleOutputRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetConsoleOutput operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetConsoleOutput operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.GetPasswordDataAsync(Amazon.EC2.Model.GetPasswordDataRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetPasswordData operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetPasswordData operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ImportInstanceAsync(Amazon.EC2.Model.ImportInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ImportInstance operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ImportInstance operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ImportKeyPairAsync(Amazon.EC2.Model.ImportKeyPairRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ImportKeyPair operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ImportKeyPair operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ImportVolumeAsync(Amazon.EC2.Model.ImportVolumeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ImportVolume operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ImportVolume operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyImageAttributeAsync(Amazon.EC2.Model.ModifyImageAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyImageAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyImageAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyInstanceAttributeAsync(Amazon.EC2.Model.ModifyInstanceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyInstanceAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyInstanceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyNetworkInterfaceAttributeAsync(Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyNetworkInterfaceAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyNetworkInterfaceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyReservedInstancesAsync(Amazon.EC2.Model.ModifyReservedInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyReservedInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyReservedInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifySnapshotAttributeAsync(Amazon.EC2.Model.ModifySnapshotAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifySnapshotAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifySnapshotAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifySubnetAttributeAsync(Amazon.EC2.Model.ModifySubnetAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifySubnetAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifySubnetAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyVolumeAttributeAsync(Amazon.EC2.Model.ModifyVolumeAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyVolumeAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyVolumeAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ModifyVpcAttributeAsync(Amazon.EC2.Model.ModifyVpcAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyVpcAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyVpcAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.MonitorInstancesAsync(Amazon.EC2.Model.MonitorInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the MonitorInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the MonitorInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.PurchaseReservedInstancesOfferingAsync(Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PurchaseReservedInstancesOffering operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PurchaseReservedInstancesOffering operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RebootInstancesAsync(Amazon.EC2.Model.RebootInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RebootInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RebootInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RegisterImageAsync(Amazon.EC2.Model.RegisterImageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RegisterImage operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RegisterImage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RejectVpcPeeringConnectionAsync(Amazon.EC2.Model.RejectVpcPeeringConnectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RejectVpcPeeringConnection operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RejectVpcPeeringConnection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ReleaseAddressAsync(Amazon.EC2.Model.ReleaseAddressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReleaseAddress operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReleaseAddress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ReplaceNetworkAclAssociationAsync(Amazon.EC2.Model.ReplaceNetworkAclAssociationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReplaceNetworkAclAssociation operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReplaceNetworkAclAssociation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ReplaceNetworkAclEntryAsync(Amazon.EC2.Model.ReplaceNetworkAclEntryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReplaceNetworkAclEntry operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReplaceNetworkAclEntry operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ReplaceRouteAsync(Amazon.EC2.Model.ReplaceRouteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReplaceRoute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReplaceRoute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ReplaceRouteTableAssociationAsync(Amazon.EC2.Model.ReplaceRouteTableAssociationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReplaceRouteTableAssociation operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReplaceRouteTableAssociation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ReportInstanceStatusAsync(Amazon.EC2.Model.ReportInstanceStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReportInstanceStatus operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReportInstanceStatus operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RequestSpotInstancesAsync(Amazon.EC2.Model.RequestSpotInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RequestSpotInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RequestSpotInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ResetImageAttributeAsync(Amazon.EC2.Model.ResetImageAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResetImageAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResetImageAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ResetInstanceAttributeAsync(Amazon.EC2.Model.ResetInstanceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResetInstanceAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResetInstanceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ResetNetworkInterfaceAttributeAsync(Amazon.EC2.Model.ResetNetworkInterfaceAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResetNetworkInterfaceAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResetNetworkInterfaceAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.ResetSnapshotAttributeAsync(Amazon.EC2.Model.ResetSnapshotAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ResetSnapshotAttribute operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ResetSnapshotAttribute operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RevokeSecurityGroupEgressAsync(Amazon.EC2.Model.RevokeSecurityGroupEgressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RevokeSecurityGroupEgress operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RevokeSecurityGroupEgress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RevokeSecurityGroupIngressAsync(Amazon.EC2.Model.RevokeSecurityGroupIngressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RevokeSecurityGroupIngress operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RevokeSecurityGroupIngress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.RunInstancesAsync(Amazon.EC2.Model.RunInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RunInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RunInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.StartInstancesAsync(Amazon.EC2.Model.StartInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.StopInstancesAsync(Amazon.EC2.Model.StopInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StopInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StopInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.TerminateInstancesAsync(Amazon.EC2.Model.TerminateInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the TerminateInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the TerminateInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.UnassignPrivateIpAddressesAsync(Amazon.EC2.Model.UnassignPrivateIpAddressesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UnassignPrivateIpAddresses operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UnassignPrivateIpAddresses operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.UnmonitorInstancesAsync(Amazon.EC2.Model.UnmonitorInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UnmonitorInstances operation.
            <seealso cref="T:Amazon.EC2.IAmazonEC2"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UnmonitorInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Client.DryRun(Amazon.EC2.AmazonEC2Request)">
            <summary>
            Checks whether you have the required permissions for the action, without actually making the request.
            </summary>
            <param name="request">Request to do a dry run of.</param>
            <returns>Result of the dry run.</returns>
        </member>
        <member name="T:Amazon.EC2.AmazonEC2Config">
            <summary>
            Configuration for accessing Amazon EC2 service
            </summary>
        </member>
        <member name="M:Amazon.EC2.AmazonEC2Config.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.EC2.AmazonEC2Config.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.EC2.AmazonEC2Config.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AcceptVpcPeeringConnectionRequest">
            <summary>
            Container for the parameters to the AcceptVpcPeeringConnection operation.
            Accept a VPC peering connection request. To accept a request, the VPC peering connection
            must be in the <code>pending-acceptance</code> state, and you must be the owner of
            the peer VPC. Use the <code>DescribeVpcPeeringConnections</code> request to view your
            outstanding VPC peering connection requests.
            </summary>
        </member>
        <member name="T:Amazon.EC2.AmazonEC2Request">
            <summary>
            Base class for EC2 operation requests.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AcceptVpcPeeringConnectionRequest.VpcPeeringConnectionId">
            <summary>
            Gets and sets the property VpcPeeringConnectionId. 
            <para>
            The ID of the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AcceptVpcPeeringConnectionResponse">
            <summary>
            Configuration for accessing Amazon AcceptVpcPeeringConnection service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AcceptVpcPeeringConnectionResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AcceptVpcPeeringConnectionResult.VpcPeeringConnection">
            <summary>
            Gets and sets the property VpcPeeringConnection. 
            <para>
            Information about the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AcceptVpcPeeringConnectionResponse.AcceptVpcPeeringConnectionResult">
            <summary>
            Gets and sets the AcceptVpcPeeringConnectionResult property.
            Represents the output of a AcceptVpcPeeringConnection operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AccountAttribute">
            <summary>
            Describes an account attribute.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AccountAttribute.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The name of the account attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AccountAttribute.AttributeValues">
            <summary>
            Gets and sets the property AttributeValues. 
            <para>
            One or more values for the account attribute.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AccountAttributeValue">
            <summary>
            Describes a value of an account attribute.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AccountAttributeValue.AttributeValue">
            <summary>
            Gets and sets the property AttributeValue. 
            <para>
            The value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Address">
            <summary>
            Describes an Elastic IP address.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Address.AllocationId">
            <summary>
            Gets and sets the property AllocationId. 
            <para>
            The ID representing the allocation of the address for use with EC2-VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Address.AssociationId">
            <summary>
            Gets and sets the property AssociationId. 
            <para>
            The ID representing the association of the address with an instance in a VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Address.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            Indicates whether this Elastic IP address is for use with instances in EC2-Classic
            (<code>standard</code>) or instances in a VPC (<code>vpc</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Address.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance the address is associated with (if any).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Address.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Address.NetworkInterfaceOwnerId">
            <summary>
            Gets and sets the property NetworkInterfaceOwnerId. 
            <para>
            The ID of the AWS account that owns the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Address.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The private IP address associated with the Elastic IP address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Address.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            The Elastic IP address.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AllocateAddressRequest">
            <summary>
            Container for the parameters to the AllocateAddress operation.
            Acquires an Elastic IP address.
            
             
            <para>
            An Elastic IP address is for use either in the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AllocateAddressRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            Set to <code>vpc</code> to allocate the address for use with instances in a VPC.
            </para>
             
            <para>
            Default: The address is for use with instances in EC2-Classic.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AllocateAddressResponse">
            <summary>
            Configuration for accessing Amazon AllocateAddress service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AllocateAddressResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AllocateAddressResult.AllocationId">
            <summary>
            Gets and sets the property AllocationId. 
            <para>
            [EC2-VPC] The ID that AWS assigns to represent the allocation of the Elastic IP address
            for use with instances in a VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AllocateAddressResult.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            Indicates whether this Elastic IP address is for use with instances in EC2-Classic
            (<code>standard</code>) or instances in a VPC (<code>vpc</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AllocateAddressResult.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            The Elastic IP address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AllocateAddressResponse.AllocateAddressResult">
            <summary>
            Gets and sets the AllocateAddressResult property.
            Represents the output of a AllocateAddress operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AssignPrivateIpAddressesRequest">
            <summary>
            Container for the parameters to the AssignPrivateIpAddresses operation.
            Assigns one or more secondary private IP addresses to the specified network interface.
            You can specify one or more specific secondary IP addresses, or you can specify the
            number of secondary IP addresses to be automatically assigned within the subnet's
            CIDR block range. The number of secondary IP addresses that you can assign to an instance
            varies by instance type. For information about instance types, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
            Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more information
            about Elastic IP addresses, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            AssignPrivateIpAddresses is available only in EC2-VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssignPrivateIpAddressesRequest.AllowReassignment">
            <summary>
            Gets and sets the property AllowReassignment. 
            <para>
            Indicates whether to allow an IP address that is already assigned to another network
            interface or instance to be reassigned to the specified network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssignPrivateIpAddressesRequest.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssignPrivateIpAddressesRequest.PrivateIpAddresses">
            <summary>
            Gets and sets the property PrivateIpAddresses. 
            <para>
            One or more IP addresses to be assigned as a secondary private IP address to the network
            interface.
            </para>
             
            <para>
            If you don't specify an IP address, Amazon EC2 automatically selects an IP address
            within the subnet range.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssignPrivateIpAddressesRequest.SecondaryPrivateIpAddressCount">
            <summary>
            Gets and sets the property SecondaryPrivateIpAddressCount. 
            <para>
            The number of secondary IP addresses to assign to the network interface.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AssignPrivateIpAddressesResponse">
            <summary>
            Configuration for accessing Amazon AssignPrivateIpAddresses service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssignPrivateIpAddressesResponse.AssignPrivateIpAddressesResult">
            <summary>
            Gets and sets the AssignPrivateIpAddressesResult property.
            Represents the output of a AssignPrivateIpAddresses operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AssociateAddressRequest">
            <summary>
            Container for the parameters to the AssociateAddress operation.
            Associates an Elastic IP address with an instance or a network interface.
            
             
            <para>
            An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            [EC2-Classic, default VPC] If the Elastic IP address is already associated with a
            different instance, it is disassociated from that instance and associated with the
            specified instance.
            </para>
             
            <para>
            [EC2-VPC] If you don't specify a private IP address, the Elastic IP address is associated
            with the primary IP address. If the Elastic IP address is already associated with
            a different instance or a network interface, you get an error unless you allow reassociation.
            </para>
             
            <para>
            This is an idempotent operation. If you perform the operation more than once, Amazon
            EC2 doesn't return an error.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.AssociateAddressRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.AssociateAddressRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates AssociateAddressRequest with the parameterized properties
            </summary>
            <param name="instanceId">The ID of the instance. The operation fails if you specify an instance ID unless exactly one network interface is attached.</param>
            <param name="publicIp">The Elastic IP address.</param>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateAddressRequest.AllocationId">
            <summary>
            Gets and sets the property AllocationId. 
            <para>
            [EC2-VPC] The allocation ID. This is required for EC2-VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateAddressRequest.AllowReassociation">
            <summary>
            Gets and sets the property AllowReassociation. 
            <para>
            [EC2-VPC] Allows an Elastic IP address that is already associated with an instance
            or network interface to be re-associated with the specified instance or network interface.
            Otherwise, the operation fails.
            </para>
             
            <para>
            Default: <code>false</code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateAddressRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance. The operation fails if you specify an instance ID unless exactly
            one network interface is attached.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateAddressRequest.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            [EC2-VPC] The ID of the network interface. If the instance has more than one network
            interface, you must specify a network interface ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateAddressRequest.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            [EC2-VPC] The primary or secondary private IP address to associate with the Elastic
            IP address. If no private IP address is specified, the Elastic IP address is associated
            with the primary private IP address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateAddressRequest.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            The Elastic IP address.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AssociateAddressResponse">
            <summary>
            Configuration for accessing Amazon AssociateAddress service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AssociateAddressResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateAddressResult.AssociationId">
            <summary>
            Gets and sets the property AssociationId. 
            <para>
            [EC2-VPC] The ID that represents the association of the Elastic IP address with an
            instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateAddressResponse.AssociateAddressResult">
            <summary>
            Gets and sets the AssociateAddressResult property.
            Represents the output of a AssociateAddress operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AssociateDhcpOptionsRequest">
            <summary>
            Container for the parameters to the AssociateDhcpOptions operation.
            Associates a set of DHCP options (that you've previously created) with the specified
            VPC, or associates no DHCP options with the VPC.
            
             
            <para>
            After you associate the options with the VPC, any existing instances and all new instances
            that you launch in that VPC use the options. You don't need to restart or relaunch
            the instances. They automatically pick up the changes within a few hours, depending
            on how frequently the instance renews its DHCP lease. You can explicitly renew the
            lease using the operating system on the instance.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.AssociateDhcpOptionsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.AssociateDhcpOptionsRequest.#ctor(System.String)">
            <summary>
            Instantiates AssociateDhcpOptionsRequest with the parameterized properties
            </summary>
            <param name="vpcId">The ID of the VPC.</param>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateDhcpOptionsRequest.DhcpOptionsId">
            <summary>
            Gets and sets the property DhcpOptionsId. 
            <para>
            The ID of the DHCP options set, or <code>default</code> to associate no DHCP options
            with the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateDhcpOptionsRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AssociateDhcpOptionsResponse">
            <summary>
            Configuration for accessing Amazon AssociateDhcpOptions service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateDhcpOptionsResponse.AssociateDhcpOptionsResult">
            <summary>
            Gets and sets the AssociateDhcpOptionsResult property.
            Represents the output of a AssociateDhcpOptions operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AssociateRouteTableRequest">
            <summary>
            Container for the parameters to the AssociateRouteTable operation.
            Associates a subnet with a route table. The subnet and route table must be in the
            same VPC. This association causes traffic originating from the subnet to be routed
            according to the routes in the route table. The action returns an association ID,
            which you need in order to disassociate the route table from the subnet later. A route
            table can be associated with multiple subnets.
            
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateRouteTableRequest.RouteTableId">
            <summary>
            Gets and sets the property RouteTableId. 
            <para>
            The ID of the route table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateRouteTableRequest.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AssociateRouteTableResponse">
            <summary>
            Configuration for accessing Amazon AssociateRouteTable service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AssociateRouteTableResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateRouteTableResult.AssociationId">
            <summary>
            Gets and sets the property AssociationId. 
            <para>
            The route table association ID (needed to disassociate the route table).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AssociateRouteTableResponse.AssociateRouteTableResult">
            <summary>
            Gets and sets the AssociateRouteTableResult property.
            Represents the output of a AssociateRouteTable operation.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Amazon.EC2.Model.AttachInternetGatewayRequest" -->
        <member name="P:Amazon.EC2.Model.AttachInternetGatewayRequest.InternetGatewayId">
            <summary>
            Gets and sets the property InternetGatewayId. 
            <para>
            The ID of the Internet gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachInternetGatewayRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AttachInternetGatewayResponse">
            <summary>
            Configuration for accessing Amazon AttachInternetGateway service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachInternetGatewayResponse.AttachInternetGatewayResult">
            <summary>
            Gets and sets the AttachInternetGatewayResult property.
            Represents the output of a AttachInternetGateway operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AttachNetworkInterfaceRequest">
            <summary>
            Container for the parameters to the AttachNetworkInterface operation.
            Attaches a network interface to an instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachNetworkInterfaceRequest.DeviceIndex">
            <summary>
            Gets and sets the property DeviceIndex. 
            <para>
            The index of the device for the network interface attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachNetworkInterfaceRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachNetworkInterfaceRequest.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AttachNetworkInterfaceResponse">
            <summary>
            Configuration for accessing Amazon AttachNetworkInterface service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AttachNetworkInterfaceResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachNetworkInterfaceResult.AttachmentId">
            <summary>
            Gets and sets the property AttachmentId. 
            <para>
            The ID of the network interface attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachNetworkInterfaceResponse.AttachNetworkInterfaceResult">
            <summary>
            Gets and sets the AttachNetworkInterfaceResult property.
            Represents the output of a AttachNetworkInterface operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AttachVolumeRequest">
            <summary>
            Container for the parameters to the AttachVolume operation.
            Attaches an Amazon EBS volume to a running or stopped instance and exposes it to the
            instance with the specified device name.
            
             
            <para>
            Encrypted Amazon EBS volumes may only be attached to instances that support Amazon
            EBS encryption. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            For a list of supported device names, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html">Attaching
            an Amazon EBS Volume to an Instance</a>. Any device names that aren't reserved for
            instance store volumes can be used for Amazon EBS volumes. For more information, see
            <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html">Amazon
            EC2 Instance Store</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            If a volume has an AWS Marketplace product code:
            </para>
             <ul> <li>The volume can only be attached as the root device of a stopped instance.</li>
            <li>You must be subscribed to the AWS Marketplace code that is on the volume.</li>
            <li>The configuration (instance type, operating system) of the instance must support
            that specific AWS Marketplace code. For example, you cannot take a volume from a Windows
            instance and attach it to a Linux instance.</li> <li>AWS Marketplace product codes
            are copied from the volume to the instance.</li> </ul> 
            <para>
            For an overview of the AWS Marketplace, see <a href="https://aws.amazon.com/marketplace/help/200900000">https://aws.amazon.com/marketplace/help/200900000</a>.
            For more information about how to use the AWS Marketplace, see <a href="https://aws.amazon.com/marketplace">AWS
            Marketplace</a>.
            </para>
             
            <para>
            For more information about Amazon EBS volumes, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html">Attaching
            Amazon EBS Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.AttachVolumeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.AttachVolumeRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Instantiates AttachVolumeRequest with the parameterized properties
            </summary>
            <param name="volumeId">The ID of the Amazon EBS volume. The volume and instance must be within the same Availability Zone.</param>
            <param name="instanceId">The ID of the instance.</param>
            <param name="device">The device name to expose to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</param>
        </member>
        <member name="P:Amazon.EC2.Model.AttachVolumeRequest.Device">
            <summary>
            Gets and sets the property Device. 
            <para>
            The device name to expose to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachVolumeRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachVolumeRequest.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the Amazon EBS volume. The volume and instance must be within the same Availability
            Zone.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AttachVolumeResponse">
            <summary>
            Configuration for accessing Amazon AttachVolume service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AttachVolumeResult">
            <summary>
            Contains the response data from the AttachVolume operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachVolumeResponse.AttachVolumeResult">
            <summary>
            Gets and sets the AttachVolumeResult property.
            Represents the output of a AttachVolume operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AttachVpnGatewayRequest">
            <summary>
            Container for the parameters to the AttachVpnGateway operation.
            Attaches a virtual private gateway to a VPC. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.AttachVpnGatewayRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.AttachVpnGatewayRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates AttachVpnGatewayRequest with the parameterized properties
            </summary>
            <param name="vpnGatewayId">The ID of the virtual private gateway.</param>
            <param name="vpcId">The ID of the VPC.</param>
        </member>
        <member name="P:Amazon.EC2.Model.AttachVpnGatewayRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachVpnGatewayRequest.VpnGatewayId">
            <summary>
            Gets and sets the property VpnGatewayId. 
            <para>
            The ID of the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AttachVpnGatewayResponse">
            <summary>
            Configuration for accessing Amazon AttachVpnGateway service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AttachVpnGatewayResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachVpnGatewayResult.VpcAttachment">
            <summary>
            Gets and sets the property VpcAttachment. 
            <para>
            Information about the attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AttachVpnGatewayResponse.AttachVpnGatewayResult">
            <summary>
            Gets and sets the AttachVpnGatewayResult property.
            Represents the output of a AttachVpnGateway operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AuthorizeSecurityGroupEgressRequest">
            <summary>
            Container for the parameters to the AuthorizeSecurityGroupEgress operation.
            Adds one or more egress rules to a security group for use with a VPC. Specifically,
            this action permits instances to send traffic to one or more CIDR IP address ranges,
            or to one or more security groups for the same VPC.
            
             <important> 
            <para>
            You can have up to 50 rules per security group (covering both ingress and egress rules).
            </para>
             </important> 
            <para>
            A security group is for use with instances either in the EC2-Classic platform or in
            a specific VPC. This action doesn't apply to security groups for use in EC2-Classic.
            For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
             
            <para>
            Each rule consists of the protocol (for example, TCP), plus either a CIDR range or
            a source group. For the TCP and UDP protocols, you must also specify the destination
            port or port range. For the ICMP protocol, you must also specify the ICMP type and
            code. You can use -1 for the type or code to mean all types or all codes.
            </para>
             
            <para>
            Rule changes are propagated to affected instances as quickly as possible. However,
            a small delay might occur.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AuthorizeSecurityGroupEgressRequest.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The ID of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AuthorizeSecurityGroupEgressRequest.IpPermissions">
            <summary>
            Gets and sets the property IpPermissions. 
            <para>
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AuthorizeSecurityGroupEgressResponse">
            <summary>
            Configuration for accessing Amazon AuthorizeSecurityGroupEgress service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AuthorizeSecurityGroupEgressResponse.AuthorizeSecurityGroupEgressResult">
            <summary>
            Gets and sets the AuthorizeSecurityGroupEgressResult property.
            Represents the output of a AuthorizeSecurityGroupEgress operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest">
            <summary>
            Container for the parameters to the AuthorizeSecurityGroupIngress operation.
            Adds one or more ingress rules to a security group.
            
             <important> 
            <para>
            EC2-Classic: You can have up to 100 rules per group.
            </para>
             
            <para>
            EC2-VPC: You can have up to 50 rules per group (covering both ingress and egress rules).
            </para>
             </important> 
            <para>
            Rule changes are propagated to instances within the security group as quickly as possible.
            However, a small delay might occur.
            </para>
             
            <para>
            [EC2-Classic] This action gives one or more CIDR IP address ranges permission to access
            a security group in your account, or gives one or more security groups (called the
            <i>source groups</i>) permission to access a security group for your account. A source
            group can be for your own AWS account, or another.
            </para>
             
            <para>
            [EC2-VPC] This action gives one or more CIDR IP address ranges permission to access
            a security group in your VPC, or gives one or more other security groups (called the
            <i>source groups</i>) permission to access a security group for your VPC. The security
            groups must all be for the same VPC.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest.#ctor(System.String,System.Collections.Generic.List{Amazon.EC2.Model.IpPermission})">
            <summary>
            Instantiates AuthorizeSecurityGroupIngressRequest with the parameterized properties
            </summary>
            <param name="groupName">[EC2-Classic, default VPC] The name of the security group.</param>
            <param name="ipPermissions"></param>
        </member>
        <member name="P:Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The ID of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            [EC2-Classic, default VPC] The name of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AuthorizeSecurityGroupIngressRequest.IpPermissions">
            <summary>
            Gets and sets the property IpPermissions. 
            <para>
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AuthorizeSecurityGroupIngressResponse">
            <summary>
            Configuration for accessing Amazon AuthorizeSecurityGroupIngress service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AuthorizeSecurityGroupIngressResponse.AuthorizeSecurityGroupIngressResult">
            <summary>
            Gets and sets the AuthorizeSecurityGroupIngressResult property.
            Represents the output of a AuthorizeSecurityGroupIngress operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AvailabilityZone">
            <summary>
            Describes an Availability Zone.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AvailabilityZone.Messages">
            <summary>
            Gets and sets the property Messages. 
            <para>
            Any messages about the Availability Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AvailabilityZone.RegionName">
            <summary>
            Gets and sets the property RegionName. 
            <para>
            The name of the region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AvailabilityZone.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the Availability Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AvailabilityZone.ZoneName">
            <summary>
            Gets and sets the property ZoneName. 
            <para>
            The name of the Availability Zone.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.AvailabilityZoneMessage">
            <summary>
            Describes a message about an Availability Zone.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.AvailabilityZoneMessage.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The message about the Availability Zone.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.BlockDeviceMapping">
            <summary>
            Describes a block device mapping.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BlockDeviceMapping.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
            The device name exposed to the instance (for example, <code>/dev/sdh</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BlockDeviceMapping.Ebs">
            <summary>
            Gets and sets the property Ebs. 
            <para>
            Parameters used to automatically set up Amazon EBS volumes when the instance is launched.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BlockDeviceMapping.NoDevice">
            <summary>
            Gets and sets the property NoDevice. 
            <para>
            Suppresses the specified device included in the block device mapping of the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BlockDeviceMapping.VirtualName">
            <summary>
            Gets and sets the property VirtualName. 
            <para>
            The virtual device name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.BundleInstanceRequest">
            <summary>
            Container for the parameters to the BundleInstance operation.
            Bundles an Amazon instance store-backed Windows instance.
            
             
            <para>
            During bundling, only the root device volume (C:\) is bundled. Data on other instance
            store volumes is not preserved.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/Creating_InstanceStoreBacked_WinAMI.html">Creating
            an Instance Store-Backed Windows AMI</a>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.BundleInstanceRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.BundleInstanceRequest.#ctor(System.String,Amazon.EC2.Model.Storage)">
            <summary>
            Instantiates BundleInstanceRequest with the parameterized properties
            </summary>
            <param name="instanceId">The ID of the instance to bundle.</param>
            <param name="storage">The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.</param>
        </member>
        <member name="P:Amazon.EC2.Model.BundleInstanceRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance to bundle.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleInstanceRequest.Storage">
            <summary>
            Gets and sets the property Storage. 
            <para>
            The bucket in which to store the AMI. You can specify a bucket that you already own
            or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that
            belongs to someone else, Amazon EC2 returns an error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.BundleInstanceResponse">
            <summary>
            Configuration for accessing Amazon BundleInstance service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.BundleInstanceResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleInstanceResult.BundleTask">
            <summary>
            Gets and sets the property BundleTask. 
            <para>
            Information about the bundle task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleInstanceResponse.BundleInstanceResult">
            <summary>
            Gets and sets the BundleInstanceResult property.
            Represents the output of a BundleInstance operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.BundleTask">
            <summary>
            Describes a bundle task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleTask.BundleId">
            <summary>
            Gets and sets the property BundleId. 
            <para>
            The ID for this bundle task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleTask.BundleTaskError">
            <summary>
            Gets and sets the property BundleTaskError. 
            <para>
            If the task fails, a description of the error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleTask.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance associated with this bundle task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleTask.Progress">
            <summary>
            Gets and sets the property Progress. 
            <para>
            The level of task completion, as a percent (for example, 20%).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleTask.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The time this task started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleTask.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleTask.Storage">
            <summary>
            Gets and sets the property Storage. 
            <para>
            The Amazon S3 storage locations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleTask.UpdateTime">
            <summary>
            Gets and sets the property UpdateTime. 
            <para>
            The time of the most recent update for the task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.BundleTaskError">
            <summary>
            Describes an error for <a>BundleInstance</a>.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleTaskError.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The error code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.BundleTaskError.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The error message.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelBundleTaskRequest">
            <summary>
            Container for the parameters to the CancelBundleTask operation.
            Cancels a bundling operation for an instance store-backed Windows instance.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CancelBundleTaskRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CancelBundleTaskRequest.#ctor(System.String)">
            <summary>
            Instantiates CancelBundleTaskRequest with the parameterized properties
            </summary>
            <param name="bundleId">The ID of the bundle task.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CancelBundleTaskRequest.BundleId">
            <summary>
            Gets and sets the property BundleId. 
            <para>
            The ID of the bundle task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelBundleTaskResponse">
            <summary>
            Configuration for accessing Amazon CancelBundleTask service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelBundleTaskResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelBundleTaskResult.BundleTask">
            <summary>
            Gets and sets the property BundleTask. 
            <para>
            The bundle task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelBundleTaskResponse.CancelBundleTaskResult">
            <summary>
            Gets and sets the CancelBundleTaskResult property.
            Represents the output of a CancelBundleTask operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelConversionTaskRequest">
            <summary>
            Container for the parameters to the CancelConversionTask operation.
            Cancels an active conversion task. The task can be the import of an instance or volume.
            The action removes all artifacts of the conversion, including a partially uploaded
            volume or instance. If the conversion is complete or is in the process of transferring
            the final disk image, the command fails and returns an exception.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UploadingYourInstancesandVolumes.html">Using
            the Command Line Tools to Import Your Virtual Machine to Amazon EC2</a> in the <i>Amazon
            Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelConversionTaskRequest.ConversionTaskId">
            <summary>
            Gets and sets the property ConversionTaskId. 
            <para>
            The ID of the conversion task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelConversionTaskRequest.ReasonMessage">
            <summary>
            Gets and sets the property ReasonMessage.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelConversionTaskResponse">
            <summary>
            Configuration for accessing Amazon CancelConversionTask service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelConversionTaskResponse.CancelConversionTaskResult">
            <summary>
            Gets and sets the CancelConversionTaskResult property.
            Represents the output of a CancelConversionTask operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelExportTaskRequest">
            <summary>
            Container for the parameters to the CancelExportTask operation.
            Cancels an active export task. The request removes all artifacts of the export, including
            any partially-created Amazon S3 objects. If the export task is complete or is in the
            process of transferring the final disk image, the command fails and returns an error.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelExportTaskRequest.ExportTaskId">
            <summary>
            Gets and sets the property ExportTaskId. 
            <para>
            The ID of the export task. This is the ID returned by <code>CreateInstanceExportTask</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelExportTaskResponse">
            <summary>
            Configuration for accessing Amazon CancelExportTask service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelExportTaskResponse.CancelExportTaskResult">
            <summary>
            Gets and sets the CancelExportTaskResult property.
            Represents the output of a CancelExportTask operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelledSpotInstanceRequest">
            <summary>
            Describes a request to cancel a Spot Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelledSpotInstanceRequest.SpotInstanceRequestId">
            <summary>
            Gets and sets the property SpotInstanceRequestId. 
            <para>
            The ID of the Spot Instance request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelledSpotInstanceRequest.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the Spot Instance request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelReservedInstancesListingRequest">
            <summary>
            Container for the parameters to the CancelReservedInstancesListing operation.
            Cancels the specified Reserved Instance listing in the Reserved Instance Marketplace.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelReservedInstancesListingRequest.ReservedInstancesListingId">
            <summary>
            Gets and sets the property ReservedInstancesListingId. 
            <para>
            The ID of the Reserved Instance listing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelReservedInstancesListingResponse">
            <summary>
            Configuration for accessing Amazon CancelReservedInstancesListing service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelReservedInstancesListingResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelReservedInstancesListingResult.ReservedInstancesListings">
            <summary>
            Gets and sets the property ReservedInstancesListings. 
            <para>
            The Reserved Instance listing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelReservedInstancesListingResponse.CancelReservedInstancesListingResult">
            <summary>
            Gets and sets the CancelReservedInstancesListingResult property.
            Represents the output of a CancelReservedInstancesListing operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelSpotInstanceRequestsRequest">
            <summary>
            Container for the parameters to the CancelSpotInstanceRequests operation.
            Cancels one or more Spot Instance requests. Spot Instances are instances that Amazon
            EC2 starts on your behalf when the maximum price that you specify exceeds the current
            Spot Price. Amazon EC2 periodically sets the Spot Price based on available Spot Instance
            capacity and current Spot Instance requests. For more information about Spot Instances,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html">Spot
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             <important> 
            <para>
            Canceling a Spot Instance request does not terminate running Spot Instances associated
            with the request.
            </para>
             </important>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CancelSpotInstanceRequestsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CancelSpotInstanceRequestsRequest.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates CancelSpotInstanceRequestsRequest with the parameterized properties
            </summary>
            <param name="spotInstanceRequestIds">One or more Spot Instance request IDs.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CancelSpotInstanceRequestsRequest.SpotInstanceRequestIds">
            <summary>
            Gets and sets the property SpotInstanceRequestIds. 
            <para>
            One or more Spot Instance request IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelSpotInstanceRequestsResponse">
            <summary>
            Configuration for accessing Amazon CancelSpotInstanceRequests service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CancelSpotInstanceRequestsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelSpotInstanceRequestsResult.CancelledSpotInstanceRequests">
            <summary>
            Gets and sets the property CancelledSpotInstanceRequests. 
            <para>
            One or more Spot Instance requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CancelSpotInstanceRequestsResponse.CancelSpotInstanceRequestsResult">
            <summary>
            Gets and sets the CancelSpotInstanceRequestsResult property.
            Represents the output of a CancelSpotInstanceRequests operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ConfirmProductInstanceRequest">
            <summary>
            Container for the parameters to the ConfirmProductInstance operation.
            Determines whether a product code is associated with an instance. This action can
            only be used by the owner of the product code. It is useful when a product code owner
            needs to verify whether another user's instance is eligible for support.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ConfirmProductInstanceRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ConfirmProductInstanceRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates ConfirmProductInstanceRequest with the parameterized properties
            </summary>
            <param name="productCode">The product code. This must be an Amazon DevPay product code that you own.</param>
            <param name="instanceId">The ID of the instance.</param>
        </member>
        <member name="P:Amazon.EC2.Model.ConfirmProductInstanceRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ConfirmProductInstanceRequest.ProductCode">
            <summary>
            Gets and sets the property ProductCode. 
            <para>
            The product code. This must be an Amazon DevPay product code that you own.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ConfirmProductInstanceResponse">
            <summary>
            Configuration for accessing Amazon ConfirmProductInstance service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ConfirmProductInstanceResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ConfirmProductInstanceResult.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account ID of the instance owner. This is only present if the product code
            is attached to the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ConfirmProductInstanceResponse.ConfirmProductInstanceResult">
            <summary>
            Gets and sets the ConfirmProductInstanceResult property.
            Represents the output of a ConfirmProductInstance operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ConversionTask">
            <summary>
            Describes a conversion task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ConversionTask.ConversionTaskId">
            <summary>
            Gets and sets the property ConversionTaskId. 
            <para>
            The ID of the conversion task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ConversionTask.ExpirationTime">
            <summary>
            Gets and sets the property ExpirationTime. 
            <para>
            The time when the task expires. If the upload isn't complete before the expiration
            time, we automatically cancel the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ConversionTask.ImportInstance">
            <summary>
            Gets and sets the property ImportInstance. 
            <para>
            If the task is for importing an instance, this contains information about the import
            instance task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ConversionTask.ImportVolume">
            <summary>
            Gets and sets the property ImportVolume. 
            <para>
            If the task is for importing a volume, this contains information about the import
            volume task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ConversionTask.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the conversion task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ConversionTask.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            The status message related to the conversion task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ConversionTask.Tags">
            <summary>
            Gets and sets the property Tags.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CopyImageRequest">
            <summary>
            Container for the parameters to the CopyImage operation.
            Initiates the copy of an AMI from the specified source region to the region in which
            the request was made. You specify the destination region by using its endpoint when
            making the request. AMIs that use encrypted Amazon EBS snapshots cannot be copied
            with this method.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/CopyingAMIs.html">Copying
            AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopyImageRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier you provide to ensure idempotency of the request.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopyImageRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the new AMI in the destination region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopyImageRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the new AMI in the destination region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopyImageRequest.SourceImageId">
            <summary>
            Gets and sets the property SourceImageId. 
            <para>
            The ID of the AMI to copy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopyImageRequest.SourceRegion">
            <summary>
            Gets and sets the property SourceRegion. 
            <para>
            The name of the region that contains the AMI to copy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CopyImageResponse">
            <summary>
            Configuration for accessing Amazon CopyImage service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CopyImageResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopyImageResult.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the new AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopyImageResponse.CopyImageResult">
            <summary>
            Gets and sets the CopyImageResult property.
            Represents the output of a CopyImage operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CopySnapshotRequest">
            <summary>
            Container for the parameters to the CopySnapshot operation.
            Copies a point-in-time snapshot of an Amazon EBS volume and stores it in Amazon S3.
            You can copy the snapshot within the same region or from one region to another. You
            can use the snapshot to create Amazon EBS volumes or Amazon Machine Images (AMIs).
            The snapshot is copied to the regional endpoint that you send the HTTP request to.
            
             
            <para>
            Copies of encrypted Amazon EBS snapshots remain encrypted. Copies of unencrypted snapshots
            remain unencrypted.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-copy-snapshot.html">Copying
            an Amazon EBS Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopySnapshotRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the new Amazon EBS snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopySnapshotRequest.DestinationRegion">
            <summary>
            Gets and sets the property DestinationRegion. 
            <para>
            The destination region of the snapshot copy operation. This parameter is required
            in the <code>PresignedUrl</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopySnapshotRequest.PresignedUrl">
            <summary>
            Gets and sets the property PresignedUrl. 
            <para>
            The pre-signed URL that facilitates copying an encrypted snapshot. This parameter
            is only required when copying an encrypted snapshot with the Amazon EC2 Query API;
            it is available as an optional parameter in all other cases. The <code>PresignedUrl</code>
            should use the snapshot source endpoint, the <code>CopySnapshot</code> action, and
            include the <code>SourceRegion</code>, <code>SourceSnapshotId</code>, and <code>DestinationRegion</code>
            parameters. The <code>PresignedUrl</code> must be signed using AWS Signature Version
            4. Because Amazon EBS snapshots are stored in Amazon S3, the signing algorithm for
            this parameter uses the same logic that is described in <a href="http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">Authenticating
            Requests by Using Query Parameters (AWS Signature Version 4)</a> in the <i>Amazon
            Simple Storage Service API Reference</i>. An invalid or improperly signed <code>PresignedUrl</code>
            will cause the copy operation to fail asynchronously, and the snapshot will move to
            an <code>error</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopySnapshotRequest.SourceRegion">
            <summary>
            Gets and sets the property SourceRegion. 
            <para>
            The ID of the region that contains the snapshot to be copied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopySnapshotRequest.SourceSnapshotId">
            <summary>
            Gets and sets the property SourceSnapshotId. 
            <para>
            The ID of the Amazon EBS snapshot to copy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CopySnapshotResponse">
            <summary>
            Configuration for accessing Amazon CopySnapshot service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CopySnapshotResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopySnapshotResult.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The ID of the new snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CopySnapshotResponse.CopySnapshotResult">
            <summary>
            Gets and sets the CopySnapshotResult property.
            Represents the output of a CopySnapshot operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateCustomerGatewayRequest">
            <summary>
            Container for the parameters to the CreateCustomerGateway operation.
            Provides information to AWS about your VPN customer gateway device. The customer gateway
            is the appliance at your end of the VPN connection. (The device on the AWS side of
            the VPN connection is the virtual private gateway.) You must provide the Internet-routable
            IP address of the customer gateway's external interface. The IP address must be static
            and can't be behind a device performing network address translation (NAT).
            
             
            <para>
            For devices that use Border Gateway Protocol (BGP), you can also provide the device's
            BGP Autonomous System Number (ASN). You can use an existing ASN assigned to your network.
            If you don't have an ASN already, you can use a private ASN (in the 64512 - 65534
            range).
            </para>
             
            <para>
            For more information about VPN customer gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateCustomerGatewayRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateCustomerGatewayRequest.#ctor(Amazon.EC2.GatewayType,System.String,System.Int32)">
            <summary>
            Instantiates CreateCustomerGatewayRequest with the parameterized properties
            </summary>
            <param name="type">The type of VPN connection that this customer gateway supports.</param>
            <param name="publicIp">The Internet-routable IP address for the customer gateway's outside interface. The address must be static.</param>
            <param name="bgpAsn">For devices that support BGP, the customer gateway's BGP ASN. Default: 65000</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateCustomerGatewayRequest.BgpAsn">
            <summary>
            Gets and sets the property BgpAsn. 
            <para>
            For devices that support BGP, the customer gateway's BGP ASN.
            </para>
             
            <para>
            Default: 65000
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateCustomerGatewayRequest.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            The Internet-routable IP address for the customer gateway's outside interface. The
            address must be static.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateCustomerGatewayRequest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of VPN connection that this customer gateway supports.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateCustomerGatewayResponse">
            <summary>
            Configuration for accessing Amazon CreateCustomerGateway service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateCustomerGatewayResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateCustomerGatewayResult.CustomerGateway">
            <summary>
            Gets and sets the property CustomerGateway. 
            <para>
            Information about the customer gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateCustomerGatewayResponse.CreateCustomerGatewayResult">
            <summary>
            Gets and sets the CreateCustomerGatewayResult property.
            Represents the output of a CreateCustomerGateway operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateDhcpOptionsRequest">
            <summary>
            Container for the parameters to the CreateDhcpOptions operation.
            Creates a set of DHCP options for your VPC. After creating the set, you must associate
            it with the VPC, causing all existing and new instances that you launch in the VPC
            to use this set of DHCP options. The following are the individual DHCP options you
            can specify. For more information about the options, see <a href="http://www.ietf.org/rfc/rfc2132.txt">RFC
            2132</a>.
            
             <ul> <li> <code>domain-name-servers</code> - The IP addresses of up to four domain
            name servers, or <code>AmazonProvidedDNS</code>. The default DHCP option set specifies
            <code>AmazonProvidedDNS</code>. If specifying more than one domain name server, specify
            the IP addresses in a single parameter, separated by commas.</li> <li> <code>domain-name</code>
            - If you're using AmazonProvidedDNS in <code>us-east-1</code>, specify <code>ec2.internal</code>.
            If you're using AmazonProvidedDNS in another region, specify <code>region.compute.internal</code>
            (for example, <code>ap-northeast-1.compute.internal</code>). Otherwise, specify a
            domain name (for example, <code>MyCompany.com</code>). If specifying more than one
            domain name, separate them with spaces.</li> <li> <code>ntp-servers</code> - The IP
            addresses of up to four Network Time Protocol (NTP) servers.</li> <li> <code>netbios-name-servers</code>
            - The IP addresses of up to four NetBIOS name servers.</li> <li> <code>netbios-node-type</code>
            - The NetBIOS node type (1, 2, 4, or 8). We recommend that you specify 2 (broadcast
            and multicast are not currently supported). For more information about these node
            types, see <a href="http://www.ietf.org/rfc/rfc2132.txt">RFC 2132</a>. </li> </ul>
            
            <para>
            For more information about DHCP options, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateDhcpOptionsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateDhcpOptionsRequest.#ctor(System.Collections.Generic.List{Amazon.EC2.Model.DhcpConfiguration})">
            <summary>
            Instantiates CreateDhcpOptionsRequest with the parameterized properties
            </summary>
            <param name="dhcpConfigurations">A DHCP configuration option.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateDhcpOptionsRequest.DhcpConfigurations">
            <summary>
            Gets and sets the property DhcpConfigurations. 
            <para>
            A DHCP configuration option.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateDhcpOptionsResponse">
            <summary>
            Configuration for accessing Amazon CreateDhcpOptions service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateDhcpOptionsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateDhcpOptionsResult.DhcpOptions">
            <summary>
            Gets and sets the property DhcpOptions. 
            <para>
            A set of DHCP options.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateDhcpOptionsResponse.CreateDhcpOptionsResult">
            <summary>
            Gets and sets the CreateDhcpOptionsResult property.
            Represents the output of a CreateDhcpOptions operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateImageRequest">
            <summary>
            Container for the parameters to the CreateImage operation.
            Creates an Amazon EBS-backed AMI from an Amazon EBS-backed instance that is either
            running or stopped.
            
             
            <para>
            If you customized your instance with instance store volumes or EBS volumes in addition
            to the root device volume, the new AMI contains block device mapping information for
            those volumes. When you launch an instance from this new AMI, the instance automatically
            launches with those additional volumes.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html">Creating
            Amazon EBS-Backed Linux AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateImageRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateImageRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates CreateImageRequest with the parameterized properties
            </summary>
            <param name="instanceId">The ID of the instance.</param>
            <param name="name">A name for the new image. Constraints: 3-128 alphanumeric characters, parenthesis (()), periods (.), slashes (/), dashes (-), or underscores(_)</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateImageRequest.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            Information about one or more block device mappings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateImageRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the new image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateImageRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateImageRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A name for the new image.
            </para>
             
            <para>
            Constraints: 3-128 alphanumeric characters, parenthesis (()), periods (.), slashes
            (/), dashes (-), or underscores(_)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateImageRequest.NoReboot">
            <summary>
            Gets and sets the property NoReboot. 
            <para>
            By default, this parameter is set to <code>false</code>, which means Amazon EC2 attempts
            to shut down the instance cleanly before image creation and then reboots the instance.
            When the parameter is set to <code>true</code>, Amazon EC2 doesn't shut down the instance
            before creating the image. When this option is used, file system integrity on the
            created image can't be guaranteed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateImageResponse">
            <summary>
            Configuration for accessing Amazon CreateImage service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateImageResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateImageResult.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the new AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateImageResponse.CreateImageResult">
            <summary>
            Gets and sets the CreateImageResult property.
            Represents the output of a CreateImage operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateInstanceExportTaskRequest">
            <summary>
            Container for the parameters to the CreateInstanceExportTask operation.
            Exports a running or stopped instance to an Amazon S3 bucket.
            
             
            <para>
            For information about the supported operating systems, image formats, and known limitations
            for the types of instances you can export, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ExportingEC2Instances.html">Exporting
            EC2 Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateInstanceExportTaskRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the conversion task or the resource being exported. The maximum
            length is 255 bytes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateInstanceExportTaskRequest.ExportToS3Task">
            <summary>
            Gets and sets the property ExportToS3Task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateInstanceExportTaskRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateInstanceExportTaskRequest.TargetEnvironment">
            <summary>
            Gets and sets the property TargetEnvironment. 
            <para>
            The target virtualization environment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateInstanceExportTaskResponse">
            <summary>
            Configuration for accessing Amazon CreateInstanceExportTask service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateInstanceExportTaskResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateInstanceExportTaskResult.ExportTask">
            <summary>
            Gets and sets the property ExportTask.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateInstanceExportTaskResponse.CreateInstanceExportTaskResult">
            <summary>
            Gets and sets the CreateInstanceExportTaskResult property.
            Represents the output of a CreateInstanceExportTask operation.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Amazon.EC2.Model.CreateInternetGatewayRequest" -->
        <member name="T:Amazon.EC2.Model.CreateInternetGatewayResponse">
            <summary>
            Configuration for accessing Amazon CreateInternetGateway service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateInternetGatewayResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateInternetGatewayResult.InternetGateway">
            <summary>
            Gets and sets the property InternetGateway. 
            <para>
            Information about the Internet gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateInternetGatewayResponse.CreateInternetGatewayResult">
            <summary>
            Gets and sets the CreateInternetGatewayResult property.
            Represents the output of a CreateInternetGateway operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateKeyPairRequest">
            <summary>
            Container for the parameters to the CreateKeyPair operation.
            Creates a 2048-bit RSA key pair with the specified name. Amazon EC2 stores the public
            key and displays the private key for you to save to a file. The private key is returned
            as an unencrypted PEM encoded PKCS#8 private key. If a key with the specified name
            already exists, Amazon EC2 returns an error.
            
             
            <para>
            You can have up to five thousand key pairs per region.
            </para>
             
            <para>
            For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateKeyPairRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateKeyPairRequest.#ctor(System.String)">
            <summary>
            Instantiates CreateKeyPairRequest with the parameterized properties
            </summary>
            <param name="keyName">A unique name for the key pair.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateKeyPairRequest.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
            A unique name for the key pair.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateKeyPairResponse">
            <summary>
            Configuration for accessing Amazon CreateKeyPair service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateKeyPairResult">
            <summary>
            Contains the response data from the CreateKeyPair operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateKeyPairResponse.CreateKeyPairResult">
            <summary>
            Gets and sets the CreateKeyPairResult property.
            Represents the output of a CreateKeyPair operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateNetworkAclEntryRequest">
            <summary>
            Container for the parameters to the CreateNetworkAclEntry operation.
            Creates an entry (a rule) in a network ACL with the specified rule number. Each network
            ACL has a set of numbered ingress rules and a separate set of numbered egress rules.
            When determining whether a packet should be allowed in or out of a subnet associated
            with the ACL, we process the entries in the ACL according to the rule numbers, in
            ascending order. Each network ACL has a set of ingress rules and a separate set of
            egress rules.
            
             
            <para>
            We recommend that you leave room between the rule numbers (for example, 100, 110,
            120, ...), and not number them one right after the other (for example, 101, 102, 103,
            ...). This makes it easier to add a rule between existing ones without having to renumber
            the rules.
            </para>
             
            <para>
            After you add an entry, you can't modify it; you must either replace it, or create
            an entry and delete the old one.
            </para>
             
            <para>
            For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclEntryRequest.CidrBlock">
            <summary>
            Gets and sets the property CidrBlock. 
            <para>
            The network range to allow or deny, in CIDR notation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclEntryRequest.Egress">
            <summary>
            Gets and sets the property Egress. 
            <para>
            Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclEntryRequest.IcmpTypeCode">
            <summary>
            Gets and sets the property IcmpTypeCode. 
            <para>
            ICMP protocol: The ICMP type and code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclEntryRequest.NetworkAclId">
            <summary>
            Gets and sets the property NetworkAclId. 
            <para>
            The ID of the ACL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclEntryRequest.PortRange">
            <summary>
            Gets and sets the property PortRange. 
            <para>
            TCP or UDP protocols: The range of ports the rule applies to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclEntryRequest.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The protocol. A value of -1 means all protocols.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclEntryRequest.RuleAction">
            <summary>
            Gets and sets the property RuleAction. 
            <para>
            Indicates whether to allow or deny the traffic that matches the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclEntryRequest.RuleNumber">
            <summary>
            Gets and sets the property RuleNumber. 
            <para>
            The rule number for the entry (for example, 100). ACL entries are processed in ascending
            order by rule number.
            </para>
             
            <para>
            Constraints: Positive integer from 1 to 32766
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateNetworkAclEntryResponse">
            <summary>
            Configuration for accessing Amazon CreateNetworkAclEntry service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclEntryResponse.CreateNetworkAclEntryResult">
            <summary>
            Gets and sets the CreateNetworkAclEntryResult property.
            Represents the output of a CreateNetworkAclEntry operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateNetworkAclRequest">
            <summary>
            Container for the parameters to the CreateNetworkAcl operation.
            Creates a network ACL in a VPC. Network ACLs provide an optional layer of security
            (in addition to security groups) for the instances in your VPC.
            
             
            <para>
            For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateNetworkAclResponse">
            <summary>
            Configuration for accessing Amazon CreateNetworkAcl service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateNetworkAclResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclResult.NetworkAcl">
            <summary>
            Gets and sets the property NetworkAcl. 
            <para>
            Information about the network ACL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkAclResponse.CreateNetworkAclResult">
            <summary>
            Gets and sets the CreateNetworkAclResult property.
            Represents the output of a CreateNetworkAcl operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateNetworkInterfaceRequest">
            <summary>
            Container for the parameters to the CreateNetworkInterface operation.
            Creates a network interface in the specified subnet.
            
             
            <para>
            For more information about network interfaces, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html">Elastic
            Network Interfaces</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkInterfaceRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkInterfaceRequest.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            The IDs of one or more security groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkInterfaceRequest.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The primary private IP address of the network interface. If you don't specify an IP
            address, Amazon EC2 selects one for you from the subnet range.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkInterfaceRequest.PrivateIpAddresses">
            <summary>
            Gets and sets the property PrivateIpAddresses. 
            <para>
            One or more private IP addresses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkInterfaceRequest.SecondaryPrivateIpAddressCount">
            <summary>
            Gets and sets the property SecondaryPrivateIpAddressCount. 
            <para>
            The number of secondary private IP addresses to assign to a network interface. When
            you specify a number of secondary IP addresses, Amazon EC2 selects these IP addresses
            within the subnet range.
            </para>
             
            <para>
            The number of IP addresses you can assign to a network interface varies by instance
            type. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI">Private
            IP Addresses Per ENI Per Instance Type</a> in the <i>Amazon Elastic Compute Cloud
            User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkInterfaceRequest.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet to associate with the network interface.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateNetworkInterfaceResponse">
            <summary>
            Configuration for accessing Amazon CreateNetworkInterface service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateNetworkInterfaceResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkInterfaceResult.NetworkInterface">
            <summary>
            Gets and sets the property NetworkInterface. 
            <para>
            Information about the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateNetworkInterfaceResponse.CreateNetworkInterfaceResult">
            <summary>
            Gets and sets the CreateNetworkInterfaceResult property.
            Represents the output of a CreateNetworkInterface operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreatePlacementGroupRequest">
            <summary>
            Container for the parameters to the CreatePlacementGroup operation.
            Creates a placement group that you launch cluster instances into. You must give the
            group a name that's unique within the scope of your account.
            
             
            <para>
            For more information about placement groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreatePlacementGroupRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreatePlacementGroupRequest.#ctor(System.String,Amazon.EC2.PlacementStrategy)">
            <summary>
            Instantiates CreatePlacementGroupRequest with the parameterized properties
            </summary>
            <param name="groupName">A name for the placement group. Constraints: Up to 255 ASCII characters</param>
            <param name="strategy">The placement strategy.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreatePlacementGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            A name for the placement group.
            </para>
             
            <para>
            Constraints: Up to 255 ASCII characters
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreatePlacementGroupRequest.Strategy">
            <summary>
            Gets and sets the property Strategy. 
            <para>
            The placement strategy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreatePlacementGroupResponse">
            <summary>
            Configuration for accessing Amazon CreatePlacementGroup service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreatePlacementGroupResponse.CreatePlacementGroupResult">
            <summary>
            Gets and sets the CreatePlacementGroupResult property.
            Represents the output of a CreatePlacementGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateReservedInstancesListingRequest">
            <summary>
            Container for the parameters to the CreateReservedInstancesListing operation.
            Creates a listing for Amazon EC2 Reserved Instances to be sold in the Reserved Instance
            Marketplace. You can submit one Reserved Instance listing at a time.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateReservedInstancesListingRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier you provide to ensure idempotency of your listings.
            This helps avoid duplicate listings. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">Ensuring
            Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateReservedInstancesListingRequest.InstanceCount">
            <summary>
            Gets and sets the property InstanceCount. 
            <para>
            The number of instances that are a part of a Reserved Instance account to be listed
            in the Reserved Instance Marketplace. This number should be less than or equal to
            the instance count associated with the Reserved Instance ID specified in this call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateReservedInstancesListingRequest.PriceSchedules">
            <summary>
            Gets and sets the property PriceSchedules. 
            <para>
            A list specifying the price of the Reserved Instance for each month remaining in the
            Reserved Instance term.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateReservedInstancesListingRequest.ReservedInstancesId">
            <summary>
            Gets and sets the property ReservedInstancesId. 
            <para>
            The ID of the active Reserved Instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateReservedInstancesListingResponse">
            <summary>
            Configuration for accessing Amazon CreateReservedInstancesListing service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateReservedInstancesListingResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateReservedInstancesListingResult.ReservedInstancesListings">
            <summary>
            Gets and sets the property ReservedInstancesListings. 
            <para>
            Information about the Reserved Instances listing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateReservedInstancesListingResponse.CreateReservedInstancesListingResult">
            <summary>
            Gets and sets the CreateReservedInstancesListingResult property.
            Represents the output of a CreateReservedInstancesListing operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateRouteRequest">
            <summary>
            Container for the parameters to the CreateRoute operation.
            Creates a route in a route table within a VPC.
            
             
            <para>
            You must specify one of the following targets: Internet gateway, NAT instance, VPC
            peering connection, or network interface.
            </para>
             
            <para>
            When determining how to route traffic, we use the route with the most specific match.
            For example, let's say the traffic is destined for <code>192.0.2.3</code>, and the
            route table includes the following two routes:
            </para>
             <ul> <li> 
            <para>
            <code>192.0.2.0/24</code> (goes to some target A)
            </para>
             </li> <li> 
            <para>
            <code>192.0.2.0/28</code> (goes to some target B)
            </para>
             </li> </ul> 
            <para>
            Both routes apply to the traffic destined for <code>192.0.2.3</code>. However, the
            second route in the list covers a smaller number of IP addresses and is therefore
            more specific, so we use that route to determine where to target the traffic.
            </para>
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateRouteRequest.DestinationCidrBlock">
            <summary>
            Gets and sets the property DestinationCidrBlock. 
            <para>
            The CIDR address block used for the destination match. Routing decisions are based
            on the most specific match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateRouteRequest.GatewayId">
            <summary>
            Gets and sets the property GatewayId. 
            <para>
            The ID of an Internet gateway attached to your VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateRouteRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of a NAT instance in your VPC. The operation fails if you specify an instance
            ID unless exactly one network interface is attached.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateRouteRequest.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of a network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateRouteRequest.RouteTableId">
            <summary>
            Gets and sets the property RouteTableId. 
            <para>
            The ID of the route table for the route.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateRouteRequest.VpcPeeringConnectionId">
            <summary>
            Gets and sets the property VpcPeeringConnectionId. 
            <para>
            The ID of a VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateRouteResponse">
            <summary>
            Configuration for accessing Amazon CreateRoute service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateRouteResponse.CreateRouteResult">
            <summary>
            Gets and sets the CreateRouteResult property.
            Represents the output of a CreateRoute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateRouteTableRequest">
            <summary>
            Container for the parameters to the CreateRouteTable operation.
            Creates a route table for the specified VPC. After you create a route table, you can
            add routes and associate the table with a subnet.
            
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateRouteTableRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateRouteTableResponse">
            <summary>
            Configuration for accessing Amazon CreateRouteTable service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateRouteTableResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateRouteTableResult.RouteTable">
            <summary>
            Gets and sets the property RouteTable. 
            <para>
            Information about the route table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateRouteTableResponse.CreateRouteTableResult">
            <summary>
            Gets and sets the CreateRouteTableResult property.
            Represents the output of a CreateRouteTable operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateSecurityGroupRequest">
            <summary>
            Container for the parameters to the CreateSecurityGroup operation.
            Creates a security group.
            
             
            <para>
            A security group is for use with instances either in the EC2-Classic platform or in
            a specific VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon
            EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and
            <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
             <important> 
            <para>
            EC2-Classic: You can have up to 500 security groups.
            </para>
             
            <para>
            EC2-VPC: You can create up to 100 security groups per VPC.
            </para>
             </important> 
            <para>
            When you create a security group, you specify a friendly name of your choice. You
            can have a security group for use in EC2-Classic with the same name as a security
            group for use in a VPC. However, you can't have two security groups for use in EC2-Classic
            with the same name or two security groups for use in a VPC with the same name.
            </para>
             
            <para>
            You have a default security group for use in EC2-Classic and a default security group
            for use in your VPC. If you don't specify a security group when you launch an instance,
            the instance is launched into the appropriate default security group. A default security
            group includes a default rule that grants instances unrestricted network access to
            each other.
            </para>
             
            <para>
            You can add or remove rules from your security groups using <a>AuthorizeSecurityGroupIngress</a>,
            <a>AuthorizeSecurityGroupEgress</a>, <a>RevokeSecurityGroupIngress</a>, and <a>RevokeSecurityGroupEgress</a>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateSecurityGroupRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateSecurityGroupRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates CreateSecurityGroupRequest with the parameterized properties
            </summary>
            <param name="groupName">The name of the security group. Constraints: Up to 255 characters in length Constraints for EC2-Classic: ASCII characters Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</param>
            <param name="description">A description for the security group. This is informational only.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSecurityGroupRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the security group. This is informational only.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSecurityGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the security group.
            </para>
             
            <para>
            Constraints: Up to 255 characters in length
            </para>
             
            <para>
            Constraints for EC2-Classic: ASCII characters
            </para>
             
            <para>
            Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSecurityGroupRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            [EC2-VPC] The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateSecurityGroupResponse">
            <summary>
            Configuration for accessing Amazon CreateSecurityGroup service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateSecurityGroupResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSecurityGroupResult.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The ID of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSecurityGroupResponse.CreateSecurityGroupResult">
            <summary>
            Gets and sets the CreateSecurityGroupResult property.
            Represents the output of a CreateSecurityGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateSnapshotRequest">
            <summary>
            Container for the parameters to the CreateSnapshot operation.
            Creates a snapshot of an Amazon EBS volume and stores it in Amazon S3. You can use
            snapshots for backups, to make copies of Amazon EBS volumes, and to save data before
            shutting down an instance.
            
             
            <para>
            When a snapshot is created, any AWS Marketplace product codes that are associated
            with the source volume are propagated to the snapshot.
            </para>
             
            <para>
            You can take a snapshot of an attached volume that is in use. However, snapshots only
            capture data that has been written to your Amazon EBS volume at the time the snapshot
            command is issued; this may exclude any data that has been cached by any applications
            or the operating system. If you can pause any file systems on the volume long enough
            to take a snapshot, your snapshot should be complete. However, if you cannot pause
            all file writes to the volume, you should unmount the volume from within the instance,
            issue the snapshot command, and then remount the volume to ensure a consistent and
            complete snapshot. You may remount and use your volume while the snapshot status is
            <code>pending</code>.
            </para>
             
            <para>
            To create a snapshot for Amazon EBS volumes that serve as root devices, you should
            stop the instance before taking the snapshot.
            </para>
             
            <para>
            Snapshots that are taken from encrypted volumes are automatically encrypted. Volumes
            that are created from encrypted snapshots are also automatically encrypted. Your encrypted
            volumes and any associated snapshots always remain protected.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html">Amazon
            Elastic Block Store</a> and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateSnapshotRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateSnapshotRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates CreateSnapshotRequest with the parameterized properties
            </summary>
            <param name="volumeId">The ID of the Amazon EBS volume.</param>
            <param name="description">A description for the snapshot.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSnapshotRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSnapshotRequest.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the Amazon EBS volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateSnapshotResponse">
            <summary>
            Configuration for accessing Amazon CreateSnapshot service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateSnapshotResult">
            <summary>
            Contains the response data from the CreateSnapshot operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSnapshotResponse.CreateSnapshotResult">
            <summary>
            Gets and sets the CreateSnapshotResult property.
            Represents the output of a CreateSnapshot operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateSpotDatafeedSubscriptionRequest">
            <summary>
            Container for the parameters to the CreateSpotDatafeedSubscription operation.
            Creates a datafeed for Spot Instances, enabling you to view Spot Instance usage logs.
            You can create one data feed per AWS account. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html">Spot
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateSpotDatafeedSubscriptionRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateSpotDatafeedSubscriptionRequest.#ctor(System.String)">
            <summary>
            Instantiates CreateSpotDatafeedSubscriptionRequest with the parameterized properties
            </summary>
            <param name="bucket">The Amazon S3 bucket in which to store the Spot Instance datafeed. Constraints: Must be a valid bucket associated with your AWS account.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSpotDatafeedSubscriptionRequest.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            The Amazon S3 bucket in which to store the Spot Instance datafeed.
            </para>
             
            <para>
            Constraints: Must be a valid bucket associated with your AWS account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSpotDatafeedSubscriptionRequest.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            A prefix for the datafeed file names.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateSpotDatafeedSubscriptionResponse">
            <summary>
            Configuration for accessing Amazon CreateSpotDatafeedSubscription service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateSpotDatafeedSubscriptionResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSpotDatafeedSubscriptionResult.SpotDatafeedSubscription">
            <summary>
            Gets and sets the property SpotDatafeedSubscription. 
            <para>
            The Spot Instance datafeed subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSpotDatafeedSubscriptionResponse.CreateSpotDatafeedSubscriptionResult">
            <summary>
            Gets and sets the CreateSpotDatafeedSubscriptionResult property.
            Represents the output of a CreateSpotDatafeedSubscription operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateSubnetRequest">
            <summary>
            Container for the parameters to the CreateSubnet operation.
            Creates a subnet in an existing VPC.
            
             
            <para>
            When you create each subnet, you provide the VPC ID and the CIDR block you want for
            the subnet. After you create a subnet, you can't change its CIDR block. The subnet's
            CIDR block can be the same as the VPC's CIDR block (assuming you want only a single
            subnet in the VPC), or a subset of the VPC's CIDR block. If you create more than one
            subnet in a VPC, the subnets' CIDR blocks must not overlap. The smallest subnet (and
            VPC) you can create uses a /28 netmask (16 IP addresses), and the largest uses a /16
            netmask (65,536 IP addresses).
            </para>
             <important> 
            <para>
            AWS reserves both the first four and the last IP address in each subnet's CIDR block.
            They're not available for use.
            </para>
             </important> 
            <para>
            If you add more than one subnet to a VPC, they're set up in a star topology with a
            logical router in the middle.
            </para>
             
            <para>
            For more information about subnets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your
            VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateSubnetRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateSubnetRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates CreateSubnetRequest with the parameterized properties
            </summary>
            <param name="vpcId">The ID of the VPC.</param>
            <param name="cidrBlock">The network range for the subnet, in CIDR notation. For example, <code>10.0.0.0/24</code>.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSubnetRequest.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone for the subnet.
            </para>
             
            <para>
            Default: Amazon EC2 selects one for you (recommended).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSubnetRequest.CidrBlock">
            <summary>
            Gets and sets the property CidrBlock. 
            <para>
            The network range for the subnet, in CIDR notation. For example, <code>10.0.0.0/24</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSubnetRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateSubnetResponse">
            <summary>
            Configuration for accessing Amazon CreateSubnet service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateSubnetResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSubnetResult.Subnet">
            <summary>
            Gets and sets the property Subnet. 
            <para>
            Information about the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateSubnetResponse.CreateSubnetResult">
            <summary>
            Gets and sets the CreateSubnetResult property.
            Represents the output of a CreateSubnet operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateTagsRequest">
            <summary>
            Container for the parameters to the CreateTags operation.
            Adds or overwrites one or more tags for the specified EC2 resource or resources. Each
            resource can have a maximum of 10 tags. Each tag consists of a key and optional value.
            Tag keys must be unique per resource.
            
             
            <para>
            For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateTagsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateTagsRequest.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{Amazon.EC2.Model.Tag})">
            <summary>
            Instantiates CreateTagsRequest with the parameterized properties
            </summary>
            <param name="resources">The IDs of one or more resources to tag. For example, ami-1a2b3c4d.</param>
            <param name="tags">One or more tags. The <code>value</code> parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string. </param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateTagsRequest.Resources">
            <summary>
            Gets and sets the property Resources. 
            <para>
            The IDs of one or more resources to tag. For example, ami-1a2b3c4d.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateTagsRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            One or more tags. The <code>value</code> parameter is required, but if you don't want
            the tag to have a value, specify the parameter with no value, and we set the value
            to an empty string. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateTagsResponse">
            <summary>
            Configuration for accessing Amazon CreateTags service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateTagsResponse.CreateTagsResult">
            <summary>
            Gets and sets the CreateTagsResult property.
            Represents the output of a CreateTags operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVolumePermission">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumePermission.Group">
            <summary>
            Gets and sets the property Group. 
            <para>
            The specific group that is to be added or removed from a volume's list of create volume
            permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumePermission.UserId">
            <summary>
            Gets and sets the property UserId. 
            <para>
            The specific AWS account ID that is to be added or removed from a volume's list of
            create volume permissions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVolumePermissionModifications">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumePermissionModifications.Add">
            <summary>
            Gets and sets the property Add. 
            <para>
            Adds a specific AWS account ID or group to a volume's list of create volume permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumePermissionModifications.Remove">
            <summary>
            Gets and sets the property Remove. 
            <para>
            Removes a specific AWS account ID or group from a volume's list of create volume permissions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVolumeRequest">
            <summary>
            Container for the parameters to the CreateVolume operation.
            Creates an Amazon EBS volume that can be attached to an instance in the same Availability
            Zone. The volume is created in the specified region.
            
             
            <para>
            You can create a new empty volume or restore a volume from an Amazon EBS snapshot.
            Any AWS Marketplace product codes from the snapshot are propagated to the volume.
            </para>
             
            <para>
            You can create encrypted volumes with the <code>Encrypted</code> parameter. Encrypted
            volumes may only be attached to instances that support Amazon EBS encryption. Volumes
            that are created from encrypted snapshots are also automatically encrypted. For more
            information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon
            EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-creating-volume.html">Creating
            or Restoring an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateVolumeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateVolumeRequest.#ctor(System.String,System.Int32)">
            <summary>
            Instantiates CreateVolumeRequest with the parameterized properties
            </summary>
            <param name="availabilityZone">The Availability Zone in which to create the volume. Use <a>DescribeAvailabilityZones</a> to list the Availability Zones that are currently available to you.</param>
            <param name="size">The size of the volume, in GiBs. Constraints: If the volume type is <code>io1</code>, the minimum size of the volume is 10 GiB. Default: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.</param>
        </member>
        <member name="M:Amazon.EC2.Model.CreateVolumeRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates CreateVolumeRequest with the parameterized properties
            </summary>
            <param name="availabilityZone">The Availability Zone in which to create the volume. Use <a>DescribeAvailabilityZones</a> to list the Availability Zones that are currently available to you.</param>
            <param name="snapshotId">The snapshot from which to create the volume.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumeRequest.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone in which to create the volume. Use <a>DescribeAvailabilityZones</a>
            to list the Availability Zones that are currently available to you.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumeRequest.Encrypted">
            <summary>
            Gets and sets the property Encrypted. 
            <para>
            Specifies whether the volume should be encrypted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumeRequest.Iops">
            <summary>
            Gets and sets the property Iops. 
            <para>
            The number of I/O operations per second (IOPS) that the volume supports. This parameter
            is not used with Magnetic or General Purpose (SSD) volumes, but is required when the
            volume type is <code>io1</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumeRequest.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the volume, in GiBs.
            </para>
             
            <para>
            Constraints: If the volume type is <code>io1</code>, the minimum size of the volume
            is 10 GiB.
            </para>
             
            <para>
            Default: If you're creating the volume from a snapshot and don't specify a volume
            size, the default is the snapshot size.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumeRequest.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The snapshot from which to create the volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumeRequest.VolumeType">
            <summary>
            Gets and sets the property VolumeType. 
            <para>
            The volume type. This can be <code>gp2</code> for General Purpose (SSD) volumes, <code>io1</code>
            for Provisioned IOPS (SSD) volumes, or <code>standard</code> for Magnetic volumes.
            </para>
             
            <para>
            Default: <code>standard</code>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVolumeResponse">
            <summary>
            Configuration for accessing Amazon CreateVolume service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVolumeResult">
            <summary>
            Contains the response data from the CreateVolume operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVolumeResponse.CreateVolumeResult">
            <summary>
            Gets and sets the CreateVolumeResult property.
            Represents the output of a CreateVolume operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpcPeeringConnectionRequest">
            <summary>
            Container for the parameters to the CreateVpcPeeringConnection operation.
            Requests a VPC peering connection between two VPCs: a requester VPC that you own and
            a peer VPC with which to create the connection. The peer VPC can belong to another
            AWS account. The requester VPC and peer VPC cannot have overlapping CIDR blocks.
            
             
            <para>
            The owner of the peer VPC must accept the peering request to activate the peering
            connection. The VPC peering connection request expires after 7 days, after which it
            cannot be accepted or rejected.
            </para>
             
            <para>
            A <code>CreateVpcPeeringConnection</code> request between VPCs with overlapping CIDR
            blocks results in the VPC peering connection having a status of <code>failed</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcPeeringConnectionRequest.PeerOwnerId">
            <summary>
            Gets and sets the property PeerOwnerId. 
            <para>
            The AWS account ID of the owner of the peer VPC.
            </para>
             
            <para>
            Default: Your AWS account ID
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcPeeringConnectionRequest.PeerVpcId">
            <summary>
            Gets and sets the property PeerVpcId. 
            <para>
            The ID of the VPC with which you are creating the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcPeeringConnectionRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the requester VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpcPeeringConnectionResponse">
            <summary>
            Configuration for accessing Amazon CreateVpcPeeringConnection service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpcPeeringConnectionResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcPeeringConnectionResult.VpcPeeringConnection">
            <summary>
            Gets and sets the property VpcPeeringConnection. 
            <para>
            Information about the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcPeeringConnectionResponse.CreateVpcPeeringConnectionResult">
            <summary>
            Gets and sets the CreateVpcPeeringConnectionResult property.
            Represents the output of a CreateVpcPeeringConnection operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpcRequest">
            <summary>
            Container for the parameters to the CreateVpc operation.
            Creates a VPC with the specified CIDR block.
            
             
            <para>
            The smallest VPC you can create uses a /28 netmask (16 IP addresses), and the largest
            uses a /16 netmask (65,536 IP addresses). To help you decide how big to make your
            VPC, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your
            VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
             
            <para>
            By default, each instance you launch in the VPC has the default DHCP options, which
            includes only a default DNS server that we provide (AmazonProvidedDNS). For more information
            about DHCP options, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateVpcRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateVpcRequest.#ctor(System.String)">
            <summary>
            Instantiates CreateVpcRequest with the parameterized properties
            </summary>
            <param name="cidrBlock">The network range for the VPC, in CIDR notation. For example, <code>10.0.0.0/16</code>.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcRequest.CidrBlock">
            <summary>
            Gets and sets the property CidrBlock. 
            <para>
            The network range for the VPC, in CIDR notation. For example, <code>10.0.0.0/16</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcRequest.InstanceTenancy">
            <summary>
            Gets and sets the property InstanceTenancy. 
            <para>
            The supported tenancy options for instances launched into the VPC. A value of <code>default</code>
            means that instances can be launched with any tenancy; a value of <code>dedicated</code>
            means all instances launched into the VPC are launched as dedicated tenancy instances
            regardless of the tenancy assigned to the instance at launch. Dedicated tenancy instances
            runs on single-tenant hardware.
            </para>
             
            <para>
            Default: <code>default</code>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpcResponse">
            <summary>
            Configuration for accessing Amazon CreateVpc service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpcResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcResult.Vpc">
            <summary>
            Gets and sets the property Vpc. 
            <para>
            Information about the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpcResponse.CreateVpcResult">
            <summary>
            Gets and sets the CreateVpcResult property.
            Represents the output of a CreateVpc operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpnConnectionRequest">
            <summary>
            Container for the parameters to the CreateVpnConnection operation.
            Creates a VPN connection between an existing virtual private gateway and a VPN customer
            gateway. The only supported connection type is <code>ipsec.1</code>.
            
             
            <para>
            The response includes information that you need to give to your network administrator
            to configure your customer gateway.
            </para>
             <important> 
            <para>
            We strongly recommend that you use HTTPS when calling this operation because the response
            contains sensitive cryptographic information for configuring your customer gateway.
            </para>
             </important> 
            <para>
            If you decide to shut down your VPN connection for any reason and later create a new
            VPN connection, you must reconfigure your customer gateway with the new information
            returned from this call.
            </para>
             
            <para>
            For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateVpnConnectionRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateVpnConnectionRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Instantiates CreateVpnConnectionRequest with the parameterized properties
            </summary>
            <param name="type">The type of VPN connection.</param>
            <param name="customerGatewayId">The ID of the customer gateway.</param>
            <param name="vpnGatewayId">The ID of the virtual private gateway.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnConnectionRequest.CustomerGatewayId">
            <summary>
            Gets and sets the property CustomerGatewayId. 
            <para>
            The ID of the customer gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnConnectionRequest.Options">
            <summary>
            Gets and sets the property Options. 
            <para>
            Indicates whether the VPN connection requires static routes. If you are creating a
            VPN connection for a device that does not support BGP, you must specify <code>true</code>.
            </para>
             
            <para>
            Default: <code>false</code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnConnectionRequest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of VPN connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnConnectionRequest.VpnGatewayId">
            <summary>
            Gets and sets the property VpnGatewayId. 
            <para>
            The ID of the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpnConnectionResponse">
            <summary>
            Configuration for accessing Amazon CreateVpnConnection service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpnConnectionResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnConnectionResult.VpnConnection">
            <summary>
            Gets and sets the property VpnConnection. 
            <para>
            Information about the VPN connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnConnectionResponse.CreateVpnConnectionResult">
            <summary>
            Gets and sets the CreateVpnConnectionResult property.
            Represents the output of a CreateVpnConnection operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpnConnectionRouteRequest">
            <summary>
            Container for the parameters to the CreateVpnConnectionRoute operation.
            Creates a static route associated with a VPN connection between an existing virtual
            private gateway and a VPN customer gateway. The static route allows traffic to be
            routed from the virtual private gateway to the VPN customer gateway.
            
             
            <para>
            For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnConnectionRouteRequest.DestinationCidrBlock">
            <summary>
            Gets and sets the property DestinationCidrBlock. 
            <para>
            The CIDR block associated with the local subnet of the customer network.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnConnectionRouteRequest.VpnConnectionId">
            <summary>
            Gets and sets the property VpnConnectionId. 
            <para>
            The ID of the VPN connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpnConnectionRouteResponse">
            <summary>
            Configuration for accessing Amazon CreateVpnConnectionRoute service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnConnectionRouteResponse.CreateVpnConnectionRouteResult">
            <summary>
            Gets and sets the CreateVpnConnectionRouteResult property.
            Represents the output of a CreateVpnConnectionRoute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpnGatewayRequest">
            <summary>
            Container for the parameters to the CreateVpnGateway operation.
            Creates a virtual private gateway. A virtual private gateway is the endpoint on the
            VPC side of your VPN connection. You can create a virtual private gateway before creating
            the VPC itself.
            
             
            <para>
            For more information about virtual private gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateVpnGatewayRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.CreateVpnGatewayRequest.#ctor(Amazon.EC2.GatewayType)">
            <summary>
            Instantiates CreateVpnGatewayRequest with the parameterized properties
            </summary>
            <param name="type">The type of VPN connection this virtual private gateway supports.</param>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnGatewayRequest.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone for the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnGatewayRequest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of VPN connection this virtual private gateway supports.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpnGatewayResponse">
            <summary>
            Configuration for accessing Amazon CreateVpnGateway service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CreateVpnGatewayResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnGatewayResult.VpnGateway">
            <summary>
            Gets and sets the property VpnGateway. 
            <para>
            Information about the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CreateVpnGatewayResponse.CreateVpnGatewayResult">
            <summary>
            Gets and sets the CreateVpnGatewayResult property.
            Represents the output of a CreateVpnGateway operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.CustomerGateway">
            <summary>
            Describes a customer gateway.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CustomerGateway.BgpAsn">
            <summary>
            Gets and sets the property BgpAsn. 
            <para>
            The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CustomerGateway.CustomerGatewayId">
            <summary>
            Gets and sets the property CustomerGatewayId. 
            <para>
            The ID of the customer gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CustomerGateway.IpAddress">
            <summary>
            Gets and sets the property IpAddress. 
            <para>
            The Internet-routable IP address of the customer gateway's outside interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CustomerGateway.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the customer gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CustomerGateway.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the customer gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.CustomerGateway.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of VPN connection the customer gateway supports.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteCustomerGatewayRequest">
            <summary>
            Container for the parameters to the DeleteCustomerGateway operation.
            Deletes the specified customer gateway. You must delete the VPN connection before
            you can delete the customer gateway.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteCustomerGatewayRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteCustomerGatewayRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteCustomerGatewayRequest with the parameterized properties
            </summary>
            <param name="customerGatewayId">The ID of the customer gateway.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteCustomerGatewayRequest.CustomerGatewayId">
            <summary>
            Gets and sets the property CustomerGatewayId. 
            <para>
            The ID of the customer gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteCustomerGatewayResponse">
            <summary>
            Configuration for accessing Amazon DeleteCustomerGateway service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteCustomerGatewayResponse.DeleteCustomerGatewayResult">
            <summary>
            Gets and sets the DeleteCustomerGatewayResult property.
            Represents the output of a DeleteCustomerGateway operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteDhcpOptionsRequest">
            <summary>
            Container for the parameters to the DeleteDhcpOptions operation.
            Deletes the specified set of DHCP options. You must disassociate the set of DHCP options
            before you can delete it. You can disassociate the set of DHCP options by associating
            either a new set of options or the default set of options with the VPC.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteDhcpOptionsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteDhcpOptionsRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteDhcpOptionsRequest with the parameterized properties
            </summary>
            <param name="dhcpOptionsId">The ID of the DHCP options set.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteDhcpOptionsRequest.DhcpOptionsId">
            <summary>
            Gets and sets the property DhcpOptionsId. 
            <para>
            The ID of the DHCP options set.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteDhcpOptionsResponse">
            <summary>
            Configuration for accessing Amazon DeleteDhcpOptions service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteDhcpOptionsResponse.DeleteDhcpOptionsResult">
            <summary>
            Gets and sets the DeleteDhcpOptionsResult property.
            Represents the output of a DeleteDhcpOptions operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteInternetGatewayRequest">
            <summary>
            Container for the parameters to the DeleteInternetGateway operation.
            Deletes the specified Internet gateway. You must detach the Internet gateway from
            the VPC before you can delete it.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteInternetGatewayRequest.InternetGatewayId">
            <summary>
            Gets and sets the property InternetGatewayId. 
            <para>
            The ID of the Internet gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteInternetGatewayResponse">
            <summary>
            Configuration for accessing Amazon DeleteInternetGateway service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteInternetGatewayResponse.DeleteInternetGatewayResult">
            <summary>
            Gets and sets the DeleteInternetGatewayResult property.
            Represents the output of a DeleteInternetGateway operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteKeyPairRequest">
            <summary>
            Container for the parameters to the DeleteKeyPair operation.
            Deletes the specified key pair, by removing the public key from Amazon EC2.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteKeyPairRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteKeyPairRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteKeyPairRequest with the parameterized properties
            </summary>
            <param name="keyName">The name of the key pair.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteKeyPairRequest.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
            The name of the key pair.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteKeyPairResponse">
            <summary>
            Configuration for accessing Amazon DeleteKeyPair service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteKeyPairResponse.DeleteKeyPairResult">
            <summary>
            Gets and sets the DeleteKeyPairResult property.
            Represents the output of a DeleteKeyPair operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteNetworkAclEntryRequest">
            <summary>
            Container for the parameters to the DeleteNetworkAclEntry operation.
            Deletes the specified ingress or egress entry (rule) from the specified network ACL.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteNetworkAclEntryRequest.Egress">
            <summary>
            Gets and sets the property Egress. 
            <para>
            Indicates whether the rule is an egress rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteNetworkAclEntryRequest.NetworkAclId">
            <summary>
            Gets and sets the property NetworkAclId. 
            <para>
            The ID of the network ACL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteNetworkAclEntryRequest.RuleNumber">
            <summary>
            Gets and sets the property RuleNumber. 
            <para>
            The rule number of the entry to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteNetworkAclEntryResponse">
            <summary>
            Configuration for accessing Amazon DeleteNetworkAclEntry service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteNetworkAclEntryResponse.DeleteNetworkAclEntryResult">
            <summary>
            Gets and sets the DeleteNetworkAclEntryResult property.
            Represents the output of a DeleteNetworkAclEntry operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteNetworkAclRequest">
            <summary>
            Container for the parameters to the DeleteNetworkAcl operation.
            Deletes the specified network ACL. You can't delete the ACL if it's associated with
            any subnets. You can't delete the default network ACL.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteNetworkAclRequest.NetworkAclId">
            <summary>
            Gets and sets the property NetworkAclId. 
            <para>
            The ID of the network ACL.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteNetworkAclResponse">
            <summary>
            Configuration for accessing Amazon DeleteNetworkAcl service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteNetworkAclResponse.DeleteNetworkAclResult">
            <summary>
            Gets and sets the DeleteNetworkAclResult property.
            Represents the output of a DeleteNetworkAcl operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteNetworkInterfaceRequest">
            <summary>
            Container for the parameters to the DeleteNetworkInterface operation.
            Deletes the specified network interface. You must detach the network interface before
            you can delete it.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteNetworkInterfaceRequest.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteNetworkInterfaceResponse">
            <summary>
            Configuration for accessing Amazon DeleteNetworkInterface service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteNetworkInterfaceResponse.DeleteNetworkInterfaceResult">
            <summary>
            Gets and sets the DeleteNetworkInterfaceResult property.
            Represents the output of a DeleteNetworkInterface operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeletePlacementGroupRequest">
            <summary>
            Container for the parameters to the DeletePlacementGroup operation.
            Deletes the specified placement group. You must terminate all instances in the placement
            group before you can delete the placement group. For more information about placement
            groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeletePlacementGroupRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeletePlacementGroupRequest.#ctor(System.String)">
            <summary>
            Instantiates DeletePlacementGroupRequest with the parameterized properties
            </summary>
            <param name="groupName">The name of the placement group.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeletePlacementGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the placement group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeletePlacementGroupResponse">
            <summary>
            Configuration for accessing Amazon DeletePlacementGroup service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeletePlacementGroupResponse.DeletePlacementGroupResult">
            <summary>
            Gets and sets the DeletePlacementGroupResult property.
            Represents the output of a DeletePlacementGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteRouteRequest">
            <summary>
            Container for the parameters to the DeleteRoute operation.
            Deletes the specified route from the specified route table.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteRouteRequest.DestinationCidrBlock">
            <summary>
            Gets and sets the property DestinationCidrBlock. 
            <para>
            The CIDR range for the route. The value you specify must match the CIDR for the route
            exactly.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteRouteRequest.RouteTableId">
            <summary>
            Gets and sets the property RouteTableId. 
            <para>
            The ID of the route table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteRouteResponse">
            <summary>
            Configuration for accessing Amazon DeleteRoute service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteRouteResponse.DeleteRouteResult">
            <summary>
            Gets and sets the DeleteRouteResult property.
            Represents the output of a DeleteRoute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteRouteTableRequest">
            <summary>
            Container for the parameters to the DeleteRouteTable operation.
            Deletes the specified route table. You must disassociate the route table from any
            subnets before you can delete it. You can't delete the main route table.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteRouteTableRequest.RouteTableId">
            <summary>
            Gets and sets the property RouteTableId. 
            <para>
            The ID of the route table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteRouteTableResponse">
            <summary>
            Configuration for accessing Amazon DeleteRouteTable service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteRouteTableResponse.DeleteRouteTableResult">
            <summary>
            Gets and sets the DeleteRouteTableResult property.
            Represents the output of a DeleteRouteTable operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteSecurityGroupRequest">
            <summary>
            Container for the parameters to the DeleteSecurityGroup operation.
            Deletes a security group.
            
             
            <para>
            If you attempt to delete a security group that is associated with an instance, or
            is referenced by another security group, the operation fails with <code>InvalidGroup.InUse</code>
            in EC2-Classic or <code>DependencyViolation</code> in EC2-VPC.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteSecurityGroupRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteSecurityGroupRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteSecurityGroupRequest with the parameterized properties
            </summary>
            <param name="groupName">[EC2-Classic, default VPC] The name of the security group.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteSecurityGroupRequest.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The ID of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteSecurityGroupRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            [EC2-Classic, default VPC] The name of the security group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteSecurityGroupResponse">
            <summary>
            Configuration for accessing Amazon DeleteSecurityGroup service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteSecurityGroupResponse.DeleteSecurityGroupResult">
            <summary>
            Gets and sets the DeleteSecurityGroupResult property.
            Represents the output of a DeleteSecurityGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteSnapshotRequest">
            <summary>
            Container for the parameters to the DeleteSnapshot operation.
            Deletes the specified snapshot.
            
             
            <para>
            When you make periodic snapshots of a volume, the snapshots are incremental, and only
            the blocks on the device that have changed since your last snapshot are saved in the
            new snapshot. When you delete a snapshot, only the data not needed for any other snapshot
            is removed. So regardless of which prior snapshots have been deleted, all active snapshots
            will have access to all the information needed to restore the volume.
            </para>
             
            <para>
            You cannot delete a snapshot of the root device of an Amazon EBS volume used by a
            registered AMI. You must first de-register the AMI before you can delete the snapshot.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-snapshot.html">Deleting
            an Amazon EBS Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteSnapshotRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteSnapshotRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteSnapshotRequest with the parameterized properties
            </summary>
            <param name="snapshotId">The ID of the Amazon EBS snapshot.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteSnapshotRequest.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The ID of the Amazon EBS snapshot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteSnapshotResponse">
            <summary>
            Configuration for accessing Amazon DeleteSnapshot service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteSnapshotResponse.DeleteSnapshotResult">
            <summary>
            Gets and sets the DeleteSnapshotResult property.
            Represents the output of a DeleteSnapshot operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteSpotDatafeedSubscriptionRequest">
            <summary>
            Container for the parameters to the DeleteSpotDatafeedSubscription operation.
            Deletes the datafeed for Spot Instances. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html">Spot
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteSpotDatafeedSubscriptionResponse">
            <summary>
            Configuration for accessing Amazon DeleteSpotDatafeedSubscription service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteSpotDatafeedSubscriptionResponse.DeleteSpotDatafeedSubscriptionResult">
            <summary>
            Gets and sets the DeleteSpotDatafeedSubscriptionResult property.
            Represents the output of a DeleteSpotDatafeedSubscription operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteSubnetRequest">
            <summary>
            Container for the parameters to the DeleteSubnet operation.
            Deletes the specified subnet. You must terminate all running instances in the subnet
            before you can delete the subnet.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteSubnetRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteSubnetRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteSubnetRequest with the parameterized properties
            </summary>
            <param name="subnetId">The ID of the subnet.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteSubnetRequest.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteSubnetResponse">
            <summary>
            Configuration for accessing Amazon DeleteSubnet service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteSubnetResponse.DeleteSubnetResult">
            <summary>
            Gets and sets the DeleteSubnetResult property.
            Represents the output of a DeleteSubnet operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteTagsRequest">
            <summary>
            Container for the parameters to the DeleteTags operation.
            Deletes the specified set of tags from the specified set of resources. This call is
            designed to follow a <code>DescribeTags</code> request.
            
             
            <para>
            For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteTagsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteTagsRequest.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates DeleteTagsRequest with the parameterized properties
            </summary>
            <param name="resources">The ID of the resource. For example, ami-1a2b3c4d. You can specify more than one resource ID.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteTagsRequest.Resources">
            <summary>
            Gets and sets the property Resources. 
            <para>
            The ID of the resource. For example, ami-1a2b3c4d. You can specify more than one resource
            ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteTagsRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            One or more tags to delete. If you omit the <code>value</code> parameter, we delete
            the tag regardless of its value. If you specify this parameter with an empty string
            as the value, we delete the key only if its value is an empty string.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteTagsResponse">
            <summary>
            Configuration for accessing Amazon DeleteTags service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteTagsResponse.DeleteTagsResult">
            <summary>
            Gets and sets the DeleteTagsResult property.
            Represents the output of a DeleteTags operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVolumeRequest">
            <summary>
            Container for the parameters to the DeleteVolume operation.
            Deletes the specified Amazon EBS volume. The volume must be in the <code>available</code>
            state (not attached to an instance).
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-volume.html">Deleting
            an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteVolumeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteVolumeRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteVolumeRequest with the parameterized properties
            </summary>
            <param name="volumeId">The ID of the volume.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVolumeRequest.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVolumeResponse">
            <summary>
            Configuration for accessing Amazon DeleteVolume service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVolumeResponse.DeleteVolumeResult">
            <summary>
            Gets and sets the DeleteVolumeResult property.
            Represents the output of a DeleteVolume operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpcPeeringConnectionRequest">
            <summary>
            Container for the parameters to the DeleteVpcPeeringConnection operation.
            Deletes a VPC peering connection. Either the owner of the requester VPC or the owner
            of the peer VPC can delete the VPC peering connection if it's in the <code>active</code>
            state. The owner of the requester VPC can delete a VPC peering connection in the <code>pending-acceptance</code>
            state.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVpcPeeringConnectionRequest.VpcPeeringConnectionId">
            <summary>
            Gets and sets the property VpcPeeringConnectionId. 
            <para>
            The ID of the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpcPeeringConnectionResponse">
            <summary>
               Returns information about the DeleteVpcPeeringConnection response metadata.
               The DeleteVpcPeeringConnection operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpcRequest">
            <summary>
            Container for the parameters to the DeleteVpc operation.
            Deletes the specified VPC. You must detach or delete all gateways and resources that
            are associated with the VPC before you can delete it. For example, you must terminate
            all instances running in the VPC, delete all security groups associated with the VPC
            (except the default one), delete all route tables associated with the VPC (except
            the default one), and so on.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteVpcRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteVpcRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteVpcRequest with the parameterized properties
            </summary>
            <param name="vpcId">The ID of the VPC.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVpcRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpcResponse">
            <summary>
            Configuration for accessing Amazon DeleteVpc service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVpcResponse.DeleteVpcResult">
            <summary>
            Gets and sets the DeleteVpcResult property.
            Represents the output of a DeleteVpc operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpnConnectionRequest">
            <summary>
            Container for the parameters to the DeleteVpnConnection operation.
            Deletes the specified VPN connection.
            
             
            <para>
            If you're deleting the VPC and its associated components, we recommend that you detach
            the virtual private gateway from the VPC and delete the VPC before deleting the VPN
            connection.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteVpnConnectionRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteVpnConnectionRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteVpnConnectionRequest with the parameterized properties
            </summary>
            <param name="vpnConnectionId">The ID of the VPN connection.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVpnConnectionRequest.VpnConnectionId">
            <summary>
            Gets and sets the property VpnConnectionId. 
            <para>
            The ID of the VPN connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpnConnectionResponse">
            <summary>
            Configuration for accessing Amazon DeleteVpnConnection service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVpnConnectionResponse.DeleteVpnConnectionResult">
            <summary>
            Gets and sets the DeleteVpnConnectionResult property.
            Represents the output of a DeleteVpnConnection operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpnConnectionRouteRequest">
            <summary>
            Container for the parameters to the DeleteVpnConnectionRoute operation.
            Deletes the specified static route associated with a VPN connection between an existing
            virtual private gateway and a VPN customer gateway. The static route allows traffic
            to be routed from the virtual private gateway to the VPN customer gateway.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVpnConnectionRouteRequest.DestinationCidrBlock">
            <summary>
            Gets and sets the property DestinationCidrBlock. 
            <para>
            The CIDR block associated with the local subnet of the customer network.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVpnConnectionRouteRequest.VpnConnectionId">
            <summary>
            Gets and sets the property VpnConnectionId. 
            <para>
            The ID of the VPN connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpnConnectionRouteResponse">
            <summary>
            Configuration for accessing Amazon DeleteVpnConnectionRoute service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVpnConnectionRouteResponse.DeleteVpnConnectionRouteResult">
            <summary>
            Gets and sets the DeleteVpnConnectionRouteResult property.
            Represents the output of a DeleteVpnConnectionRoute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpnGatewayRequest">
            <summary>
            Container for the parameters to the DeleteVpnGateway operation.
            Deletes the specified virtual private gateway. We recommend that before you delete
            a virtual private gateway, you detach it from the VPC and delete the VPN connection.
            Note that you don't need to delete the virtual private gateway if you plan to delete
            and recreate the VPN connection between your VPC and your network.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteVpnGatewayRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeleteVpnGatewayRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteVpnGatewayRequest with the parameterized properties
            </summary>
            <param name="vpnGatewayId">The ID of the virtual private gateway.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVpnGatewayRequest.VpnGatewayId">
            <summary>
            Gets and sets the property VpnGatewayId. 
            <para>
            The ID of the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeleteVpnGatewayResponse">
            <summary>
            Configuration for accessing Amazon DeleteVpnGateway service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeleteVpnGatewayResponse.DeleteVpnGatewayResult">
            <summary>
            Gets and sets the DeleteVpnGatewayResult property.
            Represents the output of a DeleteVpnGateway operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeregisterImageRequest">
            <summary>
            Container for the parameters to the DeregisterImage operation.
            Deregisters the specified AMI. After you deregister an AMI, it can't be used to launch
            new instances.
            
             
            <para>
            This command does not delete the AMI.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeregisterImageRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DeregisterImageRequest.#ctor(System.String)">
            <summary>
            Instantiates DeregisterImageRequest with the parameterized properties
            </summary>
            <param name="imageId">The ID of the AMI.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DeregisterImageRequest.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the AMI.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DeregisterImageResponse">
            <summary>
            Configuration for accessing Amazon DeregisterImage service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DeregisterImageResponse.DeregisterImageResult">
            <summary>
            Gets and sets the DeregisterImageResult property.
            Represents the output of a DeregisterImage operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeAccountAttributesRequest">
            <summary>
            Container for the parameters to the DescribeAccountAttributes operation.
            Describes the specified attribute of your AWS account.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAccountAttributesRequest.AttributeNames">
            <summary>
            Gets and sets the property AttributeNames. 
            <para>
            One or more account attribute names.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeAccountAttributesResponse">
            <summary>
            Configuration for accessing Amazon DescribeAccountAttributes service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeAccountAttributesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAccountAttributesResult.AccountAttributes">
            <summary>
            Gets and sets the property AccountAttributes. 
            <para>
            Information about one or more account attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAccountAttributesResponse.DescribeAccountAttributesResult">
            <summary>
            Gets and sets the DescribeAccountAttributesResult property.
            Represents the output of a DescribeAccountAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeAddressesRequest">
            <summary>
            Container for the parameters to the DescribeAddresses operation.
            Describes one or more of your Elastic IP addresses.
            
             
            <para>
            An Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For
            more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic
            IP Addresses</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAddressesRequest.AllocationIds">
            <summary>
            Gets and sets the property AllocationIds. 
            <para>
            [EC2-VPC] One or more allocation IDs.
            </para>
             
            <para>
            Default: Describes all your Elastic IP addresses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAddressesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>allocation-id</code> - [EC2-VPC] The allocation ID for the address.
            </para>
             </li> <li> 
            <para>
            <code>association-id</code> - [EC2-VPC] The association ID for the address.
            </para>
             </li> <li> 
            <para>
            <code>domain</code> - Indicates whether the address is for use in EC2-Classic (<code>standard</code>)
            or in a VPC (<code>vpc</code>).
            </para>
             </li> <li> 
            <para>
            <code>instance-id</code> - The ID of the instance the address is associated with,
            if any.
            </para>
             </li> <li> 
            <para>
            <code>network-interface-id</code> - [EC2-VPC] The ID of the network interface that
            the address is associated with, if any.
            </para>
             </li> <li> 
            <para>
            <code>network-interface-owner-id</code> - The AWS account ID of the owner.
            </para>
             </li> <li> 
            <para>
            <code>private-ip-address</code> - [EC2-VPC] The private IP address associated with
            the Elastic IP address.
            </para>
             </li> <li> 
            <para>
            <code>public-ip</code> - The Elastic IP address.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAddressesRequest.PublicIps">
            <summary>
            Gets and sets the property PublicIps. 
            <para>
            [EC2-Classic] One or more Elastic IP addresses.
            </para>
             
            <para>
            Default: Describes all your Elastic IP addresses.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeAddressesResponse">
            <summary>
            Configuration for accessing Amazon DescribeAddresses service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeAddressesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAddressesResult.Addresses">
            <summary>
            Gets and sets the property Addresses. 
            <para>
            Information about one or more Elastic IP addresses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAddressesResponse.DescribeAddressesResult">
            <summary>
            Gets and sets the DescribeAddressesResult property.
            Represents the output of a DescribeAddresses operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeAvailabilityZonesRequest">
            <summary>
            Container for the parameters to the DescribeAvailabilityZones operation.
            Describes one or more of the Availability Zones that are available to you. The results
            include zones only for the region you're currently using. If there is an event impacting
            an Availability Zone, you can use this request to view the state and any provided
            message for that Availability Zone.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html">Regions
            and Availability Zones</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAvailabilityZonesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>message</code> - Information about the Availability Zone.
            </para>
             </li> <li> 
            <para>
            <code>region-name</code> - The name of the region for the Availability Zone (for example,
            <code>us-east-1</code>).
            </para>
             </li> <li> 
            <para>
            <code>state</code> - The state of the Availability Zone (<code>available</code> |
            <code>impaired</code> | <code>unavailable</code>).
            </para>
             </li> <li> 
            <para>
            <code>zone-name</code> - The name of the Availability Zone (for example, <code>us-east-1a</code>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAvailabilityZonesRequest.ZoneNames">
            <summary>
            Gets and sets the property ZoneNames. 
            <para>
            The names of one or more Availability Zones.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeAvailabilityZonesResponse">
            <summary>
            Configuration for accessing Amazon DescribeAvailabilityZones service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeAvailabilityZonesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAvailabilityZonesResult.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
            Information about one or more Availability Zones.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeAvailabilityZonesResponse.DescribeAvailabilityZonesResult">
            <summary>
            Gets and sets the DescribeAvailabilityZonesResult property.
            Represents the output of a DescribeAvailabilityZones operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeBundleTasksRequest">
            <summary>
            Container for the parameters to the DescribeBundleTasks operation.
            Describes one or more of your bundling tasks.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeBundleTasksRequest.BundleIds">
            <summary>
            Gets and sets the property BundleIds. 
            <para>
            One or more bundle task IDs.
            </para>
             
            <para>
            Default: Describes all your bundle tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeBundleTasksRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>bundle-id</code> - The ID of the bundle task.
            </para>
             </li> <li> 
            <para>
            <code>error-code</code> - If the task failed, the error code returned.
            </para>
             </li> <li> 
            <para>
            <code>error-message</code> - If the task failed, the error message returned.
            </para>
             </li> <li> 
            <para>
            <code>instance-id</code> - The ID of the instance.
            </para>
             </li> <li> 
            <para>
            <code>progress</code> - The level of task completion, as a percentage (for example,
            20%).
            </para>
             </li> <li> 
            <para>
            <code>s3-bucket</code> - The Amazon S3 bucket to store the AMI.
            </para>
             </li> <li> 
            <para>
            <code>s3-prefix</code> - The beginning of the AMI name.
            </para>
             </li> <li> 
            <para>
            <code>start-time</code> - The time the task started (for example, 2013-09-15T17:15:20.000Z).
            </para>
             </li> <li> 
            <para>
            <code>state</code> - The state of the task (<code>pending</code> | <code>waiting-for-shutdown</code>
            | <code>bundling</code> | <code>storing</code> | <code>cancelling</code> | <code>complete</code>
            | <code>failed</code>).
            </para>
             </li> <li> 
            <para>
            <code>update-time</code> - The time of the most recent update for the task.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeBundleTasksResponse">
            <summary>
            Configuration for accessing Amazon DescribeBundleTasks service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeBundleTasksResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeBundleTasksResult.BundleTasks">
            <summary>
            Gets and sets the property BundleTasks. 
            <para>
            Information about one or more bundle tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeBundleTasksResponse.DescribeBundleTasksResult">
            <summary>
            Gets and sets the DescribeBundleTasksResult property.
            Represents the output of a DescribeBundleTasks operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeConversionTasksRequest">
            <summary>
            Container for the parameters to the DescribeConversionTasks operation.
            Describes one or more of your conversion tasks. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UploadingYourInstancesandVolumes.html">Using
            the Command Line Tools to Import Your Virtual Machine to Amazon EC2</a> in the <i>Amazon
            Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeConversionTasksRequest.ConversionTaskIds">
            <summary>
            Gets and sets the property ConversionTaskIds. 
            <para>
            One or more conversion task IDs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeConversionTasksRequest.Filters">
            <summary>
            Gets and sets the property Filters.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeConversionTasksResponse">
            <summary>
            Configuration for accessing Amazon DescribeConversionTasks service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeConversionTasksResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeConversionTasksResult.ConversionTasks">
            <summary>
            Gets and sets the property ConversionTasks.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeConversionTasksResponse.DescribeConversionTasksResult">
            <summary>
            Gets and sets the DescribeConversionTasksResult property.
            Represents the output of a DescribeConversionTasks operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeCustomerGatewaysRequest">
            <summary>
            Container for the parameters to the DescribeCustomerGateways operation.
            Describes one or more of your VPN customer gateways.
            
             
            <para>
            For more information about VPN customer gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeCustomerGatewaysRequest.CustomerGatewayIds">
            <summary>
            Gets and sets the property CustomerGatewayIds. 
            <para>
            One or more customer gateway IDs.
            </para>
             
            <para>
            Default: Describes all your customer gateways.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeCustomerGatewaysRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>bgp-asn</code> - The customer gateway's Border Gateway Protocol (BGP) Autonomous
            System Number (ASN).
            </para>
             </li> <li> 
            <para>
            <code>customer-gateway-id</code> - The ID of the customer gateway.
            </para>
             </li> <li> 
            <para>
            <code>ip-address</code> - The IP address of the customer gateway's Internet-routable
            external interface.
            </para>
             </li> <li> 
            <para>
            <code>state</code> - The state of the customer gateway (<code>pending</code> | <code>available</code>
            | <code>deleting</code> | <code>deleted</code>).
            </para>
             </li> <li> 
            <para>
            <code>type</code> - The type of customer gateway. Currently, the only supported type
            is <code>ipsec.1</code>.
            </para>
             </li> <li> 
            <para>
            <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
            <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent
            of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose"
            and the filter "tag-value=X", you get any resources assigned both the tag key Purpose
            (regardless of what the tag's value is), and the tag value X (regardless of what the
            tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i>
            filter.
            </para>
             </li> <li> 
            <para>
            <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeCustomerGatewaysResponse">
            <summary>
            Configuration for accessing Amazon DescribeCustomerGateways service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeCustomerGatewaysResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeCustomerGatewaysResult.CustomerGateways">
            <summary>
            Gets and sets the property CustomerGateways. 
            <para>
            Information about one or more customer gateways.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeCustomerGatewaysResponse.DescribeCustomerGatewaysResult">
            <summary>
            Gets and sets the DescribeCustomerGatewaysResult property.
            Represents the output of a DescribeCustomerGateways operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeDhcpOptionsRequest">
            <summary>
            Container for the parameters to the DescribeDhcpOptions operation.
            Describes one or more of your DHCP options sets.
            
             
            <para>
            For more information about DHCP options sets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html">DHCP
            Options Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeDhcpOptionsRequest.DhcpOptionsIds">
            <summary>
            Gets and sets the property DhcpOptionsIds. 
            <para>
            The IDs of one or more DHCP options sets.
            </para>
             
            <para>
            Default: Describes all your DHCP options sets.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeDhcpOptionsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>dhcp-options-id</code> - The ID of a set of DHCP options.
            </para>
             </li> <li> 
            <para>
            <code>key</code> - The key for one of the options (for example, <code>domain-name</code>).
            </para>
             </li> <li> 
            <para>
            <code>value</code> - The value for one of the options.
            </para>
             </li> <li> 
            <para>
            <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
            <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent
            of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose"
            and the filter "tag-value=X", you get any resources assigned both the tag key Purpose
            (regardless of what the tag's value is), and the tag value X (regardless of what the
            tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i>
            filter.
            </para>
             </li> <li> 
            <para>
            <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeDhcpOptionsResponse">
            <summary>
            Configuration for accessing Amazon DescribeDhcpOptions service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeDhcpOptionsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeDhcpOptionsResult.DhcpOptions">
            <summary>
            Gets and sets the property DhcpOptions. 
            <para>
            Information about one or more DHCP options sets.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeDhcpOptionsResponse.DescribeDhcpOptionsResult">
            <summary>
            Gets and sets the DescribeDhcpOptionsResult property.
            Represents the output of a DescribeDhcpOptions operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeExportTasksRequest">
            <summary>
            Container for the parameters to the DescribeExportTasks operation.
            Describes one or more of your export tasks.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeExportTasksRequest.ExportTaskIds">
            <summary>
            Gets and sets the property ExportTaskIds. 
            <para>
            One or more export task IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeExportTasksResponse">
            <summary>
            Configuration for accessing Amazon DescribeExportTasks service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeExportTasksResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeExportTasksResult.ExportTasks">
            <summary>
            Gets and sets the property ExportTasks.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeExportTasksResponse.DescribeExportTasksResult">
            <summary>
            Gets and sets the DescribeExportTasksResult property.
            Represents the output of a DescribeExportTasks operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeImageAttributeRequest">
            <summary>
            Container for the parameters to the DescribeImageAttribute operation.
            Describes the specified attribute of the specified AMI. You can specify only one attribute
            at a time.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DescribeImageAttributeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DescribeImageAttributeRequest.#ctor(System.String,Amazon.EC2.ImageAttributeName)">
            <summary>
            Instantiates DescribeImageAttributeRequest with the parameterized properties
            </summary>
            <param name="imageId">The ID of the AMI.</param>
            <param name="attribute">The AMI attribute.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImageAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The AMI attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImageAttributeRequest.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the AMI.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeImageAttributeResponse">
            <summary>
            Configuration for accessing Amazon DescribeImageAttribute service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeImageAttributeResult">
            <summary>
            Contains the response data from the DescribeImageAttribute operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImageAttributeResponse.DescribeImageAttributeResult">
            <summary>
            Gets and sets the DescribeImageAttributeResult property.
            Represents the output of a DescribeImageAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeImagesRequest">
            <summary>
            Container for the parameters to the DescribeImages operation.
            Describes one or more of the images (AMIs, AKIs, and ARIs) available to you. Images
            available to you include public images, private images that you own, and private images
            owned by other AWS accounts but for which you have explicit launch permissions.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImagesRequest.ExecutableUsers">
            <summary>
            Gets and sets the property ExecutableUsers. 
            <para>
            Scopes the images by users with explicit launch permissions. Specify an AWS account
            ID, <code>self</code> (the sender of the request), or <code>all</code> (public AMIs).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImagesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>architecture</code> - The image architecture (<code>i386</code> | <code>x86_64</code>).
            </para>
             </li> <li> 
            <para>
            <code>block-device-mapping.delete-on-termination</code> - A Boolean value that indicates
            whether the Amazon EBS volume is deleted on instance termination.
            </para>
             </li> <li> 
            <para>
            <code>block-device-mapping.device-name</code> - The device name for the Amazon EBS
            volume (for example, <code>/dev/sdh</code>).
            </para>
             </li> <li> 
            <para>
            <code>block-device-mapping.snapshot-id</code> - The ID of the snapshot used for the
            Amazon EBS volume.
            </para>
             </li> <li> 
            <para>
            <code>block-device-mapping.volume-size</code> - The volume size of the Amazon EBS
            volume, in GiB.
            </para>
             </li> <li> 
            <para>
            <code>block-device-mapping.volume-type</code> - The volume type of the Amazon EBS
            volume (<code>gp2</code> | <code>standard</code> | <code>io1</code>).
            </para>
             </li> <li> 
            <para>
            <code>description</code> - The description of the image (provided during image creation).
            </para>
             </li> <li> 
            <para>
            <code>hypervisor</code> - The hypervisor type (<code>ovm</code> | <code>xen</code>).
            </para>
             </li> <li> 
            <para>
            <code>image-id</code> - The ID of the image.
            </para>
             </li> <li> 
            <para>
            <code>image-type</code> - The image type (<code>machine</code> | <code>kernel</code>
            | <code>ramdisk</code>).
            </para>
             </li> <li> 
            <para>
            <code>is-public</code> - A Boolean that indicates whether the image is public.
            </para>
             </li> <li> 
            <para>
            <code>kernel-id</code> - The kernel ID.
            </para>
             </li> <li> 
            <para>
            <code>manifest-location</code> - The location of the image manifest.
            </para>
             </li> <li> 
            <para>
            <code>name</code> - The name of the AMI (provided during image creation).
            </para>
             </li> <li> 
            <para>
            <code>owner-alias</code> - The AWS account alias (for example, <code>amazon</code>).
            </para>
             </li> <li> 
            <para>
            <code>owner-id</code> - The AWS account ID of the image owner.
            </para>
             </li> <li> 
            <para>
            <code>platform</code> - The platform. To only list Windows-based AMIs, use <code>windows</code>.
            </para>
             </li> <li> 
            <para>
            <code>product-code</code> - The product code.
            </para>
             </li> <li> 
            <para>
            <code>product-code.type</code> - The type of the product code (<code>devpay</code>
            | <code>marketplace</code>).
            </para>
             </li> <li> 
            <para>
            <code>ramdisk-id</code> - The RAM disk ID.
            </para>
             </li> <li> 
            <para>
            <code>root-device-name</code> - The name of the root device volume (for example, <code>/dev/sda1</code>).
            </para>
             </li> <li> 
            <para>
            <code>root-device-type</code> - The type of the root device volume (<code>ebs</code>
            | <code>instance-store</code>).
            </para>
             </li> <li> 
            <para>
            <code>state</code> - The state of the image (<code>available</code> | <code>pending</code>
            | <code>failed</code>).
            </para>
             </li> <li> 
            <para>
            <code>state-reason-code</code> - The reason code for the state change.
            </para>
             </li> <li> 
            <para>
            <code>state-reason-message</code> - The message for the state change.
            </para>
             </li> <li> 
            <para>
            <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
            <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent
            of the tag-value filter. For example, if you use both the filter "tag-key=Purpose"
            and the filter "tag-value=X", you get any resources assigned both the tag key Purpose
            (regardless of what the tag's value is), and the tag value X (regardless of what the
            tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i>
            filter.
            </para>
             </li> <li> 
            <para>
            <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
            <code>virtualization-type</code> - The virtualization type (<code>paravirtual</code>
            | <code>hvm</code>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImagesRequest.ImageIds">
            <summary>
            Gets and sets the property ImageIds. 
            <para>
            One or more image IDs.
            </para>
             
            <para>
            Default: Describes all images available to you.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImagesRequest.Owners">
            <summary>
            Gets and sets the property Owners. 
            <para>
            Filters the images by the owner. Specify an AWS account ID, <code>amazon</code> (owner
            is Amazon), <code>aws-marketplace</code> (owner is AWS Marketplace), <code>self</code>
            (owner is the sender of the request), or <code>all</code> (all owners).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeImagesResponse">
            <summary>
            Configuration for accessing Amazon DescribeImages service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeImagesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImagesResult.Images">
            <summary>
            Gets and sets the property Images. 
            <para>
            Information about one or more images.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeImagesResponse.DescribeImagesResult">
            <summary>
            Gets and sets the DescribeImagesResult property.
            Represents the output of a DescribeImages operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeInstanceAttributeRequest">
            <summary>
            Container for the parameters to the DescribeInstanceAttribute operation.
            Describes the specified attribute of the specified instance. You can specify only
            one attribute at a time.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DescribeInstanceAttributeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DescribeInstanceAttributeRequest.#ctor(System.String,Amazon.EC2.InstanceAttributeName)">
            <summary>
            Instantiates DescribeInstanceAttributeRequest with the parameterized properties
            </summary>
            <param name="instanceId">The ID of the instance.</param>
            <param name="attribute">The instance attribute.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The instance attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceAttributeRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeInstanceAttributeResponse">
            <summary>
            Configuration for accessing Amazon DescribeInstanceAttribute service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeInstanceAttributeResult">
            <summary>
            Contains the response data from the DescribeInstanceAttribute operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceAttributeResponse.DescribeInstanceAttributeResult">
            <summary>
            Gets and sets the DescribeInstanceAttributeResult property.
            Represents the output of a DescribeInstanceAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeInstancesRequest">
            <summary>
            Container for the parameters to the DescribeInstances operation.
            Describes one or more of your instances.
            
             
            <para>
            If you specify one or more instance IDs, Amazon EC2 returns information for those
            instances. If you do not specify instance IDs, Amazon EC2 returns information for
            all relevant instances. If you specify an instance ID that is not valid, an error
            is returned. If you specify an instance that you do not own, it is not included in
            the returned results.
            </para>
             
            <para>
            Recently terminated instances might appear in the returned results. This interval
            is usually less than one hour.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstancesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>architecture</code> - The instance architecture (<code>i386</code> | <code>x86_64</code>).
            </para>
             </li> <li> 
            <para>
            <code>availability-zone</code> - The Availability Zone of the instance.
            </para>
             </li> <li> 
            <para>
            <code>block-device-mapping.attach-time</code> - The attach time for an Amazon EBS
            volume mapped to the instance.
            </para>
             </li> <li> 
            <para>
            <code>block-device-mapping.delete-on-termination</code> - A Boolean that indicates
            whether the Amazon EBS volume is deleted on instance termination.
            </para>
             </li> <li> 
            <para>
            <code>block-device-mapping.device-name</code> - The device name for the Amazon EBS
            volume (for example, <code>/dev/sdh</code>).
            </para>
             </li> <li> 
            <para>
            <code>block-device-mapping.status</code> - The status for the Amazon EBS volume (<code>attaching</code>
            | <code>attached</code> | <code>detaching</code> | <code>detached</code>).
            </para>
             </li> <li> 
            <para>
            <code>block-device-mapping.volume-id</code> - The volume ID of the Amazon EBS volume.
            </para>
             </li> <li> 
            <para>
            <code>client-token</code> - The idempotency token you provided when you launched the
            instance.
            </para>
             </li> <li> 
            <para>
            <code>dns-name</code> - The public DNS name of the instance.
            </para>
             </li> <li> 
            <para>
            <code>group-id</code> - The ID of the security group for the instance. If the instance
            is in EC2-Classic or a default VPC, you can use <code>group-name</code> instead.
            </para>
             </li> <li> 
            <para>
            <code>group-name</code> - The name of the security group for the instance. If the
            instance is in a nondefault VPC, you must use <code>group-id</code> instead.
            </para>
             </li> <li> 
            <para>
            <code>hypervisor</code> - The hypervisor type of the instance (<code>ovm</code> |
            <code>xen</code>).
            </para>
             </li> <li> 
            <para>
            <code>iam-instance-profile.arn</code> - The instance profile associated with the instance.
            Specified as an ARN.
            </para>
             </li> <li> 
            <para>
            <code>image-id</code> - The ID of the image used to launch the instance.
            </para>
             </li> <li> 
            <para>
            <code>instance-id</code> - The ID of the instance.
            </para>
             </li> <li> 
            <para>
            <code>instance-lifecycle</code> - Indicates whether this is a Spot Instance (<code>spot</code>).
            </para>
             </li> <li> 
            <para>
            <code>instance-state-code</code> - The state of the instance, as a 16-bit unsigned
            integer. The high byte is an opaque internal value and should be ignored. The low
            byte is set based on the state represented. The valid values are: 0 (pending), 16
            (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).
            </para>
             </li> <li> 
            <para>
            <code>instance-state-name</code> - The state of the instance (<code>pending</code>
            | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code>
            | <code>stopped</code>).
            </para>
             </li> <li> 
            <para>
            <code>instance-type</code> - The type of instance (for example, <code>m1.small</code>).
            </para>
             </li> <li> 
            <para>
            <code>instance.group-id</code> - The ID of the security group for the instance. If
            the instance is in EC2-Classic or a default VPC, you can use <code>instance.group-name</code>
            instead.
            </para>
             </li> <li> 
            <para>
            <code>instance.group-name</code> - The name of the security group for the instance.
            If the instance is in a nondefault VPC, you must use <code>instance.group-id</code>
            instead.
            </para>
             </li> <li> 
            <para>
            <code>ip-address</code> - The public IP address of the instance.
            </para>
             </li> <li> 
            <para>
            <code>kernel-id</code> - The kernel ID.
            </para>
             </li> <li> 
            <para>
            <code>key-name</code> - The name of the key pair used when the instance was launched.
            </para>
             </li> <li> 
            <para>
            <code>launch-index</code> - When launching multiple instances, this is the index for
            the instance in the launch group (for example, 0, 1, 2, and so on). 
            </para>
             </li> <li> 
            <para>
            <code>launch-time</code> - The time when the instance was launched.
            </para>
             </li> <li> 
            <para>
            <code>monitoring-state</code> - Indicates whether monitoring is enabled for the instance
            (<code>disabled</code> | <code>enabled</code>).
            </para>
             </li> <li> 
            <para>
            <code>owner-id</code> - The AWS account ID of the instance owner.
            </para>
             </li> <li> 
            <para>
            <code>placement-group-name</code> - The name of the placement group for the instance.
            </para>
             </li> <li> 
            <para>
            <code>platform</code> - The platform. Use <code>windows</code> if you have Windows
            instances; otherwise, leave blank.
            </para>
             </li> <li> 
            <para>
            <code>private-dns-name</code> - The private DNS name of the instance.
            </para>
             </li> <li> 
            <para>
            <code>private-ip-address</code> - The private IP address of the instance.
            </para>
             </li> <li> 
            <para>
            <code>product-code</code> - The product code associated with the AMI used to launch
            the instance.
            </para>
             </li> <li> 
            <para>
            <code>product-code.type</code> - The type of product code (<code>devpay</code> | <code>marketplace</code>).
            </para>
             </li> <li> 
            <para>
            <code>ramdisk-id</code> - The RAM disk ID.
            </para>
             </li> <li> 
            <para>
            <code>reason</code> - The reason for the current state of the instance (for example,
            shows "User Initiated [date]" when you stop or terminate the instance). Similar to
            the state-reason-code filter.
            </para>
             </li> <li> 
            <para>
            <code>requester-id</code> - The ID of the entity that launched the instance on your
            behalf (for example, AWS Management Console, Auto Scaling, and so on).
            </para>
             </li> <li> 
            <para>
            <code>reservation-id</code> - The ID of the instance's reservation. A reservation
            ID is created any time you launch an instance. A reservation ID has a one-to-one relationship
            with an instance launch request, but can be associated with more than one instance
            if you launch multiple instances using the same launch request. For example, if you
            launch one instance, you'll get one reservation ID. If you launch ten instances using
            the same launch request, you'll also get one reservation ID.
            </para>
             </li> <li> 
            <para>
            <code>root-device-name</code> - The name of the root device for the instance (for
            example, <code>/dev/sda1</code>).
            </para>
             </li> <li> 
            <para>
            <code>root-device-type</code> - The type of root device that the instance uses (<code>ebs</code>
            | <code>instance-store</code>).
            </para>
             </li> <li> 
            <para>
            <code>source-dest-check</code> - Indicates whether the instance performs source/destination
            checking. A value of <code>true</code> means that checking is enabled, and <code>false</code>
            means checking is disabled. The value must be <code>false</code> for the instance
            to perform network address translation (NAT) in your VPC. 
            </para>
             </li> <li> 
            <para>
            <code>spot-instance-request-id</code> - The ID of the Spot Instance request.
            </para>
             </li> <li> 
            <para>
            <code>state-reason-code</code> - The reason code for the state change.
            </para>
             </li> <li> 
            <para>
            <code>state-reason-message</code> - A message that describes the state change.
            </para>
             </li> <li> 
            <para>
            <code>subnet-id</code> - The ID of the subnet for the instance.
            </para>
             </li> <li> 
            <para>
            <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource, where <code>tag</code>:<i>key</i> is the tag's key. 
            </para>
             </li> <li> 
            <para>
            <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent
            of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose"
            and the filter "tag-value=X", you get any resources assigned both the tag key Purpose
            (regardless of what the tag's value is), and the tag value X (regardless of what the
            tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i>
            filter.
            </para>
             </li> <li> 
            <para>
            <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
            <code>tenancy</code> - The tenancy of an instance (<code>dedicated</code> | <code>default</code>).
            </para>
             </li> <li> 
            <para>
            <code>virtualization-type</code> - The virtualization type of the instance (<code>paravirtual</code>
            | <code>hvm</code>).
            </para>
             </li> <li> 
            <para>
            <code>vpc-id</code> - The ID of the VPC that the instance is running in.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.description</code> - The description of the network interface.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.subnet-id</code> - The ID of the subnet for the network interface.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.vpc-id</code> - The ID of the VPC for the network interface.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.network-interface.id</code> - The ID of the network interface.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.owner-id</code> - The ID of the owner of the network interface.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.availability-zone</code> - The Availability Zone for the network
            interface.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.requester-id</code> - The requester ID for the network interface.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.requester-managed</code> - Indicates whether the network interface
            is being managed by AWS.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.status</code> - The status of the network interface (<code>available</code>)
            | <code>in-use</code>).
            </para>
             </li> <li> 
            <para>
            <code>network-interface.mac-address</code> - The MAC address of the network interface.
            </para>
             </li> <li> 
            <para>
            <code>network-interface-private-dns-name</code> - The private DNS name of the network
            interface.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.source-destination-check</code> - Whether the network interface
            performs source/destination checking. A value of <code>true</code> means checking
            is enabled, and <code>false</code> means checking is disabled. The value must be <code>false</code>
            for the network interface to perform network address translation (NAT) in your VPC.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.group-id</code> - The ID of a security group associated with
            the network interface.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.group-name</code> - The name of a security group associated
            with the network interface.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.attachment.attachment-id</code> - The ID of the interface
            attachment.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.attachment.instance-id</code> - The ID of the instance to
            which the network interface is attached.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.attachment.instance-owner-id</code> - The owner ID of the
            instance to which the network interface is attached.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.addresses.private-ip-address</code> - The private IP address
            associated with the network interface.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.attachment.device-index</code> - The device index to which
            the network interface is attached.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.attachment.status</code> - The status of the attachment (<code>attaching</code>
            | <code>attached</code> | <code>detaching</code> | <code>detached</code>).
            </para>
             </li> <li> 
            <para>
            <code>network-interface.attachment.attach-time</code> - The time that the network
            interface was attached to an instance.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.attachment.delete-on-termination</code> - Specifies whether
            the attachment is deleted when an instance is terminated.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.addresses.primary</code> - Specifies whether the IP address
            of the network interface is the primary private IP address.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.addresses.association.public-ip</code> - The ID of the association
            of an Elastic IP address with a network interface.
            </para>
             </li> <li> 
            <para>
            <code>network-interface.addresses.association.ip-owner-id</code> - The owner ID of
            the private IP address associated with the network interface.
            </para>
             </li> <li> 
            <para>
            <code>association.public-ip</code> - The address of the Elastic IP address bound to
            the network interface.
            </para>
             </li> <li> 
            <para>
            <code>association.ip-owner-id</code> - The owner of the Elastic IP address associated
            with the network interface.
            </para>
             </li> <li> 
            <para>
            <code>association.allocation-id</code> - The allocation ID returned when you allocated
            the Elastic IP address for your network interface.
            </para>
             </li> <li> 
            <para>
            <code>association.association-id</code> - The association ID returned when the network
            interface was associated with an IP address.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstancesRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
            One or more instance IDs.
            </para>
             
            <para>
            Default: Describes all your instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstancesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results. If the value
            is greater than 1000, we return only 1000 items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstancesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a prior
            call.)
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeInstancesResponse">
            <summary>
            Configuration for accessing Amazon DescribeInstances service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeInstancesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstancesResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use when requesting the next set of items. If there are no additional
            items to return, the string is empty.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstancesResult.Reservations">
            <summary>
            Gets and sets the property Reservations. 
            <para>
            One or more reservations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstancesResponse.DescribeInstancesResult">
            <summary>
            Gets and sets the DescribeInstancesResult property.
            Represents the output of a DescribeInstances operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeInstanceStatusRequest">
            <summary>
            Container for the parameters to the DescribeInstanceStatus operation.
            Describes the status of one or more instances, including any scheduled events.
            
             
            <para>
            Instance status has two main components:
            </para>
             <ul> <li> 
            <para>
            System Status reports impaired functionality that stems from issues related to the
            systems that support an instance, such as such as hardware failures and network connectivity
            problems. This call reports such problems as impaired reachability.
            </para>
             </li> <li> 
            <para>
            Instance Status reports impaired functionality that arises from problems internal
            to the instance. This call reports such problems as impaired reachability.
            </para>
             </li> </ul> 
            <para>
            Instance status provides information about four types of scheduled events for an instance
            that may require your attention:
            </para>
             <ul> <li> 
            <para>
            Scheduled Reboot: When Amazon EC2 determines that an instance must be rebooted, the
            instances status returns one of two event codes: <code>system-reboot</code> or <code>instance-reboot</code>.
            System reboot commonly occurs if certain maintenance or upgrade operations require
            a reboot of the underlying host that supports an instance. Instance reboot commonly
            occurs if the instance must be rebooted, rather than the underlying host. Rebooting
            events include a scheduled start and end time.
            </para>
             </li> <li> 
            <para>
            System Maintenance: When Amazon EC2 determines that an instance requires maintenance
            that requires power or network impact, the instance status is the event code <code>system-maintenance</code>.
            System maintenance is either power maintenance or network maintenance. For power maintenance,
            your instance will be unavailable for a brief period of time and then rebooted. For
            network maintenance, your instance will experience a brief loss of network connectivity.
            System maintenance events include a scheduled start and end time. You will also be
            notified by email if one of your instances is set for system maintenance. The email
            message indicates when your instance is scheduled for maintenance.
            </para>
             </li> <li> 
            <para>
            Scheduled Retirement: When Amazon EC2 determines that an instance must be shut down,
            the instance status is the event code <code>instance-retirement</code>. Retirement
            commonly occurs when the underlying host is degraded and must be replaced. Retirement
            events include a scheduled start and end time. You will also be notified by email
            if one of your instances is set to retiring. The email message indicates when your
            instance will be permanently retired.
            </para>
             </li> <li> 
            <para>
            Scheduled Stop: When Amazon EC2 determines that an instance must be shut down, the
            instances status returns an event code called <code>instance-stop</code>. Stop events
            include a scheduled start and end time. You will also be notified by email if one
            of your instances is set to stop. The email message indicates when your instance will
            be stopped.
            </para>
             </li> </ul> 
            <para>
            When your instance is retired, it will either be terminated (if its root device type
            is the instance-store) or stopped (if its root device type is an EBS volume). Instances
            stopped due to retirement will not be restarted, but you can do so manually. You can
            also avoid retirement of EBS-backed instances by manually restarting your instance
            when its event code is <code>instance-retirement</code>. This ensures that your instance
            is started on a different underlying host.
            </para>
             
            <para>
            For more information about failed status checks, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstances.html">Troubleshooting
            Instances with Failed Status Checks</a> in the <i>Amazon Elastic Compute Cloud User
            Guide</i>. For more information about working with scheduled events, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html#schedevents_actions">Working
            with an Instance That Has a Scheduled Event</a> in the <i>Amazon Elastic Compute Cloud
            User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceStatusRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>availability-zone</code> - The Availability Zone of the instance.
            </para>
             </li> <li> 
            <para>
            <code>event.code</code> - The code identifying the type of event (<code>instance-reboot</code>
            | <code>system-reboot</code> | <code>system-maintenance</code> | <code>instance-retirement</code>
            | <code>instance-stop</code>).
            </para>
             </li> <li> 
            <para>
            <code>event.description</code> - A description of the event.
            </para>
             </li> <li> 
            <para>
            <code>event.not-after</code> - The latest end time for the scheduled event.
            </para>
             </li> <li> 
            <para>
            <code>event.not-before</code> - The earliest start time for the scheduled event.
            </para>
             </li> <li> 
            <para>
            <code>instance-state-code</code> - A code representing the state of the instance,
            as a 16-bit unsigned integer. The high byte is an opaque internal value and should
            be ignored. The low byte is set based on the state represented. The valid values are
            0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and
            80 (stopped).
            </para>
             </li> <li> 
            <para>
            <code>instance-state-name</code> - The state of the instance (<code>pending</code>
            | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code>
            | <code>stopped</code>).
            </para>
             </li> <li> 
            <para>
            <code>instance-status.reachability</code> - Filters on instance status where the name
            is <code>reachability</code> (<code>passed</code> | <code>failed</code> | <code>initializing</code>
            | <code>insufficient-data</code>).
            </para>
             </li> <li> 
            <para>
            <code>instance-status.status</code> - The status of the instance (<code>ok</code>
            | <code>impaired</code> | <code>initializing</code> | <code>insufficient-data</code>
            | <code>not-applicable</code>).
            </para>
             </li> <li> 
            <para>
            <code>system-status.reachability</code> - Filters on system status where the name
            is <code>reachability</code> (<code>passed</code> | <code>failed</code> | <code>initializing</code>
            | <code>insufficient-data</code>).
            </para>
             </li> <li> 
            <para>
            <code>system-status.status</code> - The system status of the instance (<code>ok</code>
            | <code>impaired</code> | <code>initializing</code> | <code>insufficient-data</code>
            | <code>not-applicable</code>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceStatusRequest.IncludeAllInstances">
            <summary>
            Gets and sets the property IncludeAllInstances. 
            <para>
            When <code>true</code>, includes the health status for all instances. When <code>false</code>,
            includes the health status for running instances only.
            </para>
             
            <para>
            Default: <code>false</code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceStatusRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
            One or more instance IDs.
            </para>
             
            <para>
            Default: Describes all your instances.
            </para>
             
            <para>
            Constraints: Maximum 100 explicitly specified instance IDs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceStatusRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of paginated instance items per response.
            </para>
             
            <para>
            Default: 1000
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceStatusRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The next paginated set of results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeInstanceStatusResponse">
            <summary>
            Configuration for accessing Amazon DescribeInstanceStatus service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeInstanceStatusResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceStatusResult.InstanceStatuses">
            <summary>
            Gets and sets the property InstanceStatuses. 
            <para>
            One or more instance status descriptions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceStatusResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The next paginated set of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInstanceStatusResponse.DescribeInstanceStatusResult">
            <summary>
            Gets and sets the DescribeInstanceStatusResult property.
            Represents the output of a DescribeInstanceStatus operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeInternetGatewaysRequest">
            <summary>
            Container for the parameters to the DescribeInternetGateways operation.
            Describes one or more of your Internet gateways.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInternetGatewaysRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>attachment.state</code> - The current state of the attachment between the gateway
            and the VPC. Present only if a VPC is attached.
            </para>
             </li> <li> 
            <para>
            <code>attachment.vpc-id</code> - The ID of an attached VPC.
            </para>
             </li> <li> 
            <para>
            <code>internet-gateway-id</code> - The ID of the Internet gateway.
            </para>
             </li> <li> 
            <para>
            <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
            <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent
            of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose"
            and the filter "tag-value=X", you get any resources assigned both the tag key Purpose
            (regardless of what the tag's value is), and the tag value X (regardless of what the
            tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i>
            filter.
            </para>
             </li> <li> 
            <para>
            <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInternetGatewaysRequest.InternetGatewayIds">
            <summary>
            Gets and sets the property InternetGatewayIds. 
            <para>
            One or more Internet gateway IDs.
            </para>
             
            <para>
            Default: Describes all your Internet gateways.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeInternetGatewaysResponse">
            <summary>
            Configuration for accessing Amazon DescribeInternetGateways service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeInternetGatewaysResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInternetGatewaysResult.InternetGateways">
            <summary>
            Gets and sets the property InternetGateways. 
            <para>
            Information about one or more Internet gateways.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeInternetGatewaysResponse.DescribeInternetGatewaysResult">
            <summary>
            Gets and sets the DescribeInternetGatewaysResult property.
            Represents the output of a DescribeInternetGateways operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeKeyPairsRequest">
            <summary>
            Container for the parameters to the DescribeKeyPairs operation.
            Describes one or more of your key pairs.
            
             
            <para>
            For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeKeyPairsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>fingerprint</code> - The fingerprint of the key pair.
            </para>
             </li> <li> 
            <para>
            <code>key-name</code> - The name of the key pair.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeKeyPairsRequest.KeyNames">
            <summary>
            Gets and sets the property KeyNames. 
            <para>
            One or more key pair names.
            </para>
             
            <para>
            Default: Describes all your key pairs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeKeyPairsResponse">
            <summary>
            Configuration for accessing Amazon DescribeKeyPairs service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeKeyPairsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeKeyPairsResult.KeyPairs">
            <summary>
            Gets and sets the property KeyPairs. 
            <para>
            Information about one or more key pairs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeKeyPairsResponse.DescribeKeyPairsResult">
            <summary>
            Gets and sets the DescribeKeyPairsResult property.
            Represents the output of a DescribeKeyPairs operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeNetworkAclsRequest">
            <summary>
            Container for the parameters to the DescribeNetworkAcls operation.
            Describes one or more of your network ACLs.
            
             
            <para>
            For more information about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkAclsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>association.association-id</code> - The ID of an association ID for the ACL.
            </para>
             </li> <li> 
            <para>
            <code>association.network-acl-id</code> - The ID of the network ACL involved in the
            association.
            </para>
             </li> <li> 
            <para>
            <code>association.subnet-id</code> - The ID of the subnet involved in the association.
            </para>
             </li> <li> 
            <para>
            <code>default</code> - Indicates whether the ACL is the default network ACL for the
            VPC.
            </para>
             </li> <li> 
            <para>
            <code>entry.cidr</code> - The CIDR range specified in the entry.
            </para>
             </li> <li> 
            <para>
            <code>entry.egress</code> - Indicates whether the entry applies to egress traffic.
            </para>
             </li> <li> 
            <para>
            <code>entry.icmp.code</code> - The ICMP code specified in the entry, if any.
            </para>
             </li> <li> 
            <para>
            <code>entry.icmp.type</code> - The ICMP type specified in the entry, if any.
            </para>
             </li> <li> 
            <para>
            <code>entry.port-range.from</code> - The start of the port range specified in the
            entry. 
            </para>
             </li> <li> 
            <para>
            <code>entry.port-range.to</code> - The end of the port range specified in the entry.
            
            </para>
             </li> <li> 
            <para>
            <code>entry.protocol</code> - The protocol specified in the entry (<code>tcp</code>
            | <code>udp</code> | <code>icmp</code> or a protocol number).
            </para>
             </li> <li> 
            <para>
            <code>entry.rule-action</code> - Allows or denies the matching traffic (<code>allow</code>
            | <code>deny</code>).
            </para>
             </li> <li> 
            <para>
            <code>entry.rule-number</code> - The number of an entry (in other words, rule) in
            the ACL's set of entries.
            </para>
             </li> <li> 
            <para>
            <code>network-acl-id</code> - The ID of the network ACL.
            </para>
             </li> <li> 
            <para>
            <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
            <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent
            of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose"
            and the filter "tag-value=X", you get any resources assigned both the tag key Purpose
            (regardless of what the tag's value is), and the tag value X (regardless of what the
            tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i>
            filter.
            </para>
             </li> <li> 
            <para>
            <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
            <code>vpc-id</code> - The ID of the VPC for the network ACL.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkAclsRequest.NetworkAclIds">
            <summary>
            Gets and sets the property NetworkAclIds. 
            <para>
            One or more network ACL IDs.
            </para>
             
            <para>
            Default: Describes all your network ACLs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeNetworkAclsResponse">
            <summary>
            Configuration for accessing Amazon DescribeNetworkAcls service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeNetworkAclsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkAclsResult.NetworkAcls">
            <summary>
            Gets and sets the property NetworkAcls. 
            <para>
            Information about one or more network ACLs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkAclsResponse.DescribeNetworkAclsResult">
            <summary>
            Gets and sets the DescribeNetworkAclsResult property.
            Represents the output of a DescribeNetworkAcls operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeRequest">
            <summary>
            Container for the parameters to the DescribeNetworkInterfaceAttribute operation.
            Describes a network interface attribute. You can specify only one attribute at a time.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeRequest.Attachment">
            <summary>
            Gets and sets the property Attachment. 
            <para>
            The <c>attachment</c> attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The <c>description</c> attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeRequest.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            The <c>groupSet</c> attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeRequest.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeRequest.SourceDestCheck">
            <summary>
            Gets and sets the property SourceDestCheck. 
            <para>
            The <c>sourceDestCheck</c> attribute.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeResponse">
            <summary>
            Configuration for accessing Amazon DescribeNetworkInterfaceAttribute service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeResult.Attachment">
            <summary>
            Gets and sets the property Attachment. 
            <para>
            The attachment (if any) of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeResult.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeResult.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            The security groups associated with the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeResult.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeResult.SourceDestCheck">
            <summary>
            Gets and sets the property SourceDestCheck. 
            <para>
            Indicates whether source/destination checking is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfaceAttributeResponse.DescribeNetworkInterfaceAttributeResult">
            <summary>
            Gets and sets the DescribeNetworkInterfaceAttributeResult property.
            Represents the output of a DescribeNetworkInterfaceAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeNetworkInterfacesRequest">
            <summary>
            Container for the parameters to the DescribeNetworkInterfaces operation.
            Describes one or more of your network interfaces.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfacesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>addresses.private-ip-address</code> - The private IP addresses associated with
            the network interface.
            </para>
             </li> <li> 
            <para>
            <code>addresses.primary</code> - Whether the private IP address is the primary IP
            address associated with the network interface. 
            </para>
             </li> <li> 
            <para>
            <code>addresses.association.public-ip</code> - The association ID returned when the
            network interface was associated with the Elastic IP address.
            </para>
             </li> <li> 
            <para>
            <code>addresses.association.owner-id</code> - The owner ID of the addresses associated
            with the network interface.
            </para>
             </li> <li> 
            <para>
            <code>association.association-id</code> - The association ID returned when the network
            interface was associated with an IP address.
            </para>
             </li> <li> 
            <para>
            <code>association.allocation-id</code> - The allocation ID returned when you allocated
            the Elastic IP address for your network interface.
            </para>
             </li> <li> 
            <para>
            <code>association.ip-owner-id</code> - The owner of the Elastic IP address associated
            with the network interface.
            </para>
             </li> <li> 
            <para>
            <code>association.public-ip</code> - The address of the Elastic IP address bound to
            the network interface.
            </para>
             </li> <li> 
            <para>
            <code>association.public-dns-name</code> - The public DNS name for the network interface.
            </para>
             </li> <li> 
            <para>
            <code>attachment.attachment-id</code> - The ID of the interface attachment.
            </para>
             </li> <li> 
            <para>
            <code>attachment.instance-id</code> - The ID of the instance to which the network
            interface is attached.
            </para>
             </li> <li> 
            <para>
            <code>attachment.instance-owner-id</code> - The owner ID of the instance to which
            the network interface is attached.
            </para>
             </li> <li> 
            <para>
            <code>attachment.device-index</code> - The device index to which the network interface
            is attached.
            </para>
             </li> <li> 
            <para>
            <code>attachment.status</code> - The status of the attachment (<code>attaching</code>
            | <code>attached</code> | <code>detaching</code> | <code>detached</code>).
            </para>
             </li> <li> 
            <para>
            <code>attachment.attach.time</code> - The time that the network interface was attached
            to an instance.
            </para>
             </li> <li> 
            <para>
            <code>attachment.delete-on-termination</code> - Indicates whether the attachment is
            deleted when an instance is terminated.
            </para>
             </li> <li> 
            <para>
            <code>availability-zone</code> - The Availability Zone of the network interface.
            </para>
             </li> <li> 
            <para>
            <code>description</code> - The description of the network interface.
            </para>
             </li> <li> 
            <para>
            <code>group-id</code> - The ID of a security group associated with the network interface.
            </para>
             </li> <li> 
            <para>
            <code>group-name</code> - The name of a security group associated with the network
            interface.
            </para>
             </li> <li> 
            <para>
            <code>mac-address</code> - The MAC address of the network interface.
            </para>
             </li> <li> 
            <para>
            <code>network-interface-id</code> - The ID of the network interface.
            </para>
             </li> <li> 
            <para>
            <code>owner-id</code> - The AWS account ID of the network interface owner.
            </para>
             </li> <li> 
            <para>
            <code>private-ip-address</code> - The private IP address or addresses of the network
            interface.
            </para>
             </li> <li> 
            <para>
            <code>private-dns-name</code> - The private DNS name of the network interface.
            </para>
             </li> <li> 
            <para>
            <code>requester-id</code> - The ID of the entity that launched the instance on your
            behalf (for example, AWS Management Console, Auto Scaling, and so on).
            </para>
             </li> <li> 
            <para>
            <code>requester-managed</code> - Indicates whether the network interface is being
            managed by an AWS service (for example, AWS Management Console, Auto Scaling, and
            so on).
            </para>
             </li> <li> 
            <para>
            <code>source-desk-check</code> - Indicates whether the network interface performs
            source/destination checking. A value of <code>true</code> means checking is enabled,
            and <code>false</code> means checking is disabled. The value must be <code>false</code>
            for the network interface to perform Network Address Translation (NAT) in your VPC.
            
            </para>
             </li> <li> 
            <para>
            <code>status</code> - The status of the network interface. If the network interface
            is not attached to an instance, the status is <code>available</code>; if a network
            interface is attached to an instance the status is <code>in-use</code>.
            </para>
             </li> <li> 
            <para>
            <code>subnet-id</code> - The ID of the subnet for the network interface.
            </para>
             </li> <li> 
            <para>
            <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
            <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent
            of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose"
            and the filter "tag-value=X", you get any resources assigned both the tag key Purpose
            (regardless of what the tag's value is), and the tag value X (regardless of what the
            tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i>
            filter.
            </para>
             </li> <li> 
            <para>
            <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
            <code>vpc-id</code> - The ID of the VPC for the network interface.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfacesRequest.NetworkInterfaceIds">
            <summary>
            Gets and sets the property NetworkInterfaceIds. 
            <para>
            One or more network interface IDs.
            </para>
             
            <para>
            Default: Describes all your network interfaces.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeNetworkInterfacesResponse">
            <summary>
            Configuration for accessing Amazon DescribeNetworkInterfaces service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeNetworkInterfacesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfacesResult.NetworkInterfaces">
            <summary>
            Gets and sets the property NetworkInterfaces. 
            <para>
            Information about one or more network interfaces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeNetworkInterfacesResponse.DescribeNetworkInterfacesResult">
            <summary>
            Gets and sets the DescribeNetworkInterfacesResult property.
            Represents the output of a DescribeNetworkInterfaces operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribePlacementGroupsRequest">
            <summary>
            Container for the parameters to the DescribePlacementGroups operation.
            Describes one or more of your placement groups. For more information about placement
            groups and cluster instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html">Cluster
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribePlacementGroupsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>group-name</code> - The name of the placement group.
            </para>
             </li> <li> 
            <para>
            <code>state</code> - The state of the placement group (<code>pending</code> | <code>available</code>
            | <code>deleting</code> | <code>deleted</code>).
            </para>
             </li> <li> 
            <para>
            <code>strategy</code> - The strategy of the placement group (<code>cluster</code>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribePlacementGroupsRequest.GroupNames">
            <summary>
            Gets and sets the property GroupNames. 
            <para>
            One or more placement group names.
            </para>
             
            <para>
            Default: Describes all your placement groups, or only those otherwise specified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribePlacementGroupsResponse">
            <summary>
            Configuration for accessing Amazon DescribePlacementGroups service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribePlacementGroupsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribePlacementGroupsResult.PlacementGroups">
            <summary>
            Gets and sets the property PlacementGroups. 
            <para>
            One or more placement groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribePlacementGroupsResponse.DescribePlacementGroupsResult">
            <summary>
            Gets and sets the DescribePlacementGroupsResult property.
            Represents the output of a DescribePlacementGroups operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeRegionsRequest">
            <summary>
            Container for the parameters to the DescribeRegions operation.
            Describes one or more regions that are currently available to you.
            
             
            <para>
            For a list of the regions supported by Amazon EC2, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region">Regions
            and Endpoints</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeRegionsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>endpoint</code> - The endpoint of the region (for example, <code>ec2.us-east-1.amazonaws.com</code>).
            </para>
             </li> <li> 
            <para>
            <code>region-name</code> - The name of the region (for example, <code>us-east-1</code>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeRegionsRequest.RegionNames">
            <summary>
            Gets and sets the property RegionNames. 
            <para>
            The names of one or more regions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeRegionsResponse">
            <summary>
            Configuration for accessing Amazon DescribeRegions service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeRegionsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeRegionsResult.Regions">
            <summary>
            Gets and sets the property Regions. 
            <para>
            Information about one or more regions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeRegionsResponse.DescribeRegionsResult">
            <summary>
            Gets and sets the DescribeRegionsResult property.
            Represents the output of a DescribeRegions operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeReservedInstancesListingsRequest">
            <summary>
            Container for the parameters to the DescribeReservedInstancesListings operation.
            Describes your account's Reserved Instance listings in the Reserved Instance Marketplace.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesListingsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>reserved-instances-id</code> - The ID of the Reserved Instances.
            </para>
             </li> <li> 
            <para>
            <code>reserved-instances-listing-id</code> - The ID of the Reserved Instances listing.
            </para>
             </li> <li> 
            <para>
            <code>status</code> - The status of the Reserved Instance listing (<code>pending</code>
            | <code>active</code> | <code>cancelled</code> | <code>closed</code>).
            </para>
             </li> <li> 
            <para>
            <code>status-message</code> - The reason for the status.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesListingsRequest.ReservedInstancesId">
            <summary>
            Gets and sets the property ReservedInstancesId. 
            <para>
            One or more Reserved Instance IDs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesListingsRequest.ReservedInstancesListingId">
            <summary>
            Gets and sets the property ReservedInstancesListingId. 
            <para>
            One or more Reserved Instance Listing IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeReservedInstancesListingsResponse">
            <summary>
            Configuration for accessing Amazon DescribeReservedInstancesListings service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeReservedInstancesListingsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesListingsResult.ReservedInstancesListings">
            <summary>
            Gets and sets the property ReservedInstancesListings. 
            <para>
            Information about the Reserved Instance listing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesListingsResponse.DescribeReservedInstancesListingsResult">
            <summary>
            Gets and sets the DescribeReservedInstancesListingsResult property.
            Represents the output of a DescribeReservedInstancesListings operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeReservedInstancesModificationsRequest">
            <summary>
            Container for the parameters to the DescribeReservedInstancesModifications operation.
            Describes the modifications made to your Reserved Instances. If no parameter is specified,
            information about all your Reserved Instances modification requests is returned. If
            a modification ID is specified, only information about the specific modification is
            returned.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesModificationsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>client-token</code> - The idempotency token for the modification request.
            </para>
             </li> <li> 
            <para>
            <code>create-date</code> - The time when the modification request was created.
            </para>
             </li> <li> 
            <para>
            <code>effective-date</code> - The time when the modification becomes effective.
            </para>
             </li> <li> 
            <para>
            <code>modification-result.reserved-instances-id</code> - The ID for the Reserved Instances
            created as part of the modification request. This ID is only available when the status
            of the modification is <code>fulfilled</code>.
            </para>
             </li> <li> 
            <para>
            <code>modification-result.target-configuration.availability-zone</code> - The Availability
            Zone for the new Reserved Instances.
            </para>
             </li> <li> 
            <para>
            <code>modification-result.target-configuration.instance-count </code> - The number
            of new Reserved Instances.
            </para>
             </li> <li> 
            <para>
            <code>modification-result.target-configuration.instance-type</code> - The instance
            type of the new Reserved Instances.
            </para>
             </li> <li> 
            <para>
            <code>modification-result.target-configuration.platform</code> - The network platform
            of the new Reserved Instances (<code>EC2-Classic</code> | <code>EC2-VPC</code>).
            </para>
             </li> <li> 
            <para>
            <code>reserved-instances-id</code> - The ID of the Reserved Instances modified.
            </para>
             </li> <li> 
            <para>
            <code>reserved-instances-modification-id</code> - The ID of the modification request.
            </para>
             </li> <li> 
            <para>
            <code>status</code> - The status of the Reserved Instances modification request (<code>processing</code>
            | <code>fulfilled</code> | <code>failed</code>).
            </para>
             </li> <li> 
            <para>
            <code>status-message</code> - The reason for the status.
            </para>
             </li> <li> 
            <para>
            <code>update-date</code> - The time when the modification request was last updated.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesModificationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next page of data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesModificationsRequest.ReservedInstancesModificationIds">
            <summary>
            Gets and sets the property ReservedInstancesModificationIds. 
            <para>
            IDs for the submitted modification request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeReservedInstancesModificationsResponse">
            <summary>
            Configuration for accessing Amazon DescribeReservedInstancesModifications service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeReservedInstancesModificationsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesModificationsResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next page of data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesModificationsResult.ReservedInstancesModifications">
            <summary>
            Gets and sets the property ReservedInstancesModifications. 
            <para>
            The Reserved Instance modification information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesModificationsResponse.DescribeReservedInstancesModificationsResult">
            <summary>
            Gets and sets the DescribeReservedInstancesModificationsResult property.
            Represents the output of a DescribeReservedInstancesModifications operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest">
            <summary>
            Container for the parameters to the DescribeReservedInstancesOfferings operation.
            Describes Reserved Instance offerings that are available for purchase. With Reserved
            Instances, you purchase the right to launch instances for a period of time. During
            that time period, you do not receive insufficient capacity errors, and you pay a lower
            usage rate than the rate charged for On-Demand instances for the actual time used.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone in which the Reserved Instance can be used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>availability-zone</code> - The Availability Zone where the Reserved Instance
            can be used.
            </para>
             </li> <li> 
            <para>
            <code>duration</code> - The duration of the Reserved Instance (for example, one year
            or three years), in seconds.
            </para>
             </li> <li> 
            <para>
            <code>fixed-price</code> - The purchase price of the Reserved Instance (for example,
            9800.0).
            </para>
             </li> <li> 
            <para>
            <code>instance-type</code> - The instance type on which the Reserved Instance can
            be used.
            </para>
             </li> <li> 
            <para>
            <code>marketplace</code> - Set to <code>true</code> to show only Reserved Instance
            Marketplace offerings. When this filter is not used, which is the default behavior,
            all offerings from AWS and Reserved Instance Marketplace are listed.
            </para>
             </li> <li> 
            <para>
            <code>product-description</code> - The description of the Reserved Instance (<code>Linux/UNIX</code>
            | <code>Linux/UNIX (Amazon VPC)</code> | <code>Windows</code> | <code>Windows (Amazon
            VPC)</code>).
            </para>
             </li> <li> 
            <para>
            <code>reserved-instances-offering-id</code> - The Reserved Instances offering ID.
            </para>
             </li> <li> 
            <para>
            <code>usage-price</code> - The usage price of the Reserved Instance, per hour (for
            example, 0.84).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.IncludeMarketplace">
            <summary>
            Gets and sets the property IncludeMarketplace. 
            <para>
            Include Marketplace offerings in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.InstanceTenancy">
            <summary>
            Gets and sets the property InstanceTenancy. 
            <para>
            The tenancy of the Reserved Instance offering. A Reserved Instance with <code>dedicated</code>
            tenancy runs on single-tenant hardware and can only be launched within a VPC.
            </para>
             
            <para>
            Default: <code>default</code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type on which the Reserved Instance can be used. For more information,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
            Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.MaxDuration">
            <summary>
            Gets and sets the property MaxDuration. 
            <para>
            The maximum duration (in seconds) to filter when searching for offerings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.MaxInstanceCount">
            <summary>
            Gets and sets the property MaxInstanceCount. 
            <para>
            The maximum number of instances to filter when searching for offerings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of offerings to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.MinDuration">
            <summary>
            Gets and sets the property MinDuration. 
            <para>
            The minimum duration (in seconds) to filter when searching for offerings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use when requesting the next paginated set of offerings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.OfferingType">
            <summary>
            Gets and sets the property OfferingType. 
            <para>
            The Reserved Instance offering type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.ProductDescription">
            <summary>
            Gets and sets the property ProductDescription. 
            <para>
            The Reserved Instance description. Instances that include <code>(Amazon VPC)</code>
            in the description are for use with Amazon VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsRequest.ReservedInstancesOfferingIds">
            <summary>
            Gets and sets the property ReservedInstancesOfferingIds. 
            <para>
            One or more Reserved Instances offering IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeReservedInstancesOfferingsResponse">
            <summary>
            Configuration for accessing Amazon DescribeReservedInstancesOfferings service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeReservedInstancesOfferingsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The next paginated set of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsResult.ReservedInstancesOfferings">
            <summary>
            Gets and sets the property ReservedInstancesOfferings. 
            <para>
            A list of Reserved Instances offerings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesOfferingsResponse.DescribeReservedInstancesOfferingsResult">
            <summary>
            Gets and sets the DescribeReservedInstancesOfferingsResult property.
            Represents the output of a DescribeReservedInstancesOfferings operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeReservedInstancesRequest">
            <summary>
            Container for the parameters to the DescribeReservedInstances operation.
            Describes one or more of the Reserved Instances that you purchased.
            
             
            <para>
            For more information about Reserved Instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html">Reserved
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>availability-zone</code> - The Availability Zone where the Reserved Instance
            can be used.
            </para>
             </li> <li> 
            <para>
            <code>duration</code> - The duration of the Reserved Instance (one year or three years),
            in seconds (<code>31536000</code> | <code>94608000</code>).
            </para>
             </li> <li> 
            <para>
            <code>end</code> - The time when the Reserved Instance expires.
            </para>
             </li> <li> 
            <para>
            <code>fixed-price</code> - The purchase price of the Reserved Instance (for example,
            9800.0).
            </para>
             </li> <li> 
            <para>
            <code>instance-type</code> - The instance type on which the Reserved Instance can
            be used.
            </para>
             </li> <li> 
            <para>
            <code>product-description</code> - The product description of the Reserved Instance
            (<code>Linux/UNIX</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>Windows</code>
            | <code>Windows (Amazon VPC)</code>).
            </para>
             </li> <li> 
            <para>
            <code>reserved-instances-id</code> - The ID of the Reserved Instance.
            </para>
             </li> <li> 
            <para>
            <code>start</code> - The time at which the Reserved Instance purchase request was
            placed.
            </para>
             </li> <li> 
            <para>
            <code>state</code> - The state of the Reserved Instance (<code>pending-payment</code>
            | <code>active</code> | <code>payment-failed</code> | <code>retired</code>).
            </para>
             </li> <li> 
            <para>
            <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
            <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent
            of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose"
            and the filter "tag-value=X", you get any resources assigned both the tag key Purpose
            (regardless of what the tag's value is), and the tag value X (regardless of what the
            tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i>
            filter.
            </para>
             </li> <li> 
            <para>
            <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
            <code>usage-price</code> - The usage price of the Reserved Instance, per hour (for
            example, 0.84).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesRequest.OfferingType">
            <summary>
            Gets and sets the property OfferingType. 
            <para>
            The Reserved Instance offering type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesRequest.ReservedInstancesIds">
            <summary>
            Gets and sets the property ReservedInstancesIds. 
            <para>
            One or more Reserved Instance IDs.
            </para>
             
            <para>
            Default: Describes all your Reserved Instances, or only those otherwise specified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeReservedInstancesResponse">
            <summary>
            Configuration for accessing Amazon DescribeReservedInstances service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeReservedInstancesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesResult.ReservedInstances">
            <summary>
            Gets and sets the property ReservedInstances. 
            <para>
            A list of Reserved Instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeReservedInstancesResponse.DescribeReservedInstancesResult">
            <summary>
            Gets and sets the DescribeReservedInstancesResult property.
            Represents the output of a DescribeReservedInstances operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeRouteTablesRequest">
            <summary>
            Container for the parameters to the DescribeRouteTables operation.
            Describes one or more of your route tables.
            
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeRouteTablesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>association.route-table-association-id</code> - The ID of an association ID
            for the route table.
            </para>
             </li> <li> 
            <para>
            <code>association.route-table-id</code> - The ID of the route table involved in the
            association.
            </para>
             </li> <li> 
            <para>
            <code>association.subnet-id</code> - The ID of the subnet involved in the association.
            </para>
             </li> <li> 
            <para>
            <code>association.main</code> - Indicates whether the route table is the main route
            table for the VPC.
            </para>
             </li> <li> 
            <para>
            <code>route-table-id</code> - The ID of the route table.
            </para>
             </li> <li> 
            <para>
            <code>route.destination-cidr-block</code> - The CIDR range specified in a route in
            the table.
            </para>
             </li> <li> 
            <para>
            <code>route.gateway-id</code> - The ID of a gateway specified in a route in the table.
            </para>
             </li> <li> 
            <para>
            <code>route.instance-id</code> - The ID of an instance specified in a route in the
            table.
            </para>
             </li> <li> 
            <para>
            <code>route.origin</code> - Describes how the route was created (<code>CreateRouteTable</code>
            | <code>CreateRoute</code> | <code>EnableVgwRoutePropagation</code>).
            </para>
             </li> <li> 
            <para>
            <code>route.state</code> - The state of a route in the route table (<code>active</code>
            | <code>blackhole</code>). The blackhole state indicates that the route's target isn't
            available (for example, the specified gateway isn't attached to the VPC, the specified
            NAT instance has been terminated, and so on).
            </para>
             </li> <li> 
            <para>
            <code>route.vpc-peering-connection-id</code> - The ID of a VPC peering connection
            specified in a route in the table.
            </para>
             </li> <li> 
            <para>
            <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
            <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent
            of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose"
            and the filter "tag-value=X", you get any resources assigned both the tag key Purpose
            (regardless of what the tag's value is), and the tag value X (regardless of what the
            tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i>
            filter.
            </para>
             </li> <li> 
            <para>
            <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
            <code>vpc-id</code> - The ID of the VPC for the route table.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeRouteTablesRequest.RouteTableIds">
            <summary>
            Gets and sets the property RouteTableIds. 
            <para>
            One or more route table IDs.
            </para>
             
            <para>
            Default: Describes all your route tables.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeRouteTablesResponse">
            <summary>
            Configuration for accessing Amazon DescribeRouteTables service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeRouteTablesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeRouteTablesResult.RouteTables">
            <summary>
            Gets and sets the property RouteTables. 
            <para>
            Information about one or more route tables.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeRouteTablesResponse.DescribeRouteTablesResult">
            <summary>
            Gets and sets the DescribeRouteTablesResult property.
            Represents the output of a DescribeRouteTables operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSecurityGroupsRequest">
            <summary>
            Container for the parameters to the DescribeSecurityGroups operation.
            Describes one or more of your security groups.
            
             
            <para>
            A security group is for use with instances either in the EC2-Classic platform or in
            a specific VPC. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon
            EC2 Security Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> and
            <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSecurityGroupsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>description</code> - The description of the security group.
            </para>
             </li> <li> 
            <para>
            <code>group-id</code> - The ID of the security group.
            </para>
             </li> <li> 
            <para>
            <code>group-name</code> - The name of the security group.
            </para>
             </li> <li> 
            <para>
            <code>ip-permission.cidr</code> - A CIDR range that has been granted permission.
            </para>
             </li> <li> 
            <para>
            <code>ip-permission.from-port</code> - The start of port range for the TCP and UDP
            protocols, or an ICMP type number.
            </para>
             </li> <li> 
            <para>
            <code>ip-permission.group-id</code> - The ID of a security group that has been granted
            permission.
            </para>
             </li> <li> 
            <para>
            <code>ip-permission.group-name</code> - The name of a security group that has been
            granted permission.
            </para>
             </li> <li> 
            <para>
            <code>ip-permission.protocol</code> - The IP protocol for the permission (<code>tcp</code>
            | <code>udp</code> | <code>icmp</code> or a protocol number).
            </para>
             </li> <li> 
            <para>
            <code>ip-permission.to-port</code> - The end of port range for the TCP and UDP protocols,
            or an ICMP code.
            </para>
             </li> <li> 
            <para>
            <code>ip-permission.user-id</code> - The ID of an AWS account that has been granted
            permission.
            </para>
             </li> <li> 
            <para>
            <code>owner-id</code> - The AWS account ID of the owner of the security group.
            </para>
             </li> <li> 
            <para>
            <code>tag-key</code> - The key of a tag assigned to the security group.
            </para>
             </li> <li> 
            <para>
            <code>tag-value</code> - The value of a tag assigned to the security group.
            </para>
             </li> <li> 
            <para>
            <code>vpc-id</code> - The ID of the VPC specified when the security group was created.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSecurityGroupsRequest.GroupIds">
            <summary>
            Gets and sets the property GroupIds. 
            <para>
            One or more security group IDs.
            </para>
             
            <para>
            Default: Describes all your security groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSecurityGroupsRequest.GroupNames">
            <summary>
            Gets and sets the property GroupNames. 
            <para>
            [EC2-Classic, default VPC] One or more security group names.
            </para>
             
            <para>
            Default: Describes all your security groups.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSecurityGroupsResponse">
            <summary>
            Configuration for accessing Amazon DescribeSecurityGroups service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSecurityGroupsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSecurityGroupsResult.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            Information about one or more security groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSecurityGroupsResponse.DescribeSecurityGroupsResult">
            <summary>
            Gets and sets the DescribeSecurityGroupsResult property.
            Represents the output of a DescribeSecurityGroups operation.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Amazon.EC2.Model.DescribeSnapshotAttributeRequest" -->
        <member name="M:Amazon.EC2.Model.DescribeSnapshotAttributeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DescribeSnapshotAttributeRequest.#ctor(System.String,Amazon.EC2.SnapshotAttributeName)">
            <summary>
            Instantiates DescribeSnapshotAttributeRequest with the parameterized properties
            </summary>
            <param name="snapshotId">The ID of the Amazon EBS snapshot.</param>
            <param name="attribute">The snapshot attribute you would like to view.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The snapshot attribute you would like to view.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotAttributeRequest.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The ID of the Amazon EBS snapshot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSnapshotAttributeResponse">
            <summary>
            Configuration for accessing Amazon DescribeSnapshotAttribute service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSnapshotAttributeResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotAttributeResult.CreateVolumePermissions">
            <summary>
            Gets and sets the property CreateVolumePermissions. 
            <para>
            A list of permissions for creating volumes from the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotAttributeResult.ProductCodes">
            <summary>
            Gets and sets the property ProductCodes. 
            <para>
            A list of product codes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotAttributeResult.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The ID of the Amazon EBS snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotAttributeResponse.DescribeSnapshotAttributeResult">
            <summary>
            Gets and sets the DescribeSnapshotAttributeResult property.
            Represents the output of a DescribeSnapshotAttribute operation.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Amazon.EC2.Model.DescribeSnapshotsRequest" -->
        <member name="P:Amazon.EC2.Model.DescribeSnapshotsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>description</code> - A description of the snapshot.
            </para>
             </li> <li> 
            <para>
            <code>owner-alias</code> - The AWS account alias (for example, <code>amazon</code>)
            that owns the snapshot.
            </para>
             </li> <li> 
            <para>
            <code>owner-id</code> - The ID of the AWS account that owns the snapshot.
            </para>
             </li> <li> 
            <para>
            <code>progress</code> - The progress of the snapshot, as a percentage (for example,
            80%).
            </para>
             </li> <li> 
            <para>
            <code>snapshot-id</code> - The snapshot ID.
            </para>
             </li> <li> 
            <para>
            <code>start-time</code> - The time stamp when the snapshot was initiated.
            </para>
             </li> <li> 
            <para>
            <code>status</code> - The status of the snapshot (<code>pending</code> | <code>completed</code>
            | <code>error</code>).
            </para>
             </li> <li> 
            <para>
            <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
            <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent
            of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose"
            and the filter "tag-value=X", you get any resources assigned both the tag key Purpose
            (regardless of what the tag's value is), and the tag value X (regardless of what the
            tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i>
            filter.
            </para>
             </li> <li> 
            <para>
            <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
            <code>volume-id</code> - The ID of the volume the snapshot is for.
            </para>
             </li> <li> 
            <para>
            <code>volume-size</code> - The size of the volume, in GiB.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotsRequest.OwnerIds">
            <summary>
            Gets and sets the property OwnerIds. 
            <para>
            Returns the snapshots owned by the specified owner. Multiple owners can be specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotsRequest.RestorableByUserIds">
            <summary>
            Gets and sets the property RestorableByUserIds. 
            <para>
            One or more AWS accounts IDs that can create volumes from the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotsRequest.SnapshotIds">
            <summary>
            Gets and sets the property SnapshotIds. 
            <para>
            One or more snapshot IDs.
            </para>
             
            <para>
            Default: Describes snapshots for which you have launch permissions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSnapshotsResponse">
            <summary>
            Configuration for accessing Amazon DescribeSnapshots service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSnapshotsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotsResult.Snapshots">
            <summary>
            Gets and sets the property Snapshots.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSnapshotsResponse.DescribeSnapshotsResult">
            <summary>
            Gets and sets the DescribeSnapshotsResult property.
            Represents the output of a DescribeSnapshots operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionRequest">
            <summary>
            Container for the parameters to the DescribeSpotDatafeedSubscription operation.
            Describes the datafeed for Spot Instances. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html">Spot
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionResponse">
            <summary>
            Configuration for accessing Amazon DescribeSpotDatafeedSubscription service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionResult.SpotDatafeedSubscription">
            <summary>
            Gets and sets the property SpotDatafeedSubscription. 
            <para>
            The Spot Instance datafeed subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotDatafeedSubscriptionResponse.DescribeSpotDatafeedSubscriptionResult">
            <summary>
            Gets and sets the DescribeSpotDatafeedSubscriptionResult property.
            Represents the output of a DescribeSpotDatafeedSubscription operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotInstanceRequestsRequest">
            <summary>
            Container for the parameters to the DescribeSpotInstanceRequests operation.
            Describes the Spot Instance requests that belong to your account. Spot Instances are
            instances that Amazon EC2 starts on your behalf when the maximum price that you specify
            exceeds the current Spot Price. Amazon EC2 periodically sets the Spot Price based
            on available Spot Instance capacity and current Spot Instance requests. For more information
            about Spot Instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html">Spot
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            You can use <code>DescribeSpotInstanceRequests</code> to find a running Spot Instance
            by examining the response. If the status of the Spot Instance is <code>fulfilled</code>,
            the instance ID appears in the response and contains the identifier of the instance.
            Alternatively, you can use <a>DescribeInstances</a> with a filter to look for instances
            where the instance lifecycle is <code>spot</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotInstanceRequestsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>availability-zone-group</code> - The Availability Zone group.
            </para>
             </li> <li> 
            <para>
            <code>create-time</code> - The time stamp when the Spot Instance request was created.
            </para>
             </li> <li> 
            <para>
            <code>fault-code</code> - The fault code related to the request.
            </para>
             </li> <li> 
            <para>
            <code>fault-message</code> - The fault message related to the request.
            </para>
             </li> <li> 
            <para>
            <code>instance-id</code> - The ID of the instance that fulfilled the request.
            </para>
             </li> <li> 
            <para>
            <code>launch-group</code> - The Spot Instance launch group.
            </para>
             </li> <li> 
            <para>
            <code>launch.block-device-mapping.delete-on-termination</code> - Indicates whether
            the Amazon EBS volume is deleted on instance termination.
            </para>
             </li> <li> 
            <para>
            <code>launch.block-device-mapping.device-name</code> - The device name for the Amazon
            EBS volume (for example, <code>/dev/sdh</code>).
            </para>
             </li> <li> 
            <para>
            <code>launch.block-device-mapping.snapshot-id</code> - The ID of the snapshot used
            for the Amazon EBS volume.
            </para>
             </li> <li> 
            <para>
            <code>launch.block-device-mapping.volume-size</code> - The size of the Amazon EBS
            volume, in GiB.
            </para>
             </li> <li> 
            <para>
            <code>launch.block-device-mapping.volume-type</code> - The type of the Amazon EBS
            volume (<code>gp2</code> | <code>standard</code> | <code>io1</code>).
            </para>
             </li> <li> 
            <para>
            <code>launch.group-id</code> - The security group for the instance.
            </para>
             </li> <li> 
            <para>
            <code>launch.image-id</code> - The ID of the AMI.
            </para>
             </li> <li> 
            <para>
            <code>launch.instance-type</code> - The type of instance (for example, <code>m1.small</code>).
            </para>
             </li> <li> 
            <para>
            <code>launch.kernel-id</code> - The kernel ID.
            </para>
             </li> <li> 
            <para>
            <code>launch.key-name</code> - The name of the key pair the instance launched with.
            </para>
             </li> <li> 
            <para>
            <code>launch.monitoring-enabled</code> - Whether monitoring is enabled for the Spot
            Instance.
            </para>
             </li> <li> 
            <para>
            <code>launch.ramdisk-id</code> - The RAM disk ID.
            </para>
             </li> <li> 
            <para>
            <code>launch.network-interface.network-interface-id</code> - The ID of the network
            interface.
            </para>
             </li> <li> 
            <para>
            <code>launch.network-interface.device-index</code> - The index of the device for the
            network interface attachment on the instance.
            </para>
             </li> <li> 
            <para>
            <code>launch.network-interface.subnet-id</code> - The ID of the subnet for the instance.
            </para>
             </li> <li> 
            <para>
            <code>launch.network-interface.description</code> - A description of the network interface.
            </para>
             </li> <li> 
            <para>
            <code>launch.network-interface.private-ip-address</code> - The primary private IP
            address of the network interface.
            </para>
             </li> <li> 
            <para>
            <code>launch.network-interface.delete-on-termination</code> - Indicates whether the
            network interface is deleted when the instance is terminated.
            </para>
             </li> <li> 
            <para>
            <code>launch.network-interface.group-id</code> - The ID of the security group associated
            with the network interface.
            </para>
             </li> <li> 
            <para>
            <code>launch.network-interface.group-name</code> - The name of the security group
            associated with the network interface.
            </para>
             </li> <li> 
            <para>
            <code>launch.network-interface.addresses.primary</code> - Indicates whether the IP
            address is the primary private IP address.
            </para>
             </li> <li> 
            <para>
            <code>product-description</code> - The product description associated with the instance
            (<code>Linux/UNIX</code> | <code>Windows</code>).
            </para>
             </li> <li> 
            <para>
            <code>spot-instance-request-id</code> - The Spot Instance request ID.
            </para>
             </li> <li> 
            <para>
            <code>spot-price</code> - The maximum hourly price for any Spot Instance launched
            to fulfill the request.
            </para>
             </li> <li> 
            <para>
            <code>state</code> - The state of the Spot Instance request (<code>open</code> | <code>active</code>
            | <code>closed</code> | <code>cancelled</code> | <code>failed</code>).
            </para>
             </li> <li> 
            <para>
            <code>status-code</code> - The short code describing the most recent evaluation of
            your Spot Instance request.
            </para>
             </li> <li> 
            <para>
            <code>status-message</code> - The message explaining the status of the Spot Instance
            request.
            </para>
             </li> <li> 
            <para>
            <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
            <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent
            of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose"
            and the filter "tag-value=X", you get any resources assigned both the tag key Purpose
            (regardless of what the tag's value is), and the tag value X (regardless of what the
            tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i>
            filter.
            </para>
             </li> <li> 
            <para>
            <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
            <code>type</code> - The type of Spot Instance request (<code>one-time</code> | <code>persistent</code>).
            </para>
             </li> <li> 
            <para>
            <code>launched-availability-zone</code> - The Availability Zone in which the bid is
            launched.
            </para>
             </li> <li> 
            <para>
            <code>valid-from</code> - The start date of the request.
            </para>
             </li> <li> 
            <para>
            <code>valid-until</code> - The end date of the request.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotInstanceRequestsRequest.SpotInstanceRequestIds">
            <summary>
            Gets and sets the property SpotInstanceRequestIds. 
            <para>
            One or more Spot Instance request IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotInstanceRequestsResponse">
            <summary>
            Configuration for accessing Amazon DescribeSpotInstanceRequests service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotInstanceRequestsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotInstanceRequestsResult.SpotInstanceRequests">
            <summary>
            Gets and sets the property SpotInstanceRequests. 
            <para>
            One or more Spot Instance requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotInstanceRequestsResponse.DescribeSpotInstanceRequestsResult">
            <summary>
            Gets and sets the DescribeSpotInstanceRequestsResult property.
            Represents the output of a DescribeSpotInstanceRequests operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotPriceHistoryRequest">
            <summary>
            Container for the parameters to the DescribeSpotPriceHistory operation.
            Describes the Spot Price history. Spot Instances are instances that Amazon EC2 starts
            on your behalf when the maximum price that you specify exceeds the current Spot Price.
            Amazon EC2 periodically sets the Spot Price based on available Spot Instance capacity
            and current Spot Instance requests. For more information about Spot Instances, see
            <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html">Spot
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            When you specify an Availability Zone, this operation describes the price history
            for the specified Availability Zone with the most recent set of prices listed first.
            If you don't specify an Availability Zone, you get the prices across all Availability
            Zones, starting with the most recent set. However, if you're using an API version
            earlier than 2011-05-15, you get the lowest price across the region for the specified
            time period. The prices returned are listed in chronological order, from the oldest
            to the most recent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryRequest.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The end date and time of the Spot Price history data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>availability-zone</code> - The Availability Zone for which prices should be
            returned.
            </para>
             </li> <li> 
            <para>
            <code>instance-type</code> - The type of instance (for example, <code>m1.small</code>).
            </para>
             </li> <li> 
            <para>
            <code>product-description</code> - The product description for the Spot Price (<code>Linux/UNIX</code>
            | <code>SUSE Linux</code> | <code>Windows</code> | <code>Linux/UNIX (Amazon VPC)</code>
            | <code>SUSE Linux (Amazon VPC)</code> | <code>Windows (Amazon VPC)</code>).
            </para>
             </li> <li> 
            <para>
            <code>spot-price</code> - The Spot Price. The value must match exactly (or use wildcards;
            greater than or less than comparison is not supported).
            </para>
             </li> <li> 
            <para>
            <code>timestamp</code> - The timestamp of the Spot Price history (for example, 2010-08-16T05:06:11.000Z).
            You can use wildcards (* and ?). Greater than or less than comparison is not supported.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryRequest.InstanceTypes">
            <summary>
            Gets and sets the property InstanceTypes. 
            <para>
            One or more instance types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The number of rows to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The next set of rows to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryRequest.ProductDescriptions">
            <summary>
            Gets and sets the property ProductDescriptions. 
            <para>
            One or more basic product descriptions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The start date and time of the Spot Price history data.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotPriceHistoryResponse">
            <summary>
            Configuration for accessing Amazon DescribeSpotPriceHistory service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSpotPriceHistoryResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The string marking the next set of results. This is empty if there are no more results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryResult.SpotPriceHistory">
            <summary>
            Gets and sets the property SpotPriceHistory. 
            <para>
            The historical Spot Prices.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSpotPriceHistoryResponse.DescribeSpotPriceHistoryResult">
            <summary>
            Gets and sets the DescribeSpotPriceHistoryResult property.
            Represents the output of a DescribeSpotPriceHistory operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSubnetsRequest">
            <summary>
            Container for the parameters to the DescribeSubnets operation.
            Describes one or more of your subnets.
            
             
            <para>
            For more information about subnets, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">Your
            VPC and Subnets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSubnetsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>availabilityZone</code> - The Availability Zone for the subnet. You can also
            use <code>availability-zone</code> as the filter name.
            </para>
             </li> <li> 
            <para>
            <code>available-ip-address-count</code> - The number of IP addresses in the subnet
            that are available.
            </para>
             </li> <li> 
            <para>
            <code>cidrBlock</code> - The CIDR block of the subnet. The CIDR block you specify
            must exactly match the subnet's CIDR block for information to be returned for the
            subnet. You can also use <code>cidr</code> or <code>cidr-block</code> as the filter
            names.
            </para>
             </li> <li> 
            <para>
            <code>defaultForAz</code> - Indicates whether this is the default subnet for the Availability
            Zone. You can also use <code>default-for-az</code> as the filter name.
            </para>
             </li> <li> 
            <para>
            <code>state</code> - The state of the subnet (<code>pending</code> | <code>available</code>).
            </para>
             </li> <li> 
            <para>
            <code>subnet-id</code> - The ID of the subnet.
            </para>
             </li> <li> 
            <para>
            <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
            <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent
            of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose"
            and the filter "tag-value=X", you get any resources assigned both the tag key Purpose
            (regardless of what the tag's value is), and the tag value X (regardless of what the
            tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i>
            filter.
            </para>
             </li> <li> 
            <para>
            <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
            <code>vpc-id</code> - The ID of the VPC for the subnet.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSubnetsRequest.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            One or more subnet IDs.
            </para>
             
            <para>
            Default: Describes all your subnets.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSubnetsResponse">
            <summary>
            Configuration for accessing Amazon DescribeSubnets service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeSubnetsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSubnetsResult.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
            Information about one or more subnets.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeSubnetsResponse.DescribeSubnetsResult">
            <summary>
            Gets and sets the DescribeSubnetsResult property.
            Represents the output of a DescribeSubnets operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeTagsRequest">
            <summary>
            Container for the parameters to the DescribeTags operation.
            Describes one or more of the tags for your EC2 resources.
            
             
            <para>
            For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging
            Your Resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DescribeTagsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DescribeTagsRequest.#ctor(System.Collections.Generic.List{Amazon.EC2.Model.Filter})">
            <summary>
            Instantiates DescribeTagsRequest with the parameterized properties
            </summary>
            <param name="filters">One or more filters. <ul> <li> <code>key</code> - The tag key. </li> <li> <code>resource-id</code> - The resource ID. </li> <li> <code>resource-type</code> - The resource type (<code>customer-gateway</code> | <code>dhcp-options</code> | <code>image</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-interface</code> | <code>reserved-instances</code> | <code>route-table</code> | <code>security-group</code> | <code>snapshot</code> | <code>spot-instances-request</code> | <code>subnet</code> | <code>volume</code> | <code>vpc</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>). </li> <li> <code>value</code> - The tag value. </li> </ul></param>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeTagsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>key</code> - The tag key.
            </para>
             </li> <li> 
            <para>
            <code>resource-id</code> - The resource ID.
            </para>
             </li> <li> 
            <para>
            <code>resource-type</code> - The resource type (<code>customer-gateway</code> | <code>dhcp-options</code>
            | <code>image</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code>
            | <code>network-interface</code> | <code>reserved-instances</code> | <code>route-table</code>
            | <code>security-group</code> | <code>snapshot</code> | <code>spot-instances-request</code>
            | <code>subnet</code> | <code>volume</code> | <code>vpc</code> | <code>vpn-connection</code>
            | <code>vpn-gateway</code>).
            </para>
             </li> <li> 
            <para>
            <code>value</code> - The tag value.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeTagsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of items to return for this call. The call also returns a token
            that you can specify in a subsequent call to get the next set of results. If the value
            is greater than 1000, we return only 1000 items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeTagsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a prior
            call.)
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeTagsResponse">
            <summary>
            Configuration for accessing Amazon DescribeTags service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeTagsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeTagsResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use when requesting the next set of items. If there are no additional
            items to return, the string is empty.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeTagsResult.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeTagsResponse.DescribeTagsResult">
            <summary>
            Gets and sets the DescribeTagsResult property.
            Represents the output of a DescribeTags operation.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Amazon.EC2.Model.DescribeVolumeAttributeRequest" -->
        <member name="P:Amazon.EC2.Model.DescribeVolumeAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The instance attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeAttributeRequest.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVolumeAttributeResponse">
            <summary>
            Configuration for accessing Amazon DescribeVolumeAttribute service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVolumeAttributeResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeAttributeResult.AutoEnableIO">
            <summary>
            Gets and sets the property AutoEnableIO. 
            <para>
            The state of <code>autoEnableIO</code> attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeAttributeResult.ProductCodes">
            <summary>
            Gets and sets the property ProductCodes. 
            <para>
            A list of product codes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeAttributeResult.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeAttributeResponse.DescribeVolumeAttributeResult">
            <summary>
            Gets and sets the DescribeVolumeAttributeResult property.
            Represents the output of a DescribeVolumeAttribute operation.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Amazon.EC2.Model.DescribeVolumesRequest" -->
        <member name="M:Amazon.EC2.Model.DescribeVolumesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DescribeVolumesRequest.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates DescribeVolumesRequest with the parameterized properties
            </summary>
            <param name="volumeIds">One or more volume IDs.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>attachment.attach-time</code> - The time stamp when the attachment initiated.
            </para>
             </li> <li> 
            <para>
            <code>attachment.delete-on-termination</code> - Whether the volume is deleted on instance
            termination.
            </para>
             </li> <li> 
            <para>
            <code>attachment.device</code> - The device name that is exposed to the instance (for
            example, <code>/dev/sda1</code>).
            </para>
             </li> <li> 
            <para>
            <code>attachment.instance-id</code> - The ID of the instance the volume is attached
            to.
            </para>
             </li> <li> 
            <para>
            <code>attachment.status</code> - The attachment state (<code>attaching</code> | <code>attached</code>
            | <code>detaching</code> | <code>detached</code>).
            </para>
             </li> <li> 
            <para>
            <code>availability-zone</code> - The Availability Zone in which the volume was created.
            </para>
             </li> <li> 
            <para>
            <code>create-time</code> - The time stamp when the volume was created.
            </para>
             </li> <li> 
            <para>
            <code>encrypted</code> - The encryption status of the volume.
            </para>
             </li> <li> 
            <para>
            <code>size</code> - The size of the volume, in GiB.
            </para>
             </li> <li> 
            <para>
            <code>snapshot-id</code> - The snapshot from which the volume was created.
            </para>
             </li> <li> 
            <para>
            <code>status</code> - The status of the volume (<code>creating</code> | <code>available</code>
            | <code>in-use</code> | <code>deleting</code> | <code>deleted</code> | <code>error</code>).
            </para>
             </li> <li> 
            <para>
            <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
            <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent
            of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose"
            and the filter "tag-value=X", you get any resources assigned both the tag key Purpose
            (regardless of what the tag's value is), and the tag value X (regardless of what the
            tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i>
            filter.
            </para>
             </li> <li> 
            <para>
            <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
            <code>volume-id</code> - The volume ID.
            </para>
             </li> <li> 
            <para>
            <code>volume-type</code> - The Amazon EBS volume type. This can be <code>gp2</code>
            for General Purpose (SSD) volumes, <code>io1</code> for Provisioned IOPS (SSD) volumes,
            or <code>standard</code> for Magnetic volumes.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumesRequest.VolumeIds">
            <summary>
            Gets and sets the property VolumeIds. 
            <para>
            One or more volume IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVolumesResponse">
            <summary>
            Configuration for accessing Amazon DescribeVolumes service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVolumesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumesResult.Volumes">
            <summary>
            Gets and sets the property Volumes.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumesResponse.DescribeVolumesResult">
            <summary>
            Gets and sets the DescribeVolumesResult property.
            Represents the output of a DescribeVolumes operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVolumeStatusRequest">
            <summary>
            Container for the parameters to the DescribeVolumeStatus operation.
            Describes the status of the specified volumes. Volume status provides the result of
            the checks performed on your volumes to determine events that can impair the performance
            of your volumes. The performance of a volume can be affected if an issue occurs on
            the volume's underlying host. If the volume's underlying host experiences a power
            outage or system issue, after the system is restored, there could be data inconsistencies
            on the volume. Volume events notify you if this occurs. Volume actions notify you
            if any action needs to be taken in response to the event.
            
             
            <para>
            The <code>DescribeVolumeStatus</code> operation provides the following information
            about the specified volumes:
            </para>
             
            <para>
            <i>Status</i>: Reflects the current status of the volume. The possible values are
            <code>ok</code>, <code>impaired</code> , <code>warning</code>, or <code>insufficient-data</code>.
            If all checks pass, the overall status of the volume is <code>ok</code>. If the check
            fails, the overall status is <code>impaired</code>. If the status is <code>insufficient-data</code>,
            then the checks may still be taking place on your volume at the time. We recommend
            that you retry the request. For more information on volume status, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-volume-status.html">Monitoring
            the Status of Your Volumes</a>.
            </para>
             
            <para>
            <i>Events</i>: Reflect the cause of a volume status and may require you to take action.
            For example, if your volume returns an <code>impaired</code> status, then the volume
            event might be <code>potential-data-inconsistency</code>. This means that your volume
            has been affected by an issue with the underlying host, has all I/O operations disabled,
            and may have inconsistent data.
            </para>
             
            <para>
            <i>Actions</i>: Reflect the actions you may have to take in response to an event.
            For example, if the status of the volume is <code>impaired</code> and the volume event
            shows <code>potential-data-inconsistency</code>, then the action shows <code>enable-volume-io</code>.
            This means that you may want to enable the I/O operations for the volume by calling
            the <a>EnableVolumeIO</a> action and then check the volume for data consistency.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeStatusRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>action.code</code> - The action code for the event (for example, <code>enable-volume-io</code>).
            </para>
             </li> <li> 
            <para>
            <code>action.description</code> - A description of the action.
            </para>
             </li> <li> 
            <para>
            <code>action.event-id</code> - The event ID associated with the action.
            </para>
             </li> <li> 
            <para>
            <code>availability-zone</code> - The Availability Zone of the instance.
            </para>
             </li> <li> 
            <para>
            <code>event.description</code> - A description of the event.
            </para>
             </li> <li> 
            <para>
            <code>event.event-id</code> - The event ID.
            </para>
             </li> <li> 
            <para>
            <code>event.event-type</code> - The event type (for <code>io-enabled</code>: <code>passed</code>
            | <code>failed</code>; for <code>io-performance</code>: <code>io-performance:degraded</code>
            | <code>io-performance:severely-degraded</code> | <code>io-performance:stalled</code>).
            </para>
             </li> <li> 
            <para>
            <code>event.not-after</code> - The latest end time for the event.
            </para>
             </li> <li> 
            <para>
            <code>event.not-before</code> - The earliest start time for the event.
            </para>
             </li> <li> 
            <para>
            <code>volume-status.details-name</code> - The cause for <code>volume-status.status</code>
            (<code>io-enabled</code> | <code>io-performance</code>).
            </para>
             </li> <li> 
            <para>
            <code>volume-status.details-status</code> - The status of <code>volume-status.details-name</code>
            (for <code>io-enabled</code>: <code>passed</code> | <code>failed</code>; for <code>io-performance</code>:
            <code>normal</code> | <code>degraded</code> | <code>severely-degraded</code> | <code>stalled</code>).
            </para>
             </li> <li> 
            <para>
            <code>volume-status.status</code> - The status of the volume (<code>ok</code> | <code>impaired</code>
            | <code>warning</code> | <code>insufficient-data</code>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeStatusRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of paginated volume items per response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeStatusRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The next paginated set of results to return using the pagination token returned by
            a previous call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeStatusRequest.VolumeIds">
            <summary>
            Gets and sets the property VolumeIds. 
            <para>
            One or more volume IDs.
            </para>
             
            <para>
            Default: Describes all your volumes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVolumeStatusResponse">
            <summary>
            Configuration for accessing Amazon DescribeVolumeStatus service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVolumeStatusResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeStatusResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The next paginated set of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeStatusResult.VolumeStatuses">
            <summary>
            Gets and sets the property VolumeStatuses. 
            <para>
            A list of volumes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVolumeStatusResponse.DescribeVolumeStatusResult">
            <summary>
            Gets and sets the DescribeVolumeStatusResult property.
            Represents the output of a DescribeVolumeStatus operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcAttributeRequest">
            <summary>
            Container for the parameters to the DescribeVpcAttribute operation.
            Describes the specified attribute of the specified VPC. You can specify only one attribute
            at a time.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The VPC attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcAttributeRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcAttributeResponse">
            <summary>
            Configuration for accessing Amazon DescribeVpcAttribute service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcAttributeResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcAttributeResult.EnableDnsHostnames">
            <summary>
            Gets and sets the property EnableDnsHostnames. 
            <para>
            Indicates whether the instances launched in the VPC get DNS hostnames. If this attribute
            is <code>true</code>, instances in the VPC get DNS hostnames; otherwise, they do not.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcAttributeResult.EnableDnsSupport">
            <summary>
            Gets and sets the property EnableDnsSupport. 
            <para>
            Indicates whether DNS resolution is enabled for the VPC. If this attribute is <code>true</code>,
            the Amazon DNS server resolves DNS hostnames for your instances to their corresponding
            IP addresses; otherwise, it does not.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcAttributeResult.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcAttributeResponse.DescribeVpcAttributeResult">
            <summary>
            Gets and sets the DescribeVpcAttributeResult property.
            Represents the output of a DescribeVpcAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcPeeringConnectionsRequest">
            <summary>
            Container for the parameters to the DescribeVpcPeeringConnections operation.
            Describes one or more of your VPC peering connections.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcPeeringConnectionsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>accepter-vpc-info.cidr-block</code> - The CIDR block of the peer VPC.
            </para>
             </li> <li> 
            <para>
            <code>accepter-vpc-info.owner-id</code> - The AWS account ID of the owner of the peer
            VPC.
            </para>
             </li> <li> 
            <para>
            <code>accepter-vpc-info.vpc-id</code> - The ID of the peer VPC.
            </para>
             </li> <li> 
            <para>
            <code>expiration-time</code> - The expiration date and time for the VPC peering connection.
            </para>
             </li> <li> 
            <para>
            <code>requester-vpc-info.cidr-block</code> - The CIDR block of the requester's VPC.
            </para>
             </li> <li> 
            <para>
            <code>requester-vpc-info.owner-id</code> - The AWS account ID of the owner of the
            requester VPC.
            </para>
             </li> <li> 
            <para>
            <code>requester-vpc-info.vpc-id</code> - The ID of the requester VPC.
            </para>
             </li> <li> 
            <para>
            <code>status-code</code> - The status of the VPC peering connection (<code>pending-acceptance</code>
            | <code>failed</code> | <code>expired</code> | <code>provisioning</code> | <code>active</code>
            | <code>deleted</code> | <code>rejected</code>).
            </para>
             </li> <li> 
            <para>
            <code>status-message</code> - A message that provides more information about the status
            of the VPC peering connection, if applicable.
            </para>
             </li> <li> 
            <para>
            <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
            <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent
            of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose"
            and the filter "tag-value=X", you get any resources assigned both the tag key Purpose
            (regardless of what the tag's value is), and the tag value X (regardless of what the
            tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i>
            filter.
            </para>
             </li> <li> 
            <para>
            <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
            <code>vpc-peering-connection-id</code> - The ID of the VPC peering connection.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcPeeringConnectionsRequest.VpcPeeringConnectionIds">
            <summary>
            Gets and sets the property VpcPeeringConnectionIds. 
            <para>
            One or more VPC peering connection IDs.
            </para>
             
            <para>
            Default: Describes all your VPC peering connections.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcPeeringConnectionsResponse">
            <summary>
            Configuration for accessing Amazon DescribeVpcPeeringConnections service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcPeeringConnectionsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcPeeringConnectionsResult.VpcPeeringConnections">
            <summary>
            Gets and sets the property VpcPeeringConnections. 
            <para>
            Information about the VPC peering connections
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcPeeringConnectionsResponse.DescribeVpcPeeringConnectionsResult">
            <summary>
            Gets and sets the DescribeVpcPeeringConnectionsResult property.
            Represents the output of a DescribeVpcPeeringConnections operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcsRequest">
            <summary>
            Container for the parameters to the DescribeVpcs operation.
            Describes one or more of your VPCs.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>cidr</code> - The CIDR block of the VPC. The CIDR block you specify must exactly
            match the VPC's CIDR block for information to be returned for the VPC.
            </para>
             </li> <li> 
            <para>
            <code>dhcp-options-id</code> - The ID of a set of DHCP options.
            </para>
             </li> <li> 
            <para>
            <code>isDefault</code> - Indicates whether the VPC is the default VPC.
            </para>
             </li> <li> 
            <para>
            <code>state</code> - The state of the VPC (<code>pending</code> | <code>available</code>).
            </para>
             </li> <li> 
            <para>
            <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
            <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent
            of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose"
            and the filter "tag-value=X", you get any resources assigned both the tag key Purpose
            (regardless of what the tag's value is), and the tag value X (regardless of what the
            tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i>
            filter.
            </para>
             </li> <li> 
            <para>
            <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
            <code>vpc-id</code> - The ID of the VPC.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcsRequest.VpcIds">
            <summary>
            Gets and sets the property VpcIds. 
            <para>
            One or more VPC IDs.
            </para>
             
            <para>
            Default: Describes all your VPCs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcsResponse">
            <summary>
            Configuration for accessing Amazon DescribeVpcs service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpcsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcsResult.Vpcs">
            <summary>
            Gets and sets the property Vpcs. 
            <para>
            Information about one or more VPCs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpcsResponse.DescribeVpcsResult">
            <summary>
            Gets and sets the DescribeVpcsResult property.
            Represents the output of a DescribeVpcs operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpnConnectionsRequest">
            <summary>
            Container for the parameters to the DescribeVpnConnections operation.
            Describes one or more of your VPN connections.
            
             
            <para>
            For more information about VPN connections, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            a Hardware Virtual Private Gateway to Your VPC</a> in the <i>Amazon Virtual Private
            Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpnConnectionsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>customer-gateway-configuration</code> - The configuration information for the
            customer gateway.
            </para>
             </li> <li> 
            <para>
            <code>customer-gateway-id</code> - The ID of a customer gateway associated with the
            VPN connection.
            </para>
             </li> <li> 
            <para>
            <code>state</code> - The state of the VPN connection (<code>pending</code> | <code>available</code>
            | <code>deleting</code> | <code>deleted</code>).
            </para>
             </li> <li> 
            <para>
            <code>option.static-routes-only</code> - Indicates whether the connection has static
            routes only. Used for devices that do not support Border Gateway Protocol (BGP).
            </para>
             </li> <li> 
            <para>
            <code>route.destination-cidr-block</code> - The destination CIDR block. This corresponds
            to the subnet used in a customer data center.
            </para>
             </li> <li> 
            <para>
            <code>bgp-asn</code> - The BGP Autonomous System Number (ASN) associated with a BGP
            device.
            </para>
             </li> <li> 
            <para>
            <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
            <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent
            of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose"
            and the filter "tag-value=X", you get any resources assigned both the tag key Purpose
            (regardless of what the tag's value is), and the tag value X (regardless of what the
            tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i>
            filter.
            </para>
             </li> <li> 
            <para>
            <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
            <code>type</code> - The type of VPN connection. Currently the only supported type
            is <code>ipsec.1</code>.
            </para>
             </li> <li> 
            <para>
            <code>vpn-connection-id</code> - The ID of the VPN connection.
            </para>
             </li> <li> 
            <para>
            <code>vpn-gateway-id</code> - The ID of a virtual private gateway associated with
            the VPN connection.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpnConnectionsRequest.VpnConnectionIds">
            <summary>
            Gets and sets the property VpnConnectionIds. 
            <para>
            One or more VPN connection IDs.
            </para>
             
            <para>
            Default: Describes your VPN connections.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpnConnectionsResponse">
            <summary>
            Configuration for accessing Amazon DescribeVpnConnections service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpnConnectionsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpnConnectionsResult.VpnConnections">
            <summary>
            Gets and sets the property VpnConnections. 
            <para>
            Information about one or more VPN connections.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpnConnectionsResponse.DescribeVpnConnectionsResult">
            <summary>
            Gets and sets the DescribeVpnConnectionsResult property.
            Represents the output of a DescribeVpnConnections operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpnGatewaysRequest">
            <summary>
            Container for the parameters to the DescribeVpnGateways operation.
            Describes one or more of your virtual private gateways.
            
             
            <para>
            For more information about virtual private gateways, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html">Adding
            an IPsec Hardware VPN to Your VPC</a> in the <i>Amazon Virtual Private Cloud User
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpnGatewaysRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            One or more filters.
            </para>
             <ul> <li> 
            <para>
            <code>attachment.state</code> - The current state of the attachment between the gateway
            and the VPC (<code>attaching</code> | <code>attached</code> | <code>detaching</code>
            | <code>detached</code>).
            </para>
             </li> <li> 
            <para>
            <code>attachment.vpc-id</code> - The ID of an attached VPC.
            </para>
             </li> <li> 
            <para>
            <code>availability-zone</code> - The Availability Zone for the virtual private gateway.
            </para>
             </li> <li> 
            <para>
            <code>state</code> - The state of the virtual private gateway (<code>pending</code>
            | <code>available</code> | <code>deleting</code> | <code>deleted</code>).
            </para>
             </li> <li> 
            <para>
            <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned
            to the resource.
            </para>
             </li> <li> 
            <para>
            <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent
            of the <code>tag-value</code> filter. For example, if you use both the filter "tag-key=Purpose"
            and the filter "tag-value=X", you get any resources assigned both the tag key Purpose
            (regardless of what the tag's value is), and the tag value X (regardless of what the
            tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i>
            filter.
            </para>
             </li> <li> 
            <para>
            <code>tag-value</code> - The value of a tag assigned to the resource. This filter
            is independent of the <code>tag-key</code> filter.
            </para>
             </li> <li> 
            <para>
            <code>type</code> - The type of virtual private gateway. Currently the only supported
            type is <code>ipsec.1</code>.
            </para>
             </li> <li> 
            <para>
            <code>vpn-gateway-id</code> - The ID of the virtual private gateway.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpnGatewaysRequest.VpnGatewayIds">
            <summary>
            Gets and sets the property VpnGatewayIds. 
            <para>
            One or more virtual private gateway IDs.
            </para>
             
            <para>
            Default: Describes all your virtual private gateways.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpnGatewaysResponse">
            <summary>
            Configuration for accessing Amazon DescribeVpnGateways service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DescribeVpnGatewaysResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpnGatewaysResult.VpnGateways">
            <summary>
            Gets and sets the property VpnGateways. 
            <para>
            Information about one or more virtual private gateways.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DescribeVpnGatewaysResponse.DescribeVpnGatewaysResult">
            <summary>
            Gets and sets the DescribeVpnGatewaysResult property.
            Represents the output of a DescribeVpnGateways operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DetachInternetGatewayRequest">
            <summary>
            Container for the parameters to the DetachInternetGateway operation.
            Detaches an Internet gateway from a VPC, disabling connectivity between the Internet
            and the VPC. The VPC must not contain any running instances with Elastic IP addresses.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachInternetGatewayRequest.InternetGatewayId">
            <summary>
            Gets and sets the property InternetGatewayId. 
            <para>
            The ID of the Internet gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachInternetGatewayRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DetachInternetGatewayResponse">
            <summary>
            Configuration for accessing Amazon DetachInternetGateway service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachInternetGatewayResponse.DetachInternetGatewayResult">
            <summary>
            Gets and sets the DetachInternetGatewayResult property.
            Represents the output of a DetachInternetGateway operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DetachNetworkInterfaceRequest">
            <summary>
            Container for the parameters to the DetachNetworkInterface operation.
            Detaches a network interface from an instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachNetworkInterfaceRequest.AttachmentId">
            <summary>
            Gets and sets the property AttachmentId. 
            <para>
            The ID of the attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachNetworkInterfaceRequest.Force">
            <summary>
            Gets and sets the property Force. 
            <para>
            Specifies whether to force a detachment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DetachNetworkInterfaceResponse">
            <summary>
            Configuration for accessing Amazon DetachNetworkInterface service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachNetworkInterfaceResponse.DetachNetworkInterfaceResult">
            <summary>
            Gets and sets the DetachNetworkInterfaceResult property.
            Represents the output of a DetachNetworkInterface operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DetachVolumeRequest">
            <summary>
            Container for the parameters to the DetachVolume operation.
            Detaches an Amazon EBS volume from an instance. Make sure to unmount any file systems
            on the device within your operating system before detaching the volume. Failure to
            do so results in the volume being stuck in a busy state while detaching.
            
             
            <para>
            If an Amazon EBS volume is the root device of an instance, it can't be detached while
            the instance is running. To detach the root volume, stop the instance first.
            </para>
             
            <para>
            If the root volume is detached from an instance with an AWS Marketplace product code,
            then the AWS Marketplace product codes from that volume are no longer associated with
            the instance.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-detaching-volume.html">Detaching
            an Amazon EBS Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DetachVolumeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DetachVolumeRequest.#ctor(System.String)">
            <summary>
            Instantiates DetachVolumeRequest with the parameterized properties
            </summary>
            <param name="volumeId">The ID of the volume.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DetachVolumeRequest.Device">
            <summary>
            Gets and sets the property Device. 
            <para>
            The device name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachVolumeRequest.Force">
            <summary>
            Gets and sets the property Force. 
            <para>
            Forces detachment if the previous detachment attempt did not occur cleanly (for example,
            logging into an instance, unmounting the volume, and detaching normally). This option
            can lead to data loss or a corrupted file system. Use this option only as a last resort
            to detach a volume from a failed instance. The instance won't have an opportunity
            to flush file system caches or file system metadata. If you use this option, you must
            perform file system check and repair procedures.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachVolumeRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachVolumeRequest.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DetachVolumeResponse">
            <summary>
            Configuration for accessing Amazon DetachVolume service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DetachVolumeResult">
            <summary>
            Contains the response data from the DetachVolume operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachVolumeResponse.DetachVolumeResult">
            <summary>
            Gets and sets the DetachVolumeResult property.
            Represents the output of a DetachVolume operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DetachVpnGatewayRequest">
            <summary>
            Container for the parameters to the DetachVpnGateway operation.
            Detaches a virtual private gateway from a VPC. You do this if you're planning to turn
            off the VPC and not use it anymore. You can confirm a virtual private gateway has
            been completely detached from a VPC by describing the virtual private gateway (any
            attachments to the virtual private gateway are also described).
            
             
            <para>
            You must wait for the attachment's state to switch to <code>detached</code> before
            you can delete the VPC or attach a different VPC to the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DetachVpnGatewayRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DetachVpnGatewayRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates DetachVpnGatewayRequest with the parameterized properties
            </summary>
            <param name="vpnGatewayId">The ID of the virtual private gateway.</param>
            <param name="vpcId">The ID of the VPC.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DetachVpnGatewayRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachVpnGatewayRequest.VpnGatewayId">
            <summary>
            Gets and sets the property VpnGatewayId. 
            <para>
            The ID of the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DetachVpnGatewayResponse">
            <summary>
            Configuration for accessing Amazon DetachVpnGateway service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DetachVpnGatewayResponse.DetachVpnGatewayResult">
            <summary>
            Gets and sets the DetachVpnGatewayResult property.
            Represents the output of a DetachVpnGateway operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DhcpConfiguration">
            <summary>
            Describes a DHCP configuration option.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DhcpConfiguration.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The name of a DHCP option.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DhcpConfiguration.Values">
            <summary>
            Gets and sets the property Values. 
            <para>
            One or more values for the DHCP option.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DhcpOptions">
            <summary>
            Describes a set of DHCP options.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DhcpOptions.DhcpConfigurations">
            <summary>
            Gets and sets the property DhcpConfigurations. 
            <para>
            One or more DHCP options in the set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DhcpOptions.DhcpOptionsId">
            <summary>
            Gets and sets the property DhcpOptionsId. 
            <para>
            The ID of the set of DHCP options.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DhcpOptions.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the DHCP options set.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DisableVgwRoutePropagationRequest">
            <summary>
            Container for the parameters to the DisableVgwRoutePropagation operation.
            Disables a virtual private gateway (VGW) from propagating routes to the routing tables
            of a VPC.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DisableVgwRoutePropagationRequest.GatewayId">
            <summary>
            Gets and sets the property GatewayId. 
            <para>
            The ID of the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DisableVgwRoutePropagationRequest.RouteTableId">
            <summary>
            Gets and sets the property RouteTableId. 
            <para>
            The ID of the routing table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DisableVgwRoutePropagationResponse">
            <summary>
            Configuration for accessing Amazon DisableVgwRoutePropagation service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DisableVgwRoutePropagationResponse.DisableVgwRoutePropagationResult">
            <summary>
            Gets and sets the DisableVgwRoutePropagationResult property.
            Represents the output of a DisableVgwRoutePropagation operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DisassociateAddressRequest">
            <summary>
            Container for the parameters to the DisassociateAddress operation.
            Disassociates an Elastic IP address from the instance or network interface it's associated
            with.
            
             
            <para>
            This is an idempotent operation. If you perform the operation more than once, Amazon
            EC2 doesn't return an error.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DisassociateAddressRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.DisassociateAddressRequest.#ctor(System.String)">
            <summary>
            Instantiates DisassociateAddressRequest with the parameterized properties
            </summary>
            <param name="publicIp">[EC2-Classic] The Elastic IP address.</param>
        </member>
        <member name="P:Amazon.EC2.Model.DisassociateAddressRequest.AssociationId">
            <summary>
            Gets and sets the property AssociationId. 
            <para>
            [EC2-VPC] The association ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DisassociateAddressRequest.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            [EC2-Classic] The Elastic IP address.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DisassociateAddressResponse">
            <summary>
            Configuration for accessing Amazon DisassociateAddress service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DisassociateAddressResponse.DisassociateAddressResult">
            <summary>
            Gets and sets the DisassociateAddressResult property.
            Represents the output of a DisassociateAddress operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DisassociateRouteTableRequest">
            <summary>
            Container for the parameters to the DisassociateRouteTable operation.
            Disassociates a subnet from a route table.
            
             
            <para>
            After you perform this action, the subnet no longer uses the routes in the route table.
            Instead, it uses the routes in the VPC's main route table. For more information about
            route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DisassociateRouteTableRequest.AssociationId">
            <summary>
            Gets and sets the property AssociationId. 
            <para>
            The association ID representing the current association between the route table and
            subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DisassociateRouteTableResponse">
            <summary>
            Configuration for accessing Amazon DisassociateRouteTable service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DisassociateRouteTableResponse.DisassociateRouteTableResult">
            <summary>
            Gets and sets the DisassociateRouteTableResult property.
            Represents the output of a DisassociateRouteTable operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DiskImage">
            <summary>
            Describes a disk image.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImage.Description">
            <summary>
            Gets and sets the property Description.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImage.Image">
            <summary>
            Gets and sets the property Image.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImage.Volume">
            <summary>
            Gets and sets the property Volume.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DiskImageDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImageDescription.Checksum">
            <summary>
            Gets and sets the property Checksum. 
            <para>
            The checksum computed for the disk image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImageDescription.Format">
            <summary>
            Gets and sets the property Format. 
            <para>
            The disk image format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImageDescription.ImportManifestUrl">
            <summary>
            Gets and sets the property ImportManifestUrl. 
            <para>
            A presigned URL for the import manifest stored in Amazon S3. For information about
            creating a presigned URL for an Amazon S3 object, read the "Query String Request Authentication
            Alternative" section of the <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">Authenticating
            REST Requests</a> topic in the <i>Amazon Simple Storage Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImageDescription.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the disk image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DiskImageDetail">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImageDetail.Bytes">
            <summary>
            Gets and sets the property Bytes.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImageDetail.Format">
            <summary>
            Gets and sets the property Format. 
            <para>
            The disk image format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImageDetail.ImportManifestUrl">
            <summary>
            Gets and sets the property ImportManifestUrl. 
            <para>
            A presigned URL for the import manifest stored in Amazon S3. For information about
            creating a presigned URL for an Amazon S3 object, read the "Query String Request Authentication
            Alternative" section of the <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">Authenticating
            REST Requests</a> topic in the <i>Amazon Simple Storage Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DiskImageVolumeDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImageVolumeDescription.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The volume identifier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DiskImageVolumeDescription.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DryRunResponse">
            <summary>
            Returns information about the DryRun response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.DryRunResult">
            <summary>
            <para> The result of the DryRun operation. </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DryRunResult.IsSuccessful">
            <summary>
            Flag that signals if you have the required permissions to execute the request.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DryRunResult.Message">
            <summary>
            Message associated with the response.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DryRunResult.Error">
            <summary>
            Exception associated with the response, if there was one.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.DryRunResponse.DryRunResult">
            <summary>
            Gets and sets the DryRunResult property.
            The result of the DryRun operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.EbsBlockDevice">
            <summary>
            Describes an Amazon EBS block device.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsBlockDevice.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            Indicates whether the Amazon EBS volume is deleted on instance termination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsBlockDevice.Encrypted">
            <summary>
            Gets and sets the property Encrypted. 
            <para>
            Indicates whether the Amazon EBS volume is encrypted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsBlockDevice.Iops">
            <summary>
            Gets and sets the property Iops. 
            <para>
            The number of I/O operations per second (IOPS) that the volume supports.
            </para>
             
            <para>
            Constraint: Range is 100 to 4000.
            </para>
             
            <para>
            Condition: Required when the volume type is <code>io1</code>; not used with <code>standard</code>
            or <code>gp2</code> volumes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsBlockDevice.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The ID of the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsBlockDevice.VolumeSize">
            <summary>
            Gets and sets the property VolumeSize. 
            <para>
            The size of the volume, in GiB.
            </para>
             
            <para>
            Constraints: If the volume type is <code>io1</code>, the minimum size of the volume
            is 10 GiB.
            </para>
             
            <para>
            Default: If you're creating the volume from a snapshot and don't specify a volume
            size, the default is the snapshot size.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsBlockDevice.VolumeType">
            <summary>
            Gets and sets the property VolumeType. 
            <para>
            The volume type. <code>gp2</code> for General Purpose (SSD) volumes, <code>io1</code>
            for Provisioned IOPS (SSD) volumes, and <code>standard</code> for Magnetic volumes.
            </para>
             
            <para>
            Default: <code>standard</code>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.EbsInstanceBlockDevice">
            <summary>
            Describes a parameter used to set up an Amazon EBS volume in a block device mapping.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsInstanceBlockDevice.AttachTime">
            <summary>
            Gets and sets the property AttachTime. 
            <para>
            The time stamp when the attachment initiated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsInstanceBlockDevice.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            Indicates whether the volume is deleted on instance termination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsInstanceBlockDevice.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The attachment state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsInstanceBlockDevice.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the Amazon EBS volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.EbsInstanceBlockDeviceSpecification">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsInstanceBlockDeviceSpecification.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            Indicates whether the volume is deleted on instance termination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EbsInstanceBlockDeviceSpecification.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the Amazon EBS volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.EnableVgwRoutePropagationRequest">
            <summary>
            Container for the parameters to the EnableVgwRoutePropagation operation.
            Enables a virtual private gateway (VGW) to propagate routes to the routing tables
            of a VPC.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EnableVgwRoutePropagationRequest.GatewayId">
            <summary>
            Gets and sets the property GatewayId. 
            <para>
            The ID of the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EnableVgwRoutePropagationRequest.RouteTableId">
            <summary>
            Gets and sets the property RouteTableId. 
            <para>
            The ID of the routing table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.EnableVgwRoutePropagationResponse">
            <summary>
            Configuration for accessing Amazon EnableVgwRoutePropagation service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EnableVgwRoutePropagationResponse.EnableVgwRoutePropagationResult">
            <summary>
            Gets and sets the EnableVgwRoutePropagationResult property.
            Represents the output of a EnableVgwRoutePropagation operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.EnableVolumeIORequest">
            <summary>
            Container for the parameters to the EnableVolumeIO operation.
            Enables I/O operations for a volume that had I/O operations disabled because the data
            on the volume was potentially inconsistent.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EnableVolumeIORequest.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.EnableVolumeIOResponse">
            <summary>
            Configuration for accessing Amazon EnableVolumeIO service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.EnableVolumeIOResponse.EnableVolumeIOResult">
            <summary>
            Gets and sets the EnableVolumeIOResult property.
            Represents the output of a EnableVolumeIO operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ExportTask">
            <summary>
            Describes an export task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportTask.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the resource being exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportTask.ExportTaskId">
            <summary>
            Gets and sets the property ExportTaskId. 
            <para>
            The ID of the export task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportTask.ExportToS3Task">
            <summary>
            Gets and sets the property ExportToS3Task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportTask.InstanceExportDetails">
            <summary>
            Gets and sets the property InstanceExportDetails. 
            <para>
            The instance being exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportTask.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the conversion task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportTask.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            The status message related to the export task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ExportToS3Task">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportToS3Task.ContainerFormat">
            <summary>
            Gets and sets the property ContainerFormat. 
            <para>
            The container format used to combine disk images with metadata (such as OVF). If absent,
            only the disk image is exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportToS3Task.DiskImageFormat">
            <summary>
            Gets and sets the property DiskImageFormat. 
            <para>
            The format for the exported image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportToS3Task.S3Bucket">
            <summary>
            Gets and sets the property S3Bucket. 
            <para>
            The Amazon S3 bucket for the destination image. The destination bucket must exist
            and grant WRITE and READ_ACL permissions to the AWS account <code>vm-import-export@amazon.com</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportToS3Task.S3Key">
            <summary>
            Gets and sets the property S3Key.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ExportToS3TaskSpecification">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportToS3TaskSpecification.ContainerFormat">
            <summary>
            Gets and sets the property ContainerFormat.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportToS3TaskSpecification.DiskImageFormat">
            <summary>
            Gets and sets the property DiskImageFormat.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportToS3TaskSpecification.S3Bucket">
            <summary>
            Gets and sets the property S3Bucket.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ExportToS3TaskSpecification.S3Prefix">
            <summary>
            Gets and sets the property S3Prefix. 
            <para>
            The image is written to a single object in the Amazon S3 bucket at the S3 key s3prefix
            + exportTaskId + '.' + diskImageFormat.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Filter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.Filter.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.Filter.#ctor(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates Filter with the parameterized properties
            </summary>
            <param name="name">The name of the filter.</param>
            <param name="values">One or more filter values.</param>
        </member>
        <member name="M:Amazon.EC2.Model.Filter.#ctor(System.String)">
            <summary>
            Instantiates Filter with the parameterized properties
            </summary>
            <param name="name">The name of the filter.</param>
        </member>
        <member name="P:Amazon.EC2.Model.Filter.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the filter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Filter.Values">
            <summary>
            Gets and sets the property Values. 
            <para>
            One or more filter values.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.GetConsoleOutputRequest">
            <summary>
            Container for the parameters to the GetConsoleOutput operation.
            Gets the console output for the specified instance.
            
             
            <para>
            Instances do not have a physical monitor through which you can view their console
            output. They also lack physical controls that allow you to power up, reboot, or shut
            them down. To allow these actions, we provide them through the Amazon EC2 API and
            command line interface.
            </para>
             
            <para>
            Instance console output is buffered and posted shortly after instance boot, reboot,
            and termination. Amazon EC2 preserves the most recent 64 KB output which is available
            for at least one hour after the most recent post.
            </para>
             
            <para>
            For Linux/Unix instances, the instance console output displays the exact console output
            that would normally be displayed on a physical monitor attached to a machine. This
            output is buffered because the instance produces it and then posts it to a store where
            the instance's owner can retrieve it.
            </para>
             
            <para>
            For Windows instances, the instance console output displays the last three system
            event log errors.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.GetConsoleOutputRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.GetConsoleOutputRequest.#ctor(System.String)">
            <summary>
            Instantiates GetConsoleOutputRequest with the parameterized properties
            </summary>
            <param name="instanceId">The ID of the instance.</param>
        </member>
        <member name="P:Amazon.EC2.Model.GetConsoleOutputRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.GetConsoleOutputResponse">
            <summary>
            Configuration for accessing Amazon GetConsoleOutput service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.GetConsoleOutputResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetConsoleOutputResult.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetConsoleOutputResult.Output">
            <summary>
            Gets and sets the property Output. 
            <para>
            The console output, Base64 encoded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetConsoleOutputResult.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time the output was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetConsoleOutputResponse.GetConsoleOutputResult">
            <summary>
            Gets and sets the GetConsoleOutputResult property.
            Represents the output of a GetConsoleOutput operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.GetPasswordDataRequest">
            <summary>
            Container for the parameters to the GetPasswordData operation.
            Retrieves the encrypted administrator password for an instance running Windows.
            
             
            <para>
            The Windows password is only generated the first time an AMI is launched. It is not
            generated for rebundled AMIs or after the password is changed on an instance.
            </para>
             
            <para>
            The password is encrypted using the key pair that you specified when you launched
            the instance. You must provide the corresponding key pair file.
            </para>
             
            <para>
            Password generation and encryption takes a few moments. We recommend that you wait
            up to 15 minutes after launching an instance before trying to retrieve the generated
            password.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.GetPasswordDataRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.GetPasswordDataRequest.#ctor(System.String)">
            <summary>
            Instantiates GetPasswordDataRequest with the parameterized properties
            </summary>
            <param name="instanceId">The ID of the Windows instance.</param>
        </member>
        <member name="P:Amazon.EC2.Model.GetPasswordDataRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the Windows instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.GetPasswordDataResponse">
            <summary>
            Configuration for accessing Amazon GetPasswordData service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.GetPasswordDataResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetPasswordDataResult.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the Windows instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetPasswordDataResult.PasswordData">
            <summary>
            Gets and sets the property PasswordData. 
            <para>
            The password of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetPasswordDataResult.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time the data was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GetPasswordDataResponse.GetPasswordDataResult">
            <summary>
            Gets and sets the GetPasswordDataResult property.
            Represents the output of a GetPasswordData operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.GroupIdentifier">
            <summary>
            Describes a security group.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GroupIdentifier.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The ID of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.GroupIdentifier.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the security group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.IamInstanceProfile">
            <summary>
            Describes an IAM instance profile.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IamInstanceProfile.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the instance profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IamInstanceProfile.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID of the instance profile.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.IamInstanceProfileSpecification">
            <summary>
            Describes an IAM instance profile.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IamInstanceProfileSpecification.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the instance profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IamInstanceProfileSpecification.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the instance profile.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.IcmpTypeCode">
            <summary>
            Describes the ICMP type and code.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IcmpTypeCode.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The ICMP type. A value of -1 means all types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IcmpTypeCode.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The ICMP code. A value of -1 means all codes for the specified ICMP type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Image">
            <summary>
            Describes an image.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.Architecture">
            <summary>
            Gets and sets the property Architecture. 
            <para>
            The architecture of the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            Any block device mapping entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the AMI that was provided during image creation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.Hypervisor">
            <summary>
            Gets and sets the property Hypervisor. 
            <para>
            The hypervisor type of the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.ImageLocation">
            <summary>
            Gets and sets the property ImageLocation. 
            <para>
            The location of the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.ImageOwnerAlias">
            <summary>
            Gets and sets the property ImageOwnerAlias. 
            <para>
            The AWS account alias (for example, <code>amazon</code>, <code>self</code>) or the
            AWS account ID of the AMI owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.ImageType">
            <summary>
            Gets and sets the property ImageType. 
            <para>
            The type of image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.KernelId">
            <summary>
            Gets and sets the property KernelId. 
            <para>
            The kernel associated with the image, if any. Only applicable for machine images.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the AMI that was provided during image creation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account ID of the image owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The value is <code>Windows</code> for Windows AMIs; otherwise blank.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.ProductCodes">
            <summary>
            Gets and sets the property ProductCodes. 
            <para>
            Any product codes associated with the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.Public">
            <summary>
            Gets and sets the property Public. 
            <para>
            Indicates whether the image has public launch permissions. The value is <code>true</code>
            if this image has public launch permissions or <code>false</code> if it has only implicit
            and explicit launch permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.RamdiskId">
            <summary>
            Gets and sets the property RamdiskId. 
            <para>
            The RAM disk associated with the image, if any. Only applicable for machine images.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.RootDeviceName">
            <summary>
            Gets and sets the property RootDeviceName. 
            <para>
            The device name of the root device (for example, <filename>/dev/sda1</filename> or
            <filename>xvda</filename>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.RootDeviceType">
            <summary>
            Gets and sets the property RootDeviceType. 
            <para>
            The type of root device used by the AMI. The AMI can use an Amazon EBS volume or an
            instance store volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.SriovNetSupport">
            <summary>
            Gets and sets the property SriovNetSupport. 
            <para>
            Specifies whether enhanced networking is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the AMI. If the state is <code>available</code>, the image is
            successfully registered and can be used to launch an instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            The reason for the state change.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Image.VirtualizationType">
            <summary>
            Gets and sets the property VirtualizationType. 
            <para>
            The type of virtualization of the AMI.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImageAttribute">
            <summary>
            Describes an image attribute.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageAttribute.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            One or more block device mapping entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageAttribute.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageAttribute.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageAttribute.KernelId">
            <summary>
            Gets and sets the property KernelId. 
            <para>
            The kernel ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageAttribute.LaunchPermissions">
            <summary>
            Gets and sets the property LaunchPermissions. 
            <para>
            One or more launch permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageAttribute.ProductCodes">
            <summary>
            Gets and sets the property ProductCodes. 
            <para>
            One or more product codes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageAttribute.RamdiskId">
            <summary>
            Gets and sets the property RamdiskId. 
            <para>
            The RAM disk ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImageAttribute.SriovNetSupport">
            <summary>
            Gets and sets the property SriovNetSupport.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportInstanceLaunchSpecification">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.AdditionalInfo">
            <summary>
            Gets and sets the property AdditionalInfo.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.Architecture">
            <summary>
            Gets and sets the property Architecture. 
            <para>
            The architecture of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.GroupNames">
            <summary>
            Gets and sets the property GroupNames. 
            <para>
            One or more security group names.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.InstanceInitiatedShutdownBehavior">
            <summary>
            Gets and sets the property InstanceInitiatedShutdownBehavior. 
            <para>
            Indicates whether an instance stops or terminates when you initiate shutdown from
            the instance (using the operating system command for system shutdown).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
            Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.Monitoring">
            <summary>
            Gets and sets the property Monitoring.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.Placement">
            <summary>
            Gets and sets the property Placement.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            [EC2-VPC] Optionally, you can use this parameter to assign the instance a specific
            available IP address from the IP address range of the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            [EC2-VPC] The ID of the subnet to launch the instance into.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceLaunchSpecification.UserData">
            <summary>
            Gets and sets the property UserData. 
            <para>
            User data to be made available to the instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportInstanceRequest">
            <summary>
            Container for the parameters to the ImportInstance operation.
            Creates an import instance task using metadata from the specified disk image. After
            importing the image, you then upload it using the ec2-import-volume command in the
            EC2 command line tools. For more information, see <ulink url="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UploadingYourInstancesandVolumes.html">Using
            the Command Line Tools to Import Your Virtual Machine to Amazon EC2</ulink> in the
            <emphasis>Amazon Elastic Compute Cloud User Guide</emphasis>.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the instance being imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceRequest.DiskImages">
            <summary>
            Gets and sets the property DiskImages.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceRequest.LaunchSpecification">
            <summary>
            Gets and sets the property LaunchSpecification. 
            <para>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceRequest.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The instance operating system.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportInstanceResponse">
            <summary>
            Configuration for accessing Amazon ImportInstance service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportInstanceResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceResult.ConversionTask">
            <summary>
            Gets and sets the property ConversionTask.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceResponse.ImportInstanceResult">
            <summary>
            Gets and sets the ImportInstanceResult property.
            Represents the output of a ImportInstance operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportInstanceTaskDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceTaskDetails.Description">
            <summary>
            Gets and sets the property Description.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceTaskDetails.InstanceId">
            <summary>
            Gets and sets the property InstanceId.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceTaskDetails.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The instance operating system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceTaskDetails.Volumes">
            <summary>
            Gets and sets the property Volumes.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportInstanceVolumeDetailItem">
            <summary>
            Describes an import volume task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceVolumeDetailItem.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone where the resulting instance will reside.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceVolumeDetailItem.BytesConverted">
            <summary>
            Gets and sets the property BytesConverted. 
            <para>
            The number of bytes converted so far.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceVolumeDetailItem.Description">
            <summary>
            Gets and sets the property Description.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceVolumeDetailItem.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceVolumeDetailItem.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the import of this particular disk image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceVolumeDetailItem.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            The status information or errors related to the disk image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportInstanceVolumeDetailItem.Volume">
            <summary>
            Gets and sets the property Volume. 
            <para>
            The volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportKeyPairRequest">
            <summary>
            Container for the parameters to the ImportKeyPair operation.
            Imports the public key from an RSA key pair that you created with a third-party tool.
            Compare this with <a>CreateKeyPair</a>, in which AWS creates the key pair and gives
            the keys to you (AWS keeps a copy of the public key). With ImportKeyPair, you create
            the key pair and give AWS just the public key. The private key is never transferred
            between you and AWS.
            
             
            <para>
            For more information about key pairs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ImportKeyPairRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ImportKeyPairRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates ImportKeyPairRequest with the parameterized properties
            </summary>
            <param name="keyName">A unique name for the key pair.</param>
            <param name="publicKeyMaterial">The public key. You must base64 encode the public key material before sending it to AWS.</param>
        </member>
        <member name="P:Amazon.EC2.Model.ImportKeyPairRequest.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
            A unique name for the key pair.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportKeyPairRequest.PublicKeyMaterial">
            <summary>
            Gets and sets the property PublicKeyMaterial. 
            <para>
            The public key. You must base64 encode the public key material before sending it to
            AWS.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportKeyPairResponse">
            <summary>
            Configuration for accessing Amazon ImportKeyPair service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportKeyPairResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportKeyPairResult.KeyFingerprint">
            <summary>
            Gets and sets the property KeyFingerprint. 
            <para>
            The MD5 public key fingerprint as specified in section 4 of RFC 4716.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportKeyPairResult.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
            The key pair name you provided.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportKeyPairResponse.ImportKeyPairResult">
            <summary>
            Gets and sets the ImportKeyPairResult property.
            Represents the output of a ImportKeyPair operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportVolumeRequest">
            <summary>
            Container for the parameters to the ImportVolume operation.
            Creates an import volume task using metadata from the specified disk image. After
            importing the image, you then upload it using the ec2-import-volume command in the
            Amazon EC2 command-line interface (CLI) tools. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UploadingYourInstancesandVolumes.html">Using
            the Command Line Tools to Import Your Virtual Machine to Amazon EC2</a> in the <i>Amazon
            Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeRequest.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone for the resulting Amazon EBS volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            An optional description for the volume being imported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeRequest.Image">
            <summary>
            Gets and sets the property Image.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeRequest.Volume">
            <summary>
            Gets and sets the property Volume.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportVolumeResponse">
            <summary>
            Configuration for accessing Amazon ImportVolume service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportVolumeResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeResult.ConversionTask">
            <summary>
            Gets and sets the property ConversionTask.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeResponse.ImportVolumeResult">
            <summary>
            Gets and sets the ImportVolumeResult property.
            Represents the output of a ImportVolume operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ImportVolumeTaskDetails">
            <summary>
            Describes an import volume task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeTaskDetails.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone where the resulting volume will reside.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeTaskDetails.BytesConverted">
            <summary>
            Gets and sets the property BytesConverted. 
            <para>
            The number of bytes converted so far.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeTaskDetails.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description you provided when starting the import volume task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeTaskDetails.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ImportVolumeTaskDetails.Volume">
            <summary>
            Gets and sets the property Volume. 
            <para>
            The volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Instance">
            <summary>
            Describes an instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.AmiLaunchIndex">
            <summary>
            Gets and sets the property AmiLaunchIndex. 
            <para>
            The AMI launch index, which can be used to find this instance in the launch group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.Architecture">
            <summary>
            Gets and sets the property Architecture. 
            <para>
            The architecture of the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            Any block device mapping entries for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            The idempotency token you provided when you launched the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.EbsOptimized">
            <summary>
            Gets and sets the property EbsOptimized. 
            <para>
            Indicates whether the instance is optimized for EBS I/O. This optimization provides
            dedicated throughput to Amazon EBS and an optimized configuration stack to provide
            optimal I/O performance. This optimization isn't available with all instance types.
            Additional usage charges apply when using an EBS Optimized instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.Hypervisor">
            <summary>
            Gets and sets the property Hypervisor. 
            <para>
            The hypervisor type of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.IamInstanceProfile">
            <summary>
            Gets and sets the property IamInstanceProfile. 
            <para>
            The IAM instance profile associated with the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the AMI used to launch the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.InstanceLifecycle">
            <summary>
            Gets and sets the property InstanceLifecycle. 
            <para>
            Indicates whether this is a Spot Instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.KernelId">
            <summary>
            Gets and sets the property KernelId. 
            <para>
            The kernel associated with this instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
            The name of the key pair, if this instance was launched with an associated key pair.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.LaunchTime">
            <summary>
            Gets and sets the property LaunchTime. 
            <para>
            The time the instance was launched.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.Monitoring">
            <summary>
            Gets and sets the property Monitoring. 
            <para>
            The monitoring information for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.NetworkInterfaces">
            <summary>
            Gets and sets the property NetworkInterfaces. 
            <para>
            [EC2-VPC] One or more network interfaces for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.Placement">
            <summary>
            Gets and sets the property Placement. 
            <para>
            The location where the instance launched.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The value is <code>Windows</code> for Windows instances; otherwise blank.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.PrivateDnsName">
            <summary>
            Gets and sets the property PrivateDnsName. 
            <para>
            The private DNS name assigned to the instance. This DNS name can only be used inside
            the Amazon EC2 network. This name is not available until the instance enters the <code>running</code>
            state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The private IP address assigned to the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.ProductCodes">
            <summary>
            Gets and sets the property ProductCodes. 
            <para>
            The product codes attached to this instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.PublicDnsName">
            <summary>
            Gets and sets the property PublicDnsName. 
            <para>
            The public DNS name assigned to the instance. This name is not available until the
            instance enters the <code>running</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.PublicIpAddress">
            <summary>
            Gets and sets the property PublicIpAddress. 
            <para>
            The public IP address assigned to the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.RamdiskId">
            <summary>
            Gets and sets the property RamdiskId. 
            <para>
            The RAM disk associated with this instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.RootDeviceName">
            <summary>
            Gets and sets the property RootDeviceName. 
            <para>
            The root device name (for example, <code>/dev/sda1</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.RootDeviceType">
            <summary>
            Gets and sets the property RootDeviceType. 
            <para>
            The root device type used by the AMI. The AMI can use an Amazon EBS volume or an instance
            store volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            One or more security groups for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.SourceDestCheck">
            <summary>
            Gets and sets the property SourceDestCheck. 
            <para>
            Specifies whether to enable an instance launched in a VPC to perform NAT. This controls
            whether source/destination checking is enabled on the instance. A value of <code>true</code>
            means checking is enabled, and <code>false</code> means checking is disabled. The
            value must be <code>false</code> for the instance to perform NAT. For more information,
            see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT
            Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.SpotInstanceRequestId">
            <summary>
            Gets and sets the property SpotInstanceRequestId. 
            <para>
            The ID of the Spot Instance request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.SriovNetSupport">
            <summary>
            Gets and sets the property SriovNetSupport. 
            <para>
            Specifies whether enhanced networking is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            The reason for the most recent state transition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.StateTransitionReason">
            <summary>
            Gets and sets the property StateTransitionReason. 
            <para>
            The reason for the most recent state transition. This might be an empty string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet in which the instance is running.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.VirtualizationType">
            <summary>
            Gets and sets the property VirtualizationType. 
            <para>
            The virtualization type of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Instance.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC in which the instance is running.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceAttribute">
            <summary>
            Describes an instance attribute.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            The block device mapping of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.DisableApiTermination">
            <summary>
            Gets and sets the property DisableApiTermination. 
            <para>
            If the value is <code>true</code>, you can't terminate the instance through the Amazon
            EC2 console, CLI, or API; otherwise, you can.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.EbsOptimized">
            <summary>
            Gets and sets the property EbsOptimized. 
            <para>
            Indicates whether the instance is optimized for EBS I/O.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.InstanceInitiatedShutdownBehavior">
            <summary>
            Gets and sets the property InstanceInitiatedShutdownBehavior. 
            <para>
            Indicates whether an instance stops or terminates when you initiate shutdown from
            the instance (using the operating system command for system shutdown).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.KernelId">
            <summary>
            Gets and sets the property KernelId. 
            <para>
            The kernel ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.ProductCodes">
            <summary>
            Gets and sets the property ProductCodes. 
            <para>
            A list of product codes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.RamdiskId">
            <summary>
            Gets and sets the property RamdiskId. 
            <para>
            The RAM disk ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.RootDeviceName">
            <summary>
            Gets and sets the property RootDeviceName. 
            <para>
            The name of the root device (for example, <code>/dev/sda1</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.SourceDestCheck">
            <summary>
            Gets and sets the property SourceDestCheck. 
            <para>
            Indicates whether source/destination checking is enabled. A value of true means checking
            is enabled, and false means checking is disabled. This value must be false for a NAT
            instance to perform NAT.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.SriovNetSupport">
            <summary>
            Gets and sets the property SriovNetSupport.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceAttribute.UserData">
            <summary>
            Gets and sets the property UserData. 
            <para>
            The Base64-encoded MIME user data.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceBlockDeviceMapping">
            <summary>
            Describes a block device mapping.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceBlockDeviceMapping.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
            The device name exposed to the instance (for example, <filename>/dev/sdh</filename>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceBlockDeviceMapping.Ebs">
            <summary>
            Gets and sets the property Ebs. 
            <para>
            Parameters used to automatically set up Amazon EBS volumes when the instance is launched.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceBlockDeviceMappingSpecification">
            <summary>
            Describes a block device mapping entry.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceBlockDeviceMappingSpecification.DeviceName">
            <summary>
            Gets and sets the property DeviceName. 
            <para>
            The device name exposed to the instance (for example, <filename>/dev/sdh</filename>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceBlockDeviceMappingSpecification.Ebs">
            <summary>
            Gets and sets the property Ebs. 
            <para>
            Parameters used to automatically set up Amazon EBS volumes when the instance is launched.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceBlockDeviceMappingSpecification.NoDevice">
            <summary>
            Gets and sets the property NoDevice. 
            <para>
            suppress the specified device included in the block device mapping.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceBlockDeviceMappingSpecification.VirtualName">
            <summary>
            Gets and sets the property VirtualName. 
            <para>
            The virtual device name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceCount">
            <summary>
            Describes a Reserved Instance listing state.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceCount.Count">
            <summary>
            Gets and sets the property Count. 
            <para>
            he number of listed Reserved Instances in the state specified by the <code>state</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceCount.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The states of the listed Reserved Instances.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceExportDetails">
            <summary>
            Describes an instance export task.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceExportDetails.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the resource being exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceExportDetails.TargetEnvironment">
            <summary>
            Gets and sets the property TargetEnvironment. 
            <para>
            The target virtualization environment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceLicenseSpecification">
            <summary>Instance License Specification
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceMonitoring">
            <summary>
            Describes the monitoring information of the instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceMonitoring.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceMonitoring.Monitoring">
            <summary>
            Gets and sets the property Monitoring. 
            <para>
            The monitoring information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceNetworkInterface">
            <summary>
            Describes a network interface.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.Association">
            <summary>
            Gets and sets the property Association. 
            <para>
            The association information for an Elastic IP associated with the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.Attachment">
            <summary>
            Gets and sets the property Attachment. 
            <para>
            The network interface attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            One or more security groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The ID of the AWS account that created the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.PrivateDnsName">
            <summary>
            Gets and sets the property PrivateDnsName. 
            <para>
            The private DNS name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The IP address of the network interface within the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.PrivateIpAddresses">
            <summary>
            Gets and sets the property PrivateIpAddresses. 
            <para>
            The private IP addresses associated with the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.SourceDestCheck">
            <summary>
            Gets and sets the property SourceDestCheck. 
            <para>
            Indicates whether to validate network traffic to or from this network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterface.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceNetworkInterfaceAssociation">
            <summary>
            Describes association information for an Elastic IP address.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceAssociation.IpOwnerId">
            <summary>
            Gets and sets the property IpOwnerId. 
            <para>
            The ID of the owner of the Elastic IP address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceAssociation.PublicDnsName">
            <summary>
            Gets and sets the property PublicDnsName. 
            <para>
            The public DNS name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceAssociation.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            The address of the Elastic IP address bound to the network interface.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceNetworkInterfaceAttachment">
            <summary>
            Describes a network interface attachment.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceAttachment.AttachmentId">
            <summary>
            Gets and sets the property AttachmentId. 
            <para>
            The ID of the network interface attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceAttachment.AttachTime">
            <summary>
            Gets and sets the property AttachTime. 
            <para>
            The time stamp when the attachment initiated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceAttachment.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            Indicates whether the network interface is deleted when the instance is terminated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceAttachment.DeviceIndex">
            <summary>
            Gets and sets the property DeviceIndex. 
            <para>
            The index of the device on the instance for the network interface attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceAttachment.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The attachment state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification">
            <summary>
            Describes a network interface.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification.AssociatePublicIpAddress">
            <summary>
            Gets and sets the property AssociatePublicIpAddress. 
            <para>
            Indicates whether to auto-assign a public IP address to an instance in a VPC. This
            public IP address can be assigned to the network interface for eth0 only when you
            launch the instance. You must create the network interface instead of using an existing
            network interface for eth0, and you must not specify more than one network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            If set to <code>true</code>, the interface is deleted when the instance is terminated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification.DeviceIndex">
            <summary>
            Gets and sets the property DeviceIndex. 
            <para>
            The index of the device on the instance for the network interface attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            The IDs of the security groups for the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The private IP address of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification.PrivateIpAddresses">
            <summary>
            Gets and sets the property PrivateIpAddresses. 
            <para>
            One or more private IP addresses to assign to the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification.SecondaryPrivateIpAddressCount">
            <summary>
            Gets and sets the property SecondaryPrivateIpAddressCount. 
            <para>
            The number of secondary private IP addresses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceNetworkInterfaceSpecification.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet associated with the network string.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstancePrivateIpAddress">
            <summary>
            Describes a private IP address.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstancePrivateIpAddress.Association">
            <summary>
            Gets and sets the property Association. 
            <para>
            The association information for an Elastic IP address for the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstancePrivateIpAddress.Primary">
            <summary>
            Gets and sets the property Primary. 
            <para>
            Indicates whether this IP address is the primary private IP address of the network
            interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstancePrivateIpAddress.PrivateDnsName">
            <summary>
            Gets and sets the property PrivateDnsName. 
            <para>
            The private DNS name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstancePrivateIpAddress.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The private IP address of the network interface.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceState">
            <summary>
            Describes the current state of the instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceState.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The low byte represents the state. The high byte is an opaque internal value and should
            be ignored.
            </para>
             <ul> <li>
            <para>
            <code>0</code> : <code>pending</code>
            </para>
            </li> <li>
            <para>
            <code>16</code> : <code>running</code>
            </para>
            </li> <li>
            <para>
            <code>32</code> : <code>shutting-down</code>
            </para>
            </li> <li>
            <para>
            <code>48</code> : <code>terminated</code>
            </para>
            </li> <li>
            <para>
            <code>64</code> : <code>stopping</code>
            </para>
            </li> <li>
            <para>
            <code>80</code> : <code>stopped</code>
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceState.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The current state of the instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceStateChange">
            <summary>
            Describes an instance state change.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStateChange.CurrentState">
            <summary>
            Gets and sets the property CurrentState. 
            <para>
            The current state of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStateChange.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStateChange.PreviousState">
            <summary>
            Gets and sets the property PreviousState. 
            <para>
            The previous state of the instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceStatus">
            <summary>
            Describes the status of an instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatus.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatus.Events">
            <summary>
            Gets and sets the property Events. 
            <para>
            Extra information regarding events associated with the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatus.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatus.InstanceState">
            <summary>
            Gets and sets the property InstanceState. 
            <para>
            The intended state of the instance. <a>DescribeInstanceStatus</a> requires that an
            instance be in the <code>running</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatus.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Reports impaired functionality that stems from issues internal to the instance, such
            as impaired reachability.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatus.SystemStatus">
            <summary>
            Gets and sets the property SystemStatus. 
            <para>
            Reports impaired functionality that stems from issues related to the systems that
            support an instance, such as hardware failures and network connectivity problems.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceStatusDetails">
            <summary>
            Describes the instance status.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatusDetails.ImpairedSince">
            <summary>
            Gets and sets the property ImpairedSince. 
            <para>
            The time when a status check failed. For an instance that was launched and impaired,
            this is the time when the instance was launched.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatusDetails.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The type of instance status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatusDetails.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceStatusEvent">
            <summary>
            Describes an instance event.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatusEvent.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The associated code of the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatusEvent.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatusEvent.NotAfter">
            <summary>
            Gets and sets the property NotAfter. 
            <para>
            The latest scheduled end time for the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatusEvent.NotBefore">
            <summary>
            Gets and sets the property NotBefore. 
            <para>
            The earliest scheduled start time for the event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InstanceStatusSummary">
            <summary>
            Describes the status of an instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatusSummary.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            The system instance health or application instance health.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InstanceStatusSummary.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AcceptVpcPeeringConnectionRequestMarshaller">
            <summary>
            AcceptVpcPeeringConnection Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AcceptVpcPeeringConnectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AcceptVpcPeeringConnection operation
            </summary>  
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.EC2ResponseUnmarshaller">
            <summary>
            Class for unmarshalling EC2 service responses.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AccountAttributeUnmarshaller">
            <summary>
            Response Unmarshaller for AccountAttribute Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AccountAttributeValueUnmarshaller">
            <summary>
            Response Unmarshaller for AccountAttributeValue Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AddressUnmarshaller">
            <summary>
            Response Unmarshaller for Address Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AllocateAddressRequestMarshaller">
            <summary>
            AllocateAddress Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AllocateAddressResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AllocateAddress operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AssignPrivateIpAddressesRequestMarshaller">
            <summary>
            AssignPrivateIpAddresses Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AssignPrivateIpAddressesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssignPrivateIpAddresses operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateAddressRequestMarshaller">
            <summary>
            AssociateAddress Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateAddressResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssociateAddress operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateDhcpOptionsRequestMarshaller">
            <summary>
            AssociateDhcpOptions Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateDhcpOptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssociateDhcpOptions operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateRouteTableRequestMarshaller">
            <summary>
            AssociateRouteTable Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AssociateRouteTableResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssociateRouteTable operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AttachInternetGatewayRequestMarshaller">
            <summary>
            AttachInternetGateway Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AttachInternetGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AttachInternetGateway operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AttachNetworkInterfaceRequestMarshaller">
            <summary>
            AttachNetworkInterface Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AttachNetworkInterfaceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AttachNetworkInterface operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AttachVolumeRequestMarshaller">
            <summary>
            AttachVolume Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AttachVolumeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AttachVolume operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AttachVpnGatewayRequestMarshaller">
            <summary>
            AttachVpnGateway Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AttachVpnGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AttachVpnGateway operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupEgressRequestMarshaller">
            <summary>
            AuthorizeSecurityGroupEgress Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupEgressResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AuthorizeSecurityGroupEgress operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupIngressRequestMarshaller">
            <summary>
            AuthorizeSecurityGroupIngress Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AuthorizeSecurityGroupIngressResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AuthorizeSecurityGroupIngress operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AvailabilityZoneMessageUnmarshaller">
            <summary>
            Response Unmarshaller for AvailabilityZoneMessage Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller">
            <summary>
            Response Unmarshaller for AvailabilityZone Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.BlockDeviceMappingUnmarshaller">
            <summary>
            Response Unmarshaller for BlockDeviceMapping Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.BundleInstanceRequestMarshaller">
            <summary>
            BundleInstance Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.BundleInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BundleInstance operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.BundleTaskErrorUnmarshaller">
            <summary>
            Response Unmarshaller for BundleTaskError Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.BundleTaskUnmarshaller">
            <summary>
            Response Unmarshaller for BundleTask Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelBundleTaskRequestMarshaller">
            <summary>
            CancelBundleTask Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelBundleTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelBundleTask operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelConversionTaskRequestMarshaller">
            <summary>
            CancelConversionTask Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelConversionTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelConversionTask operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelExportTaskRequestMarshaller">
            <summary>
            CancelExportTask Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelExportTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelExportTask operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelledSpotInstanceRequestUnmarshaller">
            <summary>
            Response Unmarshaller for CancelledSpotInstanceRequest Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelReservedInstancesListingRequestMarshaller">
            <summary>
            CancelReservedInstancesListing Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelReservedInstancesListingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelReservedInstancesListing operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotInstanceRequestsRequestMarshaller">
            <summary>
            CancelSpotInstanceRequests Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CancelSpotInstanceRequestsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelSpotInstanceRequests operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ConfirmProductInstanceRequestMarshaller">
            <summary>
            ConfirmProductInstance Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ConfirmProductInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ConfirmProductInstance operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ConversionTaskUnmarshaller">
            <summary>
            Response Unmarshaller for ConversionTask Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CopyImageRequestMarshaller">
            <summary>
            CopyImage Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CopyImageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CopyImage operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CopySnapshotRequestMarshaller">
            <summary>
            CopySnapshot Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CopySnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CopySnapshot operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateCustomerGatewayRequestMarshaller">
            <summary>
            CreateCustomerGateway Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateCustomerGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateCustomerGateway operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateDhcpOptionsRequestMarshaller">
            <summary>
            CreateDhcpOptions Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateDhcpOptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDhcpOptions operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateImageRequestMarshaller">
            <summary>
            CreateImage Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateImageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateImage operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateInstanceExportTaskRequestMarshaller">
            <summary>
            CreateInstanceExportTask Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateInstanceExportTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateInstanceExportTask operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateInternetGatewayRequestMarshaller">
            <summary>
            CreateInternetGateway Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateInternetGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateInternetGateway operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateKeyPairRequestMarshaller">
            <summary>
            CreateKeyPair Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateKeyPairResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateKeyPair operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclEntryRequestMarshaller">
            <summary>
            CreateNetworkAclEntry Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclEntryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateNetworkAclEntry operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclRequestMarshaller">
            <summary>
            CreateNetworkAcl Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkAclResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateNetworkAcl operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkInterfaceRequestMarshaller">
            <summary>
            CreateNetworkInterface Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateNetworkInterfaceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateNetworkInterface operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreatePlacementGroupRequestMarshaller">
            <summary>
            CreatePlacementGroup Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreatePlacementGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreatePlacementGroup operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateReservedInstancesListingRequestMarshaller">
            <summary>
            CreateReservedInstancesListing Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateReservedInstancesListingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateReservedInstancesListing operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteRequestMarshaller">
            <summary>
            CreateRoute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateRoute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteTableRequestMarshaller">
            <summary>
            CreateRouteTable Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateRouteTableResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateRouteTable operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSecurityGroupRequestMarshaller">
            <summary>
            CreateSecurityGroup Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSecurityGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSecurityGroup operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSnapshotRequestMarshaller">
            <summary>
            CreateSnapshot Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSnapshot operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSpotDatafeedSubscriptionRequestMarshaller">
            <summary>
            CreateSpotDatafeedSubscription Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSpotDatafeedSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSpotDatafeedSubscription operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSubnetRequestMarshaller">
            <summary>
            CreateSubnet Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateSubnetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSubnet operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateTagsRequestMarshaller">
            <summary>
            CreateTags Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateTags operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVolumePermissionUnmarshaller">
            <summary>
            Response Unmarshaller for CreateVolumePermission Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVolumeRequestMarshaller">
            <summary>
            CreateVolume Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVolumeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateVolume operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcPeeringConnectionRequestMarshaller">
            <summary>
            CreateVpcPeeringConnection Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcPeeringConnectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateVpcPeeringConnection operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcRequestMarshaller">
            <summary>
            CreateVpc Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpcResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateVpc operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionRequestMarshaller">
            <summary>
            CreateVpnConnection Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateVpnConnection operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionRouteRequestMarshaller">
            <summary>
            CreateVpnConnectionRoute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnConnectionRouteResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateVpnConnectionRoute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnGatewayRequestMarshaller">
            <summary>
            CreateVpnGateway Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CreateVpnGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateVpnGateway operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.CustomerGatewayUnmarshaller">
            <summary>
            Response Unmarshaller for CustomerGateway Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteCustomerGatewayRequestMarshaller">
            <summary>
            DeleteCustomerGateway Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteCustomerGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCustomerGateway operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteDhcpOptionsRequestMarshaller">
            <summary>
            DeleteDhcpOptions Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteDhcpOptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDhcpOptions operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteInternetGatewayRequestMarshaller">
            <summary>
            DeleteInternetGateway Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteInternetGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteInternetGateway operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteKeyPairRequestMarshaller">
            <summary>
            DeleteKeyPair Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteKeyPairResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteKeyPair operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclEntryRequestMarshaller">
            <summary>
            DeleteNetworkAclEntry Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclEntryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteNetworkAclEntry operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclRequestMarshaller">
            <summary>
            DeleteNetworkAcl Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkAclResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteNetworkAcl operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInterfaceRequestMarshaller">
            <summary>
            DeleteNetworkInterface Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteNetworkInterfaceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteNetworkInterface operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeletePlacementGroupRequestMarshaller">
            <summary>
            DeletePlacementGroup Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeletePlacementGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeletePlacementGroup operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteRequestMarshaller">
            <summary>
            DeleteRoute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteRoute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteTableRequestMarshaller">
            <summary>
            DeleteRouteTable Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteRouteTableResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteRouteTable operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSecurityGroupRequestMarshaller">
            <summary>
            DeleteSecurityGroup Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSecurityGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSecurityGroup operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSnapshotRequestMarshaller">
            <summary>
            DeleteSnapshot Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSnapshot operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSpotDatafeedSubscriptionRequestMarshaller">
            <summary>
            DeleteSpotDatafeedSubscription Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSpotDatafeedSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSpotDatafeedSubscription operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSubnetRequestMarshaller">
            <summary>
            DeleteSubnet Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteSubnetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSubnet operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller">
            <summary>
            DeleteTags Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteTags operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVolumeRequestMarshaller">
            <summary>
            DeleteVolume Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVolumeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteVolume operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcPeeringConnectionRequestMarshaller">
            <summary>
            DeleteVpcPeeringConnection Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcPeeringConnectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteVpcPeeringConnection operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcRequestMarshaller">
            <summary>
            DeleteVpc Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpcResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteVpc operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionRequestMarshaller">
            <summary>
            DeleteVpnConnection Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteVpnConnection operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionRouteRequestMarshaller">
            <summary>
            DeleteVpnConnectionRoute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnConnectionRouteResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteVpnConnectionRoute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnGatewayRequestMarshaller">
            <summary>
            DeleteVpnGateway Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeleteVpnGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteVpnGateway operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeregisterImageRequestMarshaller">
            <summary>
            DeregisterImage Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DeregisterImageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeregisterImage operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAccountAttributesRequestMarshaller">
            <summary>
            DescribeAccountAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAccountAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAccountAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAddressesRequestMarshaller">
            <summary>
            DescribeAddresses Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAddressesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAddresses operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAvailabilityZonesRequestMarshaller">
            <summary>
            DescribeAvailabilityZones Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeAvailabilityZonesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeAvailabilityZones operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeBundleTasksRequestMarshaller">
            <summary>
            DescribeBundleTasks Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeBundleTasksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeBundleTasks operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeConversionTasksRequestMarshaller">
            <summary>
            DescribeConversionTasks Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeConversionTasksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeConversionTasks operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCustomerGatewaysRequestMarshaller">
            <summary>
            DescribeCustomerGateways Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeCustomerGatewaysResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeCustomerGateways operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeDhcpOptionsRequestMarshaller">
            <summary>
            DescribeDhcpOptions Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeDhcpOptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDhcpOptions operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeExportTasksRequestMarshaller">
            <summary>
            DescribeExportTasks Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeExportTasksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeExportTasks operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImageAttributeRequestMarshaller">
            <summary>
            DescribeImageAttribute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImageAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeImageAttribute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImagesRequestMarshaller">
            <summary>
            DescribeImages Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeImagesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeImages operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceAttributeRequestMarshaller">
            <summary>
            DescribeInstanceAttribute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeInstanceAttribute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstancesRequestMarshaller">
            <summary>
            DescribeInstances Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeInstances operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceStatusRequestMarshaller">
            <summary>
            DescribeInstanceStatus Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInstanceStatusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeInstanceStatus operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInternetGatewaysRequestMarshaller">
            <summary>
            DescribeInternetGateways Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeInternetGatewaysResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeInternetGateways operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeKeyPairsRequestMarshaller">
            <summary>
            DescribeKeyPairs Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeKeyPairsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeKeyPairs operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkAclsRequestMarshaller">
            <summary>
            DescribeNetworkAcls Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkAclsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeNetworkAcls operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfaceAttributeRequestMarshaller">
            <summary>
            DescribeNetworkInterfaceAttribute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfaceAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeNetworkInterfaceAttribute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfacesRequestMarshaller">
            <summary>
            DescribeNetworkInterfaces Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeNetworkInterfacesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeNetworkInterfaces operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribePlacementGroupsRequestMarshaller">
            <summary>
            DescribePlacementGroups Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribePlacementGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribePlacementGroups operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRegionsRequestMarshaller">
            <summary>
            DescribeRegions Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRegionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeRegions operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesListingsRequestMarshaller">
            <summary>
            DescribeReservedInstancesListings Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesListingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeReservedInstancesListings operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesModificationsRequestMarshaller">
            <summary>
            DescribeReservedInstancesModifications Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesModificationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeReservedInstancesModifications operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesOfferingsRequestMarshaller">
            <summary>
            DescribeReservedInstancesOfferings Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesOfferingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeReservedInstancesOfferings operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesRequestMarshaller">
            <summary>
            DescribeReservedInstances Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeReservedInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeReservedInstances operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRouteTablesRequestMarshaller">
            <summary>
            DescribeRouteTables Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeRouteTablesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeRouteTables operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupsRequestMarshaller">
            <summary>
            DescribeSecurityGroups Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSecurityGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSecurityGroups operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotAttributeRequestMarshaller">
            <summary>
            DescribeSnapshotAttribute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSnapshotAttribute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotsRequestMarshaller">
            <summary>
            DescribeSnapshots Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSnapshotsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSnapshots operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotDatafeedSubscriptionRequestMarshaller">
            <summary>
            DescribeSpotDatafeedSubscription Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotDatafeedSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSpotDatafeedSubscription operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotInstanceRequestsRequestMarshaller">
            <summary>
            DescribeSpotInstanceRequests Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotInstanceRequestsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSpotInstanceRequests operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotPriceHistoryRequestMarshaller">
            <summary>
            DescribeSpotPriceHistory Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSpotPriceHistoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSpotPriceHistory operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSubnetsRequestMarshaller">
            <summary>
            DescribeSubnets Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeSubnetsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSubnets operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTagsRequestMarshaller">
            <summary>
            DescribeTags Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTags operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeAttributeRequestMarshaller">
            <summary>
            DescribeVolumeAttribute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVolumeAttribute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumesRequestMarshaller">
            <summary>
            DescribeVolumes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVolumes operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeStatusRequestMarshaller">
            <summary>
            DescribeVolumeStatus Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVolumeStatusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVolumeStatus operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcAttributeRequestMarshaller">
            <summary>
            DescribeVpcAttribute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVpcAttribute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcPeeringConnectionsRequestMarshaller">
            <summary>
            DescribeVpcPeeringConnections Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcPeeringConnectionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVpcPeeringConnections operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcsRequestMarshaller">
            <summary>
            DescribeVpcs Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpcsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVpcs operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnConnectionsRequestMarshaller">
            <summary>
            DescribeVpnConnections Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnConnectionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVpnConnections operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnGatewaysRequestMarshaller">
            <summary>
            DescribeVpnGateways Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DescribeVpnGatewaysResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeVpnGateways operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DetachInternetGatewayRequestMarshaller">
            <summary>
            DetachInternetGateway Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DetachInternetGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetachInternetGateway operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DetachNetworkInterfaceRequestMarshaller">
            <summary>
            DetachNetworkInterface Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DetachNetworkInterfaceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetachNetworkInterface operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DetachVolumeRequestMarshaller">
            <summary>
            DetachVolume Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DetachVolumeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetachVolume operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DetachVpnGatewayRequestMarshaller">
            <summary>
            DetachVpnGateway Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DetachVpnGatewayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetachVpnGateway operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DhcpConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for DhcpConfiguration Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DhcpOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for DhcpOptions Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVgwRoutePropagationRequestMarshaller">
            <summary>
            DisableVgwRoutePropagation Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DisableVgwRoutePropagationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisableVgwRoutePropagation operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateAddressRequestMarshaller">
            <summary>
            DisassociateAddress Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateAddressResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisassociateAddress operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateRouteTableRequestMarshaller">
            <summary>
            DisassociateRouteTable Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DisassociateRouteTableResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisassociateRouteTable operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DiskImageDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for DiskImageDescription Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.DiskImageVolumeDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for DiskImageVolumeDescription Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.EbsBlockDeviceUnmarshaller">
            <summary>
            Response Unmarshaller for EbsBlockDevice Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.EbsInstanceBlockDeviceUnmarshaller">
            <summary>
            Response Unmarshaller for EbsInstanceBlockDevice Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVgwRoutePropagationRequestMarshaller">
            <summary>
            EnableVgwRoutePropagation Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVgwRoutePropagationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnableVgwRoutePropagation operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVolumeIORequestMarshaller">
            <summary>
            EnableVolumeIO Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.EnableVolumeIOResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnableVolumeIO operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ExportTaskUnmarshaller">
            <summary>
            Response Unmarshaller for ExportTask Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ExportToS3TaskUnmarshaller">
            <summary>
            Response Unmarshaller for ExportToS3Task Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleOutputRequestMarshaller">
            <summary>
            GetConsoleOutput Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.GetConsoleOutputResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetConsoleOutput operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.GetPasswordDataRequestMarshaller">
            <summary>
            GetPasswordData Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.GetPasswordDataResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetPasswordData operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.GroupIdentifierUnmarshaller">
            <summary>
            Response Unmarshaller for GroupIdentifier Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.IamInstanceProfileSpecificationUnmarshaller">
            <summary>
            Response Unmarshaller for IamInstanceProfileSpecification Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.IamInstanceProfileUnmarshaller">
            <summary>
            Response Unmarshaller for IamInstanceProfile Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.IcmpTypeCodeUnmarshaller">
            <summary>
            Response Unmarshaller for IcmpTypeCode Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImageAttributeUnmarshaller">
            <summary>
            Response Unmarshaller for ImageAttribute Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImageUnmarshaller">
            <summary>
            Response Unmarshaller for Image Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceRequestMarshaller">
            <summary>
            ImportInstance Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ImportInstance operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceTaskDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for ImportInstanceTaskDetails Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportInstanceVolumeDetailItemUnmarshaller">
            <summary>
            Response Unmarshaller for ImportInstanceVolumeDetailItem Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportKeyPairRequestMarshaller">
            <summary>
            ImportKeyPair Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportKeyPairResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ImportKeyPair operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportVolumeRequestMarshaller">
            <summary>
            ImportVolume Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportVolumeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ImportVolume operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ImportVolumeTaskDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for ImportVolumeTaskDetails Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceAttributeUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceAttribute Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceBlockDeviceMappingUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceBlockDeviceMapping Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceCountUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceCount Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceExportDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceExportDetails Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceMonitoringUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceMonitoring Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceAssociationUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceNetworkInterfaceAssociation Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceAttachmentUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceNetworkInterfaceAttachment Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceSpecificationUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceNetworkInterfaceSpecification Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceNetworkInterfaceUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceNetworkInterface Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstancePrivateIpAddressUnmarshaller">
            <summary>
            Response Unmarshaller for InstancePrivateIpAddress Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStateChangeUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceStateChange Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStateUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceState Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceStatusDetails Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusEventUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceStatusEvent Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceStatusSummary Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceStatusUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceStatus Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InstanceUnmarshaller">
            <summary>
            Response Unmarshaller for Instance Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InternetGatewayAttachmentUnmarshaller">
            <summary>
            Response Unmarshaller for InternetGatewayAttachment Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.InternetGatewayUnmarshaller">
            <summary>
            Response Unmarshaller for InternetGateway Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.IpPermissionUnmarshaller">
            <summary>
            Response Unmarshaller for IpPermission Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.KeyPairInfoUnmarshaller">
            <summary>
            Response Unmarshaller for KeyPairInfo Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.KeyPairUnmarshaller">
            <summary>
            Response Unmarshaller for KeyPair Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.LaunchPermissionUnmarshaller">
            <summary>
            Response Unmarshaller for LaunchPermission Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.LaunchSpecificationUnmarshaller">
            <summary>
            Response Unmarshaller for LaunchSpecification Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyImageAttributeRequestMarshaller">
            <summary>
            ModifyImageAttribute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyImageAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyImageAttribute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceAttributeRequestMarshaller">
            <summary>
            ModifyInstanceAttribute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyInstanceAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyInstanceAttribute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyNetworkInterfaceAttributeRequestMarshaller">
            <summary>
            ModifyNetworkInterfaceAttribute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyNetworkInterfaceAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyNetworkInterfaceAttribute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyReservedInstancesRequestMarshaller">
            <summary>
            ModifyReservedInstances Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyReservedInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyReservedInstances operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySnapshotAttributeRequestMarshaller">
            <summary>
            ModifySnapshotAttribute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySnapshotAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifySnapshotAttribute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySubnetAttributeRequestMarshaller">
            <summary>
            ModifySubnetAttribute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifySubnetAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifySubnetAttribute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVolumeAttributeRequestMarshaller">
            <summary>
            ModifyVolumeAttribute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVolumeAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyVolumeAttribute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcAttributeRequestMarshaller">
            <summary>
            ModifyVpcAttribute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ModifyVpcAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyVpcAttribute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.MonitoringUnmarshaller">
            <summary>
            Response Unmarshaller for Monitoring Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.MonitorInstancesRequestMarshaller">
            <summary>
            MonitorInstances Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.MonitorInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for MonitorInstances operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclAssociationUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkAclAssociation Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclEntryUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkAclEntry Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkAclUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkAcl Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceAssociationUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkInterfaceAssociation Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceAttachmentUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkInterfaceAttachment Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfacePrivateIpAddressUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkInterfacePrivateIpAddress Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.NetworkInterfaceUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkInterface Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PlacementGroupUnmarshaller">
            <summary>
            Response Unmarshaller for PlacementGroup Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PlacementUnmarshaller">
            <summary>
            Response Unmarshaller for Placement Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PortRangeUnmarshaller">
            <summary>
            Response Unmarshaller for PortRange Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PriceScheduleUnmarshaller">
            <summary>
            Response Unmarshaller for PriceSchedule Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PricingDetailUnmarshaller">
            <summary>
            Response Unmarshaller for PricingDetail Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PrivateIpAddressSpecificationUnmarshaller">
            <summary>
            Response Unmarshaller for PrivateIpAddressSpecification Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ProductCodeUnmarshaller">
            <summary>
            Response Unmarshaller for ProductCode Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PropagatingVgwUnmarshaller">
            <summary>
            Response Unmarshaller for PropagatingVgw Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseReservedInstancesOfferingRequestMarshaller">
            <summary>
            PurchaseReservedInstancesOffering Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.PurchaseReservedInstancesOfferingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PurchaseReservedInstancesOffering operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RebootInstancesRequestMarshaller">
            <summary>
            RebootInstances Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RebootInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RebootInstances operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RecurringChargeUnmarshaller">
            <summary>
            Response Unmarshaller for RecurringCharge Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RegionUnmarshaller">
            <summary>
            Response Unmarshaller for Region Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RegisterImageRequestMarshaller">
            <summary>
            RegisterImage Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RegisterImageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RegisterImage operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RejectVpcPeeringConnectionRequestMarshaller">
            <summary>
            RejectVpcPeeringConnection Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RejectVpcPeeringConnectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RejectVpcPeeringConnection operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseAddressRequestMarshaller">
            <summary>
            ReleaseAddress Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReleaseAddressResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ReleaseAddress operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclAssociationRequestMarshaller">
            <summary>
            ReplaceNetworkAclAssociation Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclAssociationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ReplaceNetworkAclAssociation operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclEntryRequestMarshaller">
            <summary>
            ReplaceNetworkAclEntry Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceNetworkAclEntryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ReplaceNetworkAclEntry operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteRequestMarshaller">
            <summary>
            ReplaceRoute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ReplaceRoute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteTableAssociationRequestMarshaller">
            <summary>
            ReplaceRouteTableAssociation Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReplaceRouteTableAssociationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ReplaceRouteTableAssociation operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReportInstanceStatusRequestMarshaller">
            <summary>
            ReportInstanceStatus Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReportInstanceStatusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ReportInstanceStatus operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotInstancesRequestMarshaller">
            <summary>
            RequestSpotInstances Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RequestSpotInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RequestSpotInstances operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReservationUnmarshaller">
            <summary>
            Response Unmarshaller for Reservation Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ReservedInstancesConfiguration Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesIdUnmarshaller">
            <summary>
            Response Unmarshaller for ReservedInstancesId Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesListingUnmarshaller">
            <summary>
            Response Unmarshaller for ReservedInstancesListing Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesModificationResultUnmarshaller">
            <summary>
            Response Unmarshaller for ReservedInstancesModificationResult Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesModificationUnmarshaller">
            <summary>
            Response Unmarshaller for ReservedInstancesModification Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesOfferingUnmarshaller">
            <summary>
            Response Unmarshaller for ReservedInstancesOffering Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ReservedInstancesUnmarshaller">
            <summary>
            Response Unmarshaller for ReservedInstances Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ResetImageAttributeRequestMarshaller">
            <summary>
            ResetImageAttribute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ResetImageAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ResetImageAttribute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ResetInstanceAttributeRequestMarshaller">
            <summary>
            ResetInstanceAttribute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ResetInstanceAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ResetInstanceAttribute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ResetNetworkInterfaceAttributeRequestMarshaller">
            <summary>
            ResetNetworkInterfaceAttribute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ResetNetworkInterfaceAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ResetNetworkInterfaceAttribute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ResetSnapshotAttributeRequestMarshaller">
            <summary>
            ResetSnapshotAttribute Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.ResetSnapshotAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ResetSnapshotAttribute operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupEgressRequestMarshaller">
            <summary>
            RevokeSecurityGroupEgress Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupEgressResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RevokeSecurityGroupEgress operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupIngressRequestMarshaller">
            <summary>
            RevokeSecurityGroupIngress Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RevokeSecurityGroupIngressResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RevokeSecurityGroupIngress operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RouteTableAssociationUnmarshaller">
            <summary>
            Response Unmarshaller for RouteTableAssociation Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RouteTableUnmarshaller">
            <summary>
            Response Unmarshaller for RouteTable Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RouteUnmarshaller">
            <summary>
            Response Unmarshaller for Route Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RunInstancesRequestMarshaller">
            <summary>
            RunInstances Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.RunInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RunInstances operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.S3StorageUnmarshaller">
            <summary>
            Response Unmarshaller for S3Storage Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SecurityGroupUnmarshaller">
            <summary>
            Response Unmarshaller for SecurityGroup Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SnapshotUnmarshaller">
            <summary>
            Response Unmarshaller for Snapshot Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SpotDatafeedSubscriptionUnmarshaller">
            <summary>
            Response Unmarshaller for SpotDatafeedSubscription Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceRequestUnmarshaller">
            <summary>
            Response Unmarshaller for SpotInstanceRequest Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceStateFaultUnmarshaller">
            <summary>
            Response Unmarshaller for SpotInstanceStateFault Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SpotInstanceStatusUnmarshaller">
            <summary>
            Response Unmarshaller for SpotInstanceStatus Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SpotPlacementUnmarshaller">
            <summary>
            Response Unmarshaller for SpotPlacement Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SpotPriceUnmarshaller">
            <summary>
            Response Unmarshaller for SpotPrice Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.StartInstancesRequestMarshaller">
            <summary>
            StartInstances Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.StartInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartInstances operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.StateReasonUnmarshaller">
            <summary>
            Response Unmarshaller for StateReason Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.StopInstancesRequestMarshaller">
            <summary>
            StopInstances Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.StopInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopInstances operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.StorageUnmarshaller">
            <summary>
            Response Unmarshaller for Storage Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.SubnetUnmarshaller">
            <summary>
            Response Unmarshaller for Subnet Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.TagDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for TagDescription Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.TerminateInstancesRequestMarshaller">
            <summary>
            TerminateInstances Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.TerminateInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TerminateInstances operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.UnassignPrivateIpAddressesRequestMarshaller">
            <summary>
            UnassignPrivateIpAddresses Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.UnassignPrivateIpAddressesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UnassignPrivateIpAddresses operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.UnmonitorInstancesRequestMarshaller">
            <summary>
            UnmonitorInstances Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.UnmonitorInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UnmonitorInstances operation
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.UserIdGroupPairUnmarshaller">
            <summary>
            Response Unmarshaller for UserIdGroupPair Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VgwTelemetryUnmarshaller">
            <summary>
            Response Unmarshaller for VgwTelemetry Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeAttachmentUnmarshaller">
            <summary>
            Response Unmarshaller for VolumeAttachment Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusActionUnmarshaller">
            <summary>
            Response Unmarshaller for VolumeStatusAction Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusDetailsUnmarshaller">
            <summary>
            Response Unmarshaller for VolumeStatusDetails Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusEventUnmarshaller">
            <summary>
            Response Unmarshaller for VolumeStatusEvent Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusInfoUnmarshaller">
            <summary>
            Response Unmarshaller for VolumeStatusInfo Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeStatusItemUnmarshaller">
            <summary>
            Response Unmarshaller for VolumeStatusItem Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VolumeUnmarshaller">
            <summary>
            Response Unmarshaller for Volume Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpcAttachmentUnmarshaller">
            <summary>
            Response Unmarshaller for VpcAttachment Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionStateReasonUnmarshaller">
            <summary>
            Response Unmarshaller for VpcPeeringConnectionStateReason Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionUnmarshaller">
            <summary>
            Response Unmarshaller for VpcPeeringConnection Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpcPeeringConnectionVpcInfoUnmarshaller">
            <summary>
            Response Unmarshaller for VpcPeeringConnectionVpcInfo Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpcUnmarshaller">
            <summary>
            Response Unmarshaller for Vpc Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpnConnectionOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for VpnConnectionOptions Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpnConnectionUnmarshaller">
            <summary>
            Response Unmarshaller for VpnConnection Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpnGatewayUnmarshaller">
            <summary>
            Response Unmarshaller for VpnGateway Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.Internal.MarshallTransformations.VpnStaticRouteUnmarshaller">
            <summary>
            Response Unmarshaller for VpnStaticRoute Object
            </summary>  
        </member>
        <member name="T:Amazon.EC2.Model.InternetGateway">
            <summary>
            Describes an Internet gateway.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InternetGateway.Attachments">
            <summary>
            Gets and sets the property Attachments. 
            <para>
            Any VPCs attached to the Internet gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InternetGateway.InternetGatewayId">
            <summary>
            Gets and sets the property InternetGatewayId. 
            <para>
            The ID of the Internet gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InternetGateway.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the Internet gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.InternetGatewayAttachment">
            <summary>
            Describes the attachment of a VPC to an Internet gateway.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InternetGatewayAttachment.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.InternetGatewayAttachment.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.IpPermission">
            <summary>
            Describes a security group rule.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IpPermission.FromPort">
            <summary>
            Gets and sets the property FromPort. 
            <para>
            The start of port range for the TCP and UDP protocols, or an ICMP type number. A value
            of <code>-1</code> indicates all ICMP types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IpPermission.IpProtocol">
            <summary>
            Gets and sets the property IpProtocol. 
            <para>
            The protocol.
            </para>
             
            <para>
            When you call <a>DescribeSecurityGroups</a>, the protocol value returned is the number.
            Exception: For TCP, UDP, and ICMP, the value returned is the name (for example, <code>tcp</code>,
            <code>udp</code>, or <code>icmp</code>). For a list of protocol numbers, see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol
            Numbers</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IpPermission.IpRanges">
            <summary>
            Gets and sets the property IpRanges. 
            <para>
            One or more IP ranges.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IpPermission.ToPort">
            <summary>
            Gets and sets the property ToPort. 
            <para>
            The end of port range for the TCP and UDP protocols, or an ICMP code. A value of <code>-1</code>
            indicates all ICMP codes for the specified ICMP type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.IpPermission.UserIdGroupPairs">
            <summary>
            Gets and sets the property UserIdGroupPairs. 
            <para>
            One or more security group and AWS account ID pairs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.KeyPair">
            <summary>
            Describes a key pair.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.KeyPair.KeyFingerprint">
            <summary>
            Gets and sets the property KeyFingerprint. 
            <para>
            The SHA-1 digest of the DER encoded private key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.KeyPair.KeyMaterial">
            <summary>
            Gets and sets the property KeyMaterial. 
            <para>
            An unencrypted PEM encoded RSA private key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.KeyPair.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
            The name of the key pair.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.KeyPairInfo">
            <summary>
            Describes a key pair.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.KeyPairInfo.KeyFingerprint">
            <summary>
            Gets and sets the property KeyFingerprint. 
            <para>
            If you used <a>CreateKeyPair</a> to create the key pair, this is the SHA-1 digest
            of the DER encoded private key. If you used <a>ImportKeyPair</a> to provide AWS the
            public key, this is the MD5 public key fingerprint as specified in section 4 of RFC4716.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.KeyPairInfo.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
            The name of the key pair.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.LaunchPermission">
            <summary>
            Describes a launch permission.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchPermission.Group">
            <summary>
            Gets and sets the property Group. 
            <para>
            The name of the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchPermission.UserId">
            <summary>
            Gets and sets the property UserId. 
            <para>
            The AWS account ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.LaunchPermissionModifications">
            <summary>
            Describes a launch permission modification.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchPermissionModifications.Add">
            <summary>
            Gets and sets the property Add. 
            <para>
            The AWS account ID to add to the list of launch permissions for the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchPermissionModifications.Remove">
            <summary>
            Gets and sets the property Remove. 
            <para>
            The AWS account ID to remove from the list of launch permissions for the AMI.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.LaunchSpecification">
            <summary>
            Describes the launch specification of a Spot Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.AddressingType">
            <summary>
            Gets and sets the property AddressingType. 
            <para>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.AllSecurityGroups">
            <summary>
            Gets and sets the property AllSecurityGroups. 
            <para>
            One or more security groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            One or more block device mapping entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.EbsOptimized">
            <summary>
            Gets and sets the property EbsOptimized. 
            <para>
            Indicates whether the instance is optimized for EBS I/O. This optimization provides
            dedicated throughput to Amazon EBS and an optimized configuration stack to provide
            optimal EBS I/O performance. This optimization isn't available with all instance types.
            Additional usage charges apply when using an EBS Optimized instance.
            </para>
             
            <para>
            Default: <code>false</code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.IamInstanceProfile">
            <summary>
            Gets and sets the property IamInstanceProfile. 
            <para>
            The IAM instance profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.KernelId">
            <summary>
            Gets and sets the property KernelId. 
            <para>
            The ID of the kernel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
            The name of the key pair.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.MonitoringEnabled">
            <summary>
            Gets and sets the property MonitoringEnabled.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.NetworkInterfaces">
            <summary>
            Gets and sets the property NetworkInterfaces. 
            <para>
            One or more network interfaces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.Placement">
            <summary>
            Gets and sets the property Placement. 
            <para>
            The placement information for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.RamdiskId">
            <summary>
            Gets and sets the property RamdiskId. 
            <para>
            The ID of the RAM disk.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            One or more security group names.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet in which to launch the Spot Instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.LaunchSpecification.UserData">
            <summary>
            Gets and sets the property UserData. 
            <para>
            The Base64-encoded MIME user data to make available to the instances.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyImageAttributeRequest">
            <summary>
            Container for the parameters to the ModifyImageAttribute operation.
            Modifies the specified attribute of the specified AMI. You can specify only one attribute
            at a time.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ModifyImageAttributeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ModifyImageAttributeRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates ModifyImageAttributeRequest with the parameterized properties
            </summary>
            <param name="imageId">The ID of the AMI.</param>
            <param name="attribute">The name of the attribute to modify.</param>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyImageAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The name of the attribute to modify.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyImageAttributeRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyImageAttributeRequest.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyImageAttributeRequest.LaunchPermission">
            <summary>
            Gets and sets the property LaunchPermission. 
            <para>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyImageAttributeRequest.OperationType">
            <summary>
            Gets and sets the property OperationType. 
            <para>
            The operation type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyImageAttributeRequest.ProductCodes">
            <summary>
            Gets and sets the property ProductCodes. 
            <para>
            One or more product codes. After you add a product code to an AMI, it can't be removed.
            This is only valid when modifying the <code>productCodes</code> attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyImageAttributeRequest.UserGroups">
            <summary>
            Gets and sets the property UserGroups. 
            <para>
            One or more user groups. This is only valid when modifying the <code>launchPermission</code>
            attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyImageAttributeRequest.UserIds">
            <summary>
            Gets and sets the property UserIds. 
            <para>
            One or more AWS account IDs. This is only valid when modifying the <code>launchPermission</code>
            attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyImageAttributeRequest.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the attribute being modified. This is only valid when modifying the <code>description</code>
            attribute.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyImageAttributeResponse">
            <summary>
            Configuration for accessing Amazon ModifyImageAttribute service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyImageAttributeResponse.ModifyImageAttributeResult">
            <summary>
            Gets and sets the ModifyImageAttributeResult property.
            Represents the output of a ModifyImageAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyInstanceAttributeRequest">
            <summary>
            Container for the parameters to the ModifyInstanceAttribute operation.
            Modifies the specified attribute of the specified instance. You can specify only one
            attribute at a time.
            
             
            <para>
            To modify some attributes, the instance must be stopped. For more information, see
            <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_ChangingAttributesWhileInstanceStopped.html">Modifying
            Attributes of a Stopped Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ModifyInstanceAttributeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ModifyInstanceAttributeRequest.#ctor(System.String,Amazon.EC2.InstanceAttributeName)">
            <summary>
            Instantiates ModifyInstanceAttributeRequest with the parameterized properties
            </summary>
            <param name="instanceId">The ID of the instance.</param>
            <param name="attribute">The name of the attribute.</param>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The name of the attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            Modifies the <code>DeleteOnTermination</code> attribute for volumes that are currently
            attached. The volume must be owned by the caller. If no value is specified for <code>DeleteOnTermination</code>,
            the default is <code>true</code> and the volume is deleted when the instance is terminated.
            </para>
             
            <para>
            To add instance store volumes to an Amazon EBS-backed instance, you must add them
            when you launch the instance. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html#Using_OverridingAMIBDM">Updating
            the Block Device Mapping when Launching an Instance</a> in the <i>Amazon Elastic Compute
            Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.DisableApiTermination">
            <summary>
            Gets and sets the property DisableApiTermination. 
            <para>
            Specifies whether to disable the ability to terminate the instance using the Amazon
            EC2 console, CLI, and API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.EbsOptimized">
            <summary>
            Gets and sets the property EbsOptimized. 
            <para>
            Specifies whether the instance is optimized for EBS I/O. This optimization provides
            dedicated throughput to Amazon EBS and an optimized configuration stack to provide
            optimal EBS I/O performance. This optimization isn't available with all instance types.
            Additional usage charges apply when using an EBS Optimized instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            [EC2-VPC] Changes the security groups of the instance. You must specify at least one
            security group, even if it's just the default security group for the VPC. You must
            specify the security group ID, not the security group name.
            </para>
             
            <para>
            For example, if you want the instance to be in sg-1a1a1a1a and sg-9b9b9b9b, specify
            <code>GroupId.1=sg-1a1a1a1a</code> and <code>GroupId.2=sg-9b9b9b9b</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.InstanceInitiatedShutdownBehavior">
            <summary>
            Gets and sets the property InstanceInitiatedShutdownBehavior. 
            <para>
            Specifies whether an instance stops or terminates when you initiate shutdown from
            the instance (using the operating system command for system shutdown).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            Changes the instance type to the specified value. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
            Types</a>. If the instance type is not valid, the error returned is <code>InvalidInstanceAttributeValue</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.Kernel">
            <summary>
            Gets and sets the property Kernel. 
            <para>
            Changes the instance's kernel to the specified value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.Ramdisk">
            <summary>
            Gets and sets the property Ramdisk. 
            <para>
            Changes the instance's RAM disk to the specified value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.SourceDestCheck">
            <summary>
            Gets and sets the property SourceDestCheck. 
            <para>
            Specifies whether source/destination checking is enabled. A value of <code>true</code>
            means that checking is enabled, and <code>false</code> means checking is disabled.
            This value must be <code>false</code> for a NAT instance to perform NAT.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.SriovNetSupport">
            <summary>
            Gets and sets the property SriovNetSupport. 
            <para>
            Set to <code>simple</code> to enable enhanced networking for the instance.
            </para>
             
            <para>
            There is no way to disable enhanced networking at this time.
            </para>
             
            <para>
            This option is supported only for HVM instances. Specifying this option with a PV
            instance can make it unreachable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.UserData">
            <summary>
            Gets and sets the property UserData. 
            <para>
            Changes the instance's user data to the specified value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeRequest.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            A new value for the attribute. Use only with the <code>kernel</code>, <code>ramdisk</code>,
            <code>userData</code>, <code>disableApiTermination</code>, or <code>intanceInitiateShutdownBehavior</code>
            attribute.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyInstanceAttributeResponse">
            <summary>
            Configuration for accessing Amazon ModifyInstanceAttribute service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyInstanceAttributeResponse.ModifyInstanceAttributeResult">
            <summary>
            Gets and sets the ModifyInstanceAttributeResult property.
            Represents the output of a ModifyInstanceAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest">
            <summary>
            Container for the parameters to the ModifyNetworkInterfaceAttribute operation.
            Modifies the specified network interface attribute. You can specify only one attribute
            at a time.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest.Attachment">
            <summary>
            Gets and sets the property Attachment. 
            <para>
            The ID of the interface attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            Changes the security groups for the network interface. The new set of groups you specify
            replaces the current set. You must specify at least one group, even if it's just the
            default security group in the VPC. You must specify the ID of the security group,
            not the name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyNetworkInterfaceAttributeRequest.SourceDestCheck">
            <summary>
            Gets and sets the property SourceDestCheck. 
            <para>
            Indicates whether source/destination checking is enabled. A value of <code>true</code>
            means checking is enabled, and <code>false</code> means checking is disabled. This
            value must be <code>false</code> for a NAT instance to perform NAT. For more information,
            see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT
            Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyNetworkInterfaceAttributeResponse">
            <summary>
            Configuration for accessing Amazon ModifyNetworkInterfaceAttribute service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyNetworkInterfaceAttributeResponse.ModifyNetworkInterfaceAttributeResult">
            <summary>
            Gets and sets the ModifyNetworkInterfaceAttributeResult property.
            Represents the output of a ModifyNetworkInterfaceAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyReservedInstancesRequest">
            <summary>
            Container for the parameters to the ModifyReservedInstances operation.
            Modifies the Availability Zone, instance count, instance type, or network platform
            (EC2-Classic or EC2-VPC) of your Reserved Instances. The Reserved Instances to be
            modified must be identical, except for Availability Zone, network platform, and instance
            type.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyReservedInstancesRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            A unique, case-sensitive token you provide to ensure idempotency of your modification
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyReservedInstancesRequest.ReservedInstancesIds">
            <summary>
            Gets and sets the property ReservedInstancesIds. 
            <para>
            The IDs of the Reserved Instances to modify.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyReservedInstancesRequest.TargetConfigurations">
            <summary>
            Gets and sets the property TargetConfigurations. 
            <para>
            The configuration settings for the Reserved Instances to modify.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyReservedInstancesResponse">
            <summary>
            Configuration for accessing Amazon ModifyReservedInstances service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyReservedInstancesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyReservedInstancesResult.ReservedInstancesModificationId">
            <summary>
            Gets and sets the property ReservedInstancesModificationId. 
            <para>
            The ID for the modification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyReservedInstancesResponse.ModifyReservedInstancesResult">
            <summary>
            Gets and sets the ModifyReservedInstancesResult property.
            Represents the output of a ModifyReservedInstances operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifySnapshotAttributeRequest">
            <summary>
            Container for the parameters to the ModifySnapshotAttribute operation.
            Adds or removes permission settings for the specified snapshot. You may add or remove
            specified AWS account IDs from a snapshot's list of create volume permissions, but
            you cannot do both in a single API call. If you need to both add and remove account
            IDs for a snapshot, you must use multiple API calls.
            
             
            <para>
            For more information on modifying snapshot permissions, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html">Sharing
            Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ModifySnapshotAttributeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ModifySnapshotAttributeRequest.#ctor(System.String,Amazon.EC2.SnapshotAttributeName,System.String)">
            <summary>
            Instantiates ModifySnapshotAttributeRequest with the parameterized properties
            </summary>
            <param name="snapshotId">The ID of the snapshot.</param>
            <param name="attribute">The snapshot attribute to modify.</param>
            <param name="operationType">The type of operation to perform to the attribute.</param>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySnapshotAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The snapshot attribute to modify.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySnapshotAttributeRequest.CreateVolumePermission">
            <summary>
            Gets and sets the property CreateVolumePermission. 
            <para>
            A JSON representation of the snapshot attribute modification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySnapshotAttributeRequest.GroupNames">
            <summary>
            Gets and sets the property GroupNames. 
            <para>
            The group to modify for the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySnapshotAttributeRequest.OperationType">
            <summary>
            Gets and sets the property OperationType. 
            <para>
            The type of operation to perform to the attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySnapshotAttributeRequest.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The ID of the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySnapshotAttributeRequest.UserIds">
            <summary>
            Gets and sets the property UserIds. 
            <para>
            The account ID to modify for the snapshot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifySnapshotAttributeResponse">
            <summary>
            Configuration for accessing Amazon ModifySnapshotAttribute service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySnapshotAttributeResponse.ModifySnapshotAttributeResult">
            <summary>
            Gets and sets the ModifySnapshotAttributeResult property.
            Represents the output of a ModifySnapshotAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifySubnetAttributeRequest">
            <summary>
            Container for the parameters to the ModifySubnetAttribute operation.
            Modifies a subnet attribute.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySubnetAttributeRequest.MapPublicIpOnLaunch">
            <summary>
            Gets and sets the property MapPublicIpOnLaunch.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySubnetAttributeRequest.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifySubnetAttributeResponse">
            <summary>
            Configuration for accessing Amazon ModifySubnetAttribute service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifySubnetAttributeResponse.ModifySubnetAttributeResult">
            <summary>
            Gets and sets the ModifySubnetAttributeResult property.
            Represents the output of a ModifySubnetAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyVolumeAttributeRequest">
            <summary>
            Container for the parameters to the ModifyVolumeAttribute operation.
            Modifies a volume attribute.
            
             
            <para>
            By default, all I/O operations for the volume are suspended when the data on the volume
            is determined to be potentially inconsistent, to prevent undetectable, latent data
            corruption. The I/O access to the volume can be resumed by first enabling I/O access
            and then checking the data consistency on your volume.
            </para>
             
            <para>
            You can change the default behavior to resume I/O operations. We recommend that you
            change this only for boot volumes or for volumes that are stateless or disposable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVolumeAttributeRequest.AutoEnableIO">
            <summary>
            Gets and sets the property AutoEnableIO. 
            <para>
            Indicates whether the volume should be auto-enabled for I/O operations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVolumeAttributeRequest.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyVolumeAttributeResponse">
            <summary>
            Configuration for accessing Amazon ModifyVolumeAttribute service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVolumeAttributeResponse.ModifyVolumeAttributeResult">
            <summary>
            Gets and sets the ModifyVolumeAttributeResult property.
            Represents the output of a ModifyVolumeAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyVpcAttributeRequest">
            <summary>
            Container for the parameters to the ModifyVpcAttribute operation.
            Modifies the specified attribute of the specified VPC.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVpcAttributeRequest.EnableDnsHostnames">
            <summary>
            Gets and sets the property EnableDnsHostnames. 
            <para>
            Indicates whether the instances launched in the VPC get DNS hostnames. If this attribute
            is <code>true</code>, instances in the VPC get DNS hostnames; otherwise, they do not.
            </para>
             
            <para>
            You can only set <code>enableDnsHostnames</code> to <code>true</code> if you also
            set the <code>EnableDnsSupport</code> attribute to <code>true</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVpcAttributeRequest.EnableDnsSupport">
            <summary>
            Gets and sets the property EnableDnsSupport. 
            <para>
            Indicates whether the DNS resolution is supported for the VPC. If this attribute is
            <code>false</code>, the Amazon provided DNS service in the VPC that resolves public
            DNS hostnames to IP addresses is not enabled. If this attribute is <code>true</code>,
            queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the
            reserved IP address at the base of the VPC network range "plus two" will succeed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVpcAttributeRequest.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ModifyVpcAttributeResponse">
            <summary>
            Configuration for accessing Amazon ModifyVpcAttribute service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ModifyVpcAttributeResponse.ModifyVpcAttributeResult">
            <summary>
            Gets and sets the ModifyVpcAttributeResult property.
            Represents the output of a ModifyVpcAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Monitoring">
            <summary>
            Describes the monitoring for the instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Monitoring.State">
            <summary>
            Gets and sets the property State. 
            <para>
            Indicates whether monitoring is enabled for the instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.MonitorInstancesRequest">
            <summary>
            Container for the parameters to the MonitorInstances operation.
            Enables monitoring for a running instance. For more information about monitoring instances,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitoring
            Your Instances and Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.MonitorInstancesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.MonitorInstancesRequest.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates MonitorInstancesRequest with the parameterized properties
            </summary>
            <param name="instanceIds">One or more instance IDs.</param>
        </member>
        <member name="P:Amazon.EC2.Model.MonitorInstancesRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
            One or more instance IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.MonitorInstancesResponse">
            <summary>
            Configuration for accessing Amazon MonitorInstances service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.MonitorInstancesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.MonitorInstancesResult.InstanceMonitorings">
            <summary>
            Gets and sets the property InstanceMonitorings. 
            <para>
            Monitoring information for one or more instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.MonitorInstancesResponse.MonitorInstancesResult">
            <summary>
            Gets and sets the MonitorInstancesResult property.
            Represents the output of a MonitorInstances operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.NetworkAcl">
            <summary>
            Describes a network ACL.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAcl.Associations">
            <summary>
            Gets and sets the property Associations. 
            <para>
            Any associations between the network ACL and one or more subnets
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAcl.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            One or more entries (rules) in the network ACL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAcl.IsDefault">
            <summary>
            Gets and sets the property IsDefault. 
            <para>
            Indicates whether this is the default network ACL for the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAcl.NetworkAclId">
            <summary>
            Gets and sets the property NetworkAclId. 
            <para>
            The ID of the network ACL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAcl.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the network ACL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAcl.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC for the network ACL.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.NetworkAclAssociation">
            <summary>
            Describes an association between a network ACL and a subnet.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAclAssociation.NetworkAclAssociationId">
            <summary>
            Gets and sets the property NetworkAclAssociationId. 
            <para>
            The ID of the association between a network ACL and a subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAclAssociation.NetworkAclId">
            <summary>
            Gets and sets the property NetworkAclId. 
            <para>
            The ID of the network ACL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAclAssociation.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.NetworkAclEntry">
            <summary>
            Describes an entry in a network ACL.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAclEntry.CidrBlock">
            <summary>
            Gets and sets the property CidrBlock. 
            <para>
            The network range to allow or deny, in CIDR notation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAclEntry.Egress">
            <summary>
            Gets and sets the property Egress. 
            <para>
            Indicates whether the rule is an egress rule (applied to traffic leaving the subnet).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAclEntry.IcmpTypeCode">
            <summary>
            Gets and sets the property IcmpTypeCode. 
            <para>
            ICMP protocol: The ICMP type and code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAclEntry.PortRange">
            <summary>
            Gets and sets the property PortRange. 
            <para>
            TCP or UDP protocols: The range of ports the rule applies to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAclEntry.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The protocol. A value of <code>-1</code> means all protocols.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAclEntry.RuleAction">
            <summary>
            Gets and sets the property RuleAction. 
            <para>
            Indicates whether to allow or deny the traffic that matches the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkAclEntry.RuleNumber">
            <summary>
            Gets and sets the property RuleNumber. 
            <para>
            The rule number for the entry. ACL entries are processed in ascending order by rule
            number.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.NetworkInterface">
            <summary>
            Describes a network interface.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.Association">
            <summary>
            Gets and sets the property Association. 
            <para>
            The association information for an Elastic IP associated with the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.Attachment">
            <summary>
            Gets and sets the property Attachment. 
            <para>
            The network interface attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            Any security groups for the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.MacAddress">
            <summary>
            Gets and sets the property MacAddress. 
            <para>
            The MAC address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account ID of the owner of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.PrivateDnsName">
            <summary>
            Gets and sets the property PrivateDnsName. 
            <para>
            The private DNS name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The IP address of the network interface within the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.PrivateIpAddresses">
            <summary>
            Gets and sets the property PrivateIpAddresses. 
            <para>
            The private IP addresses associated with the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.RequesterId">
            <summary>
            Gets and sets the property RequesterId. 
            <para>
            The ID of the entity that launched the instance on your behalf (for example, AWS Management
            Console or Auto Scaling).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.RequesterManaged">
            <summary>
            Gets and sets the property RequesterManaged. 
            <para>
            Indicates whether the network interface is being managed by AWS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.SourceDestCheck">
            <summary>
            Gets and sets the property SourceDestCheck. 
            <para>
            Indicates whether traffic to or from the instance is validated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.TagSet">
            <summary>
            Gets and sets the property TagSet. 
            <para>
            Any tags assigned to the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterface.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.NetworkInterfaceAssociation">
            <summary>
            Describes association information for an Elastic IP address.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAssociation.AllocationId">
            <summary>
            Gets and sets the property AllocationId. 
            <para>
            The allocation ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAssociation.AssociationId">
            <summary>
            Gets and sets the property AssociationId. 
            <para>
            The association ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAssociation.IpOwnerId">
            <summary>
            Gets and sets the property IpOwnerId. 
            <para>
            The ID of the Elastic IP address owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAssociation.PublicDnsName">
            <summary>
            Gets and sets the property PublicDnsName. 
            <para>
            The public DNS name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAssociation.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            The address of the Elastic IP address bound to the network interface.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.NetworkInterfaceAttachment">
            <summary>
            Describes a network interface attachment.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAttachment.AttachmentId">
            <summary>
            Gets and sets the property AttachmentId. 
            <para>
            The ID of the network interface attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAttachment.AttachTime">
            <summary>
            Gets and sets the property AttachTime. 
            <para>
            The timestamp indicating when the attachment initiated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAttachment.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            Indicates whether the network interface is deleted when the instance is terminated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAttachment.DeviceIndex">
            <summary>
            Gets and sets the property DeviceIndex. 
            <para>
            The device index of the network interface attachment on the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAttachment.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAttachment.InstanceOwnerId">
            <summary>
            Gets and sets the property InstanceOwnerId. 
            <para>
            The AWS account ID of the owner of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAttachment.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The attachment state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.NetworkInterfaceAttachmentChanges">
            <summary>
            Describes an attachment change.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAttachmentChanges.AttachmentId">
            <summary>
            Gets and sets the property AttachmentId. 
            <para>
            The ID of the network interface attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfaceAttachmentChanges.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            Indicates whether the network interface is deleted when the instance is terminated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.NetworkInterfacePrivateIpAddress">
            <summary>
            Describes the private IP address of a network interface.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfacePrivateIpAddress.Association">
            <summary>
            Gets and sets the property Association. 
            <para>
            The association information for an Elastic IP address associated with the network
            interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfacePrivateIpAddress.Primary">
            <summary>
            Gets and sets the property Primary. 
            <para>
            Indicates whether this IP address is the primary private IP address of the network
            interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfacePrivateIpAddress.PrivateDnsName">
            <summary>
            Gets and sets the property PrivateDnsName. 
            <para>
            The private DNS name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.NetworkInterfacePrivateIpAddress.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The private IP address.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Placement">
            <summary>
            Describes the placement for the instance.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.Placement.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.Placement.#ctor(System.String)">
            <summary>
            Instantiates Placement with the parameterized properties
            </summary>
            <param name="availabilityZone">The Availability Zone of the instance.</param>
        </member>
        <member name="P:Amazon.EC2.Model.Placement.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Placement.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the placement group the instance is in (for cluster compute instances).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Placement.Tenancy">
            <summary>
            Gets and sets the property Tenancy. 
            <para>
            The tenancy of the instance (if the instance is running in a VPC). An instance with
            a tenancy of <code>dedicated</code> runs on single-tenant hardware.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PlacementGroup">
            <summary>
            Describes a placement group.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.PlacementGroup.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.PlacementGroup.#ctor(System.String)">
            <summary>
            Instantiates PlacementGroup with the parameterized properties
            </summary>
            <param name="groupName">The name of the placement group.</param>
        </member>
        <member name="P:Amazon.EC2.Model.PlacementGroup.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the placement group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PlacementGroup.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the placement group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PlacementGroup.Strategy">
            <summary>
            Gets and sets the property Strategy. 
            <para>
            The placement strategy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PortRange">
            <summary>
            Describes a range of ports.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PortRange.From">
            <summary>
            Gets and sets the property From. 
            <para>
            The first port in the range.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PortRange.To">
            <summary>
            Gets and sets the property To. 
            <para>
            The last port in the range.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PriceSchedule">
            <summary>
            Describes the price for a Reserved Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PriceSchedule.Active">
            <summary>
            Gets and sets the property Active. 
            <para>
            The current price schedule, as determined by the term remaining for the Reserved Instance
            in the listing.
            </para>
             
            <para>
            A specific price schedule is always in effect, but only one price schedule can be
            active at any time. Take, for example, a Reserved Instance listing that has five months
            remaining in its term. When you specify price schedules for five months and two months,
            this means that schedule 1, covering the first three months of the remaining term,
            will be active during months 5, 4, and 3. Then schedule 2, covering the last two months
            of the term, will be active for months 2 and 1.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PriceSchedule.CurrencyCode">
            <summary>
            Gets and sets the property CurrencyCode. 
            <para>
            The currency for transacting the Reserved Instance resale. At this time, the only
            supported currency is <code>USD</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PriceSchedule.Price">
            <summary>
            Gets and sets the property Price. 
            <para>
            The fixed price for the term.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PriceSchedule.Term">
            <summary>
            Gets and sets the property Term. 
            <para>
            The number of months remaining in the reservation. For example, 2 is the second to
            the last month before the capacity reservation expires.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PriceScheduleSpecification">
            <summary>
            Describes the price for a Reserved Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PriceScheduleSpecification.CurrencyCode">
            <summary>
            Gets and sets the property CurrencyCode. 
            <para>
            The currency for transacting the Reserved Instance resale. At this time, the only
            supported currency is <code>USD</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PriceScheduleSpecification.Price">
            <summary>
            Gets and sets the property Price. 
            <para>
            The fixed price for the term.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PriceScheduleSpecification.Term">
            <summary>
            Gets and sets the property Term. 
            <para>
            The number of months remaining in the reservation. For example, 2 is the second to
            the last month before the capacity reservation expires.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PricingDetail">
            <summary>
            Describes a Reserved Instance offering.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PricingDetail.Count">
            <summary>
            Gets and sets the property Count. 
            <para>
            The number of instances available for the price.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PricingDetail.Price">
            <summary>
            Gets and sets the property Price. 
            <para>
            The price per instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PrivateIpAddressSpecification">
            <summary>
            Describes a secondary private IP address for a network interface.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PrivateIpAddressSpecification.Primary">
            <summary>
            Gets and sets the property Primary. 
            <para>
            Indicates whether the private IP address is the primary private IP address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PrivateIpAddressSpecification.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            The private IP addresses.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ProductCode">
            <summary>
            Describes a product code.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ProductCode.ProductCodeId">
            <summary>
            Gets and sets the property ProductCodeId. 
            <para>
            The product code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ProductCode.ProductCodeType">
            <summary>
            Gets and sets the property ProductCodeType. 
            <para>
            The type of product code.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PropagatingVgw">
            <summary>
            Describes a virtual private gateway propagating route.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PropagatingVgw.GatewayId">
            <summary>
            Gets and sets the property GatewayId. 
            <para>
            The ID of the virtual private gateway (VGW).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest">
            <summary>
            Container for the parameters to the PurchaseReservedInstancesOffering operation.
            Purchases a Reserved Instance for use with your account. With Amazon EC2 Reserved
            Instances, you obtain a capacity reservation for a certain instance configuration
            over a specified period of time. You pay a lower usage rate than with On-Demand instances
            for the time that you actually use the capacity reservation.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html">Reserved
            Instance Marketplace</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest.#ctor(System.String,System.Int32)">
            <summary>
            Instantiates PurchaseReservedInstancesOfferingRequest with the parameterized properties
            </summary>
            <param name="reservedInstancesOfferingId">The ID of the Reserved Instance offering to purchase.</param>
            <param name="instanceCount">The number of Reserved Instances to purchase.</param>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest.InstanceCount">
            <summary>
            Gets and sets the property InstanceCount. 
            <para>
            The number of Reserved Instances to purchase.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest.LimitPrice">
            <summary>
            Gets and sets the property LimitPrice. 
            <para>
            Specified for Reserved Instance Marketplace offerings to limit the total order and
            ensure that the Reserved Instances are not purchased at unexpected prices.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseReservedInstancesOfferingRequest.ReservedInstancesOfferingId">
            <summary>
            Gets and sets the property ReservedInstancesOfferingId. 
            <para>
            The ID of the Reserved Instance offering to purchase.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PurchaseReservedInstancesOfferingResponse">
            <summary>
            Configuration for accessing Amazon PurchaseReservedInstancesOffering service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.PurchaseReservedInstancesOfferingResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseReservedInstancesOfferingResult.ReservedInstancesId">
            <summary>
            Gets and sets the property ReservedInstancesId. 
            <para>
            The IDs of the purchased Reserved Instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.PurchaseReservedInstancesOfferingResponse.PurchaseReservedInstancesOfferingResult">
            <summary>
            Gets and sets the PurchaseReservedInstancesOfferingResult property.
            Represents the output of a PurchaseReservedInstancesOffering operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RebootInstancesRequest">
            <summary>
            Container for the parameters to the RebootInstances operation.
            Requests a reboot of one or more instances. This operation is asynchronous; it only
            queues a request to reboot the specified instances. The operation succeeds if the
            instances are valid and belong to you. Requests to reboot terminated instances are
            ignored.
            
             
            <para>
            If a Linux/Unix instance does not cleanly shut down within four minutes, Amazon EC2
            performs a hard reboot.
            </para>
             
            <para>
            For more information about troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-console.html">Getting
            Console Output and Rebooting Instances</a> in the <i>Amazon Elastic Compute Cloud
            User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.RebootInstancesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.RebootInstancesRequest.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates RebootInstancesRequest with the parameterized properties
            </summary>
            <param name="instanceIds">One or more instance IDs.</param>
        </member>
        <member name="P:Amazon.EC2.Model.RebootInstancesRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
            One or more instance IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RebootInstancesResponse">
            <summary>
            Configuration for accessing Amazon RebootInstances service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RebootInstancesResponse.RebootInstancesResult">
            <summary>
            Gets and sets the RebootInstancesResult property.
            Represents the output of a RebootInstances operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RecurringCharge">
            <summary>
            Describes a recurring charge.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RecurringCharge.Amount">
            <summary>
            Gets and sets the property Amount. 
            <para>
            The amount of the recurring charge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RecurringCharge.Frequency">
            <summary>
            Gets and sets the property Frequency. 
            <para>
            The frequency of the recurring charge.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Region">
            <summary>
            Describes a region.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Region.Endpoint">
            <summary>
            Gets and sets the property Endpoint. 
            <para>
            The region service endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Region.RegionName">
            <summary>
            Gets and sets the property RegionName. 
            <para>
            The name of the region.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RegisterImageRequest">
            <summary>
            Container for the parameters to the RegisterImage operation.
            Registers an AMI. When you're creating an AMI, this is the final step you must complete
            before you can launch an instance from the AMI. For more information about creating
            AMIs, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami.html">Creating
            Your Own AMIs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            
             
            <para>
            You can also use <code>RegisterImage</code> to create an Amazon EBS-backed AMI from
            a snapshot of a root device volume. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_LaunchingInstanceFromSnapshot.html">Launching
            an Instance from a Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            If needed, you can deregister an AMI at any time. Any modifications you make to an
            AMI backed by an instance store volume invalidates its registration. If you make changes
            to an image, deregister the previous image and register the new image.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.RegisterImageRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.RegisterImageRequest.#ctor(System.String)">
            <summary>
            Instantiates RegisterImageRequest with the parameterized properties
            </summary>
            <param name="imageLocation">The full path to your AMI manifest in Amazon S3 storage.</param>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.Architecture">
            <summary>
            Gets and sets the property Architecture. 
            <para>
            The architecture of the AMI.
            </para>
             
            <para>
            Default: For Amazon EBS-backed AMIs, <code>i386</code>. For instance store-backed
            AMIs, the architecture specified in the manifest file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            One or more block device mapping entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for your AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.ImageLocation">
            <summary>
            Gets and sets the property ImageLocation. 
            <para>
            The full path to your AMI manifest in Amazon S3 storage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.KernelId">
            <summary>
            Gets and sets the property KernelId. 
            <para>
            The ID of the kernel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A name for your AMI.
            </para>
             
            <para>
            Constraints: 3-128 alphanumeric characters, parenthesis (()), commas (,), slashes
            (/), dashes (-), or underscores (_)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.RamdiskId">
            <summary>
            Gets and sets the property RamdiskId. 
            <para>
            The ID of the RAM disk.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.RootDeviceName">
            <summary>
            Gets and sets the property RootDeviceName. 
            <para>
            The name of the root device (for example, <code>/dev/sda1</code>, or <code>xvda</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.SriovNetSupport">
            <summary>
            Gets and sets the property SriovNetSupport. 
            <para>
            Set to <code>simple</code> to enable enhanced networking for the AMI and any instances
            that you launch from the AMI.
            </para>
             
            <para>
            There is no way to disable enhanced networking at this time.
            </para>
             
            <para>
            This option is supported only for HVM AMIs. Specifying this option with a PV AMI can
            make instances launched from the AMI unreachable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageRequest.VirtualizationType">
            <summary>
            Gets and sets the property VirtualizationType. 
            <para>
            The type of virtualization.
            </para>
             
            <para>
            Default: <code>paravirtual</code>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RegisterImageResponse">
            <summary>
            Configuration for accessing Amazon RegisterImage service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RegisterImageResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageResult.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the newly registered AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RegisterImageResponse.RegisterImageResult">
            <summary>
            Gets and sets the RegisterImageResult property.
            Represents the output of a RegisterImage operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RejectVpcPeeringConnectionRequest">
            <summary>
            Container for the parameters to the RejectVpcPeeringConnection operation.
            Rejects a VPC peering connection request. The VPC peering connection must be in the
            <code>pending-acceptance</code> state. Use the <code>DescribeVpcPeeringConnections</code>
            request to view your outstanding VPC peering connection requests.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RejectVpcPeeringConnectionRequest.VpcPeeringConnectionId">
            <summary>
            Gets and sets the property VpcPeeringConnectionId. 
            <para>
            The ID of the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RejectVpcPeeringConnectionResponse">
            <summary>
               Returns information about the RejectVpcPeeringConnection response metadata.
               The RejectVpcPeeringConnection operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReleaseAddressRequest">
            <summary>
            Container for the parameters to the ReleaseAddress operation.
            Releases the specified Elastic IP address.
            
             
            <para>
            After releasing an Elastic IP address, it is released to the IP address pool and might
            be unavailable to you. Be sure to update your DNS records and any servers or devices
            that communicate with the address. If you attempt to release an Elastic IP address
            that you already released, you'll get an <code>AuthFailure</code> error if the address
            is already allocated to another AWS account.
            </para>
             
            <para>
            [EC2-Classic, default VPC] Releasing an Elastic IP address automatically disassociates
            it from any instance that it's associated with. To disassociate an Elastic IP address
            without releasing it, use <a>DisassociateAddress</a>.
            </para>
             
            <para>
            [Nondefault VPC] You must use the <a>DisassociateAddress</a> to disassociate the Elastic
            IP address before you try to release it. Otherwise, Amazon EC2 returns an error (<code>InvalidIPAddress.InUse</code>).
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ReleaseAddressRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ReleaseAddressRequest.#ctor(System.String)">
            <summary>
            Instantiates ReleaseAddressRequest with the parameterized properties
            </summary>
            <param name="publicIp">[EC2-Classic] The Elastic IP address.</param>
        </member>
        <member name="P:Amazon.EC2.Model.ReleaseAddressRequest.AllocationId">
            <summary>
            Gets and sets the property AllocationId. 
            <para>
            [EC2-VPC] The allocation ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReleaseAddressRequest.PublicIp">
            <summary>
            Gets and sets the property PublicIp. 
            <para>
            [EC2-Classic] The Elastic IP address.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReleaseAddressResponse">
            <summary>
            Configuration for accessing Amazon ReleaseAddress service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReleaseAddressResponse.ReleaseAddressResult">
            <summary>
            Gets and sets the ReleaseAddressResult property.
            Represents the output of a ReleaseAddress operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReplaceNetworkAclAssociationRequest">
            <summary>
            Container for the parameters to the ReplaceNetworkAclAssociation operation.
            Changes which network ACL a subnet is associated with. By default when you create
            a subnet, it's automatically associated with the default network ACL. For more information
            about network ACLs, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclAssociationRequest.AssociationId">
            <summary>
            Gets and sets the property AssociationId. 
            <para>
            The ID of the current association between the original network ACL and the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclAssociationRequest.NetworkAclId">
            <summary>
            Gets and sets the property NetworkAclId. 
            <para>
            The ID of the new ACL to associate with the subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReplaceNetworkAclAssociationResponse">
            <summary>
            Configuration for accessing Amazon ReplaceNetworkAclAssociation service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReplaceNetworkAclAssociationResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclAssociationResult.NewAssociationId">
            <summary>
            Gets and sets the property NewAssociationId. 
            <para>
            The ID of the new association.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclAssociationResponse.ReplaceNetworkAclAssociationResult">
            <summary>
            Gets and sets the ReplaceNetworkAclAssociationResult property.
            Represents the output of a ReplaceNetworkAclAssociation operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReplaceNetworkAclEntryRequest">
            <summary>
            Container for the parameters to the ReplaceNetworkAclEntry operation.
            Replaces an entry (rule) in a network ACL. For more information about network ACLs,
            see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">Network
            ACLs</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclEntryRequest.CidrBlock">
            <summary>
            Gets and sets the property CidrBlock. 
            <para>
            The network range to allow or deny, in CIDR notation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclEntryRequest.Egress">
            <summary>
            Gets and sets the property Egress. 
            <para>
            Indicates whether to replace the egress rule.
            </para>
             
            <para>
            Default: If no value is specified, we replace the ingress rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclEntryRequest.IcmpTypeCode">
            <summary>
            Gets and sets the property IcmpTypeCode. 
            <para>
            ICMP protocol: The ICMP type and code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclEntryRequest.NetworkAclId">
            <summary>
            Gets and sets the property NetworkAclId. 
            <para>
            The ID of the ACL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclEntryRequest.PortRange">
            <summary>
            Gets and sets the property PortRange. 
            <para>
            TCP or UDP protocols: The range of ports the rule applies to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclEntryRequest.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The IP protocol. You can specify <code>all</code> or <code>-1</code> to mean all protocols.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclEntryRequest.RuleAction">
            <summary>
            Gets and sets the property RuleAction. 
            <para>
            Indicates whether to allow or deny the traffic that matches the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclEntryRequest.RuleNumber">
            <summary>
            Gets and sets the property RuleNumber. 
            <para>
            The rule number of the entry to replace.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReplaceNetworkAclEntryResponse">
            <summary>
            Configuration for accessing Amazon ReplaceNetworkAclEntry service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceNetworkAclEntryResponse.ReplaceNetworkAclEntryResult">
            <summary>
            Gets and sets the ReplaceNetworkAclEntryResult property.
            Represents the output of a ReplaceNetworkAclEntry operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReplaceRouteRequest">
            <summary>
            Container for the parameters to the ReplaceRoute operation.
            Replaces an existing route within a route table in a VPC. You must provide only one
            of the following: Internet gateway, NAT instance, VPC peering connection, or network
            interface.
            
             
            <para>
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteRequest.DestinationCidrBlock">
            <summary>
            Gets and sets the property DestinationCidrBlock. 
            <para>
            The CIDR address block used for the destination match. The value you provide must
            match the CIDR of an existing route in the table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteRequest.GatewayId">
            <summary>
            Gets and sets the property GatewayId. 
            <para>
            The ID of an Internet gateway attached to your VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of a NAT instance in your VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteRequest.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of a network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteRequest.RouteTableId">
            <summary>
            Gets and sets the property RouteTableId. 
            <para>
            The ID of the route table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteRequest.VpcPeeringConnectionId">
            <summary>
            Gets and sets the property VpcPeeringConnectionId. 
            <para>
            The ID of a VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReplaceRouteResponse">
            <summary>
            Configuration for accessing Amazon ReplaceRoute service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteResponse.ReplaceRouteResult">
            <summary>
            Gets and sets the ReplaceRouteResult property.
            Represents the output of a ReplaceRoute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReplaceRouteTableAssociationRequest">
            <summary>
            Container for the parameters to the ReplaceRouteTableAssociation operation.
            Changes the route table associated with a given subnet in a VPC. After the operation
            completes, the subnet uses the routes in the new route table it's associated with.
            For more information about route tables, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html">Route
            Tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            
             
            <para>
            You can also use ReplaceRouteTableAssociation to change which table is the main route
            table in the VPC. You just specify the main route table's association ID and the route
            table to be the new main route table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteTableAssociationRequest.AssociationId">
            <summary>
            Gets and sets the property AssociationId. 
            <para>
            The association ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteTableAssociationRequest.RouteTableId">
            <summary>
            Gets and sets the property RouteTableId. 
            <para>
            The ID of the new route table to associate with the subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReplaceRouteTableAssociationResponse">
            <summary>
            Configuration for accessing Amazon ReplaceRouteTableAssociation service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReplaceRouteTableAssociationResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteTableAssociationResult.NewAssociationId">
            <summary>
            Gets and sets the property NewAssociationId. 
            <para>
            The ID of the new association.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReplaceRouteTableAssociationResponse.ReplaceRouteTableAssociationResult">
            <summary>
            Gets and sets the ReplaceRouteTableAssociationResult property.
            Represents the output of a ReplaceRouteTableAssociation operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReportInstanceStatusRequest">
            <summary>
            Container for the parameters to the ReportInstanceStatus operation.
            Submits feedback about the status of an instance. The instance must be in the <code>running</code>
            state. If your experience with the instance differs from the instance status returned
            by <a>DescribeInstanceStatus</a>, use <a>ReportInstanceStatus</a> to report your experience
            with the instance. Amazon EC2 collects this information to improve the accuracy of
            status checks.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReportInstanceStatusRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Descriptive text about the health state of your instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReportInstanceStatusRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The time at which the reported instance health state ended.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReportInstanceStatusRequest.Instances">
            <summary>
            Gets and sets the property Instances. 
            <para>
            One or more instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReportInstanceStatusRequest.ReasonCodes">
            <summary>
            Gets and sets the property ReasonCodes. 
            <para>
            One or more reason codes that describes the health state of your instance.
            </para>
             <ul> <li>
            <para>
            <code>instance-stuck-in-state</code>: My instance is stuck in a state.
            </para>
            </li> <li>
            <para>
            <code>unresponsive</code>: My instance is unresponsive.
            </para>
            </li> <li>
            <para>
            <code>not-accepting-credentials</code>: My instance is not accepting my credentials.
            </para>
            </li> <li>
            <para>
            <code>password-not-available</code>: A password is not available for my instance.
            </para>
            </li> <li>
            <para>
            <code>performance-network</code>: My instance is experiencing performance problems
            which I believe are network related.
            </para>
            </li> <li>
            <para>
            <code>performance-instance-store</code>: My instance is experiencing performance problems
            which I believe are related to the instance stores.
            </para>
            </li> <li>
            <para>
            <code>performance-ebs-volume</code>: My instance is experiencing performance problems
            which I believe are related to an EBS volume.
            </para>
            </li> <li>
            <para>
            <code>performance-other</code>: My instance is experiencing performance problems.
            </para>
            </li> <li>
            <para>
            <code>other</code>: [explain using the description parameter]
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReportInstanceStatusRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The time at which the reported instance health state began.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReportInstanceStatusRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of all instances listed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReportInstanceStatusResponse">
            <summary>
            Configuration for accessing Amazon ReportInstanceStatus service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReportInstanceStatusResponse.ReportInstanceStatusResult">
            <summary>
            Gets and sets the ReportInstanceStatusResult property.
            Represents the output of a ReportInstanceStatus operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RequestSpotInstancesRequest">
            <summary>
            Container for the parameters to the RequestSpotInstances operation.
            Creates a Spot Instance request. Spot Instances are instances that Amazon EC2 starts
            on your behalf when the maximum price that you specify exceeds the current Spot Price.
            Amazon EC2 periodically sets the Spot Price based on available Spot Instance capacity
            and current Spot Instance requests. For more information about Spot Instances, see
            <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html">Spot
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.RequestSpotInstancesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.RequestSpotInstancesRequest.#ctor(System.String)">
            <summary>
            Instantiates RequestSpotInstancesRequest with the parameterized properties
            </summary>
            <param name="spotPrice">The maximum hourly price for any Spot Instance launched to fulfill the request.</param>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesRequest.AvailabilityZoneGroup">
            <summary>
            Gets and sets the property AvailabilityZoneGroup. 
            <para>
            The user-specified name for a logical grouping of bids.
            </para>
             
            <para>
            When you specify an Availability Zone group in a Spot Instance request, all Spot Instances
            in the request are launched in the same Availability Zone. Instance proximity is maintained
            with this parameter, but the choice of Availability Zone is not. The group applies
            only to bids for Spot Instances of the same instance type. Any additional Spot Instance
            requests that are specified with the same Availability Zone group name are launched
            in that same Availability Zone, as long as at least one instance from the group is
            still active.
            </para>
             
            <para>
            If there is no active instance running in the Availability Zone group that you specify
            for a new Spot Instance request (all instances are terminated, the bid is expired,
            or the bid falls below current market), then Amazon EC2 launches the instance in any
            Availability Zone where the constraint can be met. Consequently, the subsequent set
            of Spot Instances could be placed in a different zone from the original request, even
            if you specified the same Availability Zone group.
            </para>
             
            <para>
            Default: Instances are launched in any available Availability Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesRequest.InstanceCount">
            <summary>
            Gets and sets the property InstanceCount. 
            <para>
            The maximum number of Spot Instances to launch.
            </para>
             
            <para>
            Default: 1
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesRequest.LaunchGroup">
            <summary>
            Gets and sets the property LaunchGroup. 
            <para>
            The instance launch group. Launch groups are Spot Instances that launch together and
            terminate together.
            </para>
             
            <para>
            Default: Instances are launched and terminated individually
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesRequest.LaunchSpecification">
            <summary>
            Gets and sets the property LaunchSpecification.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesRequest.SpotPrice">
            <summary>
            Gets and sets the property SpotPrice. 
            <para>
            The maximum hourly price for any Spot Instance launched to fulfill the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesRequest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The Spot Instance request type.
            </para>
             
            <para>
            Default: <code>one-time</code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesRequest.ValidFrom">
            <summary>
            Gets and sets the property ValidFrom. 
            <para>
            The start date of the request. If this is a one-time request, the request becomes
            active at this date and time and remains active until all instances launch, the request
            expires, or the request is canceled. If the request is persistent, the request becomes
            active at this date and time and remains active until it expires or is canceled.
            </para>
             
            <para>
            Default: The request is effective indefinitely.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesRequest.ValidUntil">
            <summary>
            Gets and sets the property ValidUntil. 
            <para>
            The end date of the request. If this is a one-time request, the request remains active
            until all instances launch, the request is canceled, or this date is reached. If the
            request is persistent, it remains active until it is canceled or this date and time
            is reached.
            </para>
             
            <para>
            Default: The request is effective indefinitely.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RequestSpotInstancesResponse">
            <summary>
            Configuration for accessing Amazon RequestSpotInstances service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RequestSpotInstancesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesResult.SpotInstanceRequests">
            <summary>
            Gets and sets the property SpotInstanceRequests. 
            <para>
            Information about the Spot Instance request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RequestSpotInstancesResponse.RequestSpotInstancesResult">
            <summary>
            Gets and sets the RequestSpotInstancesResult property.
            Represents the output of a RequestSpotInstances operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Reservation">
            <summary>
            Describes a reservation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Reservation.GroupNames">
            <summary>
            Gets and sets the property GroupNames. 
            <para>
            One or more security group names.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Reservation.Groups">
            <summary>
            Gets and sets the property Groups. 
            <para>
            One or more security groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Reservation.Instances">
            <summary>
            Gets and sets the property Instances. 
            <para>
            One or more instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Reservation.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The ID of the AWS account that owns the reservation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Reservation.RequesterId">
            <summary>
            Gets and sets the property RequesterId. 
            <para>
            The ID of the requester that launched the instances on your behalf (for example, AWS
            Management Console or Auto Scaling).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Reservation.ReservationId">
            <summary>
            Gets and sets the property ReservationId. 
            <para>
            The ID of the reservation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReservedInstanceLimitPrice">
            <summary>
            Describes the limit price of a Reserved Instance offering.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstanceLimitPrice.Amount">
            <summary>
            Gets and sets the property Amount. 
            <para>
            Used for Reserved Instance Marketplace offerings. Specifies the limit price on the
            total order (instanceCount * price).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstanceLimitPrice.CurrencyCode">
            <summary>
            Gets and sets the property CurrencyCode. 
            <para>
            The currency in which the <code>limitPrice</code> amount is specified. At this time,
            the only supported currency is <code>USD</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReservedInstances">
            <summary>
            Describes a Reserved Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone in which the Reserved Instance can be used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.CurrencyCode">
            <summary>
            Gets and sets the property CurrencyCode. 
            <para>
            The currency of the Reserved Instance. It's specified using ISO 4217 standard currency
            codes. At this time, the only supported currency is <code>USD</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.Duration">
            <summary>
            Gets and sets the property Duration. 
            <para>
            The duration of the Reserved Instance, in seconds.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.End">
            <summary>
            Gets and sets the property End. 
            <para>
            The time when the Reserved Instance expires.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.FixedPrice">
            <summary>
            Gets and sets the property FixedPrice. 
            <para>
            The purchase price of the Reserved Instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.InstanceCount">
            <summary>
            Gets and sets the property InstanceCount. 
            <para>
            The number of Reserved Instances purchased.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.InstanceTenancy">
            <summary>
            Gets and sets the property InstanceTenancy. 
            <para>
            The tenancy of the reserved instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type on which the Reserved Instance can be used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.OfferingType">
            <summary>
            Gets and sets the property OfferingType. 
            <para>
            The Reserved Instance offering type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.ProductDescription">
            <summary>
            Gets and sets the property ProductDescription. 
            <para>
            The Reserved Instance description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.RecurringCharges">
            <summary>
            Gets and sets the property RecurringCharges. 
            <para>
            The recurring charge tag assigned to the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.ReservedInstancesId">
            <summary>
            Gets and sets the property ReservedInstancesId. 
            <para>
            The ID of the Reserved Instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.Start">
            <summary>
            Gets and sets the property Start. 
            <para>
            The date and time the Reserved Instance started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the Reserved Instance purchase.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstances.UsagePrice">
            <summary>
            Gets and sets the property UsagePrice. 
            <para>
            The usage price of the Reserved Instance, per hour.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReservedInstancesConfiguration">
            <summary>
            Describes the configuration settings for the modified Reserved Instances.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesConfiguration.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone for the modified Reserved Instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesConfiguration.InstanceCount">
            <summary>
            Gets and sets the property InstanceCount. 
            <para>
            The number of modified Reserved Instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesConfiguration.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type for the modified Reserved Instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesConfiguration.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The network platform of the modified Reserved Instances, which is either EC2-Classic
            or EC2-VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReservedInstancesId">
            <summary>
            Describes the ID of a Reserved Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesId.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID of the Reserved Instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReservedInstancesListing">
            <summary>
            Describes a Reserved Instance listing.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesListing.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            The idempotency token you provided when you created the listing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesListing.CreateDate">
            <summary>
            Gets and sets the property CreateDate. 
            <para>
            The time the listing was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesListing.InstanceCounts">
            <summary>
            Gets and sets the property InstanceCounts. 
            <para>
            The number of instances in this state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesListing.PriceSchedules">
            <summary>
            Gets and sets the property PriceSchedules. 
            <para>
            The price of the Reserved Instance listing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesListing.ReservedInstancesId">
            <summary>
            Gets and sets the property ReservedInstancesId. 
            <para>
            The ID of the Reserved Instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesListing.ReservedInstancesListingId">
            <summary>
            Gets and sets the property ReservedInstancesListingId. 
            <para>
            The ID of the Reserved Instance listing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesListing.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the Reserved Instance listing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesListing.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            The reason for the current status of the Reserved Instance listing. The response can
            be blank.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesListing.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesListing.UpdateDate">
            <summary>
            Gets and sets the property UpdateDate. 
            <para>
            The last modified timestamp of the listing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReservedInstancesModification">
            <summary>
            Describes a Reserved Instance modification.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModification.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            A unique, case-sensitive key supplied by the client to ensure that the modification
            request is idempotent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModification.CreateDate">
            <summary>
            Gets and sets the property CreateDate. 
            <para>
            The time when the modification request was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModification.EffectiveDate">
            <summary>
            Gets and sets the property EffectiveDate. 
            <para>
            The time for the modification to become effective.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModification.ModificationResults">
            <summary>
            Gets and sets the property ModificationResults. 
            <para>
            Contains target configurations along with their corresponding new Reserved Instance
            IDs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModification.ReservedInstancesIds">
            <summary>
            Gets and sets the property ReservedInstancesIds. 
            <para>
            The IDs of one or more Reserved Instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModification.ReservedInstancesModificationId">
            <summary>
            Gets and sets the property ReservedInstancesModificationId. 
            <para>
            A unique ID for the Reserved Instance modification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModification.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the Reserved Instances modification request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModification.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            The reason for the status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModification.UpdateDate">
            <summary>
            Gets and sets the property UpdateDate. 
            <para>
            The time when the modification request was last updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReservedInstancesModificationResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModificationResult.ReservedInstancesId">
            <summary>
            Gets and sets the property ReservedInstancesId. 
            <para>
            The ID for the Reserved Instances that were created as part of the modification request.
            This field is only available when the modification is fulfilled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesModificationResult.TargetConfiguration">
            <summary>
            Gets and sets the property TargetConfiguration. 
            <para>
            The target Reserved Instances configurations supplied as part of the modification
            request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ReservedInstancesOffering">
            <summary>
            Describes a Reserved Instance offering.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone in which the Reserved Instance can be used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.CurrencyCode">
            <summary>
            Gets and sets the property CurrencyCode. 
            <para>
            The currency of the Reserved Instance offering you are purchasing. It's specified
            using ISO 4217 standard currency codes. At this time, the only supported currency
            is <code>USD</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.Duration">
            <summary>
            Gets and sets the property Duration. 
            <para>
            The duration of the Reserved Instance, in seconds.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.FixedPrice">
            <summary>
            Gets and sets the property FixedPrice. 
            <para>
            The purchase price of the Reserved Instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.InstanceTenancy">
            <summary>
            Gets and sets the property InstanceTenancy. 
            <para>
            The tenancy of the reserved instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type on which the Reserved Instance can be used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.Marketplace">
            <summary>
            Gets and sets the property Marketplace. 
            <para>
            Indicates whether the offering is available through the Reserved Instance Marketplace
            (resale) or AWS. If it's a Reserved Instance Marketplace offering, this is <code>true</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.OfferingType">
            <summary>
            Gets and sets the property OfferingType. 
            <para>
            The Reserved Instance offering type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.PricingDetails">
            <summary>
            Gets and sets the property PricingDetails. 
            <para>
            The pricing details of the Reserved Instance offering.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.ProductDescription">
            <summary>
            Gets and sets the property ProductDescription. 
            <para>
            The Reserved Instance description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.RecurringCharges">
            <summary>
            Gets and sets the property RecurringCharges. 
            <para>
            The recurring charge tag assigned to the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.ReservedInstancesOfferingId">
            <summary>
            Gets and sets the property ReservedInstancesOfferingId. 
            <para>
            The ID of the Reserved Instance offering.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ReservedInstancesOffering.UsagePrice">
            <summary>
            Gets and sets the property UsagePrice. 
            <para>
            The usage price of the Reserved Instance, per hour.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ResetImageAttributeRequest">
            <summary>
            Container for the parameters to the ResetImageAttribute operation.
            Resets an attribute of an AMI to its default value.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ResetImageAttributeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ResetImageAttributeRequest.#ctor(System.String,Amazon.EC2.ResetImageAttributeName)">
            <summary>
            Instantiates ResetImageAttributeRequest with the parameterized properties
            </summary>
            <param name="imageId">The ID of the AMI.</param>
            <param name="attribute">The attribute to reset (currently you can only reset the launch permission attribute).</param>
        </member>
        <member name="P:Amazon.EC2.Model.ResetImageAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The attribute to reset (currently you can only reset the launch permission attribute).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ResetImageAttributeRequest.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the AMI.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ResetImageAttributeResponse">
            <summary>
            Configuration for accessing Amazon ResetImageAttribute service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ResetImageAttributeResponse.ResetImageAttributeResult">
            <summary>
            Gets and sets the ResetImageAttributeResult property.
            Represents the output of a ResetImageAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ResetInstanceAttributeRequest">
            <summary>
            Container for the parameters to the ResetInstanceAttribute operation.
            Resets an attribute of an instance to its default value. To reset the kernel or RAM
            disk, the instance must be in a stopped state. To reset the <code>SourceDestCheck</code>,
            the instance can be either running or stopped.
            
             
            <para>
            The <code>SourceDestCheck</code> attribute controls whether source/destination checking
            is enabled. The default value is <code>true</code>, which means checking is enabled.
            This value must be <code>false</code> for a NAT instance to perform NAT. For more
            information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT
            Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ResetInstanceAttributeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ResetInstanceAttributeRequest.#ctor(System.String,Amazon.EC2.InstanceAttributeName)">
            <summary>
            Instantiates ResetInstanceAttributeRequest with the parameterized properties
            </summary>
            <param name="instanceId">The ID of the instance.</param>
            <param name="attribute">The attribute to reset.</param>
        </member>
        <member name="P:Amazon.EC2.Model.ResetInstanceAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The attribute to reset.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ResetInstanceAttributeRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ResetInstanceAttributeResponse">
            <summary>
            Configuration for accessing Amazon ResetInstanceAttribute service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ResetInstanceAttributeResponse.ResetInstanceAttributeResult">
            <summary>
            Gets and sets the ResetInstanceAttributeResult property.
            Represents the output of a ResetInstanceAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ResetNetworkInterfaceAttributeRequest">
            <summary>
            Container for the parameters to the ResetNetworkInterfaceAttribute operation.
            Resets a network interface attribute. You can specify only one attribute at a time.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ResetNetworkInterfaceAttributeRequest.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ResetNetworkInterfaceAttributeRequest.SourceDestCheck">
            <summary>
            Gets and sets the property SourceDestCheck. 
            <para>
            Indicates whether source/destination checking is enabled. A value of <code>true</code>
            means checking is enabled, and <code>false</code> means checking is disabled. This
            value must be <code>false</code> for a NAT instance to perform NAT.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ResetNetworkInterfaceAttributeResponse">
            <summary>
            Configuration for accessing Amazon ResetNetworkInterfaceAttribute service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ResetNetworkInterfaceAttributeResponse.ResetNetworkInterfaceAttributeResult">
            <summary>
            Gets and sets the ResetNetworkInterfaceAttributeResult property.
            Represents the output of a ResetNetworkInterfaceAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ResetSnapshotAttributeRequest">
            <summary>
            Container for the parameters to the ResetSnapshotAttribute operation.
            Resets permission settings for the specified snapshot.
            
             
            <para>
            For more information on modifying snapshot permissions, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html">Sharing
            Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ResetSnapshotAttributeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.ResetSnapshotAttributeRequest.#ctor(System.String,Amazon.EC2.SnapshotAttributeName)">
            <summary>
            Instantiates ResetSnapshotAttributeRequest with the parameterized properties
            </summary>
            <param name="snapshotId">The ID of the snapshot.</param>
            <param name="attribute">The attribute to reset (currently only the attribute for permission to create volumes can be reset).</param>
        </member>
        <member name="P:Amazon.EC2.Model.ResetSnapshotAttributeRequest.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The attribute to reset (currently only the attribute for permission to create volumes
            can be reset).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ResetSnapshotAttributeRequest.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The ID of the snapshot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.ResetSnapshotAttributeResponse">
            <summary>
            Configuration for accessing Amazon ResetSnapshotAttribute service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.ResetSnapshotAttributeResponse.ResetSnapshotAttributeResult">
            <summary>
            Gets and sets the ResetSnapshotAttributeResult property.
            Represents the output of a ResetSnapshotAttribute operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RevokeSecurityGroupEgressRequest">
            <summary>
            Container for the parameters to the RevokeSecurityGroupEgress operation.
            Removes one or more egress rules from a security group for EC2-VPC. The values that
            you specify in the revoke request (for example, ports) must match the existing rule's
            values for the rule to be revoked.
            
             
            <para>
            Each rule consists of the protocol and the CIDR range or source security group. For
            the TCP and UDP protocols, you must also specify the destination port or range of
            ports. For the ICMP protocol, you must also specify the ICMP type and code.
            </para>
             
            <para>
            Rule changes are propagated to instances within the security group as quickly as possible.
            However, a small delay might occur.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RevokeSecurityGroupEgressRequest.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The ID of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RevokeSecurityGroupEgressRequest.IpPermissions">
            <summary>
            Gets and sets the property IpPermissions. 
            <para>
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RevokeSecurityGroupEgressResponse">
            <summary>
            Configuration for accessing Amazon RevokeSecurityGroupEgress service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RevokeSecurityGroupEgressResponse.RevokeSecurityGroupEgressResult">
            <summary>
            Gets and sets the RevokeSecurityGroupEgressResult property.
            Represents the output of a RevokeSecurityGroupEgress operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RevokeSecurityGroupIngressRequest">
            <summary>
            Container for the parameters to the RevokeSecurityGroupIngress operation.
            Removes one or more ingress rules from a security group. The values that you specify
            in the revoke request (for example, ports) must match the existing rule's values for
            the rule to be removed.
            
             
            <para>
            Each rule consists of the protocol and the CIDR range or source security group. For
            the TCP and UDP protocols, you must also specify the destination port or range of
            ports. For the ICMP protocol, you must also specify the ICMP type and code.
            </para>
             
            <para>
            Rule changes are propagated to instances within the security group as quickly as possible.
            However, a small delay might occur.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.RevokeSecurityGroupIngressRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.RevokeSecurityGroupIngressRequest.#ctor(System.String,System.Collections.Generic.List{Amazon.EC2.Model.IpPermission})">
            <summary>
            Instantiates RevokeSecurityGroupIngressRequest with the parameterized properties
            </summary>
            <param name="groupName">[EC2-Classic, default VPC] The name of the security group.</param>
            <param name="ipPermissions"></param>
        </member>
        <member name="P:Amazon.EC2.Model.RevokeSecurityGroupIngressRequest.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The ID of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RevokeSecurityGroupIngressRequest.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            [EC2-Classic, default VPC] The name of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RevokeSecurityGroupIngressRequest.IpPermissions">
            <summary>
            Gets and sets the property IpPermissions. 
            <para>
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RevokeSecurityGroupIngressResponse">
            <summary>
            Configuration for accessing Amazon RevokeSecurityGroupIngress service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RevokeSecurityGroupIngressResponse.RevokeSecurityGroupIngressResult">
            <summary>
            Gets and sets the RevokeSecurityGroupIngressResult property.
            Represents the output of a RevokeSecurityGroupIngress operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Route">
            <summary>
            Describes a route in a route table.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Route.DestinationCidrBlock">
            <summary>
            Gets and sets the property DestinationCidrBlock. 
            <para>
            The CIDR block used for the destination match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Route.GatewayId">
            <summary>
            Gets and sets the property GatewayId. 
            <para>
            The ID of a gateway attached to your VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Route.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of a NAT instance in your VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Route.InstanceOwnerId">
            <summary>
            Gets and sets the property InstanceOwnerId. 
            <para>
            The AWS account ID of the owner of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Route.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Route.Origin">
            <summary>
            Gets and sets the property Origin. 
            <para>
            Describes how the route was created.
            </para>
             <ul> <li> <code>CreateRouteTable</code> indicates that route was automatically created
            when the route table was created.</li> <li> <code>CreateRoute</code> indicates that
            the route was manually added to the route table.</li> <li> <code>EnableVgwRoutePropagation</code>
            indicates that the route was propagated by route propagation.</li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Route.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the route. The <code>blackhole</code> state indicates that the route's
            target isn't available (for example, the specified gateway isn't attached to the VPC,
            or the specified NAT instance has been terminated).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Route.VpcPeeringConnectionId">
            <summary>
            Gets and sets the property VpcPeeringConnectionId. 
            <para>
            The ID of the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RouteTable">
            <summary>
            Describes a route table.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RouteTable.Associations">
            <summary>
            Gets and sets the property Associations. 
            <para>
            The associations between the route table and one or more subnets.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RouteTable.PropagatingVgws">
            <summary>
            Gets and sets the property PropagatingVgws. 
            <para>
            Any virtual private gateway (VGW) propagating routes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RouteTable.Routes">
            <summary>
            Gets and sets the property Routes. 
            <para>
            The routes in the route table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RouteTable.RouteTableId">
            <summary>
            Gets and sets the property RouteTableId. 
            <para>
            The ID of the route table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RouteTable.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the route table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RouteTable.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RouteTableAssociation">
            <summary>
            Describes an association between a route table and a subnet.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RouteTableAssociation.Main">
            <summary>
            Gets and sets the property Main. 
            <para>
            Indicates whether this is the main route table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RouteTableAssociation.RouteTableAssociationId">
            <summary>
            Gets and sets the property RouteTableAssociationId. 
            <para>
            The ID of the association between a route table and a subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RouteTableAssociation.RouteTableId">
            <summary>
            Gets and sets the property RouteTableId. 
            <para>
            The ID of the route table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RouteTableAssociation.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RunInstancesRequest">
            <summary>
            Container for the parameters to the RunInstances operation.
            Launches the specified number of instances using an AMI for which you have permissions.
            
             
            <para>
            When you launch an instance, it enters the <code>pending</code> state. After the instance
            is ready for you, it enters the <code>running</code> state. To check the state of
            your instance, call <a>DescribeInstances</a>.
            </para>
             
            <para>
            If you don't specify a security group when launching an instance, Amazon EC2 uses
            the default security group. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Security
            Groups</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            Linux instances have access to the public key of the key pair at boot. You can use
            this key to provide secure access to the instance. Amazon EC2 public images use this
            feature to provide secure access without passwords. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Key
            Pairs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            You can provide optional user data when launching an instance. For more information,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html">Instance
            Metadata</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            If any of the AMIs have a product code attached for which the user has not subscribed,
            <code>RunInstances</code> fails.
            </para>
             
            <para>
            T2 instance types can only be launched into a VPC. If you do not have a default VPC,
            or if you do not specify a subnet ID in the request, <code>RunInstances</code> fails.
            </para>
             
            <para>
            For more information about troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_InstanceStraightToTerminated.html">What
            To Do If An Instance Immediately Terminates</a>, and <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesConnecting.html">Troubleshooting
            Connecting to Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.RunInstancesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.RunInstancesRequest.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Instantiates RunInstancesRequest with the parameterized properties
            </summary>
            <param name="imageId">The ID of the AMI, which you can get by calling <a>DescribeImages</a>.</param>
            <param name="minCount">The minimum number of instances to launch. If you specify a minimum that is more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches no instances. Constraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see <a href="http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2">How many instances can I run in Amazon EC2</a> in the Amazon EC2 General FAQ.</param>
            <param name="maxCount">The maximum number of instances to launch. If you specify more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible number of instances above <code>MinCount</code>. Constraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see <a href="http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2">How many instances can I run in Amazon EC2</a> in the Amazon EC2 General FAQ.</param>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.AdditionalInfo">
            <summary>
            Gets and sets the property AdditionalInfo. 
            <para>
            Reserved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.BlockDeviceMappings">
            <summary>
            Gets and sets the property BlockDeviceMappings. 
            <para>
            The block device mapping.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier you provide to ensure the idempotency of the request.
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How
            to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            Constraints: Maximum 64 ASCII characters
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.DisableApiTermination">
            <summary>
            Gets and sets the property DisableApiTermination. 
            <para>
            If you set this parameter to <code>true</code>, you can't terminate the instance using
            the Amazon EC2 console, CLI, or API; otherwise, you can. If you set this parameter
            to <code>true</code> and then later want to be able to terminate the instance, you
            must first change the value of the <code>disableApiTermination</code> attribute to
            <code>false</code> using <a>ModifyInstanceAttribute</a>. Alternatively, if you set
            <code>InstanceInitiatedShutdownBehavior</code> to <code>terminate</code>, you can
            terminate the instance by running the shutdown command from the instance.
            </para>
             
            <para>
            Default: <code>false</code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.EbsOptimized">
            <summary>
            Gets and sets the property EbsOptimized. 
            <para>
            Indicates whether the instance is optimized for EBS I/O. This optimization provides
            dedicated throughput to Amazon EBS and an optimized configuration stack to provide
            optimal Amazon EBS I/O performance. This optimization isn't available with all instance
            types. Additional usage charges apply when using an EBS-optimized instance.
            </para>
             
            <para>
            Default: <code>false</code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.IamInstanceProfile">
            <summary>
            Gets and sets the property IamInstanceProfile. 
            <para>
            The IAM instance profile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            The ID of the AMI, which you can get by calling <a>DescribeImages</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.InstanceInitiatedShutdownBehavior">
            <summary>
            Gets and sets the property InstanceInitiatedShutdownBehavior. 
            <para>
            Indicates whether an instance stops or terminates when you initiate shutdown from
            the instance (using the operating system command for system shutdown).
            </para>
             
            <para>
            Default: <code>stop</code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
            Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            Default: <code>m1.small</code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.KernelId">
            <summary>
            Gets and sets the property KernelId. 
            <para>
            The ID of the kernel.
            </para>
             <important> 
            <para>
            We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html#pv-grub-a-new-amazon-kernel-image">
            PV-GRUB: A New Amazon Kernel Image</a> in the <i>Amazon Elastic Compute Cloud User
            Guide</i>.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.KeyName">
            <summary>
            Gets and sets the property KeyName. 
            <para>
            The name of the key pair. You can create a key pair using <a>CreateKeyPair</a> or
            <a>ImportKeyPair</a>.
            </para>
             <important> 
            <para>
            If you launch an instance without specifying a key pair, you can't connect to the
            instance.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.MaxCount">
            <summary>
            Gets and sets the property MaxCount. 
            <para>
            The maximum number of instances to launch. If you specify more instances than Amazon
            EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible
            number of instances above <code>MinCount</code>.
            </para>
             
            <para>
            Constraints: Between 1 and the maximum number you're allowed for the specified instance
            type. For more information about the default limits, and how to request an increase,
            see <a href="http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2">How
            many instances can I run in Amazon EC2</a> in the Amazon EC2 General FAQ.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.MinCount">
            <summary>
            Gets and sets the property MinCount. 
            <para>
            The minimum number of instances to launch. If you specify a minimum that is more instances
            than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches no
            instances.
            </para>
             
            <para>
            Constraints: Between 1 and the maximum number you're allowed for the specified instance
            type. For more information about the default limits, and how to request an increase,
            see <a href="http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2">How
            many instances can I run in Amazon EC2</a> in the Amazon EC2 General FAQ.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.Monitoring">
            <summary>
            Gets and sets the property Monitoring. 
            <para>
            The monitoring for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.NetworkInterfaces">
            <summary>
            Gets and sets the property NetworkInterfaces. 
            <para>
            One or more network interfaces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.Placement">
            <summary>
            Gets and sets the property Placement. 
            <para>
            The placement for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.PrivateIpAddress">
            <summary>
            Gets and sets the property PrivateIpAddress. 
            <para>
            [EC2-VPC] The primary IP address. You must specify a value from the IP address range
            of the subnet.
            </para>
             
            <para>
            Only one private IP address can be designated as primary. Therefore, you can't specify
            this parameter if <code>PrivateIpAddresses.n.Primary</code> is set to <code>true</code>
            and <code>PrivateIpAddresses.n.PrivateIpAddress</code> is set to an IP address. 
            </para>
             
            <para>
            Default: We select an IP address from the IP address range of the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.RamdiskId">
            <summary>
            Gets and sets the property RamdiskId. 
            <para>
            The ID of the RAM disk.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.SecurityGroupIds">
            <summary>
            Gets and sets the property SecurityGroupIds. 
            <para>
            One or more security group IDs. You can create a security group using <a>CreateSecurityGroup</a>.
            </para>
             
            <para>
            Default: Amazon EC2 uses the default security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            [EC2-Classic, default VPC] One or more security group names. For a nondefault VPC,
            you must use security group IDs instead.
            </para>
             
            <para>
            Default: Amazon EC2 uses the default security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            [EC2-VPC] The ID of the subnet to launch the instance into.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesRequest.UserData">
            <summary>
            Gets and sets the property UserData. 
            <para>
            The Base64-encoded MIME user data for the instances.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RunInstancesResponse">
            <summary>
            Configuration for accessing Amazon RunInstances service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.RunInstancesResult">
            <summary>
            Contains the response data from the RunInstances operation.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.RunInstancesResponse.RunInstancesResult">
            <summary>
            Gets and sets the RunInstancesResult property.
            Represents the output of a RunInstances operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.S3Storage">
            <summary>
            Describes the S3 bucket for an instance store-backed AMI.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.S3Storage.AWSAccessKeyId">
            <summary>
            Gets and sets the property AWSAccessKeyId. 
            <para>
            The access key ID of the owner of the bucket. Before you specify a value for your
            access key ID, review and follow the guidance in <a href="http://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html">Best
            Practices for Managing AWS Access Keys</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.S3Storage.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            The bucket in which to store the AMI. You can specify a bucket that you already own
            or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that
            belongs to someone else, Amazon EC2 returns an error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.S3Storage.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            The beginning of the file name of the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.S3Storage.UploadPolicy">
            <summary>
            Gets and sets the property UploadPolicy. 
            <para>
            A Base64-encoded Amazon S3 upload policy that gives Amazon EC2 permission to upload
            items into Amazon S3 on your behalf.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.S3Storage.UploadPolicySignature">
            <summary>
            Gets and sets the property UploadPolicySignature. 
            <para>
            The signature of the Base64 encoded JSON document.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SecurityGroup">
            <summary>
            Describes a security group
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SecurityGroup.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SecurityGroup.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The ID of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SecurityGroup.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The name of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SecurityGroup.IpPermissions">
            <summary>
            Gets and sets the property IpPermissions. 
            <para>
            One or more inbound rules associated with the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SecurityGroup.IpPermissionsEgress">
            <summary>
            Gets and sets the property IpPermissionsEgress. 
            <para>
            [EC2-VPC] One or more outbound rules associated with the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SecurityGroup.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account ID of the owner of the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SecurityGroup.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SecurityGroup.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            [EC2-VPC] The ID of the VPC for the security group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Snapshot">
            <summary>
            Describes a snapshot.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description for the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.Encrypted">
            <summary>
            Gets and sets the property Encrypted. 
            <para>
            Indicates whether the snapshot is encrypted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.OwnerAlias">
            <summary>
            Gets and sets the property OwnerAlias. 
            <para>
            The AWS account alias (for example, <code>amazon</code>, <code>self</code>) or AWS
            account ID that owns the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account ID of the Amazon EBS snapshot owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.Progress">
            <summary>
            Gets and sets the property Progress. 
            <para>
            The progress of the snapshot, as a percentage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The ID of the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The time stamp when the snapshot was initiated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The snapshot state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Snapshot.VolumeSize">
            <summary>
            Gets and sets the property VolumeSize. 
            <para>
            The size of the volume, in GiB.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SpotDatafeedSubscription">
            <summary>
            Describes the datafeed for a Spot Instance.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotDatafeedSubscription.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            The Amazon S3 bucket where the Spot Instance datafeed is located.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotDatafeedSubscription.Fault">
            <summary>
            Gets and sets the property Fault. 
            <para>
            The fault codes for the Spot Instance request, if any.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotDatafeedSubscription.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account ID of the account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotDatafeedSubscription.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            The prefix that is prepended to datafeed files.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotDatafeedSubscription.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the Spot Instance datafeed subscription.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SpotInstanceRequest">
            <summary>
            Describe a Spot Instance request.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.AvailabilityZoneGroup">
            <summary>
            Gets and sets the property AvailabilityZoneGroup. 
            <para>
            The Availability Zone group. If you specify the same Availability Zone group for all
            Spot Instance requests, all Spot Instances are launched in the same Availability Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.CreateTime">
            <summary>
            Gets and sets the property CreateTime. 
            <para>
            The time stamp when the Spot Instance request was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.Fault">
            <summary>
            Gets and sets the property Fault. 
            <para>
            The fault codes for the Spot Instance request, if any.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The instance ID, if an instance has been launched to fulfill the Spot Instance request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.LaunchedAvailabilityZone">
            <summary>
            Gets and sets the property LaunchedAvailabilityZone. 
            <para>
            The Availability Zone in which the bid is launched.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.LaunchGroup">
            <summary>
            Gets and sets the property LaunchGroup. 
            <para>
            The instance launch group. Launch groups are Spot Instances that launch together and
            terminate together.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.LaunchSpecification">
            <summary>
            Gets and sets the property LaunchSpecification. 
            <para>
            Additional information for launching instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.ProductDescription">
            <summary>
            Gets and sets the property ProductDescription. 
            <para>
            The product description associated with the Spot Instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.SpotInstanceRequestId">
            <summary>
            Gets and sets the property SpotInstanceRequestId. 
            <para>
            The ID of the Spot Instance request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.SpotPrice">
            <summary>
            Gets and sets the property SpotPrice. 
            <para>
            The maximum hourly price for any Spot Instance launched to fulfill the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The state of the Spot Instance request. Spot bid status information can help you track
            your Spot Instance requests. For information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-bid-status.html">Tracking
            Spot Requests with Bid Status Codes</a> in the <i>Amazon Elastic Compute Cloud User
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status code and status message describing the Spot Instance request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The Spot Instance request type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.ValidFrom">
            <summary>
            Gets and sets the property ValidFrom. 
            <para>
            The start date of the request. If this is a one-time request, the request becomes
            active at this date and time and remains active until all instances launch, the request
            expires, or the request is canceled. If the request is persistent, the request becomes
            active at this date and time and remains active until it expires or is canceled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceRequest.ValidUntil">
            <summary>
            Gets and sets the property ValidUntil. 
            <para>
            The end date of the request. If this is a one-time request, the request remains active
            until all instances launch, the request is canceled, or this date is reached. If the
            request is persistent, it remains active until it is canceled or this date is reached.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SpotInstanceStateFault">
            <summary>
            Describes a Spot Instance state change.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceStateFault.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The reason code for the Spot Instance state change.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceStateFault.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The message for the Spot Instance state change.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SpotInstanceStatus">
            <summary>
            Describes a Spot Instance request.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceStatus.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The status code of the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceStatus.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The description for the status code for the Spot request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotInstanceStatus.UpdateTime">
            <summary>
            Gets and sets the property UpdateTime. 
            <para>
            The time of the most recent status update.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SpotPlacement">
            <summary>
            Describes Spot Instance placement.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.SpotPlacement.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.SpotPlacement.#ctor(System.String)">
            <summary>
            Instantiates SpotPlacement with the parameterized properties
            </summary>
            <param name="availabilityZone">The Availability Zone.</param>
        </member>
        <member name="P:Amazon.EC2.Model.SpotPlacement.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotPlacement.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The Availability Zone group name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.SpotPrice">
            <summary>
            Describes the Spot Price.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotPrice.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotPrice.InstanceType">
            <summary>
            Gets and sets the property InstanceType. 
            <para>
            The instance type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotPrice.Price">
            <summary>
            Gets and sets the property Price. 
            <para>
            The maximum price you will pay to launch one or more Spot Instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotPrice.ProductDescription">
            <summary>
            Gets and sets the property ProductDescription. 
            <para>
            A general description of the AMI.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.SpotPrice.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The date and time the request was created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.StartInstancesRequest">
            <summary>
            Container for the parameters to the StartInstances operation.
            Starts an Amazon EBS-backed AMI that you've previously stopped.
            
             
            <para>
            Instances that use Amazon EBS volumes as their root devices can be quickly stopped
            and started. When an instance is stopped, the compute resources are released and you
            are not billed for hourly instance usage. However, your root partition Amazon EBS
            volume remains, continues to persist your data, and you are charged for Amazon EBS
            volume usage. You can restart your instance at any time. Each time you transition
            an instance from stopped to started, Amazon EC2 charges a full instance hour, even
            if transitions happen multiple times within a single hour.
            </para>
             
            <para>
            Before stopping an instance, make sure it is in a state from which it can be restarted.
            Stopping an instance does not preserve data stored in RAM.
            </para>
             
            <para>
            Performing this operation on an instance that uses an instance store as its root device
            returns an error.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html">Stopping
            Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.StartInstancesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.StartInstancesRequest.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates StartInstancesRequest with the parameterized properties
            </summary>
            <param name="instanceIds">One or more instance IDs.</param>
        </member>
        <member name="P:Amazon.EC2.Model.StartInstancesRequest.AdditionalInfo">
            <summary>
            Gets and sets the property AdditionalInfo. 
            <para>
            Reserved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StartInstancesRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
            One or more instance IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.StartInstancesResponse">
            <summary>
            Configuration for accessing Amazon StartInstances service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.StartInstancesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StartInstancesResult.StartingInstances">
            <summary>
            Gets and sets the property StartingInstances. 
            <para>
            Information about one or more started instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StartInstancesResponse.StartInstancesResult">
            <summary>
            Gets and sets the StartInstancesResult property.
            Represents the output of a StartInstances operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.StateReason">
            <summary>
            Describes a state change.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StateReason.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The reason code for the state change.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StateReason.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The message for the state change.
            </para>
             <ul> <li>
            <para>
            <code>Server.SpotInstanceTermination</code>: A Spot Instance was terminated due to
            an increase in the market price.
            </para>
            </li> <li>
            <para>
            <code>Server.InternalError</code>: An internal error occurred during instance launch,
            resulting in termination.
            </para>
            </li> <li>
            <para>
            <code>Server.InsufficientInstanceCapacity</code>: There was insufficient instance
            capacity to satisfy the launch request.
            </para>
            </li> <li>
            <para>
            <code>Client.InternalError</code>: A client error caused the instance to terminate
            on launch.
            </para>
            </li> <li>
            <para>
            <code>Client.InstanceInitiatedShutdown</code>: The instance was shut down using the
            <code>shutdown -h</code> command from the instance.
            </para>
            </li> <li>
            <para>
            <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon
            EC2 API.
            </para>
            </li> <li>
            <para>
            <code>Client.VolumeLimitExceeded</code>: The volume limit was exceeded.
            </para>
            </li> <li>
            <para>
            <code>Client.InvalidSnapshot.NotFound</code>: The specified snapshot was not found.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.StopInstancesRequest">
            <summary>
            Container for the parameters to the StopInstances operation.
            Stops an Amazon EBS-backed instance. Each time you transition an instance from stopped
            to started, Amazon EC2 charges a full instance hour, even if transitions happen multiple
            times within a single hour.
            
             
            <para>
            You can't start or stop Spot Instances.
            </para>
             
            <para>
            Instances that use Amazon EBS volumes as their root devices can be quickly stopped
            and started. When an instance is stopped, the compute resources are released and you
            are not billed for hourly instance usage. However, your root partition Amazon EBS
            volume remains, continues to persist your data, and you are charged for Amazon EBS
            volume usage. You can restart your instance at any time.
            </para>
             
            <para>
            Before stopping an instance, make sure it is in a state from which it can be restarted.
            Stopping an instance does not preserve data stored in RAM.
            </para>
             
            <para>
            Performing this operation on an instance that uses an instance store as its root device
            returns an error.
            </para>
             
            <para>
            You can stop, start, and terminate EBS-backed instances. You can only terminate instance
            store-backed instances. What happens to an instance differs if you stop it or terminate
            it. For example, when you stop an instance, the root device and any other devices
            attached to the instance persist. When you terminate an instance, the root device
            and any other devices attached during the instance launch are automatically deleted.
            For more information about the differences between stopping and terminating instances,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance
            Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            For more information about troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesStopping.html">Troubleshooting
            Stopping Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.StopInstancesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.StopInstancesRequest.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates StopInstancesRequest with the parameterized properties
            </summary>
            <param name="instanceIds">One or more instance IDs.</param>
        </member>
        <member name="P:Amazon.EC2.Model.StopInstancesRequest.Force">
            <summary>
            Gets and sets the property Force. 
            <para>
            Forces the instances to stop. The instances do not have an opportunity to flush file
            system caches or file system metadata. If you use this option, you must perform file
            system check and repair procedures. This option is not recommended for Windows instances.
            </para>
             
            <para>
            Default: <code>false</code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StopInstancesRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
            One or more instance IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.StopInstancesResponse">
            <summary>
            Configuration for accessing Amazon StopInstances service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.StopInstancesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StopInstancesResult.StoppingInstances">
            <summary>
            Gets and sets the property StoppingInstances. 
            <para>
            Information about one or more stopped instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.StopInstancesResponse.StopInstancesResult">
            <summary>
            Gets and sets the StopInstancesResult property.
            Represents the output of a StopInstances operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Storage">
            <summary>
            Describes the storage location for an instance store-backed AMI.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Storage.S3">
            <summary>
            Gets and sets the property S3. 
            <para>
            An Amazon S3 storage location.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Subnet">
            <summary>
            Describes a subnet.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Subnet.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone of the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Subnet.AvailableIpAddressCount">
            <summary>
            Gets and sets the property AvailableIpAddressCount. 
            <para>
            The number of unused IP addresses in the subnet. Note that the IP addresses for any
            stopped instances are considered unavailable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Subnet.CidrBlock">
            <summary>
            Gets and sets the property CidrBlock. 
            <para>
            The CIDR block assigned to the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Subnet.DefaultForAz">
            <summary>
            Gets and sets the property DefaultForAz. 
            <para>
            Indicates whether this is the default subnet for the Availability Zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Subnet.MapPublicIpOnLaunch">
            <summary>
            Gets and sets the property MapPublicIpOnLaunch. 
            <para>
            Indicates whether instances launched in this subnet receive a public IP address.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Subnet.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Subnet.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Subnet.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Subnet.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC the subnet is in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Tag">
            <summary>
            Describes a tag.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.Tag.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.Tag.#ctor(System.String,System.String)">
            <summary>
            Instantiates Tag with the parameterized properties
            </summary>
            <param name="key">The key of the tag.  Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with <code>aws:</code></param>
            <param name="value">The value of the tag. Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.</param>
        </member>
        <member name="M:Amazon.EC2.Model.Tag.#ctor(System.String)">
            <summary>
            Instantiates Tag with the parameterized properties
            </summary>
            <param name="key">The key of the tag.  Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with <code>aws:</code></param>
        </member>
        <member name="P:Amazon.EC2.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key of the tag. 
            </para>
             
            <para>
            Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters.
            May not begin with <code>aws:</code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the tag.
            </para>
             
            <para>
            Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.TagDescription">
            <summary>
            Describes a tag.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.TagDescription.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key of the tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.TagDescription.ResourceId">
            <summary>
            Gets and sets the property ResourceId. 
            <para>
            The ID of the resource. For example, <code>ami-1a2b3c4d</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.TagDescription.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The type of resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.TagDescription.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.TerminateInstancesRequest">
            <summary>
            Container for the parameters to the TerminateInstances operation.
            Shuts down one or more instances. This operation is idempotent; if you terminate an
            instance more than once, each call succeeds.
            
             
            <para>
            Terminated instances remain visible after termination (for approximately one hour).
            </para>
             
            <para>
            By default, Amazon EC2 deletes all Amazon EBS volumes that were attached when the
            instance launched. Volumes attached after instance launch continue running.
            </para>
             
            <para>
            You can stop, start, and terminate EBS-backed instances. You can only terminate instance
            store-backed instances. What happens to an instance differs if you stop it or terminate
            it. For example, when you stop an instance, the root device and any other devices
            attached to the instance persist. When you terminate an instance, the root device
            and any other devices attached during the instance launch are automatically deleted.
            For more information about the differences between stopping and terminating instances,
            see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance
            Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
             
            <para>
            For more information about troubleshooting, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesShuttingDown.html">Troubleshooting
            Terminating Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.TerminateInstancesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.TerminateInstancesRequest.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates TerminateInstancesRequest with the parameterized properties
            </summary>
            <param name="instanceIds">One or more instance IDs.</param>
        </member>
        <member name="P:Amazon.EC2.Model.TerminateInstancesRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
            One or more instance IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.TerminateInstancesResponse">
            <summary>
            Configuration for accessing Amazon TerminateInstances service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.TerminateInstancesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.TerminateInstancesResult.TerminatingInstances">
            <summary>
            Gets and sets the property TerminatingInstances. 
            <para>
            Information about one or more terminated instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.TerminateInstancesResponse.TerminateInstancesResult">
            <summary>
            Gets and sets the TerminateInstancesResult property.
            Represents the output of a TerminateInstances operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.UnassignPrivateIpAddressesRequest">
            <summary>
            Container for the parameters to the UnassignPrivateIpAddresses operation.
            Unassigns one or more secondary private IP addresses from a network interface.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UnassignPrivateIpAddressesRequest.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UnassignPrivateIpAddressesRequest.PrivateIpAddresses">
            <summary>
            Gets and sets the property PrivateIpAddresses. 
            <para>
            The secondary private IP addresses to unassign from the network interface. You can
            specify this option multiple times to unassign more than one IP address.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.UnassignPrivateIpAddressesResponse">
            <summary>
            Configuration for accessing Amazon UnassignPrivateIpAddresses service
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UnassignPrivateIpAddressesResponse.UnassignPrivateIpAddressesResult">
            <summary>
            Gets and sets the UnassignPrivateIpAddressesResult property.
            Represents the output of a UnassignPrivateIpAddresses operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.UnmonitorInstancesRequest">
            <summary>
            Container for the parameters to the UnmonitorInstances operation.
            Disables monitoring for a running instance. For more information about monitoring
            instances, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitoring
            Your Instances and Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.UnmonitorInstancesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.EC2.Model.UnmonitorInstancesRequest.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates UnmonitorInstancesRequest with the parameterized properties
            </summary>
            <param name="instanceIds">One or more instance IDs.</param>
        </member>
        <member name="P:Amazon.EC2.Model.UnmonitorInstancesRequest.InstanceIds">
            <summary>
            Gets and sets the property InstanceIds. 
            <para>
            One or more instance IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.UnmonitorInstancesResponse">
            <summary>
            Configuration for accessing Amazon UnmonitorInstances service
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.UnmonitorInstancesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UnmonitorInstancesResult.InstanceMonitorings">
            <summary>
            Gets and sets the property InstanceMonitorings. 
            <para>
            Monitoring information for one or more instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UnmonitorInstancesResponse.UnmonitorInstancesResult">
            <summary>
            Gets and sets the UnmonitorInstancesResult property.
            Represents the output of a UnmonitorInstances operation.
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.UserIdGroupPair">
            <summary>
            Describes a security group and AWS account ID pair for EC2-Classic.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UserIdGroupPair.GroupId">
            <summary>
            Gets and sets the property GroupId. 
            <para>
            The name of the security group in the specified AWS account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UserIdGroupPair.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
            The ID of the security group owned by the specified AWS account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.UserIdGroupPair.UserId">
            <summary>
            Gets and sets the property UserId. 
            <para>
            The ID of an AWS account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VgwTelemetry">
            <summary>
            Describes telemetry for a VPN tunnel.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VgwTelemetry.AcceptedRouteCount">
            <summary>
            Gets and sets the property AcceptedRouteCount. 
            <para>
            The number of accepted routes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VgwTelemetry.LastStatusChange">
            <summary>
            Gets and sets the property LastStatusChange. 
            <para>
            The date and time of the last change in status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VgwTelemetry.OutsideIpAddress">
            <summary>
            Gets and sets the property OutsideIpAddress. 
            <para>
            The Internet-routable IP address of the virtual private gateway's outside interface.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VgwTelemetry.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the VPN tunnel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VgwTelemetry.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            If an error occurs, a description of the error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Volume">
            <summary>
            Describes a volume.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.Attachments">
            <summary>
            Gets and sets the property Attachments.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone for the volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.CreateTime">
            <summary>
            Gets and sets the property CreateTime. 
            <para>
            The time stamp when volume creation was initiated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.Encrypted">
            <summary>
            Gets and sets the property Encrypted. 
            <para>
            Indicates whether the volume is encrypted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.Iops">
            <summary>
            Gets and sets the property Iops. 
            <para>
            The number of I/O operations per second (IOPS) that the volume supports.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the volume, in GiBs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The snapshot from which the volume was created, if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The volume state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Volume.VolumeType">
            <summary>
            Gets and sets the property VolumeType. 
            <para>
            The volume type. This can be <code>gp2</code> for General Purpose (SSD) volumes, <code>io1</code>
            for Provisioned IOPS (SSD) volumes, or <code>standard</code> for Magnetic volumes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VolumeAttachment">
            <summary>
            Describes volume attachment details.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeAttachment.AttachTime">
            <summary>
            Gets and sets the property AttachTime. 
            <para>
            The time stamp when the attachment initiated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeAttachment.DeleteOnTermination">
            <summary>
            Gets and sets the property DeleteOnTermination. 
            <para>
            Indicates whether the Amazon EBS volume is deleted on instance termination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeAttachment.Device">
            <summary>
            Gets and sets the property Device. 
            <para>
            The device name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeAttachment.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
            The ID of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeAttachment.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The attachment state of the volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeAttachment.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The ID of the volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VolumeDetail">
            <summary>
            Describes an Amazon EBS volume.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeDetail.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the volume, in GiB.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VolumeStatusAction">
            <summary>
            Describes a volume status operation code.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusAction.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The code identifying the operation, for example, <code>enable-volume-io</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusAction.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusAction.EventId">
            <summary>
            Gets and sets the property EventId. 
            <para>
            The ID of the event associated with this operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusAction.EventType">
            <summary>
            Gets and sets the property EventType. 
            <para>
            The event type associated with this operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VolumeStatusDetails">
            <summary>
            Describes a volume status.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusDetails.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the volume status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusDetails.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The intended status of the volume status.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VolumeStatusEvent">
            <summary>
            Describes a volume status event.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusEvent.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusEvent.EventId">
            <summary>
            Gets and sets the property EventId. 
            <para>
            The ID of this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusEvent.EventType">
            <summary>
            Gets and sets the property EventType. 
            <para>
            The type of this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusEvent.NotAfter">
            <summary>
            Gets and sets the property NotAfter. 
            <para>
            The latest end time of the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusEvent.NotBefore">
            <summary>
            Gets and sets the property NotBefore. 
            <para>
            The earliest start time of the event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VolumeStatusInfo">
            <summary>
            Describes the status of a volume.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusInfo.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            The details of the volume status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusInfo.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the volume.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VolumeStatusItem">
            <summary>
            Describes the volume status.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusItem.Actions">
            <summary>
            Gets and sets the property Actions. 
            <para>
            The details of the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusItem.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone of the volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusItem.Events">
            <summary>
            Gets and sets the property Events. 
            <para>
            A list of events associated with the volume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusItem.VolumeId">
            <summary>
            Gets and sets the property VolumeId. 
            <para>
            The volume ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VolumeStatusItem.VolumeStatus">
            <summary>
            Gets and sets the property VolumeStatus. 
            <para>
            The volume status.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.Vpc">
            <summary>
            Describes a VPC.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Vpc.CidrBlock">
            <summary>
            Gets and sets the property CidrBlock. 
            <para>
            The CIDR block for the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Vpc.DhcpOptionsId">
            <summary>
            Gets and sets the property DhcpOptionsId. 
            <para>
            The ID of the set of DHCP options you've associated with the VPC (or <code>default</code>
            if the default options are associated with the VPC).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Vpc.InstanceTenancy">
            <summary>
            Gets and sets the property InstanceTenancy. 
            <para>
            The allowed tenancy of instances launched into the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Vpc.IsDefault">
            <summary>
            Gets and sets the property IsDefault. 
            <para>
            Indicates whether the VPC is the default VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Vpc.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Vpc.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.Vpc.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpcAttachment">
            <summary>
            Describes an attachment between a virtual private gateway and a VPC.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcAttachment.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the attachment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcAttachment.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpcPeeringConnection">
            <summary>
            Describes a VPC peering connection.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnection.AccepterVpcInfo">
            <summary>
            Gets and sets the property AccepterVpcInfo. 
            <para>
            The information of the peer VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnection.ExpirationTime">
            <summary>
            Gets and sets the property ExpirationTime. 
            <para>
            The time that an unaccepted VPC peering connection will expire.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnection.RequesterVpcInfo">
            <summary>
            Gets and sets the property RequesterVpcInfo. 
            <para>
            The information of the requester VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnection.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnection.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnection.VpcPeeringConnectionId">
            <summary>
            Gets and sets the property VpcPeeringConnectionId. 
            <para>
            The ID of the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpcPeeringConnectionStateReason">
            <summary>
            Describes the status of a VPC peering connection.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnectionStateReason.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The status of the VPC peering connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnectionStateReason.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message that provides more information about the status, if applicable.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpcPeeringConnectionVpcInfo">
            <summary>
            Describes a VPC in a VPC peering connection.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnectionVpcInfo.CidrBlock">
            <summary>
            Gets and sets the property CidrBlock. 
            <para>
            The CIDR block for the VPC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnectionVpcInfo.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account ID of the VPC owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpcPeeringConnectionVpcInfo.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The ID of the VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpnConnection">
            <summary>
            Describes a VPN connection.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnection.CustomerGatewayConfiguration">
            <summary>
            Gets and sets the property CustomerGatewayConfiguration. 
            <para>
            The configuration information for the VPN connection's customer gateway (in the native
            XML format). This element is always present in the <a>CreateVpnConnection</a> response;
            however, it's present in the <a>DescribeVpnConnections</a> response only if the VPN
            connection is in the <code>pending</code> or <code>available</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnection.CustomerGatewayId">
            <summary>
            Gets and sets the property CustomerGatewayId. 
            <para>
            The ID of the customer gateway at your end of the VPN connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnection.Options">
            <summary>
            Gets and sets the property Options. 
            <para>
            The VPN connection options.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnection.Routes">
            <summary>
            Gets and sets the property Routes. 
            <para>
            The static routes associated with the VPN connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnection.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the VPN connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnection.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the VPN connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnection.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of VPN connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnection.VgwTelemetry">
            <summary>
            Gets and sets the property VgwTelemetry. 
            <para>
            Information about the VPN tunnel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnection.VpnConnectionId">
            <summary>
            Gets and sets the property VpnConnectionId. 
            <para>
            The ID of the VPN connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnection.VpnGatewayId">
            <summary>
            Gets and sets the property VpnGatewayId. 
            <para>
            The ID of the virtual private gateway at the AWS side of the VPN connection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpnConnectionOptions">
            <summary>
            Describes VPN connection options.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnectionOptions.StaticRoutesOnly">
            <summary>
            Gets and sets the property StaticRoutesOnly. 
            <para>
            Indicates whether the VPN connection uses static routes only. Static routes must be
            used for devices that don't support BGP.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpnConnectionOptionsSpecification">
            <summary>
            Describes VPN connection options.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnConnectionOptionsSpecification.StaticRoutesOnly">
            <summary>
            Gets and sets the property StaticRoutesOnly. 
            <para>
            Indicates whether the VPN connection uses static routes only. Static routes must be
            used for devices that don't support BGP.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpnGateway">
            <summary>
            Describes a virtual private gateway.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnGateway.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone where the virtual private gateway was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnGateway.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnGateway.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Any tags assigned to the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnGateway.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of VPN connection the virtual private gateway supports.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnGateway.VpcAttachments">
            <summary>
            Gets and sets the property VpcAttachments. 
            <para>
            Any VPCs attached to the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnGateway.VpnGatewayId">
            <summary>
            Gets and sets the property VpnGatewayId. 
            <para>
            The ID of the virtual private gateway.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.Model.VpnStaticRoute">
            <summary>
            Describes a static route for a VPN connection.
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnStaticRoute.DestinationCidrBlock">
            <summary>
            Gets and sets the property DestinationCidrBlock. 
            <para>
            The CIDR block associated with the local subnet of the customer data center.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnStaticRoute.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            Indicates how the routes were provided.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.EC2.Model.VpnStaticRoute.State">
            <summary>
            Gets and sets the property State. 
            <para>
            The current state of the static route.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.EC2.AccountAttributeName">
            <summary>
            Constants used for properties of type AccountAttributeName.
            </summary>
        </member>
        <member name="F:Amazon.EC2.AccountAttributeName.DefaultVpc">
            <summary>
            Constant DefaultVpc for AccountAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.AccountAttributeName.SupportedPlatforms">
            <summary>
            Constant SupportedPlatforms for AccountAttributeName
            </summary>
        </member>
        <member name="M:Amazon.EC2.AccountAttributeName.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.AccountAttributeName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.ArchitectureValues">
            <summary>
            Constants used for properties of type ArchitectureValues.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ArchitectureValues.I386">
            <summary>
            Constant I386 for ArchitectureValues
            </summary>
        </member>
        <member name="F:Amazon.EC2.ArchitectureValues.X86_64">
            <summary>
            Constant X86_64 for ArchitectureValues
            </summary>
        </member>
        <member name="M:Amazon.EC2.ArchitectureValues.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.ArchitectureValues.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.AttachmentStatus">
            <summary>
            Constants used for properties of type AttachmentStatus.
            </summary>
        </member>
        <member name="F:Amazon.EC2.AttachmentStatus.Attached">
            <summary>
            Constant Attached for AttachmentStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.AttachmentStatus.Attaching">
            <summary>
            Constant Attaching for AttachmentStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.AttachmentStatus.Detached">
            <summary>
            Constant Detached for AttachmentStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.AttachmentStatus.Detaching">
            <summary>
            Constant Detaching for AttachmentStatus
            </summary>
        </member>
        <member name="M:Amazon.EC2.AttachmentStatus.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.AttachmentStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.AvailabilityZoneState">
            <summary>
            Constants used for properties of type AvailabilityZoneState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.AvailabilityZoneState.Available">
            <summary>
            Constant Available for AvailabilityZoneState
            </summary>
        </member>
        <member name="M:Amazon.EC2.AvailabilityZoneState.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.AvailabilityZoneState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.BundleTaskState">
            <summary>
            Constants used for properties of type BundleTaskState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.BundleTaskState.Bundling">
            <summary>
            Constant Bundling for BundleTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.BundleTaskState.Cancelling">
            <summary>
            Constant Cancelling for BundleTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.BundleTaskState.Complete">
            <summary>
            Constant Complete for BundleTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.BundleTaskState.Failed">
            <summary>
            Constant Failed for BundleTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.BundleTaskState.Pending">
            <summary>
            Constant Pending for BundleTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.BundleTaskState.Storing">
            <summary>
            Constant Storing for BundleTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.BundleTaskState.WaitingForShutdown">
            <summary>
            Constant WaitingForShutdown for BundleTaskState
            </summary>
        </member>
        <member name="M:Amazon.EC2.BundleTaskState.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.BundleTaskState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.CancelSpotInstanceRequestState">
            <summary>
            Constants used for properties of type CancelSpotInstanceRequestState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.CancelSpotInstanceRequestState.Active">
            <summary>
            Constant Active for CancelSpotInstanceRequestState
            </summary>
        </member>
        <member name="F:Amazon.EC2.CancelSpotInstanceRequestState.Cancelled">
            <summary>
            Constant Cancelled for CancelSpotInstanceRequestState
            </summary>
        </member>
        <member name="F:Amazon.EC2.CancelSpotInstanceRequestState.Closed">
            <summary>
            Constant Closed for CancelSpotInstanceRequestState
            </summary>
        </member>
        <member name="F:Amazon.EC2.CancelSpotInstanceRequestState.Completed">
            <summary>
            Constant Completed for CancelSpotInstanceRequestState
            </summary>
        </member>
        <member name="F:Amazon.EC2.CancelSpotInstanceRequestState.Open">
            <summary>
            Constant Open for CancelSpotInstanceRequestState
            </summary>
        </member>
        <member name="M:Amazon.EC2.CancelSpotInstanceRequestState.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.CancelSpotInstanceRequestState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.ContainerFormat">
            <summary>
            Constants used for properties of type ContainerFormat.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ContainerFormat.Ova">
            <summary>
            Constant Ova for ContainerFormat
            </summary>
        </member>
        <member name="M:Amazon.EC2.ContainerFormat.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.ContainerFormat.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.ConversionTaskState">
            <summary>
            Constants used for properties of type ConversionTaskState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ConversionTaskState.Active">
            <summary>
            Constant Active for ConversionTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ConversionTaskState.Cancelled">
            <summary>
            Constant Cancelled for ConversionTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ConversionTaskState.Cancelling">
            <summary>
            Constant Cancelling for ConversionTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ConversionTaskState.Completed">
            <summary>
            Constant Completed for ConversionTaskState
            </summary>
        </member>
        <member name="M:Amazon.EC2.ConversionTaskState.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.ConversionTaskState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.CurrencyCodeValues">
            <summary>
            Constants used for properties of type CurrencyCodeValues.
            </summary>
        </member>
        <member name="F:Amazon.EC2.CurrencyCodeValues.USD">
            <summary>
            Constant USD for CurrencyCodeValues
            </summary>
        </member>
        <member name="M:Amazon.EC2.CurrencyCodeValues.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.CurrencyCodeValues.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.DatafeedSubscriptionState">
            <summary>
            Constants used for properties of type DatafeedSubscriptionState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.DatafeedSubscriptionState.Active">
            <summary>
            Constant Active for DatafeedSubscriptionState
            </summary>
        </member>
        <member name="F:Amazon.EC2.DatafeedSubscriptionState.Inactive">
            <summary>
            Constant Inactive for DatafeedSubscriptionState
            </summary>
        </member>
        <member name="M:Amazon.EC2.DatafeedSubscriptionState.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.DatafeedSubscriptionState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.DeviceType">
            <summary>
            Constants used for properties of type DeviceType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.DeviceType.Ebs">
            <summary>
            Constant Ebs for DeviceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.DeviceType.InstanceStore">
            <summary>
            Constant InstanceStore for DeviceType
            </summary>
        </member>
        <member name="M:Amazon.EC2.DeviceType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.DeviceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.DiskImageFormat">
            <summary>
            Constants used for properties of type DiskImageFormat.
            </summary>
        </member>
        <member name="F:Amazon.EC2.DiskImageFormat.RAW">
            <summary>
            Constant RAW for DiskImageFormat
            </summary>
        </member>
        <member name="F:Amazon.EC2.DiskImageFormat.VHD">
            <summary>
            Constant VHD for DiskImageFormat
            </summary>
        </member>
        <member name="F:Amazon.EC2.DiskImageFormat.VMDK">
            <summary>
            Constant VMDK for DiskImageFormat
            </summary>
        </member>
        <member name="M:Amazon.EC2.DiskImageFormat.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.DiskImageFormat.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.DomainType">
            <summary>
            Constants used for properties of type DomainType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.DomainType.Standard">
            <summary>
            Constant Standard for DomainType
            </summary>
        </member>
        <member name="F:Amazon.EC2.DomainType.Vpc">
            <summary>
            Constant Vpc for DomainType
            </summary>
        </member>
        <member name="M:Amazon.EC2.DomainType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.DomainType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.EventCode">
            <summary>
            Constants used for properties of type EventCode.
            </summary>
        </member>
        <member name="F:Amazon.EC2.EventCode.InstanceReboot">
            <summary>
            Constant InstanceReboot for EventCode
            </summary>
        </member>
        <member name="F:Amazon.EC2.EventCode.InstanceRetirement">
            <summary>
            Constant InstanceRetirement for EventCode
            </summary>
        </member>
        <member name="F:Amazon.EC2.EventCode.InstanceStop">
            <summary>
            Constant InstanceStop for EventCode
            </summary>
        </member>
        <member name="F:Amazon.EC2.EventCode.SystemMaintenance">
            <summary>
            Constant SystemMaintenance for EventCode
            </summary>
        </member>
        <member name="F:Amazon.EC2.EventCode.SystemReboot">
            <summary>
            Constant SystemReboot for EventCode
            </summary>
        </member>
        <member name="M:Amazon.EC2.EventCode.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.EventCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.ExportEnvironment">
            <summary>
            Constants used for properties of type ExportEnvironment.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ExportEnvironment.Citrix">
            <summary>
            Constant Citrix for ExportEnvironment
            </summary>
        </member>
        <member name="F:Amazon.EC2.ExportEnvironment.Microsoft">
            <summary>
            Constant Microsoft for ExportEnvironment
            </summary>
        </member>
        <member name="F:Amazon.EC2.ExportEnvironment.Vmware">
            <summary>
            Constant Vmware for ExportEnvironment
            </summary>
        </member>
        <member name="M:Amazon.EC2.ExportEnvironment.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.ExportEnvironment.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.ExportTaskState">
            <summary>
            Constants used for properties of type ExportTaskState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ExportTaskState.Active">
            <summary>
            Constant Active for ExportTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ExportTaskState.Cancelled">
            <summary>
            Constant Cancelled for ExportTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ExportTaskState.Cancelling">
            <summary>
            Constant Cancelling for ExportTaskState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ExportTaskState.Completed">
            <summary>
            Constant Completed for ExportTaskState
            </summary>
        </member>
        <member name="M:Amazon.EC2.ExportTaskState.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.ExportTaskState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.GatewayType">
            <summary>
            Constants used for properties of type GatewayType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.GatewayType.Ipsec1">
            <summary>
            Constant Ipsec1 for GatewayType
            </summary>
        </member>
        <member name="M:Amazon.EC2.GatewayType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.GatewayType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.HypervisorType">
            <summary>
            Constants used for properties of type HypervisorType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.HypervisorType.Ovm">
            <summary>
            Constant Ovm for HypervisorType
            </summary>
        </member>
        <member name="F:Amazon.EC2.HypervisorType.Xen">
            <summary>
            Constant Xen for HypervisorType
            </summary>
        </member>
        <member name="M:Amazon.EC2.HypervisorType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.HypervisorType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.ImageAttributeName">
            <summary>
            Constants used for properties of type ImageAttributeName.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageAttributeName.BlockDeviceMapping">
            <summary>
            Constant BlockDeviceMapping for ImageAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageAttributeName.Description">
            <summary>
            Constant Description for ImageAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageAttributeName.Kernel">
            <summary>
            Constant Kernel for ImageAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageAttributeName.LaunchPermission">
            <summary>
            Constant LaunchPermission for ImageAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageAttributeName.ProductCodes">
            <summary>
            Constant ProductCodes for ImageAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageAttributeName.Ramdisk">
            <summary>
            Constant Ramdisk for ImageAttributeName
            </summary>
        </member>
        <member name="M:Amazon.EC2.ImageAttributeName.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.ImageAttributeName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.ImageState">
            <summary>
            Constants used for properties of type ImageState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageState.Available">
            <summary>
            Constant Available for ImageState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageState.Deregistered">
            <summary>
            Constant Deregistered for ImageState
            </summary>
        </member>
        <member name="M:Amazon.EC2.ImageState.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.ImageState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.ImageTypeValues">
            <summary>
            Constants used for properties of type ImageTypeValues.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageTypeValues.Kernel">
            <summary>
            Constant Kernel for ImageTypeValues
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageTypeValues.Machine">
            <summary>
            Constant Machine for ImageTypeValues
            </summary>
        </member>
        <member name="F:Amazon.EC2.ImageTypeValues.Ramdisk">
            <summary>
            Constant Ramdisk for ImageTypeValues
            </summary>
        </member>
        <member name="M:Amazon.EC2.ImageTypeValues.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.ImageTypeValues.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.InstanceAttributeName">
            <summary>
            Constants used for properties of type InstanceAttributeName.
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.BlockDeviceMapping">
            <summary>
            Constant BlockDeviceMapping for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.DisableApiTermination">
            <summary>
            Constant DisableApiTermination for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.EbsOptimized">
            <summary>
            Constant EbsOptimized for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.GroupSet">
            <summary>
            Constant GroupSet for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.InstanceInitiatedShutdownBehavior">
            <summary>
            Constant InstanceInitiatedShutdownBehavior for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.InstanceType">
            <summary>
            Constant InstanceType for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.Kernel">
            <summary>
            Constant Kernel for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.ProductCodes">
            <summary>
            Constant ProductCodes for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.Ramdisk">
            <summary>
            Constant Ramdisk for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.RootDeviceName">
            <summary>
            Constant RootDeviceName for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.SourceDestCheck">
            <summary>
            Constant SourceDestCheck for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.SriovNetSupport">
            <summary>
            Constant SriovNetSupport for InstanceAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceAttributeName.UserData">
            <summary>
            Constant UserData for InstanceAttributeName
            </summary>
        </member>
        <member name="M:Amazon.EC2.InstanceAttributeName.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.InstanceAttributeName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.InstanceLifecycleType">
            <summary>
            Constants used for properties of type InstanceLifecycleType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceLifecycleType.Spot">
            <summary>
            Constant Spot for InstanceLifecycleType
            </summary>
        </member>
        <member name="M:Amazon.EC2.InstanceLifecycleType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.InstanceLifecycleType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.InstanceStateName">
            <summary>
            Constants used for properties of type InstanceStateName.
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceStateName.Pending">
            <summary>
            Constant Pending for InstanceStateName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceStateName.Running">
            <summary>
            Constant Running for InstanceStateName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceStateName.ShuttingDown">
            <summary>
            Constant ShuttingDown for InstanceStateName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceStateName.Stopped">
            <summary>
            Constant Stopped for InstanceStateName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceStateName.Stopping">
            <summary>
            Constant Stopping for InstanceStateName
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceStateName.Terminated">
            <summary>
            Constant Terminated for InstanceStateName
            </summary>
        </member>
        <member name="M:Amazon.EC2.InstanceStateName.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.InstanceStateName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.InstanceType">
            <summary>
            Constants used for properties of type InstanceType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.C1Medium">
            <summary>
            Constant C1Medium for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.C1Xlarge">
            <summary>
            Constant C1Xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.C32xlarge">
            <summary>
            Constant C32xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.C34xlarge">
            <summary>
            Constant C34xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.C38xlarge">
            <summary>
            Constant C38xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.C3Large">
            <summary>
            Constant C3Large for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.C3Xlarge">
            <summary>
            Constant C3Xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.Cc14xlarge">
            <summary>
            Constant Cc14xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.Cc28xlarge">
            <summary>
            Constant Cc28xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.Cg14xlarge">
            <summary>
            Constant Cg14xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.Cr18xlarge">
            <summary>
            Constant Cr18xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.G22xlarge">
            <summary>
            Constant G22xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.Hi14xlarge">
            <summary>
            Constant Hi14xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.Hs18xlarge">
            <summary>
            Constant Hs18xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.I22xlarge">
            <summary>
            Constant I22xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.I24xlarge">
            <summary>
            Constant I24xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.I28xlarge">
            <summary>
            Constant I28xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.I2Xlarge">
            <summary>
            Constant I2Xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M1Large">
            <summary>
            Constant M1Large for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M1Medium">
            <summary>
            Constant M1Medium for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M1Small">
            <summary>
            Constant M1Small for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M1Xlarge">
            <summary>
            Constant M1Xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M22xlarge">
            <summary>
            Constant M22xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M24xlarge">
            <summary>
            Constant M24xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M2Xlarge">
            <summary>
            Constant M2Xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M32xlarge">
            <summary>
            Constant M32xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M3Large">
            <summary>
            Constant M3Large for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M3Medium">
            <summary>
            Constant M3Medium for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.M3Xlarge">
            <summary>
            Constant M3Xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.R32xlarge">
            <summary>
            Constant R32xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.R34xlarge">
            <summary>
            Constant R34xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.R38xlarge">
            <summary>
            Constant R38xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.R3Large">
            <summary>
            Constant R3Large for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.R3Xlarge">
            <summary>
            Constant R3Xlarge for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.T1Micro">
            <summary>
            Constant T1Micro for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.T2Medium">
            <summary>
            Constant T2Medium for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.T2Micro">
            <summary>
            Constant T2Micro for InstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.InstanceType.T2Small">
            <summary>
            Constant T2Small for InstanceType
            </summary>
        </member>
        <member name="M:Amazon.EC2.InstanceType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.InstanceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.ListingState">
            <summary>
            Constants used for properties of type ListingState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ListingState.Available">
            <summary>
            Constant Available for ListingState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ListingState.Cancelled">
            <summary>
            Constant Cancelled for ListingState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ListingState.Pending">
            <summary>
            Constant Pending for ListingState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ListingState.Sold">
            <summary>
            Constant Sold for ListingState
            </summary>
        </member>
        <member name="M:Amazon.EC2.ListingState.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.ListingState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.ListingStatus">
            <summary>
            Constants used for properties of type ListingStatus.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ListingStatus.Active">
            <summary>
            Constant Active for ListingStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.ListingStatus.Cancelled">
            <summary>
            Constant Cancelled for ListingStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.ListingStatus.Closed">
            <summary>
            Constant Closed for ListingStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.ListingStatus.Pending">
            <summary>
            Constant Pending for ListingStatus
            </summary>
        </member>
        <member name="M:Amazon.EC2.ListingStatus.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.ListingStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.MonitoringState">
            <summary>
            Constants used for properties of type MonitoringState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.MonitoringState.Disabled">
            <summary>
            Constant Disabled for MonitoringState
            </summary>
        </member>
        <member name="F:Amazon.EC2.MonitoringState.Enabled">
            <summary>
            Constant Enabled for MonitoringState
            </summary>
        </member>
        <member name="F:Amazon.EC2.MonitoringState.Pending">
            <summary>
            Constant Pending for MonitoringState
            </summary>
        </member>
        <member name="M:Amazon.EC2.MonitoringState.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.MonitoringState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.NetworkInterfaceAttribute">
            <summary>
            Constants used for properties of type NetworkInterfaceAttribute.
            </summary>
        </member>
        <member name="F:Amazon.EC2.NetworkInterfaceAttribute.Attachment">
            <summary>
            Constant Attachment for NetworkInterfaceAttribute
            </summary>
        </member>
        <member name="F:Amazon.EC2.NetworkInterfaceAttribute.Description">
            <summary>
            Constant Description for NetworkInterfaceAttribute
            </summary>
        </member>
        <member name="F:Amazon.EC2.NetworkInterfaceAttribute.GroupSet">
            <summary>
            Constant GroupSet for NetworkInterfaceAttribute
            </summary>
        </member>
        <member name="F:Amazon.EC2.NetworkInterfaceAttribute.SourceDestCheck">
            <summary>
            Constant SourceDestCheck for NetworkInterfaceAttribute
            </summary>
        </member>
        <member name="M:Amazon.EC2.NetworkInterfaceAttribute.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.NetworkInterfaceAttribute.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.NetworkInterfaceStatus">
            <summary>
            Constants used for properties of type NetworkInterfaceStatus.
            </summary>
        </member>
        <member name="F:Amazon.EC2.NetworkInterfaceStatus.Attaching">
            <summary>
            Constant Attaching for NetworkInterfaceStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.NetworkInterfaceStatus.Available">
            <summary>
            Constant Available for NetworkInterfaceStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.NetworkInterfaceStatus.Detaching">
            <summary>
            Constant Detaching for NetworkInterfaceStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.NetworkInterfaceStatus.InUse">
            <summary>
            Constant InUse for NetworkInterfaceStatus
            </summary>
        </member>
        <member name="M:Amazon.EC2.NetworkInterfaceStatus.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.NetworkInterfaceStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.OfferingTypeValues">
            <summary>
            Constants used for properties of type OfferingTypeValues.
            </summary>
        </member>
        <member name="F:Amazon.EC2.OfferingTypeValues.HeavyUtilization">
            <summary>
            Constant HeavyUtilization for OfferingTypeValues
            </summary>
        </member>
        <member name="F:Amazon.EC2.OfferingTypeValues.LightUtilization">
            <summary>
            Constant LightUtilization for OfferingTypeValues
            </summary>
        </member>
        <member name="F:Amazon.EC2.OfferingTypeValues.MediumUtilization">
            <summary>
            Constant MediumUtilization for OfferingTypeValues
            </summary>
        </member>
        <member name="M:Amazon.EC2.OfferingTypeValues.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.OfferingTypeValues.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.PermissionGroup">
            <summary>
            Constants used for properties of type PermissionGroup.
            </summary>
        </member>
        <member name="F:Amazon.EC2.PermissionGroup.All">
            <summary>
            Constant All for PermissionGroup
            </summary>
        </member>
        <member name="M:Amazon.EC2.PermissionGroup.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.PermissionGroup.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.PlacementGroupState">
            <summary>
            Constants used for properties of type PlacementGroupState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.PlacementGroupState.Available">
            <summary>
            Constant Available for PlacementGroupState
            </summary>
        </member>
        <member name="F:Amazon.EC2.PlacementGroupState.Deleted">
            <summary>
            Constant Deleted for PlacementGroupState
            </summary>
        </member>
        <member name="F:Amazon.EC2.PlacementGroupState.Deleting">
            <summary>
            Constant Deleting for PlacementGroupState
            </summary>
        </member>
        <member name="F:Amazon.EC2.PlacementGroupState.Pending">
            <summary>
            Constant Pending for PlacementGroupState
            </summary>
        </member>
        <member name="M:Amazon.EC2.PlacementGroupState.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.PlacementGroupState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.PlacementStrategy">
            <summary>
            Constants used for properties of type PlacementStrategy.
            </summary>
        </member>
        <member name="F:Amazon.EC2.PlacementStrategy.Cluster">
            <summary>
            Constant Cluster for PlacementStrategy
            </summary>
        </member>
        <member name="M:Amazon.EC2.PlacementStrategy.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.PlacementStrategy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.PlatformValues">
            <summary>
            Constants used for properties of type PlatformValues.
            </summary>
        </member>
        <member name="F:Amazon.EC2.PlatformValues.Windows">
            <summary>
            Constant Windows for PlatformValues
            </summary>
        </member>
        <member name="M:Amazon.EC2.PlatformValues.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.PlatformValues.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.ProductCodeValues">
            <summary>
            Constants used for properties of type ProductCodeValues.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ProductCodeValues.Devpay">
            <summary>
            Constant Devpay for ProductCodeValues
            </summary>
        </member>
        <member name="F:Amazon.EC2.ProductCodeValues.Marketplace">
            <summary>
            Constant Marketplace for ProductCodeValues
            </summary>
        </member>
        <member name="M:Amazon.EC2.ProductCodeValues.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.ProductCodeValues.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.RecurringChargeFrequency">
            <summary>
            Constants used for properties of type RecurringChargeFrequency.
            </summary>
        </member>
        <member name="F:Amazon.EC2.RecurringChargeFrequency.Hourly">
            <summary>
            Constant Hourly for RecurringChargeFrequency
            </summary>
        </member>
        <member name="M:Amazon.EC2.RecurringChargeFrequency.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.RecurringChargeFrequency.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.ReportInstanceReasonCodes">
            <summary>
            Constants used for properties of type ReportInstanceReasonCodes.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportInstanceReasonCodes.InstanceStuckInState">
            <summary>
            Constant InstanceStuckInState for ReportInstanceReasonCodes
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportInstanceReasonCodes.NotAcceptingCredentials">
            <summary>
            Constant NotAcceptingCredentials for ReportInstanceReasonCodes
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportInstanceReasonCodes.Other">
            <summary>
            Constant Other for ReportInstanceReasonCodes
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportInstanceReasonCodes.PasswordNotAvailable">
            <summary>
            Constant PasswordNotAvailable for ReportInstanceReasonCodes
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportInstanceReasonCodes.PerformanceEbsVolume">
            <summary>
            Constant PerformanceEbsVolume for ReportInstanceReasonCodes
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportInstanceReasonCodes.PerformanceInstanceStore">
            <summary>
            Constant PerformanceInstanceStore for ReportInstanceReasonCodes
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportInstanceReasonCodes.PerformanceNetwork">
            <summary>
            Constant PerformanceNetwork for ReportInstanceReasonCodes
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportInstanceReasonCodes.PerformanceOther">
            <summary>
            Constant PerformanceOther for ReportInstanceReasonCodes
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportInstanceReasonCodes.Unresponsive">
            <summary>
            Constant Unresponsive for ReportInstanceReasonCodes
            </summary>
        </member>
        <member name="M:Amazon.EC2.ReportInstanceReasonCodes.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.ReportInstanceReasonCodes.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.ReportStatusType">
            <summary>
            Constants used for properties of type ReportStatusType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportStatusType.Impaired">
            <summary>
            Constant Impaired for ReportStatusType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReportStatusType.Ok">
            <summary>
            Constant Ok for ReportStatusType
            </summary>
        </member>
        <member name="M:Amazon.EC2.ReportStatusType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.ReportStatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.ReservedInstanceState">
            <summary>
            Constants used for properties of type ReservedInstanceState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReservedInstanceState.Active">
            <summary>
            Constant Active for ReservedInstanceState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReservedInstanceState.PaymentFailed">
            <summary>
            Constant PaymentFailed for ReservedInstanceState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReservedInstanceState.PaymentPending">
            <summary>
            Constant PaymentPending for ReservedInstanceState
            </summary>
        </member>
        <member name="F:Amazon.EC2.ReservedInstanceState.Retired">
            <summary>
            Constant Retired for ReservedInstanceState
            </summary>
        </member>
        <member name="M:Amazon.EC2.ReservedInstanceState.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.ReservedInstanceState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.ResetImageAttributeName">
            <summary>
            Constants used for properties of type ResetImageAttributeName.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResetImageAttributeName.LaunchPermission">
            <summary>
            Constant LaunchPermission for ResetImageAttributeName
            </summary>
        </member>
        <member name="M:Amazon.EC2.ResetImageAttributeName.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.ResetImageAttributeName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.ResourceType">
            <summary>
            Constants used for properties of type ResourceType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.CustomerGateway">
            <summary>
            Constant CustomerGateway for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.DhcpOptions">
            <summary>
            Constant DhcpOptions for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.Image">
            <summary>
            Constant Image for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.Instance">
            <summary>
            Constant Instance for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.InternetGateway">
            <summary>
            Constant InternetGateway for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.NetworkAcl">
            <summary>
            Constant NetworkAcl for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.NetworkInterface">
            <summary>
            Constant NetworkInterface for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.ReservedInstances">
            <summary>
            Constant ReservedInstances for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.RouteTable">
            <summary>
            Constant RouteTable for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.SecurityGroup">
            <summary>
            Constant SecurityGroup for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.Snapshot">
            <summary>
            Constant Snapshot for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.SpotInstancesRequest">
            <summary>
            Constant SpotInstancesRequest for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.Subnet">
            <summary>
            Constant Subnet for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.Volume">
            <summary>
            Constant Volume for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.Vpc">
            <summary>
            Constant Vpc for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.VpnConnection">
            <summary>
            Constant VpnConnection for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.ResourceType.VpnGateway">
            <summary>
            Constant VpnGateway for ResourceType
            </summary>
        </member>
        <member name="M:Amazon.EC2.ResourceType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.ResourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.RIProductDescription">
            <summary>
            Constants used for properties of type RIProductDescription.
            </summary>
        </member>
        <member name="F:Amazon.EC2.RIProductDescription.LinuxUNIX">
            <summary>
            Constant LinuxUNIX for RIProductDescription
            </summary>
        </member>
        <member name="F:Amazon.EC2.RIProductDescription.LinuxUNIXAmazonVPC">
            <summary>
            Constant LinuxUNIXAmazonVPC for RIProductDescription
            </summary>
        </member>
        <member name="F:Amazon.EC2.RIProductDescription.Windows">
            <summary>
            Constant Windows for RIProductDescription
            </summary>
        </member>
        <member name="F:Amazon.EC2.RIProductDescription.WindowsAmazonVPC">
            <summary>
            Constant WindowsAmazonVPC for RIProductDescription
            </summary>
        </member>
        <member name="M:Amazon.EC2.RIProductDescription.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.RIProductDescription.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.RouteOrigin">
            <summary>
            Constants used for properties of type RouteOrigin.
            </summary>
        </member>
        <member name="F:Amazon.EC2.RouteOrigin.CreateRoute">
            <summary>
            Constant CreateRoute for RouteOrigin
            </summary>
        </member>
        <member name="F:Amazon.EC2.RouteOrigin.CreateRouteTable">
            <summary>
            Constant CreateRouteTable for RouteOrigin
            </summary>
        </member>
        <member name="F:Amazon.EC2.RouteOrigin.EnableVgwRoutePropagation">
            <summary>
            Constant EnableVgwRoutePropagation for RouteOrigin
            </summary>
        </member>
        <member name="M:Amazon.EC2.RouteOrigin.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.RouteOrigin.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.RouteState">
            <summary>
            Constants used for properties of type RouteState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.RouteState.Active">
            <summary>
            Constant Active for RouteState
            </summary>
        </member>
        <member name="F:Amazon.EC2.RouteState.Blackhole">
            <summary>
            Constant Blackhole for RouteState
            </summary>
        </member>
        <member name="M:Amazon.EC2.RouteState.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.RouteState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.RuleAction">
            <summary>
            Constants used for properties of type RuleAction.
            </summary>
        </member>
        <member name="F:Amazon.EC2.RuleAction.Allow">
            <summary>
            Constant Allow for RuleAction
            </summary>
        </member>
        <member name="F:Amazon.EC2.RuleAction.Deny">
            <summary>
            Constant Deny for RuleAction
            </summary>
        </member>
        <member name="M:Amazon.EC2.RuleAction.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.RuleAction.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.ShutdownBehavior">
            <summary>
            Constants used for properties of type ShutdownBehavior.
            </summary>
        </member>
        <member name="F:Amazon.EC2.ShutdownBehavior.Stop">
            <summary>
            Constant Stop for ShutdownBehavior
            </summary>
        </member>
        <member name="F:Amazon.EC2.ShutdownBehavior.Terminate">
            <summary>
            Constant Terminate for ShutdownBehavior
            </summary>
        </member>
        <member name="M:Amazon.EC2.ShutdownBehavior.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.ShutdownBehavior.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.SnapshotAttributeName">
            <summary>
            Constants used for properties of type SnapshotAttributeName.
            </summary>
        </member>
        <member name="F:Amazon.EC2.SnapshotAttributeName.CreateVolumePermission">
            <summary>
            Constant CreateVolumePermission for SnapshotAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.SnapshotAttributeName.ProductCodes">
            <summary>
            Constant ProductCodes for SnapshotAttributeName
            </summary>
        </member>
        <member name="M:Amazon.EC2.SnapshotAttributeName.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.SnapshotAttributeName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.SnapshotState">
            <summary>
            Constants used for properties of type SnapshotState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.SnapshotState.Completed">
            <summary>
            Constant Completed for SnapshotState
            </summary>
        </member>
        <member name="F:Amazon.EC2.SnapshotState.Error">
            <summary>
            Constant Error for SnapshotState
            </summary>
        </member>
        <member name="F:Amazon.EC2.SnapshotState.Pending">
            <summary>
            Constant Pending for SnapshotState
            </summary>
        </member>
        <member name="M:Amazon.EC2.SnapshotState.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.SnapshotState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.SpotInstanceState">
            <summary>
            Constants used for properties of type SpotInstanceState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.SpotInstanceState.Active">
            <summary>
            Constant Active for SpotInstanceState
            </summary>
        </member>
        <member name="F:Amazon.EC2.SpotInstanceState.Cancelled">
            <summary>
            Constant Cancelled for SpotInstanceState
            </summary>
        </member>
        <member name="F:Amazon.EC2.SpotInstanceState.Closed">
            <summary>
            Constant Closed for SpotInstanceState
            </summary>
        </member>
        <member name="F:Amazon.EC2.SpotInstanceState.Failed">
            <summary>
            Constant Failed for SpotInstanceState
            </summary>
        </member>
        <member name="F:Amazon.EC2.SpotInstanceState.Open">
            <summary>
            Constant Open for SpotInstanceState
            </summary>
        </member>
        <member name="M:Amazon.EC2.SpotInstanceState.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.SpotInstanceState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.SpotInstanceType">
            <summary>
            Constants used for properties of type SpotInstanceType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.SpotInstanceType.OneTime">
            <summary>
            Constant OneTime for SpotInstanceType
            </summary>
        </member>
        <member name="F:Amazon.EC2.SpotInstanceType.Persistent">
            <summary>
            Constant Persistent for SpotInstanceType
            </summary>
        </member>
        <member name="M:Amazon.EC2.SpotInstanceType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.SpotInstanceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.StatusName">
            <summary>
            Constants used for properties of type StatusName.
            </summary>
        </member>
        <member name="F:Amazon.EC2.StatusName.Reachability">
            <summary>
            Constant Reachability for StatusName
            </summary>
        </member>
        <member name="M:Amazon.EC2.StatusName.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.StatusName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.StatusType">
            <summary>
            Constants used for properties of type StatusType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.StatusType.Failed">
            <summary>
            Constant Failed for StatusType
            </summary>
        </member>
        <member name="F:Amazon.EC2.StatusType.InsufficientData">
            <summary>
            Constant InsufficientData for StatusType
            </summary>
        </member>
        <member name="F:Amazon.EC2.StatusType.Passed">
            <summary>
            Constant Passed for StatusType
            </summary>
        </member>
        <member name="M:Amazon.EC2.StatusType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.StatusType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.SubnetState">
            <summary>
            Constants used for properties of type SubnetState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.SubnetState.Available">
            <summary>
            Constant Available for SubnetState
            </summary>
        </member>
        <member name="F:Amazon.EC2.SubnetState.Pending">
            <summary>
            Constant Pending for SubnetState
            </summary>
        </member>
        <member name="M:Amazon.EC2.SubnetState.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.SubnetState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.SummaryStatus">
            <summary>
            Constants used for properties of type SummaryStatus.
            </summary>
        </member>
        <member name="F:Amazon.EC2.SummaryStatus.Impaired">
            <summary>
            Constant Impaired for SummaryStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.SummaryStatus.InsufficientData">
            <summary>
            Constant InsufficientData for SummaryStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.SummaryStatus.NotApplicable">
            <summary>
            Constant NotApplicable for SummaryStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.SummaryStatus.Ok">
            <summary>
            Constant Ok for SummaryStatus
            </summary>
        </member>
        <member name="M:Amazon.EC2.SummaryStatus.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.SummaryStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.TelemetryStatus">
            <summary>
            Constants used for properties of type TelemetryStatus.
            </summary>
        </member>
        <member name="F:Amazon.EC2.TelemetryStatus.DOWN">
            <summary>
            Constant DOWN for TelemetryStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.TelemetryStatus.UP">
            <summary>
            Constant UP for TelemetryStatus
            </summary>
        </member>
        <member name="M:Amazon.EC2.TelemetryStatus.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.TelemetryStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.Tenancy">
            <summary>
            Constants used for properties of type Tenancy.
            </summary>
        </member>
        <member name="F:Amazon.EC2.Tenancy.Dedicated">
            <summary>
            Constant Dedicated for Tenancy
            </summary>
        </member>
        <member name="F:Amazon.EC2.Tenancy.Default">
            <summary>
            Constant Default for Tenancy
            </summary>
        </member>
        <member name="M:Amazon.EC2.Tenancy.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.Tenancy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.VirtualizationType">
            <summary>
            Constants used for properties of type VirtualizationType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VirtualizationType.Hvm">
            <summary>
            Constant Hvm for VirtualizationType
            </summary>
        </member>
        <member name="F:Amazon.EC2.VirtualizationType.Paravirtual">
            <summary>
            Constant Paravirtual for VirtualizationType
            </summary>
        </member>
        <member name="M:Amazon.EC2.VirtualizationType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.VirtualizationType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.VolumeAttachmentState">
            <summary>
            Constants used for properties of type VolumeAttachmentState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeAttachmentState.Attached">
            <summary>
            Constant Attached for VolumeAttachmentState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeAttachmentState.Attaching">
            <summary>
            Constant Attaching for VolumeAttachmentState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeAttachmentState.Detached">
            <summary>
            Constant Detached for VolumeAttachmentState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeAttachmentState.Detaching">
            <summary>
            Constant Detaching for VolumeAttachmentState
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeAttachmentState.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeAttachmentState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.VolumeAttributeName">
            <summary>
            Constants used for properties of type VolumeAttributeName.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeAttributeName.AutoEnableIO">
            <summary>
            Constant AutoEnableIO for VolumeAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeAttributeName.ProductCodes">
            <summary>
            Constant ProductCodes for VolumeAttributeName
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeAttributeName.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeAttributeName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.VolumeState">
            <summary>
            Constants used for properties of type VolumeState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeState.Available">
            <summary>
            Constant Available for VolumeState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeState.Creating">
            <summary>
            Constant Creating for VolumeState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeState.Deleted">
            <summary>
            Constant Deleted for VolumeState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeState.Deleting">
            <summary>
            Constant Deleting for VolumeState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeState.Error">
            <summary>
            Constant Error for VolumeState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeState.InUse">
            <summary>
            Constant InUse for VolumeState
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeState.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.VolumeStatusInfoStatus">
            <summary>
            Constants used for properties of type VolumeStatusInfoStatus.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeStatusInfoStatus.Impaired">
            <summary>
            Constant Impaired for VolumeStatusInfoStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeStatusInfoStatus.InsufficientData">
            <summary>
            Constant InsufficientData for VolumeStatusInfoStatus
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeStatusInfoStatus.Ok">
            <summary>
            Constant Ok for VolumeStatusInfoStatus
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeStatusInfoStatus.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeStatusInfoStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.VolumeStatusName">
            <summary>
            Constants used for properties of type VolumeStatusName.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeStatusName.IoEnabled">
            <summary>
            Constant IoEnabled for VolumeStatusName
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeStatusName.IoPerformance">
            <summary>
            Constant IoPerformance for VolumeStatusName
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeStatusName.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeStatusName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.VolumeType">
            <summary>
            Constants used for properties of type VolumeType.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeType.Gp2">
            <summary>
            Constant Gp2 for VolumeType
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeType.Io1">
            <summary>
            Constant Io1 for VolumeType
            </summary>
        </member>
        <member name="F:Amazon.EC2.VolumeType.Standard">
            <summary>
            Constant Standard for VolumeType
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.VolumeType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.VpcAttributeName">
            <summary>
            Constants used for properties of type VpcAttributeName.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpcAttributeName.EnableDnsHostnames">
            <summary>
            Constant EnableDnsHostnames for VpcAttributeName
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpcAttributeName.EnableDnsSupport">
            <summary>
            Constant EnableDnsSupport for VpcAttributeName
            </summary>
        </member>
        <member name="M:Amazon.EC2.VpcAttributeName.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.VpcAttributeName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.VpcState">
            <summary>
            Constants used for properties of type VpcState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpcState.Available">
            <summary>
            Constant Available for VpcState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpcState.Pending">
            <summary>
            Constant Pending for VpcState
            </summary>
        </member>
        <member name="M:Amazon.EC2.VpcState.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.VpcState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.VpnState">
            <summary>
            Constants used for properties of type VpnState.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpnState.Available">
            <summary>
            Constant Available for VpnState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpnState.Deleted">
            <summary>
            Constant Deleted for VpnState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpnState.Deleting">
            <summary>
            Constant Deleting for VpnState
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpnState.Pending">
            <summary>
            Constant Pending for VpnState
            </summary>
        </member>
        <member name="M:Amazon.EC2.VpnState.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.VpnState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.VpnStaticRouteSource">
            <summary>
            Constants used for properties of type VpnStaticRouteSource.
            </summary>
        </member>
        <member name="F:Amazon.EC2.VpnStaticRouteSource.Static">
            <summary>
            Constant Static for VpnStaticRouteSource
            </summary>
        </member>
        <member name="M:Amazon.EC2.VpnStaticRouteSource.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.EC2.VpnStaticRouteSource.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.EC2.Util.S3UploadPolicy">
            <summary>
            This class represents S3 upload policy. Policy string
            representaion and signature to be used within EC2 bundling API.
            </summary>
        </member>
        <member name="M:Amazon.EC2.Util.S3UploadPolicy.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            S3 Upload policy to be used by EC2 API.
            </summary>
            <param name="awsSecretAccessKey">Secret Key of the signer of the policy</param>
            <param name="bucketName">Bucket name to upload</param>
            <param name="prefix">Prefix for the object keys</param>
            <param name="expireInMinutes">Expire, minutes from now</param>
        </member>
        <member name="P:Amazon.EC2.Util.S3UploadPolicy.PolicyString">
            <summary>
            Base64 representation of the serialized policy.
            Use policy generated by this method
            for passing to EC2 bunding calls.
            </summary>
            <returns>Base64 policy</returns>
        </member>
        <member name="P:Amazon.EC2.Util.S3UploadPolicy.PolicySignature">
            <summary>
            Policy signature in base64 format
            Use signature generated by this method
            for passing to EC2 bunding calls along with policy.
            </summary>
            <returns>Base64 signature</returns>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient">
             <summary>
             Implementation for accessing ElasticLoadBalancing
            
             Elastic Load Balancing 
             <para>
             Elastic Load Balancing is a way to automatically distribute incoming web traffic across
             applications that run on multiple Amazon Elastic Compute Cloud (Amazon EC2) instances.
             
             </para>
              
             <para>
             You can create, access, and manage Elastic Load Balancing using the AWS Management
             Console or the Elastic Load Balancing API. For more information about Elastic Load
             Balancing interfaces, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/SvcIntro_Interfaces.html">Accessing
             Elastic Load Balancing</a>.
             </para>
              
             <para>
             This reference guide contains documentation for the Query API and the AWS command
             line interface commands, to manage Elastic Load Balancing. 
             </para>
              
             <para>
             For detailed information about Elastic Load Balancing features and their associated
             actions or commands, go to <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/UserScenarios.html">Managing
             Load Balancers</a> in the <i>Elastic Load Balancing Developer Guide</i>.
             </para>
              
             <para>
             This reference guide is based on the current WSDL, which is available at: <a href="http://ec2-downloads.s3.amazonaws.com/ElasticLoadBalancing.wsdl"></a>.
             
             </para>
              
             <para>
             <b>Endpoints</b>
             </para>
              
             <para>
             The examples in this guide assume that your load balancers are created in the US East
             (Northern Virginia) region and use us-east-1 as the endpoint.
             </para>
              
             <para>
             You can create your load balancers in other AWS regions. For information about regions
             and endpoints supported by Elastic Load Balancing, see <a href="http://docs.aws.amazon.com/general/latest/gr/index.html?rande.html">Regions
             and Endpoints</a> in the Amazon Web Services General Reference. 
             </para>
             </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing">
             <summary>
             Interface for accessing ElasticLoadBalancing
            
             Elastic Load Balancing 
             <para>
             Elastic Load Balancing is a way to automatically distribute incoming web traffic across
             applications that run on multiple Amazon Elastic Compute Cloud (Amazon EC2) instances.
             
             </para>
              
             <para>
             You can create, access, and manage Elastic Load Balancing using the AWS Management
             Console or the Elastic Load Balancing API. For more information about Elastic Load
             Balancing interfaces, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/SvcIntro_Interfaces.html">Accessing
             Elastic Load Balancing</a>.
             </para>
              
             <para>
             This reference guide contains documentation for the Query API and the AWS command
             line interface commands, to manage Elastic Load Balancing. 
             </para>
              
             <para>
             For detailed information about Elastic Load Balancing features and their associated
             actions or commands, go to <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/UserScenarios.html">Managing
             Load Balancers</a> in the <i>Elastic Load Balancing Developer Guide</i>.
             </para>
              
             <para>
             This reference guide is based on the current WSDL, which is available at: <a href="http://ec2-downloads.s3.amazonaws.com/ElasticLoadBalancing.wsdl"></a>.
             
             </para>
              
             <para>
             <b>Endpoints</b>
             </para>
              
             <para>
             The examples in this guide assume that your load balancers are created in the US East
             (Northern Virginia) region and use us-east-1 as the endpoint.
             </para>
              
             <para>
             You can create your load balancers in other AWS regions. For information about regions
             and endpoints supported by Elastic Load Balancing, see <a href="http://docs.aws.amazon.com/general/latest/gr/index.html?rande.html">Regions
             and Endpoints</a> in the Amazon Web Services General Reference. 
             </para>
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.AddTagsAsync(Amazon.ElasticLoadBalancing.Model.AddTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AddTags operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.ApplySecurityGroupsToLoadBalancerAsync(Amazon.ElasticLoadBalancing.Model.ApplySecurityGroupsToLoadBalancerRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ApplySecurityGroupsToLoadBalancer operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ApplySecurityGroupsToLoadBalancer operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.AttachLoadBalancerToSubnetsAsync(Amazon.ElasticLoadBalancing.Model.AttachLoadBalancerToSubnetsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachLoadBalancerToSubnets operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachLoadBalancerToSubnets operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.ConfigureHealthCheckAsync(Amazon.ElasticLoadBalancing.Model.ConfigureHealthCheckRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ConfigureHealthCheck operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ConfigureHealthCheck operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.CreateAppCookieStickinessPolicyAsync(Amazon.ElasticLoadBalancing.Model.CreateAppCookieStickinessPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateAppCookieStickinessPolicy operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateAppCookieStickinessPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.CreateLBCookieStickinessPolicyAsync(Amazon.ElasticLoadBalancing.Model.CreateLBCookieStickinessPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateLBCookieStickinessPolicy operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateLBCookieStickinessPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.CreateLoadBalancerAsync(Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateLoadBalancer operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateLoadBalancer operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.CreateLoadBalancerListenersAsync(Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerListenersRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateLoadBalancerListeners operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateLoadBalancerListeners operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.CreateLoadBalancerPolicyAsync(Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateLoadBalancerPolicy operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateLoadBalancerPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.DeleteLoadBalancerAsync(Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteLoadBalancer operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLoadBalancer operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.DeleteLoadBalancerListenersAsync(Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerListenersRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteLoadBalancerListeners operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLoadBalancerListeners operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.DeleteLoadBalancerPolicyAsync(Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteLoadBalancerPolicy operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLoadBalancerPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.DeregisterInstancesFromLoadBalancerAsync(Amazon.ElasticLoadBalancing.Model.DeregisterInstancesFromLoadBalancerRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeregisterInstancesFromLoadBalancer operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeregisterInstancesFromLoadBalancer operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.DescribeInstanceHealthAsync(Amazon.ElasticLoadBalancing.Model.DescribeInstanceHealthRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeInstanceHealth operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeInstanceHealth operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.DescribeLoadBalancerAttributesAsync(Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeLoadBalancerAttributes operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeLoadBalancerAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.DescribeLoadBalancerPoliciesAsync(Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeLoadBalancerPolicies operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeLoadBalancerPolicies operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.DescribeLoadBalancerPolicyTypesAsync(Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPolicyTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeLoadBalancerPolicyTypes operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeLoadBalancerPolicyTypes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.DescribeLoadBalancersAsync(Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancersRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeLoadBalancers operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeLoadBalancers operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.DescribeTagsAsync(Amazon.ElasticLoadBalancing.Model.DescribeTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeTags operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.DetachLoadBalancerFromSubnetsAsync(Amazon.ElasticLoadBalancing.Model.DetachLoadBalancerFromSubnetsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachLoadBalancerFromSubnets operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachLoadBalancerFromSubnets operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.DisableAvailabilityZonesForLoadBalancerAsync(Amazon.ElasticLoadBalancing.Model.DisableAvailabilityZonesForLoadBalancerRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableAvailabilityZonesForLoadBalancer operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableAvailabilityZonesForLoadBalancer operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.EnableAvailabilityZonesForLoadBalancerAsync(Amazon.ElasticLoadBalancing.Model.EnableAvailabilityZonesForLoadBalancerRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableAvailabilityZonesForLoadBalancer operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableAvailabilityZonesForLoadBalancer operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.ModifyLoadBalancerAttributesAsync(Amazon.ElasticLoadBalancing.Model.ModifyLoadBalancerAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyLoadBalancerAttributes operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyLoadBalancerAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.RegisterInstancesWithLoadBalancerAsync(Amazon.ElasticLoadBalancing.Model.RegisterInstancesWithLoadBalancerRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RegisterInstancesWithLoadBalancer operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RegisterInstancesWithLoadBalancer operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.RemoveTagsAsync(Amazon.ElasticLoadBalancing.Model.RemoveTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RemoveTags operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemoveTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.SetLoadBalancerListenerSSLCertificateAsync(Amazon.ElasticLoadBalancing.Model.SetLoadBalancerListenerSSLCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetLoadBalancerListenerSSLCertificate operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetLoadBalancerListenerSSLCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.SetLoadBalancerPoliciesForBackendServerAsync(Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesForBackendServerRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetLoadBalancerPoliciesForBackendServer operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetLoadBalancerPoliciesForBackendServer operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing.SetLoadBalancerPoliciesOfListenerAsync(Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesOfListenerRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetLoadBalancerPoliciesOfListener operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetLoadBalancerPoliciesOfListener operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonElasticLoadBalancingClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonElasticLoadBalancingClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingConfig)">
            <summary>
            Constructs AmazonElasticLoadBalancingClient with AWS Credentials and an
            AmazonElasticLoadBalancingClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonElasticLoadBalancingClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonElasticLoadBalancingClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonElasticLoadBalancingClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.#ctor(System.String,System.String,Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingConfig)">
            <summary>
            Constructs AmazonElasticLoadBalancingClient with AWS Access Key ID, AWS Secret Key and an
            AmazonElasticLoadBalancingClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonElasticLoadBalancingClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonElasticLoadBalancingClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonElasticLoadBalancingClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.#ctor(System.String,System.String,System.String,Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingConfig)">
            <summary>
            Constructs AmazonElasticLoadBalancingClient with AWS Access Key ID, AWS Secret Key and an
            AmazonElasticLoadBalancingClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonElasticLoadBalancingClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.AddTagsAsync(Amazon.ElasticLoadBalancing.Model.AddTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AddTags operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.ApplySecurityGroupsToLoadBalancerAsync(Amazon.ElasticLoadBalancing.Model.ApplySecurityGroupsToLoadBalancerRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ApplySecurityGroupsToLoadBalancer operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ApplySecurityGroupsToLoadBalancer operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.AttachLoadBalancerToSubnetsAsync(Amazon.ElasticLoadBalancing.Model.AttachLoadBalancerToSubnetsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AttachLoadBalancerToSubnets operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachLoadBalancerToSubnets operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.ConfigureHealthCheckAsync(Amazon.ElasticLoadBalancing.Model.ConfigureHealthCheckRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ConfigureHealthCheck operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ConfigureHealthCheck operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.CreateAppCookieStickinessPolicyAsync(Amazon.ElasticLoadBalancing.Model.CreateAppCookieStickinessPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateAppCookieStickinessPolicy operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateAppCookieStickinessPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.CreateLBCookieStickinessPolicyAsync(Amazon.ElasticLoadBalancing.Model.CreateLBCookieStickinessPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateLBCookieStickinessPolicy operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateLBCookieStickinessPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.CreateLoadBalancerAsync(Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateLoadBalancer operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateLoadBalancer operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.CreateLoadBalancerListenersAsync(Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerListenersRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateLoadBalancerListeners operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateLoadBalancerListeners operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.CreateLoadBalancerPolicyAsync(Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateLoadBalancerPolicy operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateLoadBalancerPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.DeleteLoadBalancerAsync(Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteLoadBalancer operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLoadBalancer operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.DeleteLoadBalancerListenersAsync(Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerListenersRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteLoadBalancerListeners operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLoadBalancerListeners operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.DeleteLoadBalancerPolicyAsync(Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteLoadBalancerPolicy operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLoadBalancerPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.DeregisterInstancesFromLoadBalancerAsync(Amazon.ElasticLoadBalancing.Model.DeregisterInstancesFromLoadBalancerRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeregisterInstancesFromLoadBalancer operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeregisterInstancesFromLoadBalancer operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.DescribeInstanceHealthAsync(Amazon.ElasticLoadBalancing.Model.DescribeInstanceHealthRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeInstanceHealth operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeInstanceHealth operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.DescribeLoadBalancerAttributesAsync(Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeLoadBalancerAttributes operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeLoadBalancerAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.DescribeLoadBalancerPoliciesAsync(Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeLoadBalancerPolicies operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeLoadBalancerPolicies operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.DescribeLoadBalancerPolicyTypesAsync(Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPolicyTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeLoadBalancerPolicyTypes operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeLoadBalancerPolicyTypes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.DescribeLoadBalancersAsync(Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancersRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeLoadBalancers operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeLoadBalancers operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.DescribeTagsAsync(Amazon.ElasticLoadBalancing.Model.DescribeTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeTags operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.DetachLoadBalancerFromSubnetsAsync(Amazon.ElasticLoadBalancing.Model.DetachLoadBalancerFromSubnetsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetachLoadBalancerFromSubnets operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachLoadBalancerFromSubnets operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.DisableAvailabilityZonesForLoadBalancerAsync(Amazon.ElasticLoadBalancing.Model.DisableAvailabilityZonesForLoadBalancerRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableAvailabilityZonesForLoadBalancer operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableAvailabilityZonesForLoadBalancer operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.EnableAvailabilityZonesForLoadBalancerAsync(Amazon.ElasticLoadBalancing.Model.EnableAvailabilityZonesForLoadBalancerRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableAvailabilityZonesForLoadBalancer operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableAvailabilityZonesForLoadBalancer operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.ModifyLoadBalancerAttributesAsync(Amazon.ElasticLoadBalancing.Model.ModifyLoadBalancerAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ModifyLoadBalancerAttributes operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyLoadBalancerAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.RegisterInstancesWithLoadBalancerAsync(Amazon.ElasticLoadBalancing.Model.RegisterInstancesWithLoadBalancerRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RegisterInstancesWithLoadBalancer operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RegisterInstancesWithLoadBalancer operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.RemoveTagsAsync(Amazon.ElasticLoadBalancing.Model.RemoveTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RemoveTags operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemoveTags operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.SetLoadBalancerListenerSSLCertificateAsync(Amazon.ElasticLoadBalancing.Model.SetLoadBalancerListenerSSLCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetLoadBalancerListenerSSLCertificate operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetLoadBalancerListenerSSLCertificate operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.SetLoadBalancerPoliciesForBackendServerAsync(Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesForBackendServerRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetLoadBalancerPoliciesForBackendServer operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetLoadBalancerPoliciesForBackendServer operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingClient.SetLoadBalancerPoliciesOfListenerAsync(Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesOfListenerRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetLoadBalancerPoliciesOfListener operation.
            <seealso cref="T:Amazon.ElasticLoadBalancing.IAmazonElasticLoadBalancing"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetLoadBalancerPoliciesOfListener operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingConfig">
            <summary>
            Configuration for accessing Amazon ElasticLoadBalancing service
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.AccessLog">
            <summary>
            The <code>AccessLog</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.AccessLog.EmitInterval">
            <summary>
            Gets and sets the property EmitInterval. 
            <para>
            The interval for publishing the access logs. You can specify an interval of either
            5 minutes or 60 minutes.
            </para>
             
            <para>
            Default: 60 minutes
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.AccessLog.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Specifies whether access log is enabled for the load balancer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.AccessLog.S3BucketName">
            <summary>
            Gets and sets the property S3BucketName. 
            <para>
            The name of the Amazon S3 bucket where the access logs are stored.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.AccessLog.S3BucketPrefix">
            <summary>
            Gets and sets the property S3BucketPrefix. 
            <para>
            The logical hierarchy you created for your Amazon S3 bucket, for example <code>my-bucket-prefix/prod</code>.
            If the prefix is not provided, the log is placed at the root level of the bucket.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.AccessPointNotFoundException">
            <summary>
             ElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.AccessPointNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new AccessPointNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.AddTagsRequest">
            <summary>
            Container for the parameters to the AddTags operation.
            Adds one or more tags for the specified load balancer. Each load balancer can have
            a maximum of 10 tags. Each tag consists of a key and an optional value.
            
             
            <para>
            Tag keys must be unique for each load balancer. If a tag with the same key is already
            associated with the load balancer, this action will update the value of the key.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/TerminologyandKeyConcepts.html#tagging-elb">Tagging</a>
            in the <i>Elastic Load Balancing Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingRequest">
            <summary>
            Base class for ElasticLoadBalancing operation requests.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.AddTagsRequest.LoadBalancerNames">
            <summary>
            Gets and sets the property LoadBalancerNames. 
            <para>
            The name of the load balancer to tag. You can specify a maximum of one load balancer
            name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.AddTagsRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags for each load balancer.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.AddTagsResponse">
            <summary>
            Configuration for accessing Amazon AddTags service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.AddTagsResult">
            <summary>
            The output for the <a>AddTags</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.AddTagsResponse.AddTagsResult">
            <summary>
            Gets and sets the AddTagsResult property.
            Represents the output of a AddTags operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.AppCookieStickinessPolicy">
            <summary>
            The AppCookieStickinessPolicy data type.
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.AppCookieStickinessPolicy.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.AppCookieStickinessPolicy.#ctor(System.String,System.String)">
            <summary>
            Instantiates AppCookieStickinessPolicy with the parameterized properties
            </summary>
            <param name="policyName">The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer. </param>
            <param name="cookieName">The name of the application cookie used for stickiness. </param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.AppCookieStickinessPolicy.CookieName">
            <summary>
            Gets and sets the property CookieName. 
            <para>
            The name of the application cookie used for stickiness. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.AppCookieStickinessPolicy.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The mnemonic name for the policy being created. The name must be unique within a set
            of policies for this load balancer. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.ApplySecurityGroupsToLoadBalancerRequest">
            <summary>
            Container for the parameters to the ApplySecurityGroupsToLoadBalancer operation.
            Associates one or more security groups with your load balancer in Amazon Virtual
            Private Cloud (Amazon VPC). The provided security group IDs will override any currently
            applied security groups. 
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/USVPC_ApplySG.html">Manage
            Security Groups in Amazon VPC</a> in the <i>Elastic Load Balancing Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.ApplySecurityGroupsToLoadBalancerRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The name associated with the load balancer. The name must be unique within the set
            of load balancers associated with your AWS account. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.ApplySecurityGroupsToLoadBalancerRequest.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
             A list of security group IDs to associate with your load balancer in VPC. The security
            group IDs must be provided as the ID and not the security group name (For example,
            sg-1234). 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.ApplySecurityGroupsToLoadBalancerResponse">
            <summary>
            Configuration for accessing Amazon ApplySecurityGroupsToLoadBalancer service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.ApplySecurityGroupsToLoadBalancerResult">
            <summary>
            The out for the <a>ApplySecurityGroupsToLoadBalancer</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.ApplySecurityGroupsToLoadBalancerResult.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
             A list of security group IDs associated with your load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.ApplySecurityGroupsToLoadBalancerResponse.ApplySecurityGroupsToLoadBalancerResult">
            <summary>
            Gets and sets the ApplySecurityGroupsToLoadBalancerResult property.
            Represents the output of a ApplySecurityGroupsToLoadBalancer operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.AttachLoadBalancerToSubnetsRequest">
            <summary>
            Container for the parameters to the AttachLoadBalancerToSubnets operation.
            Adds one or more subnets to the set of configured subnets in the Amazon Virtual Private
            Cloud (Amazon VPC) for the load balancer. 
            
             
            <para>
             The load balancers evenly distribute requests across all of the registered subnets.
            For more information, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/UserScenariosForVPC.html">Deploy
            Elastic Load Balancing in Amazon VPC</a> in the <i>Elastic Load Balancing Developer
            Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.AttachLoadBalancerToSubnetsRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The name associated with the load balancer. The name must be unique within the set
            of load balancers associated with your AWS account. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.AttachLoadBalancerToSubnetsRequest.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
             A list of subnet IDs to add for the load balancer. You can add only one subnet per
            Availability Zone. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.AttachLoadBalancerToSubnetsResponse">
            <summary>
            Configuration for accessing Amazon AttachLoadBalancerToSubnets service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.AttachLoadBalancerToSubnetsResult">
            <summary>
            The output for the <a>AttachLoadBalancerToSubnets</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.AttachLoadBalancerToSubnetsResult.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
             A list of subnet IDs attached to the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.AttachLoadBalancerToSubnetsResponse.AttachLoadBalancerToSubnetsResult">
            <summary>
            Gets and sets the AttachLoadBalancerToSubnetsResult property.
            Represents the output of a AttachLoadBalancerToSubnets operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.BackendServerDescription">
            <summary>
            This data type is used as a response element in the <a>DescribeLoadBalancers</a>
            action to describe the configuration of the back-end server.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.BackendServerDescription.InstancePort">
            <summary>
            Gets and sets the property InstancePort. 
            <para>
             Provides the port on which the back-end server is listening. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.BackendServerDescription.PolicyNames">
            <summary>
            Gets and sets the property PolicyNames. 
            <para>
             Provides a list of policy names enabled for the back-end server. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.CertificateNotFoundException">
            <summary>
             ElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.CertificateNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new CertificateNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.ConfigureHealthCheckRequest">
            <summary>
            Container for the parameters to the ConfigureHealthCheck operation.
            Specifies the health check settings to use for evaluating the health state of your
            back-end instances. 
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/TerminologyandKeyConcepts.html#healthcheck">Health
            Check</a> in the <i>Elastic Load Balancing Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.ConfigureHealthCheckRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.ConfigureHealthCheckRequest.#ctor(System.String,Amazon.ElasticLoadBalancing.Model.HealthCheck)">
            <summary>
            Instantiates ConfigureHealthCheckRequest with the parameterized properties
            </summary>
            <param name="loadBalancerName"> The mnemonic name associated with the load balancer. The name must be unique within the set of load balancers associated with your AWS account. </param>
            <param name="healthCheck"> A structure containing the configuration information for the new healthcheck. </param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.ConfigureHealthCheckRequest.HealthCheck">
            <summary>
            Gets and sets the property HealthCheck. 
            <para>
             A structure containing the configuration information for the new healthcheck. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.ConfigureHealthCheckRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The mnemonic name associated with the load balancer. The name must be unique within
            the set of load balancers associated with your AWS account. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.ConfigureHealthCheckResponse">
            <summary>
            Configuration for accessing Amazon ConfigureHealthCheck service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.ConfigureHealthCheckResult">
            <summary>
            The output for the <a>ConfigureHealthCheck</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.ConfigureHealthCheckResult.HealthCheck">
            <summary>
            Gets and sets the property HealthCheck. 
            <para>
             The updated healthcheck for the instances. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.ConfigureHealthCheckResponse.ConfigureHealthCheckResult">
            <summary>
            Gets and sets the ConfigureHealthCheckResult property.
            Represents the output of a ConfigureHealthCheck operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.ConnectionDraining">
            <summary>
            The <code>ConnectionDraining</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.ConnectionDraining.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Specifies whether connection draining is enabled for the load balancer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.ConnectionDraining.Timeout">
            <summary>
            Gets and sets the property Timeout. 
            <para>
            Specifies the maximum time (in seconds) to keep the existing connections open before
            deregistering the instances.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.ConnectionSettings">
            <summary>
            The <code>ConnectionSettings</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.ConnectionSettings.IdleTimeout">
            <summary>
            Gets and sets the property IdleTimeout. 
            <para>
            Specifies the time (in seconds) the connection is allowed to be idle (no data has
            been sent over the connection) before it is closed by the load balancer.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.CreateAppCookieStickinessPolicyRequest">
            <summary>
            Container for the parameters to the CreateAppCookieStickinessPolicy operation.
            Generates a stickiness policy with sticky session lifetimes that follow that of an
            application-generated cookie. This policy can be associated only with HTTP/HTTPS listeners.
            
            
             
            <para>
             This policy is similar to the policy created by <a>CreateLBCookieStickinessPolicy</a>,
            except that the lifetime of the special Elastic Load Balancing cookie follows the
            lifetime of the application-generated cookie specified in the policy configuration.
            The load balancer only inserts a new stickiness cookie when the application response
            includes a new application cookie. 
            </para>
             
            <para>
             If the application cookie is explicitly removed or expires, the session stops being
            sticky until a new application cookie is issued. 
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/US_StickySessions.html#US_EnableStickySessionsAppCookies">Enabling
            Application-Controlled Session Stickiness</a> in the <i>Elastic Load Balancing Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.CreateAppCookieStickinessPolicyRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.CreateAppCookieStickinessPolicyRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Instantiates CreateAppCookieStickinessPolicyRequest with the parameterized properties
            </summary>
            <param name="loadBalancerName"> The name of the load balancer. </param>
            <param name="policyName"> The name of the policy being created. The name must be unique within the set of policies for this load balancer. </param>
            <param name="cookieName"> Name of the application cookie used for stickiness. </param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateAppCookieStickinessPolicyRequest.CookieName">
            <summary>
            Gets and sets the property CookieName. 
            <para>
             Name of the application cookie used for stickiness. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateAppCookieStickinessPolicyRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The name of the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateAppCookieStickinessPolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
             The name of the policy being created. The name must be unique within the set of policies
            for this load balancer. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.CreateAppCookieStickinessPolicyResponse">
            <summary>
            Configuration for accessing Amazon CreateAppCookieStickinessPolicy service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.CreateAppCookieStickinessPolicyResult">
            <summary>
            The output for the <a>CreateAppCookieStickinessPolicy</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateAppCookieStickinessPolicyResponse.CreateAppCookieStickinessPolicyResult">
            <summary>
            Gets and sets the CreateAppCookieStickinessPolicyResult property.
            Represents the output of a CreateAppCookieStickinessPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.CreateLBCookieStickinessPolicyRequest">
            <summary>
            Container for the parameters to the CreateLBCookieStickinessPolicy operation.
            Generates a stickiness policy with sticky session lifetimes controlled by the lifetime
            of the browser (user-agent) or a specified expiration period. This policy can be associated
            only with HTTP/HTTPS listeners. 
            
             
            <para>
             When a load balancer implements this policy, the load balancer uses a special cookie
            to track the backend server instance for each request. When the load balancer receives
            a request, it first checks to see if this cookie is present in the request. If so,
            the load balancer sends the request to the application server specified in the cookie.
            If not, the load balancer sends the request to a server that is chosen based on the
            existing load balancing algorithm. 
            </para>
             
            <para>
             A cookie is inserted into the response for binding subsequent requests from the same
            user to that server. The validity of the cookie is based on the cookie expiration
            time, which is specified in the policy configuration. 
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/US_StickySessions.html#US_EnableStickySessionsLBCookies">Enabling
            Duration-Based Session Stickiness</a> in the <i>Elastic Load Balancing Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.CreateLBCookieStickinessPolicyRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.CreateLBCookieStickinessPolicyRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates CreateLBCookieStickinessPolicyRequest with the parameterized properties
            </summary>
            <param name="loadBalancerName"> The name associated with the load balancer. </param>
            <param name="policyName"> The name of the policy being created. The name must be unique within the set of policies for this load balancer. </param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLBCookieStickinessPolicyRequest.CookieExpirationPeriod">
            <summary>
            Gets and sets the property CookieExpirationPeriod. 
            <para>
             The time period in seconds after which the cookie should be considered stale. Not
            specifying this parameter indicates that the sticky session will last for the duration
            of the browser session. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLBCookieStickinessPolicyRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The name associated with the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLBCookieStickinessPolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
             The name of the policy being created. The name must be unique within the set of policies
            for this load balancer. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.CreateLBCookieStickinessPolicyResponse">
            <summary>
            Configuration for accessing Amazon CreateLBCookieStickinessPolicy service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.CreateLBCookieStickinessPolicyResult">
            <summary>
            The output for the <a>CreateLBCookieStickinessPolicy</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLBCookieStickinessPolicyResponse.CreateLBCookieStickinessPolicyResult">
            <summary>
            Gets and sets the CreateLBCookieStickinessPolicyResult property.
            Represents the output of a CreateLBCookieStickinessPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerListenersRequest">
            <summary>
            Container for the parameters to the CreateLoadBalancerListeners operation.
            Creates one or more listeners on a load balancer for the specified port. If a listener
            with the given port does not already exist, it will be created; otherwise, the properties
            of the new listener must match the properties of the existing listener. 
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/us-add-listener.html">Add
            a Listener to Your Load Balancer</a> in the <i>Elastic Load Balancing Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerListenersRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerListenersRequest.#ctor(System.String,System.Collections.Generic.List{Amazon.ElasticLoadBalancing.Model.Listener})">
            <summary>
            Instantiates CreateLoadBalancerListenersRequest with the parameterized properties
            </summary>
            <param name="loadBalancerName"> The name of the load balancer. </param>
            <param name="listeners"> A list of <code>LoadBalancerPort</code>, <code>InstancePort</code>, <code>Protocol</code>, <code>InstanceProtocol</code>, and <code>SSLCertificateId</code> items. </param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerListenersRequest.Listeners">
            <summary>
            Gets and sets the property Listeners. 
            <para>
             A list of <code>LoadBalancerPort</code>, <code>InstancePort</code>, <code>Protocol</code>,
            <code>InstanceProtocol</code>, and <code>SSLCertificateId</code> items. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerListenersRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The name of the load balancer. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerListenersResponse">
            <summary>
            Configuration for accessing Amazon CreateLoadBalancerListeners service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerListenersResult">
            <summary>
            The output for the <a>CreateLoadBalancerListeners</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerListenersResponse.CreateLoadBalancerListenersResult">
            <summary>
            Gets and sets the CreateLoadBalancerListenersResult property.
            Represents the output of a CreateLoadBalancerListeners operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerPolicyRequest">
            <summary>
            Container for the parameters to the CreateLoadBalancerPolicy operation.
            Creates a new policy that contains the necessary attributes depending on the policy
            type. Policies are settings that are saved for your load balancer and that can be
            applied to the front-end listener, or the back-end application server, depending on
            your policy type.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerPolicyRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The name associated with the LoadBalancer for which the policy is being created.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerPolicyRequest.PolicyAttributes">
            <summary>
            Gets and sets the property PolicyAttributes. 
            <para>
             A list of attributes associated with the policy being created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerPolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
             The name of the load balancer policy being created. The name must be unique within
            the set of policies for this load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerPolicyRequest.PolicyTypeName">
            <summary>
            Gets and sets the property PolicyTypeName. 
            <para>
             The name of the base policy type being used to create this policy. To get the list
            of policy types, use the <a>DescribeLoadBalancerPolicyTypes</a> action. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerPolicyResponse">
            <summary>
            Configuration for accessing Amazon CreateLoadBalancerPolicy service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerPolicyResult">
            <summary>
            The output for the <a>CreateLoadBalancerPolicy</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerPolicyResponse.CreateLoadBalancerPolicyResult">
            <summary>
            Gets and sets the CreateLoadBalancerPolicyResult property.
            Represents the output of a CreateLoadBalancerPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerRequest">
            <summary>
            Container for the parameters to the CreateLoadBalancer operation.
            Creates a new load balancer. 
            
             
            <para>
             After the call has completed successfully, a new load balancer is created with a
            unique Domain Name Service (DNS) name. The DNS name includes the name of the AWS region
            in which the load balance was created. For example, if your load balancer was created
            in the United States, the DNS name might end with either of the following:
            </para>
             <ul> <li> <i>us-east-1.elb.amazonaws.com</i> (for the Northern Virginia region) </li>
            <li> <i>us-west-1.elb.amazonaws.com</i> (for the Northern California region) </li>
            </ul> 
            <para>
            For information about the AWS regions supported by Elastic Load Balancing, see <a
            href="http://docs.aws.amazon.com/general/latest/gr/rande.html#elb_region">Regions
            and Endpoints</a>.
            </para>
             
            <para>
            You can create up to 20 load balancers per region per account.
            </para>
             
            <para>
            Elastic Load Balancing supports load balancing your Amazon EC2 instances launched
            within any one of the following platforms:
            </para>
             <ul> <li> <i>EC2-Classic</i> 
            <para>
            For information on creating and managing your load balancers in EC2-Classic, see <a
            href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/UserScenariosForEC2.html">Deploy
            Elastic Load Balancing in Amazon EC2-Classic</a>.
            </para>
             </li> <li> <i>EC2-VPC</i> 
            <para>
            For information on creating and managing your load balancers in EC2-VPC, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/UserScenariosForVPC.html">Deploy
            Elastic Load Balancing in Amazon VPC</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerRequest.#ctor(System.String)">
            <summary>
            Instantiates CreateLoadBalancerRequest with the parameterized properties
            </summary>
            <param name="loadBalancerName"> The name associated with the load balancer. The name must be unique within your set of load balancers, must have a maximum of 32 characters, and must only contain alphanumeric characters or hyphens. </param>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerRequest.#ctor(System.String,System.Collections.Generic.List{Amazon.ElasticLoadBalancing.Model.Listener},System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates CreateLoadBalancerRequest with the parameterized properties
            </summary>
            <param name="loadBalancerName"> The name associated with the load balancer. The name must be unique within your set of load balancers, must have a maximum of 32 characters, and must only contain alphanumeric characters or hyphens. </param>
            <param name="listeners"> A list of the following tuples: Protocol, LoadBalancerPort, InstanceProtocol, InstancePort, and SSLCertificateId. </param>
            <param name="availabilityZones"> A list of Availability Zones.   At least one Availability Zone must be specified. Specified Availability Zones must be in the same EC2 Region as the load balancer. Traffic will be equally distributed across all zones.   You can later add more Availability Zones after the creation of the load balancer by calling <a>EnableAvailabilityZonesForLoadBalancer</a> action. </param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerRequest.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
             A list of Availability Zones. 
            </para>
             
            <para>
             At least one Availability Zone must be specified. Specified Availability Zones must
            be in the same EC2 Region as the load balancer. Traffic will be equally distributed
            across all zones. 
            </para>
             
            <para>
             You can later add more Availability Zones after the creation of the load balancer
            by calling <a>EnableAvailabilityZonesForLoadBalancer</a> action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerRequest.Listeners">
            <summary>
            Gets and sets the property Listeners. 
            <para>
             A list of the following tuples: Protocol, LoadBalancerPort, InstanceProtocol, InstancePort,
            and SSLCertificateId. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The name associated with the load balancer. The name must be unique within your set
            of load balancers, must have a maximum of 32 characters, and must only contain alphanumeric
            characters or hyphens. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerRequest.Scheme">
            <summary>
            Gets and sets the property Scheme. 
            <para>
            The type of a load balancer. 
            </para>
             
            <para>
            By default, Elastic Load Balancing creates an Internet-facing load balancer with a
            publicly resolvable DNS name, which resolves to public IP addresses. For more information
            about Internet-facing and Internal load balancers, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/vpc-loadbalancer-types.html">Internet-facing
            and Internal Load Balancers</a>.
            </para>
             
            <para>
            Specify the value <code>internal</code> for this option to create an internal load
            balancer with a DNS name that resolves to private IP addresses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerRequest.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
             The security groups to assign to your load balancer within your VPC. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerRequest.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
             A list of subnet IDs in your VPC to attach to your load balancer. Specify one subnet
            per Availability Zone. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags to assign to the load balancer.
            </para>
             
            <para>
            For more information about setting tags for your load balancer, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/TerminologyandKeyConcepts.html#tagging-elb">Tagging</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerResponse">
            <summary>
            Configuration for accessing Amazon CreateLoadBalancer service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerResult">
            <summary>
            The output for the <a>CreateLoadBalancer</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerResult.DNSName">
            <summary>
            Gets and sets the property DNSName. 
            <para>
             The DNS name for the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CreateLoadBalancerResponse.CreateLoadBalancerResult">
            <summary>
            Gets and sets the CreateLoadBalancerResult property.
            Represents the output of a CreateLoadBalancer operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.CrossZoneLoadBalancing">
            <summary>
            The <code>CrossZoneLoadBalancing</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.CrossZoneLoadBalancing.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Specifies whether cross-zone load balancing is enabled for the load balancer.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerListenersRequest">
            <summary>
            Container for the parameters to the DeleteLoadBalancerListeners operation.
            Deletes listeners from the load balancer for the specified port.
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerListenersRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerListenersRequest.#ctor(System.String,System.Collections.Generic.List{System.Int32})">
            <summary>
            Instantiates DeleteLoadBalancerListenersRequest with the parameterized properties
            </summary>
            <param name="loadBalancerName"> The mnemonic name associated with the load balancer. </param>
            <param name="loadBalancerPorts"> The client port number(s) of the load balancer listener(s) to be removed. </param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerListenersRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The mnemonic name associated with the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerListenersRequest.LoadBalancerPorts">
            <summary>
            Gets and sets the property LoadBalancerPorts. 
            <para>
             The client port number(s) of the load balancer listener(s) to be removed. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerListenersResponse">
            <summary>
            Configuration for accessing Amazon DeleteLoadBalancerListeners service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerListenersResult">
            <summary>
            The output for the <a>DeleteLoadBalancerListeners</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerListenersResponse.DeleteLoadBalancerListenersResult">
            <summary>
            Gets and sets the DeleteLoadBalancerListenersResult property.
            Represents the output of a DeleteLoadBalancerListeners operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerPolicyRequest">
            <summary>
            Container for the parameters to the DeleteLoadBalancerPolicy operation.
            Deletes a policy from the load balancer. The specified policy must not be enabled
            for any listeners.
            </summary>
            <summary>
            Container for the parameters to the DeleteLoadBalancerPolicy operation.
            Deletes a policy from the load balancer. The specified policy must not be enabled
            for any listeners.
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerPolicyRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerPolicyRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates DeleteLoadBalancerPolicyRequest with the parameterized properties
            </summary>
            <param name="loadBalancerName"> The mnemonic name associated with the load balancer. </param>
            <param name="policyName"> The mnemonic name for the policy being deleted. </param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerPolicyRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The mnemonic name associated with the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerPolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
             The mnemonic name for the policy being deleted. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerPolicyResponse">
            <summary>
            Configuration for accessing Amazon DeleteLoadBalancerPolicy service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerPolicyResult">
            <summary>
            The output for the <a>DeleteLoadBalancerPolicy</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerPolicyResponse.DeleteLoadBalancerPolicyResult">
            <summary>
            Gets and sets the DeleteLoadBalancerPolicyResult property.
            Represents the output of a DeleteLoadBalancerPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerRequest">
            <summary>
            Container for the parameters to the DeleteLoadBalancer operation.
            Deletes the specified load balancer. 
            
             
            <para>
             If attempting to recreate the load balancer, you must reconfigure all the settings.
            The DNS name associated with a deleted load balancer will no longer be usable. Once
            deleted, the name and associated DNS record of the load balancer no longer exist and
            traffic sent to any of its IP addresses will no longer be delivered to back-end instances.
            
            </para>
             
            <para>
             To successfully call this API, you must provide the same account credentials as were
            used to create the load balancer. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteLoadBalancerRequest with the parameterized properties
            </summary>
            <param name="loadBalancerName"> The name associated with the load balancer. </param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The name associated with the load balancer. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerResponse">
            <summary>
            Configuration for accessing Amazon DeleteLoadBalancer service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerResult">
            <summary>
            The output for the <a>DeleteLoadBalancer</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DeleteLoadBalancerResponse.DeleteLoadBalancerResult">
            <summary>
            Gets and sets the DeleteLoadBalancerResult property.
            Represents the output of a DeleteLoadBalancer operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DeregisterInstancesFromLoadBalancerRequest">
            <summary>
            Container for the parameters to the DeregisterInstancesFromLoadBalancer operation.
            Deregisters instances from the load balancer. Once the instance is deregistered,
            it will stop receiving traffic from the load balancer. 
            
             
            <para>
             In order to successfully call this API, the same account credentials as those used
            to create the load balancer must be provided. 
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/US_DeReg_Reg_Instances.html">De-register
            and Register Amazon EC2 Instances</a> in the <i>Elastic Load Balancing Developer Guide</i>.
            </para>
             
            <para>
            You can use <a>DescribeLoadBalancers</a> to verify if the instance is deregistered
            from the load balancer.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.DeregisterInstancesFromLoadBalancerRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.DeregisterInstancesFromLoadBalancerRequest.#ctor(System.String,System.Collections.Generic.List{Amazon.ElasticLoadBalancing.Model.Instance})">
            <summary>
            Instantiates DeregisterInstancesFromLoadBalancerRequest with the parameterized properties
            </summary>
            <param name="loadBalancerName"> The name associated with the load balancer. </param>
            <param name="instances"> A list of EC2 instance IDs consisting of all instances to be deregistered. </param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DeregisterInstancesFromLoadBalancerRequest.Instances">
            <summary>
            Gets and sets the property Instances. 
            <para>
             A list of EC2 instance IDs consisting of all instances to be deregistered. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DeregisterInstancesFromLoadBalancerRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The name associated with the load balancer. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DeregisterInstancesFromLoadBalancerResponse">
            <summary>
            Configuration for accessing Amazon DeregisterInstancesFromLoadBalancer service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DeregisterInstancesFromLoadBalancerResult">
            <summary>
            The output for the <a>DeregisterInstancesFromLoadBalancer</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DeregisterInstancesFromLoadBalancerResult.Instances">
            <summary>
            Gets and sets the property Instances. 
            <para>
             An updated list of remaining instances registered with the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DeregisterInstancesFromLoadBalancerResponse.DeregisterInstancesFromLoadBalancerResult">
            <summary>
            Gets and sets the DeregisterInstancesFromLoadBalancerResult property.
            Represents the output of a DeregisterInstancesFromLoadBalancer operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DescribeInstanceHealthRequest">
            <summary>
            Container for the parameters to the DescribeInstanceHealth operation.
            Returns the current state of the specified instances registered with the specified
            load balancer. If no instances are specified, the state of all the instances registered
            with the load balancer is returned.
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.DescribeInstanceHealthRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.DescribeInstanceHealthRequest.#ctor(System.String)">
            <summary>
            Instantiates DescribeInstanceHealthRequest with the parameterized properties
            </summary>
            <param name="loadBalancerName"> The name of the load balancer. </param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeInstanceHealthRequest.Instances">
            <summary>
            Gets and sets the property Instances. 
            <para>
             A list of instance IDs whose states are being queried. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeInstanceHealthRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The name of the load balancer. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DescribeInstanceHealthResponse">
            <summary>
            Configuration for accessing Amazon DescribeInstanceHealth service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DescribeInstanceHealthResult">
            <summary>
            The output for the <a>DescribeInstanceHealth</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeInstanceHealthResult.InstanceStates">
            <summary>
            Gets and sets the property InstanceStates. 
            <para>
             A list containing health information for the specified instances. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeInstanceHealthResponse.DescribeInstanceHealthResult">
            <summary>
            Gets and sets the DescribeInstanceHealthResult property.
            Represents the output of a DescribeInstanceHealth operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerAttributesRequest">
            <summary>
            Container for the parameters to the DescribeLoadBalancerAttributes operation.
            Returns detailed information about all of the attributes associated with the specified
            load balancer.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerAttributesRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
            The name of the load balancer.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerAttributesResponse">
            <summary>
            Configuration for accessing Amazon DescribeLoadBalancerAttributes service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerAttributesResult">
            <summary>
            The following element is returned in a structure named <code>DescribeLoadBalancerAttributesResult</code>.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerAttributesResult.LoadBalancerAttributes">
            <summary>
            Gets and sets the property LoadBalancerAttributes. 
            <para>
            The load balancer attributes structure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerAttributesResponse.DescribeLoadBalancerAttributesResult">
            <summary>
            Gets and sets the DescribeLoadBalancerAttributesResult property.
            Represents the output of a DescribeLoadBalancerAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPoliciesRequest">
            <summary>
            Container for the parameters to the DescribeLoadBalancerPolicies operation.
            Returns detailed descriptions of the policies. If you specify a load balancer name,
            the action returns the descriptions of all the policies created for the load balancer.
            If you specify a policy name associated with your load balancer, the action returns
            the description of that policy. If you don't specify a load balancer name, the action
            returns descriptions of the specified sample policies, or descriptions of all the
            sample policies. The names of the sample policies have the <code>ELBSample-</code>
            prefix.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPoliciesRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The mnemonic name associated with the load balancer. If no name is specified, the
            operation returns the attributes of either all the sample policies pre-defined by
            Elastic Load Balancing or the specified sample polices. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPoliciesRequest.PolicyNames">
            <summary>
            Gets and sets the property PolicyNames. 
            <para>
             The names of load balancer policies you've created or Elastic Load Balancing sample
            policy names. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPoliciesResponse">
            <summary>
            Configuration for accessing Amazon DescribeLoadBalancerPolicies service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPoliciesResult">
            <summary>
            The output for the <a>DescribeLoadBalancerPolicies</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPoliciesResult.PolicyDescriptions">
            <summary>
            Gets and sets the property PolicyDescriptions. 
            <para>
             A list of policy description structures. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPoliciesResponse.DescribeLoadBalancerPoliciesResult">
            <summary>
            Gets and sets the DescribeLoadBalancerPoliciesResult property.
            Represents the output of a DescribeLoadBalancerPolicies operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPolicyTypesRequest">
            <summary>
            Container for the parameters to the DescribeLoadBalancerPolicyTypes operation.
            Returns meta-information on the specified load balancer policies defined by the Elastic
            Load Balancing service. The policy types that are returned from this action can be
            used in a <a>CreateLoadBalancerPolicy</a> action to instantiate specific policy configurations
            that will be applied to a load balancer.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPolicyTypesRequest.PolicyTypeNames">
            <summary>
            Gets and sets the property PolicyTypeNames. 
            <para>
             Specifies the name of the policy types. If no names are specified, returns the description
            of all the policy types defined by Elastic Load Balancing service. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPolicyTypesResponse">
            <summary>
            Configuration for accessing Amazon DescribeLoadBalancerPolicyTypes service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPolicyTypesResult">
            <summary>
            The output for the <a>DescribeLoadBalancerPolicyTypes</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPolicyTypesResult.PolicyTypeDescriptions">
            <summary>
            Gets and sets the property PolicyTypeDescriptions. 
            <para>
             List of policy type description structures of the specified policy type. If no policy
            type names are specified, returns the description of all the policy types defined
            by Elastic Load Balancing service. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancerPolicyTypesResponse.DescribeLoadBalancerPolicyTypesResult">
            <summary>
            Gets and sets the DescribeLoadBalancerPolicyTypesResult property.
            Represents the output of a DescribeLoadBalancerPolicyTypes operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancersRequest">
            <summary>
            Container for the parameters to the DescribeLoadBalancers operation.
            Returns detailed configuration information for all the load balancers created for
            the account. If you specify load balancer names, the action returns configuration
            information of the specified load balancers.
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancersRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancersRequest.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates DescribeLoadBalancersRequest with the parameterized properties
            </summary>
            <param name="loadBalancerNames"> A list of load balancer names associated with the account. </param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancersRequest.LoadBalancerNames">
            <summary>
            Gets and sets the property LoadBalancerNames. 
            <para>
             A list of load balancer names associated with the account. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancersRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional parameter used for pagination of results from this call. If specified,
            the response includes only records beyond the marker. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancersRequest.PageSize">
            <summary>
            Gets and sets the property PageSize. 
            <para>
             The number of results returned in each page. The default is 400. You cannot specify
            a page size greater than 400 or less than 1. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancersResponse">
            <summary>
            Configuration for accessing Amazon DescribeLoadBalancers service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancersResult">
            <summary>
            The output for the <a>DescribeLoadBalancers</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancersResult.LoadBalancerDescriptions">
            <summary>
            Gets and sets the property LoadBalancerDescriptions. 
            <para>
             A list of load balancer description structures. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancersResult.NextMarker">
            <summary>
            Gets and sets the property NextMarker. 
            <para>
             Specifies the value of next marker if the request returned more than one page of
            results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeLoadBalancersResponse.DescribeLoadBalancersResult">
            <summary>
            Gets and sets the DescribeLoadBalancersResult property.
            Represents the output of a DescribeLoadBalancers operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DescribeTagsRequest">
            <summary>
            Container for the parameters to the DescribeTags operation.
            Describes the tags associated with one or more load balancers.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeTagsRequest.LoadBalancerNames">
            <summary>
            Gets and sets the property LoadBalancerNames. 
            <para>
             The names of the load balancers. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DescribeTagsResponse">
            <summary>
            Configuration for accessing Amazon DescribeTags service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DescribeTagsResult">
            <summary>
            The output for the <a>DescribeTags</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeTagsResult.TagDescriptions">
            <summary>
            Gets and sets the property TagDescriptions. 
            <para>
             A list of tag description structures. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DescribeTagsResponse.DescribeTagsResult">
            <summary>
            Gets and sets the DescribeTagsResult property.
            Represents the output of a DescribeTags operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DetachLoadBalancerFromSubnetsRequest">
            <summary>
            Container for the parameters to the DetachLoadBalancerFromSubnets operation.
            Removes subnets from the set of configured subnets in the Amazon Virtual Private
            Cloud (Amazon VPC) for the load balancer. 
            
             
            <para>
             After a subnet is removed all of the EC2 instances registered with the load balancer
            that are in the removed subnet will go into the <i>OutOfService</i> state. When a
            subnet is removed, the load balancer will balance the traffic among the remaining
            routable subnets for the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DetachLoadBalancerFromSubnetsRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The name associated with the load balancer to be detached. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DetachLoadBalancerFromSubnetsRequest.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
             A list of subnet IDs to remove from the set of configured subnets for the load balancer.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DetachLoadBalancerFromSubnetsResponse">
            <summary>
            Configuration for accessing Amazon DetachLoadBalancerFromSubnets service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DetachLoadBalancerFromSubnetsResult">
            <summary>
            The output for the <a>DetachLoadBalancerFromSubnets</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DetachLoadBalancerFromSubnetsResult.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
             A list of subnet IDs the load balancer is now attached to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DetachLoadBalancerFromSubnetsResponse.DetachLoadBalancerFromSubnetsResult">
            <summary>
            Gets and sets the DetachLoadBalancerFromSubnetsResult property.
            Represents the output of a DetachLoadBalancerFromSubnets operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DisableAvailabilityZonesForLoadBalancerRequest">
            <summary>
            Container for the parameters to the DisableAvailabilityZonesForLoadBalancer operation.
            Removes the specified EC2 Availability Zones from the set of configured Availability
            Zones for the load balancer. 
            
             
            <para>
             There must be at least one Availability Zone registered with a load balancer at all
            times. Once an Availability Zone is removed, all the instances registered with the
            load balancer that are in the removed Availability Zone go into the <i>OutOfService</i>
            state. Upon Availability Zone removal, the load balancer attempts to equally balance
            the traffic among its remaining usable Availability Zones. Trying to remove an Availability
            Zone that was not associated with the load balancer does nothing. 
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/US_ShrinkLBApp04.html">Disable
            an Availability Zone from a Load-Balanced Application</a> in the <i>Elastic Load Balancing
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.DisableAvailabilityZonesForLoadBalancerRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.DisableAvailabilityZonesForLoadBalancerRequest.#ctor(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates DisableAvailabilityZonesForLoadBalancerRequest with the parameterized properties
            </summary>
            <param name="loadBalancerName"> The name associated with the load balancer. </param>
            <param name="availabilityZones"> A list of Availability Zones to be removed from the load balancer. </param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DisableAvailabilityZonesForLoadBalancerRequest.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
             A list of Availability Zones to be removed from the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DisableAvailabilityZonesForLoadBalancerRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The name associated with the load balancer. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DisableAvailabilityZonesForLoadBalancerResponse">
            <summary>
            Configuration for accessing Amazon DisableAvailabilityZonesForLoadBalancer service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DisableAvailabilityZonesForLoadBalancerResult">
            <summary>
            The output for the <a>DisableAvailabilityZonesForLoadBalancer</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DisableAvailabilityZonesForLoadBalancerResult.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
             A list of updated Availability Zones for the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.DisableAvailabilityZonesForLoadBalancerResponse.DisableAvailabilityZonesForLoadBalancerResult">
            <summary>
            Gets and sets the DisableAvailabilityZonesForLoadBalancerResult property.
            Represents the output of a DisableAvailabilityZonesForLoadBalancer operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DuplicateAccessPointNameException">
            <summary>
             ElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.DuplicateAccessPointNameException.#ctor(System.String)">
            <summary>
            Constructs a new DuplicateAccessPointNameException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DuplicateListenerException">
            <summary>
             ElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.DuplicateListenerException.#ctor(System.String)">
            <summary>
            Constructs a new DuplicateListenerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DuplicateLoadBalancerNameException">
            <summary>
             AmazonElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.DuplicateLoadBalancerNameException.#ctor(System.String)">
            <summary>
            Constructs a new DuplicateLoadBalancerNameException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DuplicatePolicyNameException">
            <summary>
             ElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.DuplicatePolicyNameException.#ctor(System.String)">
            <summary>
            Constructs a new DuplicatePolicyNameException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.DuplicateTagKeysException">
            <summary>
             ElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.DuplicateTagKeysException.#ctor(System.String)">
            <summary>
            Constructs a new DuplicateTagKeysException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.EnableAvailabilityZonesForLoadBalancerRequest">
            <summary>
            Container for the parameters to the EnableAvailabilityZonesForLoadBalancer operation.
            Adds one or more EC2 Availability Zones to the load balancer. 
            
             
            <para>
             The load balancer evenly distributes requests across all its registered Availability
            Zones that contain instances. 
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/US_AddLBAvailabilityZone.html">Expand
            a Load Balanced Application to an Additional Availability Zone</a> in the <i>Elastic
            Load Balancing Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.EnableAvailabilityZonesForLoadBalancerRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.EnableAvailabilityZonesForLoadBalancerRequest.#ctor(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates EnableAvailabilityZonesForLoadBalancerRequest with the parameterized properties
            </summary>
            <param name="loadBalancerName"> The name associated with the load balancer. </param>
            <param name="availabilityZones"> A list of new Availability Zones for the load balancer. Each Availability Zone must be in the same region as the load balancer. </param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.EnableAvailabilityZonesForLoadBalancerRequest.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
             A list of new Availability Zones for the load balancer. Each Availability Zone must
            be in the same region as the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.EnableAvailabilityZonesForLoadBalancerRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The name associated with the load balancer. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.EnableAvailabilityZonesForLoadBalancerResponse">
            <summary>
            Configuration for accessing Amazon EnableAvailabilityZonesForLoadBalancer service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.EnableAvailabilityZonesForLoadBalancerResult">
            <summary>
            The output for the <a>EnableAvailabilityZonesForLoadBalancer</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.EnableAvailabilityZonesForLoadBalancerResult.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
             An updated list of Availability Zones for the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.EnableAvailabilityZonesForLoadBalancerResponse.EnableAvailabilityZonesForLoadBalancerResult">
            <summary>
            Gets and sets the EnableAvailabilityZonesForLoadBalancerResult property.
            Represents the output of a EnableAvailabilityZonesForLoadBalancer operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.HealthCheck">
            <summary>
            The HealthCheck data type.
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.HealthCheck.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.HealthCheck.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Instantiates HealthCheck with the parameterized properties
            </summary>
            <param name="target"> Specifies the instance being checked. The protocol is either TCP, HTTP, HTTPS, or SSL. The range of valid ports is one (1) through 65535. </param>
            <param name="interval"> Specifies the approximate interval, in seconds, between health checks of an individual instance. </param>
            <param name="timeout"> Specifies the amount of time, in seconds, during which no response means a failed health probe. </param>
            <param name="unhealthyThreshold"> Specifies the number of consecutive health probe failures required before moving the instance to the <i>Unhealthy</i> state. </param>
            <param name="healthyThreshold"> Specifies the number of consecutive health probe successes required before moving the instance to the <i>Healthy</i> state. </param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.HealthCheck.HealthyThreshold">
            <summary>
            Gets and sets the property HealthyThreshold. 
            <para>
             Specifies the number of consecutive health probe successes required before moving
            the instance to the <i>Healthy</i> state. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.HealthCheck.Interval">
            <summary>
            Gets and sets the property Interval. 
            <para>
             Specifies the approximate interval, in seconds, between health checks of an individual
            instance. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.HealthCheck.Target">
            <summary>
            Gets and sets the property Target. 
            <para>
             Specifies the instance being checked. The protocol is either TCP, HTTP, HTTPS, or
            SSL. The range of valid ports is one (1) through 65535. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.HealthCheck.Timeout">
            <summary>
            Gets and sets the property Timeout. 
            <para>
             Specifies the amount of time, in seconds, during which no response means a failed
            health probe. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.HealthCheck.UnhealthyThreshold">
            <summary>
            Gets and sets the property UnhealthyThreshold. 
            <para>
             Specifies the number of consecutive health probe failures required before moving
            the instance to the <i>Unhealthy</i> state. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Instance">
            <summary>
            The Instance data type.
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.Instance.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.Instance.#ctor(System.String)">
            <summary>
            Instantiates Instance with the parameterized properties
            </summary>
            <param name="instanceId"> Provides an EC2 instance ID. </param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.Instance.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
             Provides an EC2 instance ID. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.InstanceState">
            <summary>
            The InstanceState data type.
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.InstanceState.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.InstanceState.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
             Provides a description of the instance state. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.InstanceState.InstanceId">
            <summary>
            Gets and sets the property InstanceId. 
            <para>
             Provides an EC2 instance ID. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.InstanceState.ReasonCode">
            <summary>
            Gets and sets the property ReasonCode. 
            <para>
             Provides information about the cause of <i>OutOfService</i> instances. Specifically,
            it indicates whether the cause is Elastic Load Balancing or the instance behind the
            load balancer. 
            </para>
             
            <para>
            Valid value: <code>ELB</code>|<code>Instance</code>|<code>N/A</code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.InstanceState.State">
            <summary>
            Gets and sets the property State. 
            <para>
            Specifies the current state of the instance.
            </para>
             
            <para>
            Valid value: <code>InService</code>|<code>OutOfService</code>|<code>Unknown</code>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.AccessLogUnmarshaller">
            <summary>
            Response Unmarshaller for AccessLog Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.AddTagsRequestMarshaller">
            <summary>
            AddTags Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.AddTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AddTags operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.AppCookieStickinessPolicyUnmarshaller">
            <summary>
            Response Unmarshaller for AppCookieStickinessPolicy Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.ApplySecurityGroupsToLoadBalancerRequestMarshaller">
            <summary>
            ApplySecurityGroupsToLoadBalancer Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.ApplySecurityGroupsToLoadBalancerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ApplySecurityGroupsToLoadBalancer operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.AttachLoadBalancerToSubnetsRequestMarshaller">
            <summary>
            AttachLoadBalancerToSubnets Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.AttachLoadBalancerToSubnetsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AttachLoadBalancerToSubnets operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.BackendServerDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for BackendServerDescription Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.ConfigureHealthCheckRequestMarshaller">
            <summary>
            ConfigureHealthCheck Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.ConfigureHealthCheckResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ConfigureHealthCheck operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.ConnectionDrainingUnmarshaller">
            <summary>
            Response Unmarshaller for ConnectionDraining Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.ConnectionSettingsUnmarshaller">
            <summary>
            Response Unmarshaller for ConnectionSettings Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CreateAppCookieStickinessPolicyRequestMarshaller">
            <summary>
            CreateAppCookieStickinessPolicy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CreateAppCookieStickinessPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateAppCookieStickinessPolicy operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CreateLBCookieStickinessPolicyRequestMarshaller">
            <summary>
            CreateLBCookieStickinessPolicy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CreateLBCookieStickinessPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLBCookieStickinessPolicy operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CreateLoadBalancerListenersRequestMarshaller">
            <summary>
            CreateLoadBalancerListeners Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CreateLoadBalancerListenersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLoadBalancerListeners operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CreateLoadBalancerPolicyRequestMarshaller">
            <summary>
            CreateLoadBalancerPolicy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CreateLoadBalancerPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLoadBalancerPolicy operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CreateLoadBalancerRequestMarshaller">
            <summary>
            CreateLoadBalancer Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CreateLoadBalancerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLoadBalancer operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.CrossZoneLoadBalancingUnmarshaller">
            <summary>
            Response Unmarshaller for CrossZoneLoadBalancing Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DeleteLoadBalancerListenersRequestMarshaller">
            <summary>
            DeleteLoadBalancerListeners Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DeleteLoadBalancerListenersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLoadBalancerListeners operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DeleteLoadBalancerPolicyRequestMarshaller">
            <summary>
            DeleteLoadBalancerPolicy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DeleteLoadBalancerPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLoadBalancerPolicy operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DeleteLoadBalancerRequestMarshaller">
            <summary>
            DeleteLoadBalancer Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DeleteLoadBalancerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLoadBalancer operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DeregisterInstancesFromLoadBalancerRequestMarshaller">
            <summary>
            DeregisterInstancesFromLoadBalancer Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DeregisterInstancesFromLoadBalancerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeregisterInstancesFromLoadBalancer operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeInstanceHealthRequestMarshaller">
            <summary>
            DescribeInstanceHealth Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeInstanceHealthResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeInstanceHealth operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeLoadBalancerAttributesRequestMarshaller">
            <summary>
            DescribeLoadBalancerAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeLoadBalancerAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeLoadBalancerAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeLoadBalancerPoliciesRequestMarshaller">
            <summary>
            DescribeLoadBalancerPolicies Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeLoadBalancerPoliciesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeLoadBalancerPolicies operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeLoadBalancerPolicyTypesRequestMarshaller">
            <summary>
            DescribeLoadBalancerPolicyTypes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeLoadBalancerPolicyTypesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeLoadBalancerPolicyTypes operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeLoadBalancersRequestMarshaller">
            <summary>
            DescribeLoadBalancers Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeLoadBalancersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeLoadBalancers operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeTagsRequestMarshaller">
            <summary>
            DescribeTags Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTags operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DetachLoadBalancerFromSubnetsRequestMarshaller">
            <summary>
            DetachLoadBalancerFromSubnets Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DetachLoadBalancerFromSubnetsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetachLoadBalancerFromSubnets operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DisableAvailabilityZonesForLoadBalancerRequestMarshaller">
            <summary>
            DisableAvailabilityZonesForLoadBalancer Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.DisableAvailabilityZonesForLoadBalancerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisableAvailabilityZonesForLoadBalancer operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.EnableAvailabilityZonesForLoadBalancerRequestMarshaller">
            <summary>
            EnableAvailabilityZonesForLoadBalancer Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.EnableAvailabilityZonesForLoadBalancerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnableAvailabilityZonesForLoadBalancer operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.HealthCheckUnmarshaller">
            <summary>
            Response Unmarshaller for HealthCheck Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.InstanceStateUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceState Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.InstanceUnmarshaller">
            <summary>
            Response Unmarshaller for Instance Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.LBCookieStickinessPolicyUnmarshaller">
            <summary>
            Response Unmarshaller for LBCookieStickinessPolicy Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.ListenerDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for ListenerDescription Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.ListenerUnmarshaller">
            <summary>
            Response Unmarshaller for Listener Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.LoadBalancerAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for LoadBalancerAttributes Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.LoadBalancerDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for LoadBalancerDescription Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.ModifyLoadBalancerAttributesRequestMarshaller">
            <summary>
            ModifyLoadBalancerAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.ModifyLoadBalancerAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyLoadBalancerAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.PoliciesUnmarshaller">
            <summary>
            Response Unmarshaller for Policies Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.PolicyAttributeDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for PolicyAttributeDescription Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.PolicyAttributeTypeDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for PolicyAttributeTypeDescription Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.PolicyDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for PolicyDescription Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.PolicyTypeDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for PolicyTypeDescription Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.RegisterInstancesWithLoadBalancerRequestMarshaller">
            <summary>
            RegisterInstancesWithLoadBalancer Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.RegisterInstancesWithLoadBalancerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RegisterInstancesWithLoadBalancer operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.RemoveTagsRequestMarshaller">
            <summary>
            RemoveTags Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.RemoveTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemoveTags operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.SetLoadBalancerListenerSSLCertificateRequestMarshaller">
            <summary>
            SetLoadBalancerListenerSSLCertificate Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.SetLoadBalancerListenerSSLCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetLoadBalancerListenerSSLCertificate operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.SetLoadBalancerPoliciesForBackendServerRequestMarshaller">
            <summary>
            SetLoadBalancerPoliciesForBackendServer Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.SetLoadBalancerPoliciesForBackendServerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetLoadBalancerPoliciesForBackendServer operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.SetLoadBalancerPoliciesOfListenerRequestMarshaller">
            <summary>
            SetLoadBalancerPoliciesOfListener Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.SetLoadBalancerPoliciesOfListenerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetLoadBalancerPoliciesOfListener operation
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.SourceSecurityGroupUnmarshaller">
            <summary>
            Response Unmarshaller for SourceSecurityGroup Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.TagDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for TagDescription Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.InvalidConfigurationRequestException">
            <summary>
             ElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.InvalidConfigurationRequestException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidConfigurationRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.InvalidEndPointException">
            <summary>
             ElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.InvalidEndPointException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidEndPointException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.InvalidInstanceException">
            <summary>
             AmazonElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.InvalidInstanceException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidInstanceException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.InvalidSchemeException">
            <summary>
             ElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.InvalidSchemeException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidSchemeException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.InvalidSecurityGroupException">
            <summary>
             ElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.InvalidSecurityGroupException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidSecurityGroupException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.InvalidSubnetException">
            <summary>
             ElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.InvalidSubnetException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidSubnetException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.LBCookieStickinessPolicy">
            <summary>
            The LBCookieStickinessPolicy data type.
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.LBCookieStickinessPolicy.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.LBCookieStickinessPolicy.#ctor(System.String,System.Int64)">
            <summary>
            Instantiates LBCookieStickinessPolicy with the parameterized properties
            </summary>
            <param name="policyName">The name for the policy being created. The name must be unique within the set of policies for this load balancer. </param>
            <param name="cookieExpirationPeriod">The time period in seconds after which the cookie should be considered stale. Not specifying this parameter indicates that the stickiness session will last for the duration of the browser session. </param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LBCookieStickinessPolicy.CookieExpirationPeriod">
            <summary>
            Gets and sets the property CookieExpirationPeriod. 
            <para>
            The time period in seconds after which the cookie should be considered stale. Not
            specifying this parameter indicates that the stickiness session will last for the
            duration of the browser session. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LBCookieStickinessPolicy.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The name for the policy being created. The name must be unique within the set of policies
            for this load balancer. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Listener">
            <summary>
            The Listener data type.
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.Listener.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.Listener.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Instantiates Listener with the parameterized properties
            </summary>
            <param name="protocol"> Specifies the load balancer transport protocol to use for routing - HTTP, HTTPS, TCP or SSL. This property cannot be modified for the life of the load balancer. </param>
            <param name="loadBalancerPort"> Specifies the external load balancer port number. This property cannot be modified for the life of the load balancer. </param>
            <param name="instancePort"> Specifies the TCP port on which the instance server is listening. This property cannot be modified for the life of the load balancer. </param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.Listener.InstancePort">
            <summary>
            Gets and sets the property InstancePort. 
            <para>
             Specifies the TCP port on which the instance server is listening. This property cannot
            be modified for the life of the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.Listener.InstanceProtocol">
            <summary>
            Gets and sets the property InstanceProtocol. 
            <para>
             Specifies the protocol to use for routing traffic to back-end instances - HTTP, HTTPS,
            TCP, or SSL. This property cannot be modified for the life of the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.Listener.LoadBalancerPort">
            <summary>
            Gets and sets the property LoadBalancerPort. 
            <para>
             Specifies the external load balancer port number. This property cannot be modified
            for the life of the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.Listener.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
             Specifies the load balancer transport protocol to use for routing - HTTP, HTTPS,
            TCP or SSL. This property cannot be modified for the life of the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.Listener.SSLCertificateId">
            <summary>
            Gets and sets the property SSLCertificateId. 
            <para>
             The ARN string of the server certificate. To get the ARN of the server certificate,
            call the AWS Identity and Access Management <a href="http://docs.aws.amazon.com/IAM/latest/APIReference/index.html?API_UploadServerCertificate.html">UploadServerCertificate
            </a> API. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.ListenerDescription">
            <summary>
            The ListenerDescription data type.
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.ListenerDescription.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.ListenerDescription.Listener">
            <summary>
            Gets and sets the property Listener.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.ListenerDescription.PolicyNames">
            <summary>
            Gets and sets the property PolicyNames. 
            <para>
             A list of policies enabled for this listener. An empty list indicates that no policies
            are enabled. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.ListenerNotFoundException">
            <summary>
             ElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.ListenerNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ListenerNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.LoadBalancerAttributeNotFoundException">
            <summary>
             ElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.LoadBalancerAttributeNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new LoadBalancerAttributeNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.LoadBalancerAttributes">
            <summary>
            The <code>LoadBalancerAttributes</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LoadBalancerAttributes.AccessLog">
            <summary>
            Gets and sets the property AccessLog. 
            <para>
            The name of the load balancer attribute. If enabled, the load balancer captures detailed
            information of all the requests and delivers the information to the Amazon S3 bucket
            that you specify.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/enable-access-logs.html">Enable
            Access Logs</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LoadBalancerAttributes.ConnectionDraining">
            <summary>
            Gets and sets the property ConnectionDraining. 
            <para>
            The name of the load balancer attribute. If enabled, the load balancer allows existing
            requests to complete before the load balancer shifts traffic away from a deregistered
            or unhealthy back-end instance. 
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/config-conn-drain.html">Enable
            Connection Draining</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LoadBalancerAttributes.ConnectionSettings">
            <summary>
            Gets and sets the property ConnectionSettings. 
            <para>
            The name of the load balancer attribute. 
            </para>
             
            <para>
            By default, Elastic Load Balancing maintains a 60-second idle connection timeout for
            both front-end and back-end connections of your load balancer. If the <code>ConnectionSettings</code>
            attribute is set, Elastic Load Balancing will allow the connections to remain idle
            (no data is sent over the connection) for the specified duration.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/config-idle-timeout.html">Configure
            Idle Connection Timeout</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LoadBalancerAttributes.CrossZoneLoadBalancing">
            <summary>
            Gets and sets the property CrossZoneLoadBalancing. 
            <para>
            The name of the load balancer attribute. If enabled, the load balancer routes the
            request traffic evenly across all back-end instances regardless of the Availability
            Zones.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/enable-disable-crosszone-lb.html">Enable
            Cross-Zone Load Balancing</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.LoadBalancerDescription">
            <summary>
            Contains the result of a successful invocation of <a>DescribeLoadBalancers</a>.
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.LoadBalancerDescription.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LoadBalancerDescription.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
             Specifies a list of Availability Zones. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LoadBalancerDescription.BackendServerDescriptions">
            <summary>
            Gets and sets the property BackendServerDescriptions. 
            <para>
             Contains a list of back-end server descriptions. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LoadBalancerDescription.CanonicalHostedZoneName">
            <summary>
            Gets and sets the property CanonicalHostedZoneName. 
            <para>
             Provides the name of the Amazon Route 53 hosted zone that is associated with the
            load balancer. For information on how to associate your load balancer with a hosted
            zone, go to <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/using-domain-names-with-elb.html">Using
            Domain Names With Elastic Load Balancing</a> in the <i>Elastic Load Balancing Developer
            Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LoadBalancerDescription.CanonicalHostedZoneNameID">
            <summary>
            Gets and sets the property CanonicalHostedZoneNameID. 
            <para>
             Provides the ID of the Amazon Route 53 hosted zone name that is associated with the
            load balancer. For information on how to associate or disassociate your load balancer
            with a hosted zone, go to <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/using-domain-names-with-elb.html">Using
            Domain Names With Elastic Load Balancing</a> in the <i>Elastic Load Balancing Developer
            Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LoadBalancerDescription.CreatedTime">
            <summary>
            Gets and sets the property CreatedTime. 
            <para>
             Provides the date and time the load balancer was created. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LoadBalancerDescription.DNSName">
            <summary>
            Gets and sets the property DNSName. 
            <para>
             Specifies the external DNS name associated with the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LoadBalancerDescription.HealthCheck">
            <summary>
            Gets and sets the property HealthCheck. 
            <para>
             Specifies information regarding the various health probes conducted on the load balancer.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LoadBalancerDescription.Instances">
            <summary>
            Gets and sets the property Instances. 
            <para>
             Provides a list of EC2 instance IDs for the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LoadBalancerDescription.ListenerDescriptions">
            <summary>
            Gets and sets the property ListenerDescriptions. 
            <para>
             LoadBalancerPort, InstancePort, Protocol, InstanceProtocol, and PolicyNames are returned
            in a list of tuples in the ListenerDescriptions element. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LoadBalancerDescription.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             Specifies the name associated with the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LoadBalancerDescription.Policies">
            <summary>
            Gets and sets the property Policies. 
            <para>
             Provides a list of policies defined for the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LoadBalancerDescription.Scheme">
            <summary>
            Gets and sets the property Scheme. 
            <para>
            Specifies the type of load balancer.
            </para>
             
            <para>
            If the <code>Scheme</code> is <code>internet-facing</code>, the load balancer has
            a publicly resolvable DNS name that resolves to public IP addresses.
            </para>
             
            <para>
            If the <code>Scheme</code> is <code>internal</code>, the load balancer has a publicly
            resolvable DNS name that resolves to private IP addresses.
            </para>
             
            <para>
             This option is only available for load balancers attached to an Amazon VPC. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LoadBalancerDescription.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
             The security groups the load balancer is a member of (VPC only). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LoadBalancerDescription.SourceSecurityGroup">
            <summary>
            Gets and sets the property SourceSecurityGroup. 
            <para>
             The security group that you can use as part of your inbound rules for your load balancer's
            back-end Amazon EC2 application instances. To only allow traffic from load balancers,
            add a security group rule to your back end instance that specifies this source security
            group as the inbound source. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LoadBalancerDescription.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
             Provides a list of VPC subnet IDs for the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.LoadBalancerDescription.VPCId">
            <summary>
            Gets and sets the property VPCId. 
            <para>
             Provides the ID of the VPC attached to the load balancer. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.LoadBalancerNotFoundException">
            <summary>
             AmazonElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.LoadBalancerNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new LoadBalancerNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.ModifyLoadBalancerAttributesRequest">
            <summary>
            Container for the parameters to the ModifyLoadBalancerAttributes operation.
            Modifies the attributes of a specified load balancer.
            
             
            <para>
            You can modify the load balancer attributes, such as <code>AccessLogs</code>, <code>ConnectionDraining</code>,
            and <code>CrossZoneLoadBalancing</code> by either enabling or disabling them. Or,
            you can modify the load balancer attribute <code>ConnectionSettings</code> by specifying
            an idle connection timeout value for your load balancer.
            </para>
             
            <para>
            For more information, see the following:
            </para>
             <ul> <li><a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/TerminologyandKeyConcepts.html#request-routing">Cross-Zone
            Load Balancing</a></li> <li><a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/TerminologyandKeyConcepts.html#conn-drain">Connection
            Draining</a></li> <li><a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/access-log-collection.html">Access
            Logs</a></li> <li><a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/TerminologyandKeyConcepts.html#idle-timeout">Idle
            Connection Timeout</a></li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.ModifyLoadBalancerAttributesRequest.LoadBalancerAttributes">
            <summary>
            Gets and sets the property LoadBalancerAttributes. 
            <para>
            Attributes of the load balancer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.ModifyLoadBalancerAttributesRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
            The name of the load balancer.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.ModifyLoadBalancerAttributesResponse">
            <summary>
            Configuration for accessing Amazon ModifyLoadBalancerAttributes service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.ModifyLoadBalancerAttributesResult">
            <summary>
            The output for the <a>ModifyLoadBalancerAttributes</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.ModifyLoadBalancerAttributesResult.LoadBalancerAttributes">
            <summary>
            Gets and sets the property LoadBalancerAttributes.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.ModifyLoadBalancerAttributesResult.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
            The name of the load balancer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.ModifyLoadBalancerAttributesResponse.ModifyLoadBalancerAttributesResult">
            <summary>
            Gets and sets the ModifyLoadBalancerAttributesResult property.
            Represents the output of a ModifyLoadBalancerAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Policies">
            <summary>
            The policies data type.
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.Policies.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.Policies.AppCookieStickinessPolicies">
            <summary>
            Gets and sets the property AppCookieStickinessPolicies. 
            <para>
             A list of the <a>AppCookieStickinessPolicy</a> objects created with <a>CreateAppCookieStickinessPolicy</a>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.Policies.LBCookieStickinessPolicies">
            <summary>
            Gets and sets the property LBCookieStickinessPolicies. 
            <para>
             A list of <a>LBCookieStickinessPolicy</a> objects created with <a>CreateAppCookieStickinessPolicy</a>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.Policies.OtherPolicies">
            <summary>
            Gets and sets the property OtherPolicies. 
            <para>
             A list of policy names other than the stickiness policies. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.PolicyAttribute">
            <summary>
            The <a>PolicyAttribute</a> data type. This data type contains a key/value pair that
            defines properties of a specific policy.
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.PolicyAttribute.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.PolicyAttribute.#ctor(System.String,System.String)">
            <summary>
            Instantiates PolicyAttribute with the parameterized properties
            </summary>
            <param name="attributeName"> The name of the attribute associated with the policy. </param>
            <param name="attributeValue"> The value of the attribute associated with the policy. </param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.PolicyAttribute.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
             The name of the attribute associated with the policy. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.PolicyAttribute.AttributeValue">
            <summary>
            Gets and sets the property AttributeValue. 
            <para>
             The value of the attribute associated with the policy. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.PolicyAttributeDescription">
            <summary>
            The <code>PolicyAttributeDescription</code> data type. This data type is used to
            describe the attributes and values associated with a policy.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.PolicyAttributeDescription.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
             The name of the attribute associated with the policy. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.PolicyAttributeDescription.AttributeValue">
            <summary>
            Gets and sets the property AttributeValue. 
            <para>
             The value of the attribute associated with the policy. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.PolicyAttributeTypeDescription">
            <summary>
            The <code>PolicyAttributeTypeDescription</code> data type. This data type is used
            to describe values that are acceptable for the policy attribute.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.PolicyAttributeTypeDescription.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
             The name of the attribute associated with the policy type. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.PolicyAttributeTypeDescription.AttributeType">
            <summary>
            Gets and sets the property AttributeType. 
            <para>
             The type of attribute. For example, Boolean, Integer, etc. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.PolicyAttributeTypeDescription.Cardinality">
            <summary>
            Gets and sets the property Cardinality. 
            <para>
             The cardinality of the attribute. Valid Values: <ul> <li>ONE(1) : Single value required</li>
            <li>ZERO_OR_ONE(0..1) : Up to one value can be supplied</li> <li>ZERO_OR_MORE(0..*)
            : Optional. Multiple values are allowed</li> <li>ONE_OR_MORE(1..*0) : Required. Multiple
            values are allowed</li> </ul> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.PolicyAttributeTypeDescription.DefaultValue">
            <summary>
            Gets and sets the property DefaultValue. 
            <para>
             The default value of the attribute, if applicable. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.PolicyAttributeTypeDescription.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
             A human-readable description of the attribute. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.PolicyDescription">
            <summary>
            The <code>PolicyDescription</code> data type.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.PolicyDescription.PolicyAttributeDescriptions">
            <summary>
            Gets and sets the property PolicyAttributeDescriptions. 
            <para>
             A list of policy attribute description structures. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.PolicyDescription.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
             The name of the policy associated with the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.PolicyDescription.PolicyTypeName">
            <summary>
            Gets and sets the property PolicyTypeName. 
            <para>
             The name of the policy type associated with the load balancer. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.PolicyNotFoundException">
            <summary>
             ElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.PolicyNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new PolicyNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.PolicyTypeDescription">
            <summary>
            The <a>PolicyTypeDescription</a> data type.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.PolicyTypeDescription.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
             A human-readable description of the policy type. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.PolicyTypeDescription.PolicyAttributeTypeDescriptions">
            <summary>
            Gets and sets the property PolicyAttributeTypeDescriptions. 
            <para>
             The description of the policy attributes associated with the load balancer policies
            defined by the Elastic Load Balancing service. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.PolicyTypeDescription.PolicyTypeName">
            <summary>
            Gets and sets the property PolicyTypeName. 
            <para>
             The name of the policy type. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.PolicyTypeNotFoundException">
            <summary>
             ElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.PolicyTypeNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new PolicyTypeNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.RegisterInstancesWithLoadBalancerRequest">
            <summary>
            Container for the parameters to the RegisterInstancesWithLoadBalancer operation.
            Adds new instances to the load balancer. 
            
             
            <para>
             Once the instance is registered, it starts receiving traffic and requests from the
            load balancer. Any instance that is not in any of the Availability Zones registered
            for the load balancer will be moved to the <i>OutOfService</i> state. It will move
            to the <i>InService</i> state when the Availability Zone is added to the load balancer.
            
            </para>
             
            <para>
            When an instance registered with a load balancer is stopped and then restarted, the
            IP addresses associated with the instance changes. Elastic Load Balancing cannot recognize
            the new IP address, which prevents it from routing traffic to the instances. We recommend
            that you de-register your Amazon EC2 instances from your load balancer after you stop
            your instance, and then register the load balancer with your instance after you've
            restarted. To de-register your instances from load balancer, use <a>DeregisterInstancesFromLoadBalancer</a>
            action.
            </para>
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/US_DeReg_Reg_Instances.html">De-register
            and Register Amazon EC2 Instances</a> in the <i>Elastic Load Balancing Developer Guide</i>.
            </para>
             
            <para>
            You can use <a>DescribeLoadBalancers</a> or <a>DescribeInstanceHealth</a> action to
            check the state of the newly registered instances.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.RegisterInstancesWithLoadBalancerRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.RegisterInstancesWithLoadBalancerRequest.#ctor(System.String,System.Collections.Generic.List{Amazon.ElasticLoadBalancing.Model.Instance})">
            <summary>
            Instantiates RegisterInstancesWithLoadBalancerRequest with the parameterized properties
            </summary>
            <param name="loadBalancerName"> The name associated with the load balancer. The name must be unique within your set of load balancers. </param>
            <param name="instances"> A list of instance IDs that should be registered with the load balancer.</param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.RegisterInstancesWithLoadBalancerRequest.Instances">
            <summary>
            Gets and sets the property Instances. 
            <para>
             A list of instance IDs that should be registered with the load balancer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.RegisterInstancesWithLoadBalancerRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The name associated with the load balancer. The name must be unique within your set
            of load balancers. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.RegisterInstancesWithLoadBalancerResponse">
            <summary>
            Configuration for accessing Amazon RegisterInstancesWithLoadBalancer service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.RegisterInstancesWithLoadBalancerResult">
            <summary>
            The output for the <a>RegisterInstancesWithLoadBalancer</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.RegisterInstancesWithLoadBalancerResult.Instances">
            <summary>
            Gets and sets the property Instances. 
            <para>
             An updated list of instances for the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.RegisterInstancesWithLoadBalancerResponse.RegisterInstancesWithLoadBalancerResult">
            <summary>
            Gets and sets the RegisterInstancesWithLoadBalancerResult property.
            Represents the output of a RegisterInstancesWithLoadBalancer operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.RemoveTagsRequest">
            <summary>
            Container for the parameters to the RemoveTags operation.
            Removes one or more tags from the specified load balancer.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.RemoveTagsRequest.LoadBalancerNames">
            <summary>
            Gets and sets the property LoadBalancerNames. 
            <para>
            The name of the load balancer. You can specify a maximum of one load balancer name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.RemoveTagsRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tag keys to remove.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.RemoveTagsResponse">
            <summary>
            Configuration for accessing Amazon RemoveTags service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.RemoveTagsResult">
            <summary>
            The output for the <a>RemoveTags</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.RemoveTagsResponse.RemoveTagsResult">
            <summary>
            Gets and sets the RemoveTagsResult property.
            Represents the output of a RemoveTags operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerListenerSSLCertificateRequest">
            <summary>
            Container for the parameters to the SetLoadBalancerListenerSSLCertificate operation.
            Sets the certificate that terminates the specified listener's SSL connections. The
            specified certificate replaces any prior certificate that was used on the same load
            balancer and port. 
            
             
            <para>
            For more information on updating your SSL certificate, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/US_UpdatingLoadBalancerSSL.html">Updating
            an SSL Certificate for a Load Balancer</a> in the <i>Elastic Load Balancing Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerListenerSSLCertificateRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerListenerSSLCertificateRequest.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Instantiates SetLoadBalancerListenerSSLCertificateRequest with the parameterized properties
            </summary>
            <param name="loadBalancerName"> The name of the load balancer. </param>
            <param name="loadBalancerPort"> The port that uses the specified SSL certificate. </param>
            <param name="sslCertificateId"> The Amazon Resource Number (ARN) of the SSL certificate chain to use. For more information on SSL certificates, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingServerCerts.html"> Managing Server Certificates</a> in the <i>AWS Identity and Access Management User Guide</i>.</param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerListenerSSLCertificateRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The name of the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerListenerSSLCertificateRequest.LoadBalancerPort">
            <summary>
            Gets and sets the property LoadBalancerPort. 
            <para>
             The port that uses the specified SSL certificate. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerListenerSSLCertificateRequest.SSLCertificateId">
            <summary>
            Gets and sets the property SSLCertificateId. 
            <para>
             The Amazon Resource Number (ARN) of the SSL certificate chain to use. For more information
            on SSL certificates, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingServerCerts.html">
            Managing Server Certificates</a> in the <i>AWS Identity and Access Management User
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerListenerSSLCertificateResponse">
            <summary>
            Configuration for accessing Amazon SetLoadBalancerListenerSSLCertificate service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerListenerSSLCertificateResult">
            <summary>
            The output for the <a>SetLoadBalancerListenerSSLCertificate</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerListenerSSLCertificateResponse.SetLoadBalancerListenerSSLCertificateResult">
            <summary>
            Gets and sets the SetLoadBalancerListenerSSLCertificateResult property.
            Represents the output of a SetLoadBalancerListenerSSLCertificate operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesForBackendServerRequest">
            <summary>
            Container for the parameters to the SetLoadBalancerPoliciesForBackendServer operation.
            Replaces the current set of policies associated with a port on which the back-end
            server is listening with a new set of policies. After the policies have been created
            using <a>CreateLoadBalancerPolicy</a>, they can be applied here as a list. At this
            time, only the back-end server authentication policy type can be applied to the back-end
            ports; this policy type is composed of multiple public key policies. 
            
             
            <para>
            You can use <a>DescribeLoadBalancers</a> or <a>DescribeLoadBalancerPolicies</a> action
            to verify that the policy has been associated with the back-end server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesForBackendServerRequest.InstancePort">
            <summary>
            Gets and sets the property InstancePort. 
            <para>
             The port number associated with the back-end server. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesForBackendServerRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The mnemonic name associated with the load balancer. This name must be unique within
            the set of your load balancers. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesForBackendServerRequest.PolicyNames">
            <summary>
            Gets and sets the property PolicyNames. 
            <para>
             List of policy names to be set. If the list is empty, then all current polices are
            removed from the back-end server. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesForBackendServerResponse">
            <summary>
            Configuration for accessing Amazon SetLoadBalancerPoliciesForBackendServer service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesForBackendServerResult">
            <summary>
            The output for the <a>SetLoadBalancerPoliciesForBackendServer</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesForBackendServerResponse.SetLoadBalancerPoliciesForBackendServerResult">
            <summary>
            Gets and sets the SetLoadBalancerPoliciesForBackendServerResult property.
            Represents the output of a SetLoadBalancerPoliciesForBackendServer operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesOfListenerRequest">
            <summary>
            Container for the parameters to the SetLoadBalancerPoliciesOfListener operation.
            Associates, updates, or disables a policy with a listener on the load balancer. You
            can associate multiple policies with a listener.
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesOfListenerRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesOfListenerRequest.#ctor(System.String,System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates SetLoadBalancerPoliciesOfListenerRequest with the parameterized properties
            </summary>
            <param name="loadBalancerName"> The name of the load balancer. </param>
            <param name="loadBalancerPort"> The external port of the load balancer to associate the policy. </param>
            <param name="policyNames"> List of policies to be associated with the listener. If the list is empty, the current policy is removed from the listener. </param>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesOfListenerRequest.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
             The name of the load balancer. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesOfListenerRequest.LoadBalancerPort">
            <summary>
            Gets and sets the property LoadBalancerPort. 
            <para>
             The external port of the load balancer to associate the policy. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesOfListenerRequest.PolicyNames">
            <summary>
            Gets and sets the property PolicyNames. 
            <para>
             List of policies to be associated with the listener. If the list is empty, the current
            policy is removed from the listener. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesOfListenerResponse">
            <summary>
            Configuration for accessing Amazon SetLoadBalancerPoliciesOfListener service
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesOfListenerResult">
            <summary>
            The output for the <a>SetLoadBalancerPoliciesOfListener</a> action.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.SetLoadBalancerPoliciesOfListenerResponse.SetLoadBalancerPoliciesOfListenerResult">
            <summary>
            Gets and sets the SetLoadBalancerPoliciesOfListenerResult property.
            Represents the output of a SetLoadBalancerPoliciesOfListener operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.SourceSecurityGroup">
            <summary>
            This data type is used as a response element in the <a>DescribeLoadBalancers</a>
            action. For information about Elastic Load Balancing security groups, go to <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-security-features.html#using-elb-security-groups">Using
            Security Groups With Elastic Load Balancing</a> in the <i>Elastic Load Balancing Developer
            Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.SourceSecurityGroup.GroupName">
            <summary>
            Gets and sets the property GroupName. 
            <para>
             Name of the source security group. Use this value for the <code>--source-group</code>
            parameter of the <code>ec2-authorize</code> command in the Amazon EC2 command line
            tool. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.SourceSecurityGroup.OwnerAlias">
            <summary>
            Gets and sets the property OwnerAlias. 
            <para>
             Owner of the source security group. Use this value for the <code>--source-group-user</code>
            parameter of the <code>ec2-authorize</code> command in the Amazon EC2 command line
            tool. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.SubnetNotFoundException">
            <summary>
             ElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.SubnetNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new SubnetNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.Tag">
            <summary>
            Metadata assigned to a load balancer consisting of key-value pair.
            
             
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/TerminologyandKeyConcepts.html#tagging-elb">Tagging</a>
            in the <i>Elastic Load Balancing Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key of the tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.TagDescription">
            <summary>
            The descriptions of all the tags associated with load balancer.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.TagDescription.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
            The name of the load balancer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.TagDescription.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            List of tags associated with the load balancer.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.TagKeyOnly">
            <summary>
            The key of a tag to be removed.
            </summary>
        </member>
        <member name="P:Amazon.ElasticLoadBalancing.Model.TagKeyOnly.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The name of the key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.TooManyAccessPointsException">
            <summary>
             ElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.TooManyAccessPointsException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyAccessPointsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.TooManyLoadBalancersException">
            <summary>
             AmazonElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.TooManyLoadBalancersException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyLoadBalancersException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.TooManyPoliciesException">
            <summary>
             ElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.TooManyPoliciesException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyPoliciesException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.ElasticLoadBalancing.Model.TooManyTagsException">
            <summary>
             ElasticLoadBalancing exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticLoadBalancing.Model.TooManyTagsException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyTagsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.Kinesis.AmazonKinesisClient">
             <summary>
             Implementation for accessing Kinesis
            
             Amazon Kinesis Service API Reference 
             <para>
             Amazon Kinesis is a managed service that scales elastically for real time processing
             of streaming big data.
             </para>
             </summary>
        </member>
        <member name="T:Amazon.Kinesis.IAmazonKinesis">
             <summary>
             Interface for accessing Kinesis
            
             Amazon Kinesis Service API Reference 
             <para>
             Amazon Kinesis is a managed service that scales elastically for real time processing
             of streaming big data.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.Kinesis.IAmazonKinesis.AddTagsToStreamAsync(Amazon.Kinesis.Model.AddTagsToStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AddTagsToStream operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddTagsToStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.IAmazonKinesis.CreateStreamAsync(Amazon.Kinesis.Model.CreateStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateStream operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.IAmazonKinesis.DeleteStreamAsync(Amazon.Kinesis.Model.DeleteStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteStream operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.IAmazonKinesis.DescribeStreamAsync(Amazon.Kinesis.Model.DescribeStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeStream operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.IAmazonKinesis.GetRecordsAsync(Amazon.Kinesis.Model.GetRecordsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetRecords operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetRecords operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.IAmazonKinesis.GetShardIteratorAsync(Amazon.Kinesis.Model.GetShardIteratorRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetShardIterator operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetShardIterator operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.IAmazonKinesis.ListStreamsAsync(Amazon.Kinesis.Model.ListStreamsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListStreams operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListStreams operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.IAmazonKinesis.ListTagsForStreamAsync(Amazon.Kinesis.Model.ListTagsForStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListTagsForStream operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTagsForStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.IAmazonKinesis.MergeShardsAsync(Amazon.Kinesis.Model.MergeShardsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the MergeShards operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the MergeShards operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.IAmazonKinesis.PutRecordAsync(Amazon.Kinesis.Model.PutRecordRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutRecord operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutRecord operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.IAmazonKinesis.RemoveTagsFromStreamAsync(Amazon.Kinesis.Model.RemoveTagsFromStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RemoveTagsFromStream operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.IAmazonKinesis.SplitShardAsync(Amazon.Kinesis.Model.SplitShardRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SplitShard operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SplitShard operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonKinesisClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonKinesisClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.Kinesis.AmazonKinesisConfig)">
            <summary>
            Constructs AmazonKinesisClient with AWS Credentials and an
            AmazonKinesisClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonKinesisClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonKinesisClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonKinesisClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.#ctor(System.String,System.String,Amazon.Kinesis.AmazonKinesisConfig)">
            <summary>
            Constructs AmazonKinesisClient with AWS Access Key ID, AWS Secret Key and an
            AmazonKinesisClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonKinesisClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonKinesisClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonKinesisClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.#ctor(System.String,System.String,System.String,Amazon.Kinesis.AmazonKinesisConfig)">
            <summary>
            Constructs AmazonKinesisClient with AWS Access Key ID, AWS Secret Key and an
            AmazonKinesisClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonKinesisClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.AddTagsToStreamAsync(Amazon.Kinesis.Model.AddTagsToStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AddTagsToStream operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddTagsToStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.CreateStreamAsync(Amazon.Kinesis.Model.CreateStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateStream operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.DeleteStreamAsync(Amazon.Kinesis.Model.DeleteStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteStream operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.DescribeStreamAsync(Amazon.Kinesis.Model.DescribeStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeStream operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.GetRecordsAsync(Amazon.Kinesis.Model.GetRecordsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetRecords operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetRecords operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.GetShardIteratorAsync(Amazon.Kinesis.Model.GetShardIteratorRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetShardIterator operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetShardIterator operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.ListStreamsAsync(Amazon.Kinesis.Model.ListStreamsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListStreams operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListStreams operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.ListTagsForStreamAsync(Amazon.Kinesis.Model.ListTagsForStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListTagsForStream operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTagsForStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.MergeShardsAsync(Amazon.Kinesis.Model.MergeShardsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the MergeShards operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the MergeShards operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.PutRecordAsync(Amazon.Kinesis.Model.PutRecordRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutRecord operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutRecord operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.RemoveTagsFromStreamAsync(Amazon.Kinesis.Model.RemoveTagsFromStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RemoveTagsFromStream operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisClient.SplitShardAsync(Amazon.Kinesis.Model.SplitShardRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SplitShard operation.
            <seealso cref="T:Amazon.Kinesis.IAmazonKinesis"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SplitShard operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.Kinesis.AmazonKinesisConfig">
            <summary>
            Configuration for accessing Amazon Kinesis service
            </summary>
        </member>
        <member name="M:Amazon.Kinesis.AmazonKinesisConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.AmazonKinesisConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.AmazonKinesisConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.AddTagsToStreamRequest">
            <summary>
            Container for the parameters to the AddTagsToStream operation.
            Adds or updates tags for the specified Amazon Kinesis stream. Each stream can have
            up to 10 tags. 
            
             
            <para>
            If tags have already been assigned to the stream, <code>AddTagsToStream</code> overwrites
            any existing tags that correspond to the specified tag keys.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.AmazonKinesisRequest">
            <summary>
            Base class for Kinesis operation requests.
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.AddTagsToStreamRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.AddTagsToStreamRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The set of key-value pairs to use to create the tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.AddTagsToStreamResponse">
            <summary>
            Configuration for accessing Amazon AddTagsToStream service
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.AddTagsToStreamResponse.AddTagsToStreamResult">
            <summary>
            Gets and sets the AddTagsToStreamResult property.
            Represents the output of a AddTagsToStream operation.
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.CreateStreamRequest">
            <summary>
            Container for the parameters to the CreateStream operation.
            Creates a Amazon Kinesis stream. A stream captures and transports data records that
            are continuously emitted from different data sources or <i>producers</i>. Scale-out
            within an Amazon Kinesis stream is explicitly supported by means of shards, which
            are uniquely identified groups of data records in an Amazon Kinesis stream.
            
             
            <para>
            You specify and control the number of shards that a stream is composed of. Each open
            shard can support up to 5 read transactions per second, up to a maximum total of 2
            MB of data read per second. Each shard can support up to 1000 write transactions per
            second, up to a maximum total of 1 MB data written per second. You can add shards
            to a stream if the amount of data input increases and you can remove shards if the
            amount of data input decreases.
            </para>
             
            <para>
            The stream name identifies the stream. The name is scoped to the AWS account used
            by the application. It is also scoped by region. That is, two streams in two different
            accounts can have the same name, and two streams in the same account, but in two different
            regions, can have the same name. 
            </para>
             
            <para>
            <code>CreateStream</code> is an asynchronous operation. Upon receiving a <code>CreateStream</code>
            request, Amazon Kinesis immediately returns and sets the stream status to <code>CREATING</code>.
            After the stream is created, Amazon Kinesis sets the stream status to <code>ACTIVE</code>.
            You should perform read and write operations only on an <code>ACTIVE</code> stream.
            
            </para>
             
            <para>
            You receive a <code>LimitExceededException</code> when making a <code>CreateStream</code>
            request if you try to do one of the following:
            </para>
             <ul> <li>Have more than five streams in the <code>CREATING</code> state at any point
            in time.</li> <li>Create more shards than are authorized for your account.</li> </ul>
            
            <para>
            The default limit for an AWS account is 10 shards per stream. If you need to create
            a stream with more than 10 shards, <a href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html">contact
            AWS Support</a> to increase the limit on your account.
            </para>
             
            <para>
            You can use <code>DescribeStream</code> to check the stream status, which is returned
            in <code>StreamStatus</code>.
            </para>
             
            <para>
            <code>CreateStream</code> has a limit of 5 transactions per second per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.CreateStreamRequest.ShardCount">
            <summary>
            Gets and sets the property ShardCount. 
            <para>
            The number of shards that the stream will use. The throughput of the stream is a function
            of the number of shards; more shards are required for greater provisioned throughput.
            </para>
             
            <para>
            <b>Note:</b> The default limit for an AWS account is 10 shards per stream. If you
            need to create a stream with more than 10 shards, <a href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html">contact
            AWS Support</a> to increase the limit on your account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.CreateStreamRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            A name to identify the stream. The stream name is scoped to the AWS account used by
            the application that creates the stream. It is also scoped by region. That is, two
            streams in two different AWS accounts can have the same name, and two streams in the
            same AWS account, but in two different regions, can have the same name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.CreateStreamResponse">
            <summary>
            Configuration for accessing Amazon CreateStream service
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.CreateStreamResponse.CreateStreamResult">
            <summary>
            Gets and sets the CreateStreamResult property.
            Represents the output of a CreateStream operation.
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.DeleteStreamRequest">
            <summary>
            Container for the parameters to the DeleteStream operation.
            Deletes a stream and all its shards and data. You must shut down any applications
            that are operating on the stream before you delete the stream. If an application attempts
            to operate on a deleted stream, it will receive the exception <code>ResourceNotFoundException</code>.
            
             
            <para>
            If the stream is in the <code>ACTIVE</code> state, you can delete it. After a <code>DeleteStream</code>
            request, the specified stream is in the <code>DELETING</code> state until Amazon Kinesis
            completes the deletion.
            </para>
             
            <para>
            <b>Note:</b> Amazon Kinesis might continue to accept data read and write operations,
            such as <a>PutRecord</a> and <a>GetRecords</a>, on a stream in the <code>DELETING</code>
            state until the stream deletion is complete.
            </para>
             
            <para>
            When you delete a stream, any shards in that stream are also deleted, and any tags
            are dissociated from the stream.
            </para>
             
            <para>
            You can use the <a>DescribeStream</a> operation to check the state of the stream,
            which is returned in <code>StreamStatus</code>.
            </para>
             
            <para>
            <code>DeleteStream</code> has a limit of 5 transactions per second per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.DeleteStreamRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.DeleteStreamResponse">
            <summary>
            Configuration for accessing Amazon DeleteStream service
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.DeleteStreamResponse.DeleteStreamResult">
            <summary>
            Gets and sets the DeleteStreamResult property.
            Represents the output of a DeleteStream operation.
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.DescribeStreamRequest">
            <summary>
            Container for the parameters to the DescribeStream operation.
            Describes the specified stream.
            
             
            <para>
            The information about the stream includes its current status, its Amazon Resource
            Name (ARN), and an array of shard objects. For each shard object, there is information
            about the hash key and sequence number ranges that the shard spans, and the IDs of
            any earlier shards that played in a role in creating the shard. A sequence number
            is the identifier associated with every record ingested in the Amazon Kinesis stream.
            The sequence number is assigned when a record is put into the stream.
            </para>
             
            <para>
            You can limit the number of returned shards using the <code>Limit</code> parameter.
            The number of shards in a stream may be too large to return from a single call to
            <code>DescribeStream</code>. You can detect this by using the <code>HasMoreShards</code>
            flag in the returned output. <code>HasMoreShards</code> is set to <code>true</code>
            when there is more data available. 
            </para>
             
            <para>
            <code>DescribeStream</code> is a paginated operation. If there are more shards available,
            you can request them using the shard ID of the last shard returned. Specify this ID
            in the <code>ExclusiveStartShardId</code> parameter in a subsequent request to <code>DescribeStream</code>.
            
            </para>
             
            <para>
            <code>DescribeStream</code> has a limit of 10 transactions per second per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.DescribeStreamRequest.ExclusiveStartShardId">
            <summary>
            Gets and sets the property ExclusiveStartShardId. 
            <para>
            The shard ID of the shard to start with.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.DescribeStreamRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of shards to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.DescribeStreamRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.DescribeStreamResponse">
            <summary>
            Configuration for accessing Amazon DescribeStream service
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.DescribeStreamResult">
            <summary>
            Represents the output for <code>DescribeStream</code>.
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.DescribeStreamResult.StreamDescription">
            <summary>
            Gets and sets the property StreamDescription. 
            <para>
            The current status of the stream, the stream ARN, an array of shard objects that comprise
            the stream, and states whether there are more shards available.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.DescribeStreamResponse.DescribeStreamResult">
            <summary>
            Gets and sets the DescribeStreamResult property.
            Represents the output of a DescribeStream operation.
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.ExpiredIteratorException">
            <summary>
             Kinesis exception
             </summary>
        </member>
        <member name="M:Amazon.Kinesis.Model.ExpiredIteratorException.#ctor(System.String)">
            <summary>
            Constructs a new ExpiredIteratorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.Kinesis.Model.GetRecordsRequest">
            <summary>
            Container for the parameters to the GetRecords operation.
            Gets data records from a shard.
            
             
            <para>
            You specify a shard iterator for the shard using the <code>ShardIterator</code> parameter.
            The shard iterator specifies the position in the shard from which you want to start
            reading data records sequentially. <code>GetRecords</code> returns a new shard iterator
            in <code>NextShardIterator</code>. If the shard has been closed, the shard iterator
            can't return more data and <code>GetRecords</code> returns <code>null</code> in <code>NextShardIterator</code>.
            To read from an Amazon Kinesis stream continually, use <a>GetShardIterator</a> to
            get the shard iterator to specify in the first <code>GetRecords</code> call, and then
            specify the shard iterator returned in <code>NextShardIterator</code> in subsequent
            calls.
            </para>
             
            <para>
            If there are no records available, <code>GetRecords</code> returns an empty list.
            </para>
             
            <para>
            The size of the data returned by <code>GetRecords</code> will vary, but the maximum
            size is 10 MB. Each data record can be up to 50 KB in size, and each shard can read
            up to 2 MB per second. You can ensure that your calls don't exceed the maximum size
            or throughput by using the <code>Limit</code> parameter to specify the maximum number
            of records that <code>GetRecords</code> can return. Consider your average record size
            when specifying a limit. For example, if your average record size is 40 KB, you can
            limit the data returned to about 1 MB per call using a limit of 25.
            </para>
             
            <para>
            If there is insufficient provisioned throughput on the shard involved in the request,
            subsequent calls to <code>GetRecords</code> made within the next one second throw
            <code>ProvisionedThroughputExceededException</code>. <code>GetRecords</code> won't
            return data when it throws an exception, so wait one second before making another
            call or the application won't get any records. Also, you can scale by provisioning
            multiple shards.
            </para>
             
            <para>
            To detect whether you are falling behind in processing, add a timestamp to your records
            and note how long it takes to process them.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.GetRecordsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum size of data to return, in MB. Specify a value of up to 10,000. If you
            specify a value that is greater than 10,000, <code>GetRecords</code> throws <code>InvalidArgumentException</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.GetRecordsRequest.ShardIterator">
            <summary>
            Gets and sets the property ShardIterator. 
            <para>
            The position in the shard from which you want to start sequentially reading data records.
            A shard iterator specifies this position using the sequence number of a data record
            in the shard.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.GetRecordsResponse">
            <summary>
            Configuration for accessing Amazon GetRecords service
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.GetRecordsResult">
            <summary>
            Represents the output for <code>GetRecords</code>.
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.GetRecordsResult.NextShardIterator">
            <summary>
            Gets and sets the property NextShardIterator. 
            <para>
            The next position in the shard from which to start sequentially reading data records.
            If set to <code>null</code>, the shard has been closed and the requested iterator
            will not return any more data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.GetRecordsResult.Records">
            <summary>
            Gets and sets the property Records. <P>The data records retrieved from the shard.</P>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.GetRecordsResponse.GetRecordsResult">
            <summary>
            Gets and sets the GetRecordsResult property.
            Represents the output of a GetRecords operation.
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.GetShardIteratorRequest">
            <summary>
            Container for the parameters to the GetShardIterator operation.
            Gets a shard iterator in <code>ShardIterator</code>. The shard iterator specifies
            the position in the shard from which you want to start reading data records sequentially.
            A shard iterator specifies this position using the sequence number of a data record
            in a shard. A sequence number is the identifier associated with every record ingested
            in the Amazon Kinesis stream. The sequence number is assigned when a record is put
            into the stream. 
            
             
            <para>
            You must specify the shard iterator type. For example, you can set the <code>ShardIteratorType</code>
            parameter to read exactly from the position denoted by a specific sequence number
            by using the <code>AT_SEQUENCE_NUMBER</code> shard iterator type, or right after the
            sequence number by using the <code>AFTER_SEQUENCE_NUMBER</code> shard iterator type,
            using sequence numbers returned by earlier <a>PutRecord</a>, <a>GetRecords</a> or
            <a>DescribeStream</a> requests. You can specify the shard iterator type TRIM_HORIZON
            in the request to cause <code>ShardIterator</code> to point to the last untrimmed
            record in the shard in the system, which is the oldest data record in the shard. Or
            you can point to just after the most recent record in the shard, by using the shard
            iterator type LATEST, so that you always read the most recent data in the shard. 
            </para>
             
            <para>
            <b>Note:</b> Each shard iterator expires five minutes after it is returned to the
            requester.
            </para>
             
            <para>
            When you repeatedly read from an Amazon Kinesis stream use a <a>GetShardIterator</a>
            request to get the first shard iterator to to use in your first <code>GetRecords</code>
            request and then use the shard iterator returned by the <code>GetRecords</code> request
            in <code>NextShardIterator</code> for subsequent reads. A new shard iterator is returned
            by every <code>GetRecords</code> request in <code>NextShardIterator</code>, which
            you use in the <code>ShardIterator</code> parameter of the next <code>GetRecords</code>
            request. 
            </para>
             
            <para>
            If a <code>GetShardIterator</code> request is made too often, you will receive a <code>ProvisionedThroughputExceededException</code>.
            For more information about throughput limits, see the <a href="http://docs.aws.amazon.com/kinesis/latest/dev/">Amazon
            Kinesis Developer Guide</a>. 
            </para>
             
            <para>
            <code>GetShardIterator</code> can return <code>null</code> for its <code>ShardIterator</code>
            to indicate that the shard has been closed and that the requested iterator will return
            no more data. A shard can be closed by <a>SplitShard</a> or <a>MergeShards</a>.
            </para>
             
            <para>
            <code>GetShardIterator</code> has a limit of 5 transactions per second per account
            per open shard.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.GetShardIteratorRequest.ShardId">
            <summary>
            Gets and sets the property ShardId. 
            <para>
            The shard ID of the shard to get the iterator for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.GetShardIteratorRequest.ShardIteratorType">
            <summary>
            Gets and sets the property ShardIteratorType. 
            <para>
            Determines how the shard iterator is used to start reading data records from the shard.
            </para>
             
            <para>
            The following are the valid shard iterator types:
            </para>
             <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by
            a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after
            the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start
            reading at the last untrimmed record in the shard in the system, which is the oldest
            data record in the shard.</li> <li>LATEST - Start reading just after the most recent
            record in the shard, so that you always read the most recent data in the shard.</li>
            </ul>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.GetShardIteratorRequest.StartingSequenceNumber">
            <summary>
            Gets and sets the property StartingSequenceNumber. 
            <para>
            The sequence number of the data record in the shard from which to start reading from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.GetShardIteratorRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.GetShardIteratorResponse">
            <summary>
            Configuration for accessing Amazon GetShardIterator service
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.GetShardIteratorResult">
            <summary>
            Represents the output for <code>GetShardIterator</code>.
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.GetShardIteratorResult.ShardIterator">
            <summary>
            Gets and sets the property ShardIterator. 
            <para>
            The position in the shard from which to start reading data records sequentially. A
            shard iterator specifies this position using the sequence number of a data record
            in a shard.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.GetShardIteratorResponse.GetShardIteratorResult">
            <summary>
            Gets and sets the GetShardIteratorResult property.
            Represents the output of a GetShardIterator operation.
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.HashKeyRange">
            <summary>
            The range of possible hash key values for the shard, which is a set of ordered contiguous
            positive integers.
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.HashKeyRange.EndingHashKey">
            <summary>
            Gets and sets the property EndingHashKey. 
            <para>
            The ending hash key of the hash key range.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.HashKeyRange.StartingHashKey">
            <summary>
            Gets and sets the property StartingHashKey. 
            <para>
            The starting hash key of the hash key range.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.AddTagsToStreamRequestMarshaller">
            <summary>
            AddTagsToStream Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.AddTagsToStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AddTagsToStream operation
            </summary>  
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.CreateStreamRequestMarshaller">
            <summary>
            CreateStream Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.CreateStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateStream operation
            </summary>  
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.DeleteStreamRequestMarshaller">
            <summary>
            DeleteStream Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.DeleteStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteStream operation
            </summary>  
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.DescribeStreamRequestMarshaller">
            <summary>
            DescribeStream Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.DescribeStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeStream operation
            </summary>  
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.GetRecordsRequestMarshaller">
            <summary>
            GetRecords Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.GetRecordsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetRecords operation
            </summary>  
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.GetShardIteratorRequestMarshaller">
            <summary>
            GetShardIterator Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.GetShardIteratorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetShardIterator operation
            </summary>  
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.HashKeyRangeUnmarshaller">
            <summary>
            Response Unmarshaller for HashKeyRange Object
            </summary>  
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.ListStreamsRequestMarshaller">
            <summary>
            ListStreams Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.ListStreamsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListStreams operation
            </summary>  
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.ListTagsForStreamRequestMarshaller">
            <summary>
            ListTagsForStream Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.ListTagsForStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForStream operation
            </summary>  
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.MergeShardsRequestMarshaller">
            <summary>
            MergeShards Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.MergeShardsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for MergeShards operation
            </summary>  
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.PutRecordRequestMarshaller">
            <summary>
            PutRecord Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.PutRecordResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutRecord operation
            </summary>  
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.RecordUnmarshaller">
            <summary>
            Response Unmarshaller for Record Object
            </summary>  
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.RemoveTagsFromStreamRequestMarshaller">
            <summary>
            RemoveTagsFromStream Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.RemoveTagsFromStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemoveTagsFromStream operation
            </summary>  
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.SequenceNumberRangeUnmarshaller">
            <summary>
            Response Unmarshaller for SequenceNumberRange Object
            </summary>  
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.ShardUnmarshaller">
            <summary>
            Response Unmarshaller for Shard Object
            </summary>  
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.SplitShardRequestMarshaller">
            <summary>
            SplitShard Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.SplitShardResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SplitShard operation
            </summary>  
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.StreamDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for StreamDescription Object
            </summary>  
        </member>
        <member name="T:Amazon.Kinesis.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="T:Amazon.Kinesis.Model.InvalidArgumentException">
            <summary>
             Kinesis exception
             </summary>
        </member>
        <member name="M:Amazon.Kinesis.Model.InvalidArgumentException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidArgumentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.Kinesis.Model.LimitExceededException">
            <summary>
             Kinesis exception
             </summary>
        </member>
        <member name="M:Amazon.Kinesis.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.Kinesis.Model.ListStreamsRequest">
            <summary>
            Container for the parameters to the ListStreams operation.
            Lists your streams.
            
             
            <para>
             The number of streams may be too large to return from a single call to <code>ListStreams</code>.
            You can limit the number of returned streams using the <code>Limit</code> parameter.
            If you do not specify a value for the <code>Limit</code> parameter, Amazon Kinesis
            uses the default limit, which is currently 10.
            </para>
             
            <para>
             You can detect if there are more streams available to list by using the <code>HasMoreStreams</code>
            flag from the returned output. If there are more streams available, you can request
            more streams by using the name of the last stream returned by the <code>ListStreams</code>
            request in the <code>ExclusiveStartStreamName</code> parameter in a subsequent request
            to <code>ListStreams</code>. The group of stream names returned by the subsequent
            request is then added to the list. You can continue this process until all the stream
            names have been collected in the list. 
            </para>
             
            <para>
            <code>ListStreams</code> has a limit of 5 transactions per second per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.ListStreamsRequest.ExclusiveStartStreamName">
            <summary>
            Gets and sets the property ExclusiveStartStreamName. 
            <para>
            The name of the stream to start the list with.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.ListStreamsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of streams to list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.ListStreamsResponse">
            <summary>
            Configuration for accessing Amazon ListStreams service
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.ListStreamsResult">
            <summary>
            Represents the output for <code>ListStreams</code>.
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.ListStreamsResult.HasMoreStreams">
            <summary>
            Gets and sets the property HasMoreStreams. 
            <para>
            If set to <code>true</code>, there are more streams available to list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.ListStreamsResult.StreamNames">
            <summary>
            Gets and sets the property StreamNames. 
            <para>
            The names of the streams that are associated with the AWS account making the <code>ListStreams</code>
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.ListStreamsResponse.ListStreamsResult">
            <summary>
            Gets and sets the ListStreamsResult property.
            Represents the output of a ListStreams operation.
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.ListTagsForStreamRequest">
            <summary>
            Container for the parameters to the ListTagsForStream operation.
            Lists the tags for the specified Amazon Kinesis stream.
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.ListTagsForStreamRequest.ExclusiveStartTagKey">
            <summary>
            Gets and sets the property ExclusiveStartTagKey. 
            <para>
            The key to use as the starting point for the list of tags. If this parameter is set,
            <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.ListTagsForStreamRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The number of tags to return. If this number is less than the total number of tags
            associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>.
            To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in
            the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.ListTagsForStreamRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.ListTagsForStreamResponse">
            <summary>
            Configuration for accessing Amazon ListTagsForStream service
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.ListTagsForStreamResult">
            <summary>
            Represents the output for <code>ListTagsForStream</code>.
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.ListTagsForStreamResult.HasMoreTags">
            <summary>
            Gets and sets the property HasMoreTags. 
            <para>
            If set to <code>true</code>, more tags are available. To request additional tags,
            set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.ListTagsForStreamResult.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags associated with <code>StreamName</code>, starting with the first tag
            after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.ListTagsForStreamResponse.ListTagsForStreamResult">
            <summary>
            Gets and sets the ListTagsForStreamResult property.
            Represents the output of a ListTagsForStream operation.
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.MergeShardsRequest">
            <summary>
            Container for the parameters to the MergeShards operation.
            Merges two adjacent shards in a stream and combines them into a single shard to reduce
            the stream's capacity to ingest and transport data. Two shards are considered adjacent
            if the union of the hash key ranges for the two shards form a contiguous set with
            no gaps. For example, if you have two shards, one with a hash key range of 276...381
            and the other with a hash key range of 382...454, then you could merge these two shards
            into a single shard that would have a hash key range of 276...454. After the merge,
            the single child shard receives data for all hash key values covered by the two parent
            shards.
            
             
            <para>
            <code>MergeShards</code> is called when there is a need to reduce the overall capacity
            of a stream because of excess capacity that is not being used. You must specify the
            shard to be merged and the adjacent shard for a stream. For more information about
            merging shards, see the <a href="http://docs.aws.amazon.com/kinesis/latest/dev/">Amazon
            Kinesis Developer Guide</a>.
            </para>
             
            <para>
            If the stream is in the <code>ACTIVE</code> state, you can call <code>MergeShards</code>.
            If a stream is in the <code>CREATING</code>, <code>UPDATING</code>, or <code>DELETING</code>
            state, <code>MergeShards</code> returns a <code>ResourceInUseException</code>. If
            the specified stream does not exist, <code>MergeShards</code> returns a <code>ResourceNotFoundException</code>.
            
            </para>
             
            <para>
            You can use <a>DescribeStream</a> to check the state of the stream, which is returned
            in <code>StreamStatus</code>.
            </para>
             
            <para>
            <code>MergeShards</code> is an asynchronous operation. Upon receiving a <code>MergeShards</code>
            request, Amazon Kinesis immediately returns a response and sets the <code>StreamStatus</code>
            to <code>UPDATING</code>. After the operation is completed, Amazon Kinesis sets the
            <code>StreamStatus</code> to <code>ACTIVE</code>. Read and write operations continue
            to work while the stream is in the <code>UPDATING</code> state. 
            </para>
             
            <para>
            You use <a>DescribeStream</a> to determine the shard IDs that are specified in the
            <code>MergeShards</code> request. 
            </para>
             
            <para>
            If you try to operate on too many streams in parallel using <a>CreateStream</a>, <a>DeleteStream</a>,
            <code>MergeShards</code> or <a>SplitShard</a>, you will receive a <code>LimitExceededException</code>.
            
            </para>
             
            <para>
            <code>MergeShards</code> has limit of 5 transactions per second per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.MergeShardsRequest.AdjacentShardToMerge">
            <summary>
            Gets and sets the property AdjacentShardToMerge. 
            <para>
            The shard ID of the adjacent shard for the merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.MergeShardsRequest.ShardToMerge">
            <summary>
            Gets and sets the property ShardToMerge. 
            <para>
            The shard ID of the shard to combine with the adjacent shard for the merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.MergeShardsRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream for the merge.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.MergeShardsResponse">
            <summary>
            Configuration for accessing Amazon MergeShards service
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.MergeShardsResponse.MergeShardsResult">
            <summary>
            Gets and sets the MergeShardsResult property.
            Represents the output of a MergeShards operation.
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.ProvisionedThroughputExceededException">
            <summary>
             Kinesis exception
             </summary>
        </member>
        <member name="M:Amazon.Kinesis.Model.ProvisionedThroughputExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ProvisionedThroughputExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.Kinesis.Model.PutRecordRequest">
            <summary>
            Container for the parameters to the PutRecord operation.
            Puts a data record from a producer into an Amazon Kinesis stream. You must call <code>PutRecord</code>
            to send data from the producer into the Amazon Kinesis stream for real-time ingestion
            and subsequent processing. You must specify the name of the stream that captures,
            stores, and transports the data; a partition key; and the data blob itself. The data
            blob could be a segment from a log file, geographic/location data, website clickstream
            data, or any other data type.
            
             
            <para>
            The partition key is used to distribute data across shards. Amazon Kinesis segregates
            the data records that belong to a data stream into multiple shards, using the partition
            key associated with each data record to determine which shard a given data record
            belongs to. 
            </para>
             
            <para>
            Partition keys are Unicode strings, with a maximum length limit of 256 bytes. An MD5
            hash function is used to map partition keys to 128-bit integer values and to map associated
            data records to shards using the hash key ranges of the shards. You can override hashing
            the partition key to determine the shard by explicitly specifying a hash value using
            the <code>ExplicitHashKey</code> parameter. For more information, see the <a href="http://docs.aws.amazon.com/kinesis/latest/dev/">Amazon
            Kinesis Developer Guide</a>.
            </para>
             
            <para>
            <code>PutRecord</code> returns the shard ID of where the data record was placed and
            the sequence number that was assigned to the data record.
            </para>
             
            <para>
            Sequence numbers generally increase over time. To guarantee strictly increasing ordering,
            use the <code>SequenceNumberForOrdering</code> parameter. For more information, see
            the <a href="http://docs.aws.amazon.com/kinesis/latest/dev/">Amazon Kinesis Developer
            Guide</a>.
            </para>
             
            <para>
            If a <code>PutRecord</code> request cannot be processed because of insufficient provisioned
            throughput on the shard involved in the request, <code>PutRecord</code> throws <code>ProvisionedThroughputExceededException</code>.
            
            </para>
             
            <para>
            Data records are accessible for only 24 hours from the time that they are added to
            an Amazon Kinesis stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.PutRecordRequest.Data">
            <summary>
            Gets and sets the property Data. 
            <para>
            The data blob to put into the record, which is Base64-encoded when the blob is serialized.
            The maximum size of the data blob (the payload after Base64-decoding) is 50 kilobytes
            (KB) 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.PutRecordRequest.ExplicitHashKey">
            <summary>
            Gets and sets the property ExplicitHashKey. 
            <para>
            The hash value used to explicitly determine the shard the data record is assigned
            to by overriding the partition key hash.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.PutRecordRequest.PartitionKey">
            <summary>
            Gets and sets the property PartitionKey. 
            <para>
            Determines which shard in the stream the data record is assigned to. Partition keys
            are Unicode strings with a maximum length limit of 256 bytes. Amazon Kinesis uses
            the partition key as input to a hash function that maps the partition key and associated
            data to a specific shard. Specifically, an MD5 hash function is used to map partition
            keys to 128-bit integer values and to map associated data records to shards. As a
            result of this hashing mechanism, all data records with the same partition key will
            map to the same shard within the stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.PutRecordRequest.SequenceNumberForOrdering">
            <summary>
            Gets and sets the property SequenceNumberForOrdering. 
            <para>
            Guarantees strictly increasing sequence numbers, for puts from the same client and
            to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of
            record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the <a>PutRecordResult</a>
            when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely
            ordered based on arrival time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.PutRecordRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream to put the data record into.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.PutRecordResponse">
            <summary>
            Configuration for accessing Amazon PutRecord service
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.PutRecordResult">
            <summary>
            Represents the output for <code>PutRecord</code>.
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.PutRecordResult.SequenceNumber">
            <summary>
            Gets and sets the property SequenceNumber. 
            <para>
            The sequence number identifier that was assigned to the put data record. The sequence
            number for the record is unique across all records in the stream. A sequence number
            is the identifier associated with every record put into the stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.PutRecordResult.ShardId">
            <summary>
            Gets and sets the property ShardId. 
            <para>
            The shard ID of the shard where the data record was placed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.PutRecordResponse.PutRecordResult">
            <summary>
            Gets and sets the PutRecordResult property.
            Represents the output of a PutRecord operation.
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.Record">
            <summary>
            The unit of data of the Amazon Kinesis stream, which is composed of a sequence number,
            a partition key, and a data blob.
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.Record.Data">
            <summary>
            Gets and sets the property Data. 
            <para>
            The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis
            service, which does not inspect, interpret, or change the data in the blob in any
            way. The maximum size of the data blob (the payload after Base64-decoding) is 50 kilobytes
            (KB) 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.Record.PartitionKey">
            <summary>
            Gets and sets the property PartitionKey. 
            <para>
            Identifies which shard in the stream the data record is assigned to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.Record.SequenceNumber">
            <summary>
            Gets and sets the property SequenceNumber. 
            <para>
            The unique identifier for the record in the Amazon Kinesis stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.RemoveTagsFromStreamRequest">
            <summary>
            Container for the parameters to the RemoveTagsFromStream operation.
            Deletes tags from the specified Amazon Kinesis stream.
            
             
            <para>
            If you specify a tag that does not exist, it is ignored.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.RemoveTagsFromStreamRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.RemoveTagsFromStreamRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            A list of tag keys. Each corresponding tag is deleted from the stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.RemoveTagsFromStreamResponse">
            <summary>
            Configuration for accessing Amazon RemoveTagsFromStream service
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.RemoveTagsFromStreamResponse.RemoveTagsFromStreamResult">
            <summary>
            Gets and sets the RemoveTagsFromStreamResult property.
            Represents the output of a RemoveTagsFromStream operation.
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.ResourceInUseException">
            <summary>
             Kinesis exception
             </summary>
        </member>
        <member name="M:Amazon.Kinesis.Model.ResourceInUseException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.Kinesis.Model.ResourceNotFoundException">
            <summary>
             Kinesis exception
             </summary>
        </member>
        <member name="M:Amazon.Kinesis.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.Kinesis.Model.SequenceNumberRange">
            <summary>
            The range of possible sequence numbers for the shard.
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.SequenceNumberRange.EndingSequenceNumber">
            <summary>
            Gets and sets the property EndingSequenceNumber. 
            <para>
            The ending sequence number for the range. Shards that are in the OPEN state have an
            ending sequence number of <code>null</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.SequenceNumberRange.StartingSequenceNumber">
            <summary>
            Gets and sets the property StartingSequenceNumber. 
            <para>
            The starting sequence number for the range.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.Shard">
            <summary>
            A uniquely identified group of data records in an Amazon Kinesis stream.
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.Shard.AdjacentParentShardId">
            <summary>
            Gets and sets the property AdjacentParentShardId. 
            <para>
            The shard Id of the shard adjacent to the shard's parent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.Shard.HashKeyRange">
            <summary>
            Gets and sets the property HashKeyRange. 
            <para>
            The range of possible hash key values for the shard, which is a set of ordered contiguous
            positive integers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.Shard.ParentShardId">
            <summary>
            Gets and sets the property ParentShardId. 
            <para>
            The shard Id of the shard's parent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.Shard.SequenceNumberRange">
            <summary>
            Gets and sets the property SequenceNumberRange. 
            <para>
            The range of possible sequence numbers for the shard.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.Shard.ShardId">
            <summary>
            Gets and sets the property ShardId. 
            <para>
            The unique identifier of the shard within the Amazon Kinesis stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.SplitShardRequest">
            <summary>
            Container for the parameters to the SplitShard operation.
            Splits a shard into two new shards in the stream, to increase the stream's capacity
            to ingest and transport data. <code>SplitShard</code> is called when there is a need
            to increase the overall capacity of stream because of an expected increase in the
            volume of data records being ingested. 
            
             
            <para>
            You can also use <code>SplitShard</code> when a shard appears to be approaching its
            maximum utilization, for example, when the set of producers sending data into the
            specific shard are suddenly sending more than previously anticipated. You can also
            call <code>SplitShard</code> to increase stream capacity, so that more Amazon Kinesis
            applications can simultaneously read data from the stream for real-time processing.
            
            </para>
             
            <para>
            You must specify the shard to be split and the new hash key, which is the position
            in the shard where the shard gets split in two. In many cases, the new hash key might
            simply be the average of the beginning and ending hash key, but it can be any hash
            key value in the range being mapped into the shard. For more information about splitting
            shards, see the <a href="http://docs.aws.amazon.com/kinesis/latest/dev/">Amazon Kinesis
            Developer Guide</a>. 
            </para>
             
            <para>
            You can use <a>DescribeStream</a> to determine the shard ID and hash key values for
            the <code>ShardToSplit</code> and <code>NewStartingHashKey</code> parameters that
            are specified in the <code>SplitShard</code> request.
            </para>
             
            <para>
            <code>SplitShard</code> is an asynchronous operation. Upon receiving a <code>SplitShard</code>
            request, Amazon Kinesis immediately returns a response and sets the stream status
            to <code>UPDATING</code>. After the operation is completed, Amazon Kinesis sets the
            stream status to <code>ACTIVE</code>. Read and write operations continue to work while
            the stream is in the <code>UPDATING</code> state. 
            </para>
             
            <para>
            You can use <code>DescribeStream</code> to check the status of the stream, which is
            returned in <code>StreamStatus</code>. If the stream is in the <code>ACTIVE</code>
            state, you can call <code>SplitShard</code>. If a stream is in <code>CREATING</code>
            or <code>UPDATING</code> or <code>DELETING</code> states, <code>DescribeStream</code>
            returns a <code>ResourceInUseException</code>.
            </para>
             
            <para>
            If the specified stream does not exist, <code>DescribeStream</code> returns a <code>ResourceNotFoundException</code>.
            If you try to create more shards than are authorized for your account, you receive
            a <code>LimitExceededException</code>. 
            </para>
             
            <para>
            The default limit for an AWS account is 10 shards per stream. If you need to create
            a stream with more than 10 shards, <a href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html">contact
            AWS Support</a> to increase the limit on your account.
            </para>
             
            <para>
            If you try to operate on too many streams in parallel using <a>CreateStream</a>, <a>DeleteStream</a>,
            <a>MergeShards</a> or <a>SplitShard</a>, you receive a <code>LimitExceededException</code>.
            
            </para>
             
            <para>
            <code>SplitShard</code> has limit of 5 transactions per second per account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.SplitShardRequest.NewStartingHashKey">
            <summary>
            Gets and sets the property NewStartingHashKey. 
            <para>
            A hash key value for the starting hash key of one of the child shards created by the
            split. The hash key range for a given shard constitutes a set of ordered contiguous
            positive integers. The value for <code>NewStartingHashKey</code> must be in the range
            of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash
            key value and all higher hash key values in hash key range are distributed to one
            of the child shards. All the lower hash key values in the range are distributed to
            the other child shard.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.SplitShardRequest.ShardToSplit">
            <summary>
            Gets and sets the property ShardToSplit. 
            <para>
            The shard ID of the shard to split.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.SplitShardRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream for the shard split.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.SplitShardResponse">
            <summary>
            Configuration for accessing Amazon SplitShard service
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.SplitShardResponse.SplitShardResult">
            <summary>
            Gets and sets the SplitShardResult property.
            Represents the output of a SplitShard operation.
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.StreamDescription">
            <summary>
            Represents the output for <code>DescribeStream</code>.
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.StreamDescription.HasMoreShards">
            <summary>
            Gets and sets the property HasMoreShards. 
            <para>
            If set to <code>true</code>, more shards in the stream are available to describe.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.StreamDescription.Shards">
            <summary>
            Gets and sets the property Shards. 
            <para>
            The shards that comprise the stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.StreamDescription.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The Amazon Resource Name (ARN) for the stream being described.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.StreamDescription.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the stream being described.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.StreamDescription.StreamStatus">
            <summary>
            Gets and sets the property StreamStatus. 
            <para>
            The current status of the stream being described.
            </para>
             
            <para>
            The stream status is one of the following states:
            </para>
             <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately
            returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code>
            - The stream is being deleted. The specified stream is in the <code>DELETING</code>
            state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> -
            The stream exists and is ready for read and write operations or deletion. You should
            perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li>
            <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write
            operations continue to work while the stream is in the <code>UPDATING</code> state.</li>
            </ul>
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.Model.Tag">
            <summary>
            Metadata assigned to the stream, consisting of a key-value pair.
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            A unique identifier for the tag. Maximum length: 128 characters. Valid characters:
            Unicode letters, digits, white space, _ . / = + - % @
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Kinesis.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            An optional string, typically used to describe or define the tag. Maximum length:
            256 characters. Valid characters: Unicode letters, digits, white space, _ . / = +
            - % @
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Kinesis.ShardIteratorType">
            <summary>
            Constants used for properties of type ShardIteratorType.
            </summary>
        </member>
        <member name="F:Amazon.Kinesis.ShardIteratorType.AFTER_SEQUENCE_NUMBER">
            <summary>
            Constant AFTER_SEQUENCE_NUMBER for ShardIteratorType
            </summary>
        </member>
        <member name="F:Amazon.Kinesis.ShardIteratorType.AT_SEQUENCE_NUMBER">
            <summary>
            Constant AT_SEQUENCE_NUMBER for ShardIteratorType
            </summary>
        </member>
        <member name="F:Amazon.Kinesis.ShardIteratorType.LATEST">
            <summary>
            Constant LATEST for ShardIteratorType
            </summary>
        </member>
        <member name="F:Amazon.Kinesis.ShardIteratorType.TRIM_HORIZON">
            <summary>
            Constant TRIM_HORIZON for ShardIteratorType
            </summary>
        </member>
        <member name="M:Amazon.Kinesis.ShardIteratorType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.Kinesis.ShardIteratorType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.Kinesis.StreamStatus">
            <summary>
            Constants used for properties of type StreamStatus.
            </summary>
        </member>
        <member name="F:Amazon.Kinesis.StreamStatus.ACTIVE">
            <summary>
            Constant ACTIVE for StreamStatus
            </summary>
        </member>
        <member name="F:Amazon.Kinesis.StreamStatus.CREATING">
            <summary>
            Constant CREATING for StreamStatus
            </summary>
        </member>
        <member name="F:Amazon.Kinesis.StreamStatus.DELETING">
            <summary>
            Constant DELETING for StreamStatus
            </summary>
        </member>
        <member name="F:Amazon.Kinesis.StreamStatus.UPDATING">
            <summary>
            Constant UPDATING for StreamStatus
            </summary>
        </member>
        <member name="M:Amazon.Kinesis.StreamStatus.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.Kinesis.StreamStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Runtime.AbstractWebServiceClient.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern for the AmazonWebServiceClient
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.Runtime.AbstractWebServiceClient.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.AbstractWebServiceClient.Finalize">
            <summary>
            The destructor for the client class.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.AbstractWebServiceClient.DontUnescapePathDotsAndSlashes(System.Uri)">
            <summary>
            Patches the in-flight uri to stop it unescaping the path etc (what Uri did before
            Microsoft deprecated the constructor flag). This is particularly important for
            Amazon S3 customers who want to use backslash (\) in their key names.
            </summary>
            <remarks>
            Different behavior in the various runtimes has been observed and in addition some 
            'documented' ways of doing this between 2.x and 4.x runtimes has also been observed 
            to not be reliable.
            
            This patch effectively emulates what adding a schemesettings element to the 
            app.config file with value 'name="http" genericUriParserOptions="DontUnescapePathDotsAndSlashes"'
            does. As we're a dll, that avenue is not open to us.
            </remarks>
            <param name="uri"></param>
        </member>
        <member name="M:Amazon.Runtime.AbstractWebServiceClient.CloneConfig``1">
            <summary>
            Used to create a copy of the config for a different service then the current instance.
            </summary>
            <typeparam name="C"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.AbstractWebServiceClient.ShouldRetry(System.Net.HttpStatusCode,Amazon.Runtime.ClientConfig,Amazon.Runtime.AmazonServiceException,System.Int32)">
            <summary>
            Returns true if a failed request should be retried.
            </summary>
            <param name="statusCode">The HTTP status code from the failed request</param>
            <param name="config">The client config</param>
            <param name="errorResponseException">The exception from the failed request</param>
            <param name="retries">The number of times the current request has been attempted</param>
            <returns>True if the failed request should be retried.</returns>
        </member>
        <member name="M:Amazon.Runtime.AbstractWebServiceClient.CanRetry(Amazon.Runtime.Internal.IRequestData)">
            <summary>
            Returns true if the request is in a state where it can be retried.
            False otherwise.
            </summary>
            <param name="irequest"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.AbstractWebServiceClient.pauseExponentially(System.Int32)">
            <summary> 
            Exponential sleep on failed request to avoid flooding a service with
            retries.
            </summary>
            <param name="retries">Current retry count.</param>
        </member>
        <member name="E:Amazon.Runtime.AbstractWebServiceClient.BeforeMarshallingEvent">
            <summary>
            Occurs before a request is marshalled.
            </summary>
        </member>
        <member name="E:Amazon.Runtime.AbstractWebServiceClient.BeforeRequestEvent">
            <summary>
            Occurs before a request is issued against the service.
            </summary>
        </member>
        <member name="E:Amazon.Runtime.AbstractWebServiceClient.AfterResponseEvent">
            <summary>
            Occurs after a response is received from the service.
            </summary>
        </member>
        <member name="E:Amazon.Runtime.AbstractWebServiceClient.ExceptionEvent">
            <summary>
            Occurs after an exception is encountered.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.AbstractWebServiceClient.ServiceURL">
            <summary>
            Gets the service url endpoint used by this client.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.AmazonClientException">
            <summary>
            Exception thrown by the SDK for errors that occur within the SDK.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.AmazonUnmarshallingException">
            <summary>
            This exception is thrown when there is a parse error on the response back from AWS.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.AsyncResult.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.AsyncResult.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AbstractAWSSigner.ComputeHash(System.String,System.String,Amazon.Runtime.SigningAlgorithm)">
            <summary>
            Computes RFC 2104-compliant HMAC signature.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AbstractAWSSigner.ComputeHash(System.Byte[],System.String,Amazon.Runtime.SigningAlgorithm)">
            <summary>
            Computes RFC 2104-compliant HMAC signature.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AbstractAWSSigner.UseV4Signing(System.Boolean,Amazon.Runtime.ClientConfig)">
            <summary>
            Inspects the supplied evidence to return the signer appropriate for the operation
            </summary>
            <param name="useSigV4Setting">Global setting for the service</param>
            <param name="config">Configuration for the client</param>
            <returns>True if signature v4 request signing should be used</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS3Signer.Sign(Amazon.Runtime.Internal.IRequest,Amazon.Runtime.ClientConfig,Amazon.Runtime.Internal.Util.RequestMetrics,System.String,System.String)">
            <summary>
            Signs the specified request with the AWS3 signing protocol by using the
            AWS account credentials given in the method parameters.
            </summary>
            <param name="awsAccessKeyId">The AWS public key</param>
            <param name="awsSecretAccessKey">The AWS secret key used to sign the request in clear text</param>
            <param name="metrics">Request metrics</param>
            <param name="clientConfig">The configuration that specifies which hashing algorithm to use</param>
            <param name="request">The request to have the signature compute for</param>
            <exception cref="T:Amazon.Runtime.SignatureException">If any problems are encountered while signing the request</exception>
        </member>
        <member name="T:Amazon.Runtime.Internal.Auth.AWS4Signer">
            <summary>
            AWS4 protocol signer for service calls that transmit authorization in the header field "Authorization".
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.Sign(Amazon.Runtime.Internal.IRequest,Amazon.Runtime.ClientConfig,Amazon.Runtime.Internal.Util.RequestMetrics,System.String,System.String)">
            <summary>
            Calculates and signs the specified request using the AWS4 signing protocol by using the
            AWS account credentials given in the method parameters. The resulting signature is added
            to the request headers as 'Authorization'. Parameters supplied in the request, either in
            the resource path as a query string or in the Parameters collection must not have been
            uri encoded. If they have, use the SignRequest method to obtain a signature.
            </summary>
            <param name="request">
            The request to compute the signature for. Additional headers mandated by the AWS4 protocol 
            ('host' and 'x-amz-date') will be added to the request before signing.
            </param>
            <param name="clientConfig">
            Client configuration data encompassing the service call (notably authentication
            region, endpoint and service name).
            </param>
            <param name="metrics">
            Metrics for the request
            </param>
            <param name="awsAccessKeyId">
            The AWS public key for the account making the service call.
            </param>
            <param name="awsSecretAccessKey">
            The AWS secret key for the account making the call, in clear text.
            </param>
            <exception cref="T:Amazon.Runtime.SignatureException">
            If any problems are encountered while signing the request.
            </exception>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.SignRequest(Amazon.Runtime.Internal.IRequest,Amazon.Runtime.ClientConfig,Amazon.Runtime.Internal.Util.RequestMetrics,System.String,System.String)">
            <summary>
            Calculates and signs the specified request using the AWS4 signing protocol by using the
            AWS account credentials given in the method parameters.
            </summary>
            <param name="request">
            The request to compute the signature for. Additional headers mandated by the AWS4 protocol 
            ('host' and 'x-amz-date') will be added to the request before signing.
            </param>
            <param name="clientConfig">
            Client configuration data encompassing the service call (notably authentication
            region, endpoint and service name).
            </param>
            <param name="metrics">
            Metrics for the request.
            </param>
            <param name="awsAccessKeyId">
            The AWS public key for the account making the service call.
            </param>
            <param name="awsSecretAccessKey">
            The AWS secret key for the account making the call, in clear text.
            </param>
            <exception cref="T:Amazon.Runtime.SignatureException">
            If any problems are encountered while signing the request.
            </exception>
            <remarks>
            Parameters passed as part of the resource path should be uri-encoded prior to
            entry to the signer. Parameters passed in the request.Parameters collection should
            be not be encoded; encoding will be done for these parameters as part of the 
            construction of the canonical request.
            </remarks>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.InitializeHeaders(System.Collections.Generic.IDictionary{System.String,System.String},System.Uri)">
            <summary>
            Sets the AWS4 mandated 'host' and 'x-amz-date' headers, returning the date/time that will
            be used throughout the signing process in various elements and formats.
            </summary>
            <param name="headers">The current set of headers</param>
            <param name="requestEndpoint"></param>
            <returns>Date and time used for x-amz-date, in UTC</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.InitializeHeaders(System.Collections.Generic.IDictionary{System.String,System.String},System.Uri,System.DateTime)">
            <summary>
            Sets the AWS4 mandated 'host' and 'x-amz-date' headers, accepting and returning the date/time that will
            be used throughout the signing process in various elements and formats.
            </summary>
            <param name="headers">The current set of headers</param>
            <param name="requestEndpoint"></param>
            <param name="requestDateTime"></param>
            <returns>Date and time used for x-amz-date, in UTC</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.ComputeSignature(Amazon.Runtime.ImmutableCredentials,System.String,System.DateTime,System.String,System.String,System.String)">
            <summary>
            Computes and returns an AWS4 signature for the specified canonicalized request
            </summary>
            <param name="credentials"></param>
            <param name="region"></param>
            <param name="signedAt"></param>
            <param name="service"></param>
            <param name="signedHeaders"></param>
            <param name="canonicalRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.ComputeSignature(System.String,System.String,System.String,System.DateTime,System.String,System.String,System.String,Amazon.Runtime.Internal.Util.RequestMetrics)">
            <summary>
            Computes and returns an AWS4 signature for the specified canonicalized request
            </summary>
            <param name="awsAccessKey"></param>
            <param name="awsSecretAccessKey"></param>
            <param name="region"></param>
            <param name="signedAt"></param>
            <param name="service"></param>
            <param name="signedHeaders"></param>
            <param name="canonicalRequest"></param>
            <param name="metrics"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.FormatDateTime(System.DateTime,System.String)">
            <summary>
            Formats the supplied date and time for use in AWS4 signing, where various formats are used.
            </summary>
            <param name="dt"></param>
            <param name="formatString">The required format</param>
            <returns>The UTC date/time in the requested format</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.ComposeSigningKey(System.String,System.String,System.String,System.String)">
            <summary>
            Compute and return the multi-stage signing key for the request.
            </summary>
            <param name="awsSecretAccessKey">The clear-text AWS secret key, if not held in secureKey</param>
            <param name="region">The region in which the service request will be processed</param>
            <param name="date">Date of the request, in yyyyMMdd format</param>
            <param name="service">The name of the service being called by the request</param>
            <returns>Computed signing key</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.SetRequestBodyHash(Amazon.Runtime.Internal.IRequest)">
            <summary>
            If the caller has already set the x-amz-content-sha256 header with a pre-computed
            content hash, or it is present as ContentStreamHash on the request instance, return
            the value to be used in request canonicalization. 
            If not set as a header or in the request, attempt to compute a hash based on
            inspection of the style of the request content.
            </summary>
            <param name="request"></param>
            <returns>
            The computed hash, whether already set in headers or computed here. Null
            if we were not able to compute a hash.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.SignBlob(System.Byte[],System.String)">
            <summary>
            Returns the HMAC256 for an arbitrary blob using the specified key
            </summary>
            <param name="key"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.SignBlob(System.Byte[],System.Byte[])">
            <summary>
            Returns the HMAC256 for an arbitrary blob using the specified key
            </summary>
            <param name="key"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.ComputeKeyedHash(Amazon.Runtime.SigningAlgorithm,System.Byte[],System.String)">
            <summary>
            Compute and return the hash of a data blob using the specified key
            </summary>
            <param name="algorithm">Algorithm to use for hashing</param>
            <param name="key">Hash key</param>
            <param name="data">Data blob</param>
            <returns>Hash of the data</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.ComputeKeyedHash(Amazon.Runtime.SigningAlgorithm,System.Byte[],System.Byte[])">
            <summary>
            Compute and return the hash of a data blob using the specified key
            </summary>
            <param name="algorithm">Algorithm to use for hashing</param>
            <param name="key">Hash key</param>
            <param name="data">Data blob</param>
            <returns>Hash of the data</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.ComputeHash(System.String)">
            <summary>
            Computes the non-keyed hash of the supplied data
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.ComputeHash(System.Byte[])">
            <summary>
            Computes the non-keyed hash of the supplied data
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.CanonicalizeRequest(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Computes and returns the canonical request
            </summary>
            <param name="resourcePath">the path of the resource being operated on</param>
            <param name="httpMethod">The http method used for the request</param>
            <param name="sortedHeaders">The full request headers, sorted into canonical order</param>
            <param name="canonicalQueryString">The query parameters for the request</param>
            <param name="precomputedBodyHash">
            The hash of the binary request body if present. If not supplied, the routine
            will look for the hash as a header on the request.
            </param>
            <returns>Canonicalised request as a string</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.CanonicalizeResourcePath(System.String)">
            <summary>
            Returns the canonicalized resource path for the service endpoint
            </summary>
            <param name="resourcePath">Resource path for the request</param>
            <returns>Canonicalized resource path for the endpoint</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.SortHeaders(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Reorders the headers for the request for canonicalization.
            </summary>
            <param name="requestHeaders">The set of proposed headers for the request</param>
            <returns>List of headers that must be included in the signature</returns>
            <remarks>For AWS4 signing, all headers are considered viable for inclusion</remarks>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.CanonicalizeHeaders(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Computes the canonical headers with values for the request. Only headers included in the signature
            are included in the canonicalization process.
            </summary>
            <param name="sortedHeaders">All request headers, sorted into canonical order</param>
            <returns>Canonicalized string of headers, with the header names in lower case.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.CanonicalizeHeaderNames(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Returns the set of headers included in the signature as a flattened, ;-delimited string
            </summary>
            <param name="sortedHeaders">The headers included in the signature</param>
            <returns>Formatted string of header names</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.GetParametersToCanonicalize(Amazon.Runtime.Internal.IRequest)">
            <summary>
            Collects the subresource and query string parameters into one collection
            ready for canonicalization
            </summary>
            <param name="request">The in-flight request being signed</param>
            <returns>The fused set of parameters</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.CanonicalizeQueryParameters(System.String,System.Boolean)">
            <summary>
            Computes and returns the canonicalized query string, if query parameters have been supplied.
            Parameters with no value will be canonicalized as 'param='. The expectation is that parameters
            have not already been url encoded prior to canonicalization.
            </summary>
            <param name="queryString">The set of parameters being passed on the uri</param>
            <param name="uriEncodeParameters">
            Parameters must be uri encoded into the canonical request and by default the signer expects
            that the supplied collection contains non-encoded data. Set this to false if the encoding was
            done prior to signer entry.
            </param>
            <returns>The uri encoded query string parameters in canonical ordering</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.CanonicalizeQueryParameters(System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
            <summary>
            Computes and returns the canonicalized query string, if query parameters have been supplied.
            Parameters with no value will be canonicalized as 'param='. The expectation is that parameters
            have not already been url encoded prior to canonicalization.
            </summary>
            <param name="parameters">The set of parameters to be encoded in the query string</param>
            <param name="uriEncodeParameters">
            Parameters must be uri encoded into the canonical request and by default the signer expects
            that the supplied collection contains non-encoded data. Set this to false if the encoding was
            done prior to signer entry.
            </param>
            <returns>The uri encoded query string parameters in canonical ordering</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4Signer.GetRequestPayload(Amazon.Runtime.Internal.IRequest)">
            <summary>
            Returns the request parameters in the form of a query string.
            </summary>
            <param name="request">The request instance</param>
            <returns>Request parameters in query string format</returns>
        </member>
        <member name="T:Amazon.Runtime.Internal.Auth.AWS4PreSignedUrlSigner">
            <summary>
            AWS4 protocol signer for Amazon S3 presigned urls.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4PreSignedUrlSigner.Sign(Amazon.Runtime.Internal.IRequest,Amazon.Runtime.ClientConfig,Amazon.Runtime.Internal.Util.RequestMetrics,System.String,System.String)">
            <summary>
            Calculates and signs the specified request using the AWS4 signing protocol by using the
            AWS account credentials given in the method parameters. The resulting signature is added
            to the request headers as 'Authorization'.
            </summary>
            <param name="request">
            The request to compute the signature for. Additional headers mandated by the AWS4 protocol 
            ('host' and 'x-amz-date') will be added to the request before signing.
            </param>
            <param name="clientConfig">
            Adding supporting data for the service call required by the signer (notably authentication
            region, endpoint and service name).
            </param>
            <param name="metrics">
            Metrics for the request
            </param>
            <param name="awsAccessKeyId">
            The AWS public key for the account making the service call.
            </param>
            <param name="awsSecretAccessKey">
            The AWS secret key for the account making the call, in clear text
            </param>
            <exception cref="T:Amazon.Runtime.SignatureException">
            If any problems are encountered while signing the request.
            </exception>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4PreSignedUrlSigner.SignRequest(Amazon.Runtime.Internal.IRequest,Amazon.Runtime.ClientConfig,Amazon.Runtime.Internal.Util.RequestMetrics,System.String,System.String)">
            <summary>
            Calculates the AWS4 signature for a presigned url.
            </summary>
            <param name="request">
            The request to compute the signature for. Additional headers mandated by the AWS4 protocol 
            ('host' and 'x-amz-date') will be added to the request before signing. If the Expires parameter
            is present, it is renamed to 'X-Amz-Expires' before signing.
            </param>
            <param name="clientConfig">
            Adding supporting data for the service call required by the signer (notably authentication
            region, endpoint and service name).
            </param>
            <param name="metrics">
            Metrics for the request
            </param>
            <param name="awsAccessKeyId">
            The AWS public key for the account making the service call.
            </param>
            <param name="awsSecretAccessKey">
            The AWS secret key for the account making the call, in clear text
            </param>
            <exception cref="T:Amazon.Runtime.SignatureException">
            If any problems are encountered while signing the request.
            </exception>
            <remarks>
            Parameters passed as part of the resource path should be uri-encoded prior to
            entry to the signer. Parameters passed in the request.Parameters collection should
            be not be encoded; encoding will be done for these parameters as part of the 
            construction of the canonical request.
            </remarks>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4PreSignedUrlSigner.SignRequest(Amazon.Runtime.Internal.IRequest,Amazon.Runtime.ClientConfig,Amazon.Runtime.Internal.Util.RequestMetrics,System.String,System.String,System.String,System.String)">
            <summary>
            Calculates the AWS4 signature for a presigned url.
            </summary>
            <param name="request">
            The request to compute the signature for. Additional headers mandated by the AWS4 protocol 
            ('host' and 'x-amz-date') will be added to the request before signing. If the Expires parameter
            is present, it is renamed to 'X-Amz-Expires' before signing.
            </param>
            <param name="clientConfig">
            Adding supporting data for the service call required by the signer (notably authentication
            region, endpoint and service name).
            </param>
            <param name="metrics">
            Metrics for the request
            </param>
            <param name="awsAccessKeyId">
            The AWS public key for the account making the service call.
            </param>
            <param name="awsSecretAccessKey">
            The AWS secret key for the account making the call, in clear text
            </param>
            <param name="service">
            The service to sign for
            </param>
            <param name="overrideSigningRegion">
            The region to sign to, if null then the region the client is configured for will be used.
            </param>
            <exception cref="T:Amazon.Runtime.SignatureException">
            If any problems are encountered while signing the request.
            </exception>
            <remarks>
            Parameters passed as part of the resource path should be uri-encoded prior to
            entry to the signer. Parameters passed in the request.Parameters collection should
            be not be encoded; encoding will be done for these parameters as part of the 
            construction of the canonical request.
            </remarks>
        </member>
        <member name="T:Amazon.Runtime.Internal.Auth.AWS4SigningResult">
            <summary>
            Encapsulates the various fields and eventual signing value that makes up 
            an AWS4 signature. This can be used to retrieve the required authorization string
            or authorization query parameters for the final request as well as hold ongoing
            signature computations for subsequent calls related to the initial signing.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.AWS4SigningResult.#ctor(System.String,System.DateTime,System.String,System.String,System.Byte[],System.Byte[])">
            <summary>
            Constructs a new signing result instance for a computed signature
            </summary>
            <param name="awsAccessKeyId">The access key that was included in the signature</param>
            <param name="signedAt">Date/time (UTC) that the signature was computed</param>
            <param name="signedHeaders">The collection of headers names that were included in the signature</param>
            <param name="scope">Formatted 'scope' value for signing (YYYYMMDD/region/service/aws4_request)</param>
            <param name="signingKey">Returns the key that was used to compute the signature</param>
            <param name="signature">Computed signature</param>
        </member>
        <member name="P:Amazon.Runtime.Internal.Auth.AWS4SigningResult.AccessKeyId">
            <summary>
            The access key that was used in signature computation.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Auth.AWS4SigningResult.ISO8601DateTime">
            <summary>
            ISO8601 formatted date/time that the signature was computed
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Auth.AWS4SigningResult.ISO8601Date">
            <summary>
            ISO8601 formatted date that the signature was computed
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Auth.AWS4SigningResult.SignedHeaders">
            <summary>
            The ;-delimited collection of header names that were included in the signature computation
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Auth.AWS4SigningResult.Scope">
            <summary>
            Formatted 'scope' value for signing (YYYYMMDD/region/service/aws4_request)
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Auth.AWS4SigningResult.SigningKey">
            <summary>
            Returns a copy of the key that was used to compute the signature
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Auth.AWS4SigningResult.Signature">
            <summary>
            Returns the hex string representing the signature
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Auth.AWS4SigningResult.SignatureBytes">
            <summary>
            Returns a copy of the byte array containing the signature
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Auth.AWS4SigningResult.ForAuthorizationHeader">
            <summary>
            Returns the signature in a form usable as an 'Authorization' header value.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Auth.AWS4SigningResult.ForQueryParameters">
            <summary>
            Returns the signature in a form usable as a set of query string parameters.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.EC2Signer.#ctor">
            <summary>
            EC2 signer constructor
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.EC2Signer.Sign(Amazon.Runtime.Internal.IRequest,Amazon.Runtime.ClientConfig,Amazon.Runtime.Internal.Util.RequestMetrics,System.String,System.String)">
            <summary>
            Determines the appropriate signer and signs the request.
            </summary>
            <param name="awsAccessKeyId">The AWS public key</param>
            <param name="awsSecretAccessKey">The AWS secret key used to sign the request in clear text</param>
            <param name="metrics">Request metrics</param>
            <param name="clientConfig">The configuration that specifies which hashing algorithm to use</param>
            <param name="request">The request to have the signature compute for</param>
            <exception cref="T:Amazon.Runtime.SignatureException">If any problems are encountered while signing the request</exception>
        </member>
        <member name="T:Amazon.Runtime.Internal.Auth.NullSigner">
            <summary>
            Null Signer which does a no-op.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.QueryStringSigner.Sign(Amazon.Runtime.Internal.IRequest,Amazon.Runtime.ClientConfig,Amazon.Runtime.Internal.Util.RequestMetrics,System.String,System.String)">
            <summary>
            Signs the specified request with the AWS2 signing protocol by using the
            AWS account credentials given in the method parameters.
            </summary>
            <param name="awsAccessKeyId">The AWS public key</param>
            <param name="awsSecretAccessKey">The AWS secret key used to sign the request in clear text</param>
            <param name="metrics">Request metrics</param>
            <param name="clientConfig">The configuration that specifies which hashing algorithm to use</param>
            <param name="request">The request to have the signature compute for</param>
            <exception cref="T:Amazon.Runtime.SignatureException">If any problems are encountered while signing the request</exception>
        </member>
        <member name="M:Amazon.Runtime.Internal.Auth.S3Signer.#ctor">
            <summary>
            S3 signer constructor
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Auth.SignatureException">
            <summary>
            This exception is thrown if there are problems signing the request.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.ImmutableCredentials">
            <summary>
            Immutable representation of AWS credentials.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.ImmutableCredentials.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs an ImmutableCredentials object with supplied accessKey, secretKey.
            </summary>
            <param name="awsAccessKeyId"></param>
            <param name="awsSecretAccessKey"></param>
            <param name="token">Optional. Can be set to null or empty for non-session credentials.</param>
        </member>
        <member name="M:Amazon.Runtime.ImmutableCredentials.Copy">
            <summary>
            Returns a copy of the current credentials.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.Runtime.ImmutableCredentials.AccessKey">
            <summary>
            Gets the AccessKey property for the current credentials.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ImmutableCredentials.SecretKey">
            <summary>
            Gets the SecretKey property for the current credentials.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ImmutableCredentials.Token">
            <summary>
            Gets the Token property for the current credentials.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ImmutableCredentials.UseToken">
            <summary>
            Gets the UseToken property for the current credentials.
            Specifies if Token property is non-emtpy.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.BasicAWSCredentials">
            <summary>
            Basic set of credentials consisting of an AccessKey and SecretKey
            </summary>
        </member>
        <member name="M:Amazon.Runtime.BasicAWSCredentials.#ctor(System.String,System.String)">
            <summary>
            Constructs a BasicAWSCredentials object for the specified accessKey and secretKey.
            </summary>
            <param name="accessKey"></param>
            <param name="secretKey"></param>
        </member>
        <member name="M:Amazon.Runtime.BasicAWSCredentials.GetCredentials">
            <summary>
            Returns an instance of ImmutableCredentials for this instance
            </summary>
            <returns></returns>
        </member>
        <member name="T:Amazon.Runtime.SessionAWSCredentials">
            <summary>
            Session credentials consisting of AccessKey, SecretKey and Token
            </summary>
        </member>
        <member name="M:Amazon.Runtime.SessionAWSCredentials.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs a SessionAWSCredentials object for the specified accessKey, secretKey.
            </summary>
            <param name="awsAccessKeyId"></param>
            <param name="awsSecretAccessKey"></param>
            <param name="token"></param>
        </member>
        <member name="M:Amazon.Runtime.SessionAWSCredentials.GetCredentials">
            <summary>
            Returns an instance of ImmutableCredentials for this instance
            </summary>
            <returns></returns>
        </member>
        <member name="T:Amazon.Runtime.InstanceProfileAWSCredentials">
            <summary>
            Credentials that are retrieved from the Instance Profile service on an EC2 instance
            </summary>
        </member>
        <member name="M:Amazon.Runtime.InstanceProfileAWSCredentials.#ctor(System.String)">
            <summary>
            Constructs a InstanceProfileAWSCredentials object for specific role
            </summary>
            <param name="role">Role to use</param>
        </member>
        <member name="M:Amazon.Runtime.InstanceProfileAWSCredentials.#ctor">
            <summary>
            Constructs a InstanceProfileAWSCredentials object for the first found role
            </summary>
        </member>
        <member name="M:Amazon.Runtime.InstanceProfileAWSCredentials.GetAvailableRoles">
            <summary>
            Retrieves a list of all roles available through current InstanceProfile service
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.Runtime.InstanceProfileAWSCredentials.Role">
            <summary>
            Role for which the credentials are retrieved
            </summary>
        </member>
        <member name="T:Amazon.Runtime.AssumeRoleAWSCredentials">
            <summary>
            Credentials that are retrieved by invoking AWS Security Token Service
            AssumeRole or AssumeRoleWithSAML action.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.STSAssumeRoleAWSCredentials">
            <summary>
            Assumed role credentials retrieved and automatically refreshed from
            an instance of IAmazonSecurityTokenService.
            </summary>
            <summary>
            Credentials that are retrieved by invoking AWS Security Token Service
            AssumeRole or AssumeRoleWithSAML action.
            </summary>
        </member>
        <member name="M:Amazon.SecurityToken.STSAssumeRoleAWSCredentials.#ctor(Amazon.SecurityToken.IAmazonSecurityTokenService,Amazon.SecurityToken.Model.AssumeRoleRequest)">
            <summary>
            Instantiates STSAssumeRoleAWSCredentials which automatically assumes a specified role.
            The credentials are refreshed before expiration.
            </summary>
            <param name="sts">
            Instance of IAmazonSecurityTokenService that will be used to make the AssumeRole service call.
            </param>
            <param name="assumeRoleRequest">Configuration for the role to assume.</param>
        </member>
        <member name="M:Amazon.SecurityToken.STSAssumeRoleAWSCredentials.#ctor(Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest)">
            <summary>
            Instantiates STSAssumeRoleAWSCredentials which automatically assumes a specified SAML role.
            The credentials are refreshed before expiration.
            </summary>
            <param name="assumeRoleWithSamlRequest">Configuration for the SAML role to assume.</param>
        </member>
        <member name="M:Amazon.SecurityToken.STSAssumeRoleAWSCredentials.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.SecurityToken.STSAssumeRoleAWSCredentials.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.AssumeRoleAWSCredentials.#ctor(Amazon.SecurityToken.IAmazonSecurityTokenService,Amazon.SecurityToken.Model.AssumeRoleRequest)">
            <summary>
            Instantiates AssumeRoleAWSCredentials which automatically assumes a specified role.
            The credentials are refreshed before expiration.
            </summary>
            <param name="sts">
            Instance of IAmazonSecurityTokenService that will be used to make the AssumeRole service call.
            </param>
            <param name="assumeRoleRequest">Configuration for the role to assume.</param>
        </member>
        <member name="M:Amazon.Runtime.AssumeRoleAWSCredentials.#ctor(Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest)">
            <summary>
            Instantiates AssumeRoleAWSCredentials which automatically assumes a specified SAML role.
            The credentials are refreshed before expiration.
            </summary>
            <param name="assumeRoleWithSamlRequest">Configuration for the SAML role to assume.</param>
        </member>
        <member name="T:Amazon.Runtime.AnonymousAWSCredentials">
            <summary>
            Anonymous credentials.
            Using these credentials, the client does not sign the request.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.AnonymousAWSCredentials.GetCredentials">
            <summary>
            Returns an instance of ImmutableCredentials for this instance
            </summary>
            <returns></returns>
        </member>
        <member name="T:Amazon.Runtime.SigningAlgorithm">
            <summary>
            The valid hashing algorithm supported by the sdk for request signing.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.ErrorType">
            <summary>
            Which end of a request was responsible for a service error response.
            </summary>
        </member>
        <member name="F:Amazon.Runtime.ErrorType.Sender">
            <summary>
            The sender was responsible for the error, i.e. the client
            request failed validation or was improperly formatted.
            </summary>
        </member>
        <member name="F:Amazon.Runtime.ErrorType.Receiver">
            <summary>
            The error occured within the service.
            </summary>
        </member>
        <member name="F:Amazon.Runtime.ErrorType.Unknown">
            <summary>
            An unrecognized error type was returned.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.DefaultRequest">
            <summary>
            Default implementation of the IRequest interface.
            <para>
            This class is only intended for internal use inside the AWS client libraries.
            Callers shouldn't ever interact directly with objects of this class.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.IRequest">
            <summary>
            Represents a request being sent to an Amazon Web Service, including the
            parameters being sent as part of the request, the endpoint to which the
            request should be sent, etc.
            <para>
            This class is only intended for internal use inside the AWS client libraries.
            Callers shouldn't ever interact directly with objects of this class.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.IRequest.AddSubResource(System.String)">
            <summary>
            Adds a new null entry to the SubResources collection for the request
            </summary>
            <param name="subResource">The name of the subresource</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.IRequest.AddSubResource(System.String,System.String)">
            <summary>
            Adds a new entry to the SubResources collection for the request
            </summary>
            <param name="subResource">The name of the subresource</param>
            <param name="value">Value of the entry</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.IRequest.ComputeContentStreamHash">
            <summary>
            Computes the SHA 256 hash of the content stream. If the stream is not
            seekable, it searches the parent stream hierarchy to find a seekable
            stream prior to computation. Once computed, the hash is cached for future
            use.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.IRequest.IsRequestStreamRewindable">
            <summary>
            Checks if the request stream can be rewinded.
            </summary>
            <returns>Returns true if the request stream can be rewinded ,
            else false.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.IRequest.MayContainRequestBody">
            <summary>
            Returns true if the request can contain a request body, else false.
            </summary>
            <returns>Returns true if the currect request can contain a request body, else false.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.IRequest.HasRequestBody">
            <summary>
            Returns true if the request has a body, else false.
            </summary>
            <returns>Returns true if the request has a body, else false.</returns>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.RequestName">
            <summary>
            The name of the request
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.Headers">
            <summary>
            Returns a dictionary of the headers included in this request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.UseQueryString">
            <summary>
            Gets and sets a flag that indicates whether the request is sent as a query string instead of the request body.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.Parameters">
            <summary>
            Returns a dictionary of the parameters included in this request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.SubResources">
            <summary>
            Returns the subresources that should be appended to the resource path.
            This is used primarily for Amazon S3, where object keys can contain '?'
            characters, making string-splitting of a resource path potentially 
            hazardous.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.HttpMethod">
            <summary>
            Gets and sets the type of http request to make, whether it should be POST,GET or DELETE
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.Endpoint">
            <summary>
            Gets and Sets the endpoint for this request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.ResourcePath">
            <summary>
            Gets and Sets the resource path added on to the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.Content">
            <summary>
            Gets and Sets the content for this request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.ContentStream">
            <summary>
            Gets and sets the content stream.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.OriginalStreamPosition">
            <summary>
            Gets and sets the original stream position.
            If ContentStream is null or does not support seek, this propery
            should be equal to -1.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.ServiceName">
            <summary>
            The name of the service to which this request is being sent.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.OriginalRequest">
            <summary>
            Returns the original, user facing request object which this internal
            request object is representing.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.AlternateEndpoint">
            <summary>
            Alternate endpoint to use for this request, if any.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.Suppress404Exceptions">
            <summary>
            Gets and sets the Suppress404Exceptions property. If true then 404s return back from AWS will not cause an exception and 
            an empty response object will be returned.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.AWS4SignerResult">
            <summary>
            If using AWS4 signing protocol, contains the resultant parts of the
            signature that we may need to make use of if we elect to do a chunked
            encoding upload.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.UseChunkEncoding">
            <summary>
            Determine whether to use a chunked encoding upload for the request
            (applies to Amazon S3 PutObject and UploadPart requests only). 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.Runtime.Internal.IRequest.CanonicalResourcePrefix">
            <summary>
            Used for Amazon S3 requests where the bucket name is removed from
            the marshalled resource path into the host header. To comply with
            AWS2 signature calculation, we need to recover the bucket name
            and include it in the resource canonicalization, which we do using
            this field.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.DefaultRequest.#ctor(Amazon.Runtime.AmazonWebServiceRequest,System.String)">
            <summary>
            Constructs a new DefaultRequest with the specified service name and the
            original, user facing request object.
            </summary>
            <param name="request">The orignal request that is being wrapped</param>
            <param name="serviceName">The service name</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.DefaultRequest.AddSubResource(System.String)">
            <summary>
            Adds a new null entry to the SubResources collection for the request
            </summary>
            <param name="subResource">The name of the subresource</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.DefaultRequest.AddSubResource(System.String,System.String)">
            <summary>
            Adds a new entry to the SubResources collection for the request
            </summary>
            <param name="subResource">The name of the subresource</param>
            <param name="value">Value of the entry</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.DefaultRequest.ComputeContentStreamHash">
            <summary>
            Computes the SHA 256 hash of the content stream. If the stream is not
            seekable, it searches the parent stream hierarchy to find a seekable
            stream prior to computation. Once computed, the hash is cached for future
            use. If a suitable stream cannot be found to use, null is returned.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.DefaultRequest.IsRequestStreamRewindable">
            <summary>
            Checks if the request stream can be rewinded.
            </summary>
            <returns>Returns true if the request stream can be rewinded ,
            else false.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.DefaultRequest.MayContainRequestBody">
            <summary>
            Returns true if the request can contain a request body, else false.
            </summary>
            <returns>Returns true if the currect request can contain a request body, else false.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.DefaultRequest.HasRequestBody">
            <summary>
            Returns true if the request has a body, else false.
            </summary>
            <returns>Returns true if the request has a body, else false.</returns>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.RequestName">
            <summary>
            The name of the request
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.HttpMethod">
            <summary>
            Gets and sets the type of http request to make, whether it should be POST,GET or DELETE
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.UseQueryString">
            <summary>
            Gets and sets a flag that indicates whether the request is sent as a query string instead of the request body.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.OriginalRequest">
            <summary>
            Returns the original, user facing request object which this internal
            request object is representing.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.Headers">
            <summary>
            Returns a dictionary of the headers included in this request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.Parameters">
            <summary>
            Returns a dictionary of the parameters included in this request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.SubResources">
            <summary>
            Returns the subresources that should be appended to the resource path.
            This is used primarily for Amazon S3, where object keys can contain '?'
            characters, making string-splitting of a resource path potentially 
            hazardous.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.Endpoint">
            <summary>
            Gets and Sets the endpoint for this request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.ResourcePath">
            <summary>
            Gets and Sets the resource path added on to the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.Content">
            <summary>
            Gets and Sets the content for this request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.ContentStream">
            <summary>
            Gets and sets the content stream.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.OriginalStreamPosition">
            <summary>
            Gets and sets the original stream position.
            If ContentStream is null or does not support seek, this propery
            should be equal to -1.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.ServiceName">
            <summary>
            The name of the service to which this request is being sent.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.AlternateEndpoint">
            <summary>
            Alternate endpoint to use for this request, if any.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.Suppress404Exceptions">
            <summary>
            Gets and sets the Suppress404Exceptions property. If true then 404s return back from AWS will not cause an exception and 
            an empty response object will be returned.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.AWS4SignerResult">
            <summary>
            If using AWS4 signing protocol, contains the resultant parts of the
            signature that we may need to make use of if we elect to do a chunked
            encoding upload.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.UseChunkEncoding">
            <summary>
            Determine whether to use a chunked encoding upload for the request
            (applies to Amazon S3 PutObject and UploadPart requests only). 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.Runtime.Internal.DefaultRequest.CanonicalResourcePrefix">
            <summary>
            Used for Amazon S3 requests where the bucket name is removed from
            the marshalled resource path into the host header. To comply with
            AWS2 signature calculation, we need to recover the bucket name
            and include it in the resource canonicalization, which we do using
            this field.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.ErrorResponseUnmarshaller">
            <summary>
               Response Unmarshaller for all Errors
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.ErrorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Build an ErrorResponse from XML 
            </summary>
            <param name="context">The XML parsing context. 
            Usually an <c>Amazon.Runtime.Internal.UnmarshallerContext</c>.</param>
            <returns>An <c>ErrorResponse</c> object.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.ErrorResponseUnmarshaller.GetInstance">
            <summary>
            Return an instance of and ErrorResponseUnmarshaller.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.JsonErrorResponseUnmarshaller">
            <summary>
               Response Unmarshaller for all Errors
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.JsonErrorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Build an ErrorResponse from json 
            </summary>
            <param name="context">The json parsing context. 
            Usually an <c>Amazon.Runtime.Internal.JsonUnmarshallerContext</c>.</param>
            <returns>An <c>ErrorResponse</c> object.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.JsonErrorResponseUnmarshaller.GetInstance">
            <summary>
            Return an instance of JsonErrorResponseUnmarshaller.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext">
            <summary>
            Wraps a json string for unmarshalling.
            
            Each <c>Read()</c> operation gets the next token.
            <c>TestExpression()</c> is used to match the current key-chain
            to an xpath expression. The general pattern looks like this:
            <code>
            JsonUnmarshallerContext context = new JsonUnmarshallerContext(jsonString);
            while (context.Read())
            {
                if (context.IsKey)
                {
                    if (context.TestExpresion("path/to/element"))
                    {
                        myObject.stringMember = stringUnmarshaller.GetInstance().Unmarshall(context);
                        continue;
                    }
                }
            }
            </code>
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.UnmarshallerContext">
            <summary>
            Base class for the UnmarshallerContext objects that are used
            to unmarshall a web-service response.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.UnmarshallerContext.TestExpression(System.String)">
            <summary>
                Tests the specified expression against the current position in the XML
                document </summary>
            <param name="expression">
                The pseudo-XPath expression to test.</param>
            <returns>
                True if the expression matches the current position in the document, 
                false otherwise.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.UnmarshallerContext.TestExpression(System.String,System.Int32)">
            <summary>
                Tests the specified expression against the current position in the XML
                document being parsed, and restricts the expression to matching at the
                specified stack depth. </summary>
            <param name="expression">
                The pseudo-XPath expression to test.</param>
            <param name="startingStackDepth">
                The depth in the stack representing where the expression must
                start matching in order for this method to return true. </param>
            <returns>
                True if the specified expression matches the current position in
                the XML document, starting from the specified depth. </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.UnmarshallerContext.ReadAtDepth(System.Int32)">
            <summary>
            Reads the next token at depth greater than or equal to target depth.
            </summary>
            <param name="targetDepth">Tokens are read at depth greater than or equal to target depth.</param>
            <returns>True if a token was read and current depth is greater than or equal to target depth.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.UnmarshallerContext.Read">
            <summary>
            Reads to the next node in the document, and updates the context accordingly.
            </summary>
            <returns>
            True if a node was read, false if there are no more elements to read.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.UnmarshallerContext.ReadText">
            <summary>
                Returns the text contents of the current element being parsed.
            </summary>
            <returns>
                The text contents of the current element being parsed.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.UnmarshallerContext.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.UnmarshallerContext.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.UnmarshallerContext.CurrentPath">
            <summary>
            The current path that is being unmarshalled.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.UnmarshallerContext.CurrentDepth">
            <summary>
            Returns the element depth of the parser's current position in the
            document being parsed.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.UnmarshallerContext.IsStartElement">
            <summary>
            True if <c>NodeType</c> is <c>Element</c>.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.UnmarshallerContext.IsEndElement">
            <summary>
            True if <c>NodeType</c> is <c>EndElement</c>.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.UnmarshallerContext.IsStartOfDocument">
            <summary>
            True if the context is at the start of the document.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.#ctor(System.IO.Stream,System.Boolean,Amazon.Runtime.Internal.Transform.IWebResponseData)">
            <summary>
            Wrap the jsonstring for unmarshalling.
            </summary>
            <param name="responseStream">Stream that contains the JSON for unmarshalling</param>
            <param name="maintainResponseBody"> If set to true, maintains a copy of the complete response body as the stream is being read.</param>
            <param name="responseData">Response data coming back from the request</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.Read">
            <summary>
                Reads to the next token in the json document, and updates the context
                accordingly.
            </summary>
            <returns>
                True if a token was read, false if there are no more tokens to read.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.Peek(ThirdParty.Json.LitJson.JsonToken)">
            <summary>
            Peeks at the next token. This peek implementation
            reads the next token and makes the subsequent Read() return the same data.
            If Peek is called successively, it will return the same data.
            Only the first one calls Read(), subsequent calls 
            will return the same data until a Read() call is made.
            </summary>
            <param name="token">Token to peek.</param>
            <returns>Returns true if the peeked token matches given token.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.ReadText">
            <summary>
                Returns the text contents of the current token being parsed.
            </summary>
            <returns>
                The text contents of the current token being parsed.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.Peek">
            <summary>
            Peeks at the next (non-whitespace) character in the jsonStream.
            </summary>
            <returns>The next (non-whitespace) character in the jsonStream, or -1 if at the end.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.StreamPeek">
            <summary>
            Peeks at the next character in the stream.
            If the data isn't buffered into the StreamReader (Peek() returns -1),
            we flush the buffered data and try one more time.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.IsStartOfDocument">
            <summary>
            Are we at the start of the json document.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.IsEndElement">
            <summary>
            Is the current token the end of an object
            </summary>    
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.IsStartElement">
            <summary>
            Is the current token the start of an object
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.CurrentDepth">
            <summary>
                Returns the element depth of the parser's current position in the json
                document being parsed.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.CurrentPath">
            <summary>
            The current Json path that is being unmarshalled.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.CurrentTokenType">
            <summary>
            The type of the current token
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext.Stream">
            <summary>
            Get the base stream of the jsonStream.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.S3ReponseUnmarshaller">
            <summary>
            Class for unmarshalling S3 service responses
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.IntUnmarshaller">
            <summary>
            Unmarshaller for int fields
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.LongUnmarshaller">
            <summary>
            Unmarshaller for long fields
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.FloatUnmarshaller">
            <summary>
            Unmarshaller for float fields
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.DoubleUnmarshaller">
            <summary>
            Unmarshaller for double fields
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.BoolUnmarshaller">
            <summary>
            Unmarshaller for bool fields
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.StringUnmarshaller">
            <summary>
            Unmarshaller for string fields
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.ByteUnmarshaller">
            <summary>
            Unmarshaller for byte fields
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.DateTimeUnmarshaller">
            <summary>
            Unmarshaller for DateTime fields
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.MemoryStreamUnmarshaller">
            <summary>
            Unmarshaller for MemoryStream fields
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.ResponseMetadataUnmarshaller">
            <summary>
            Unmarshaller for ResponseMetadata
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext">
            <summary>
            Wrap an <c>XmltextReader</c> for simulating an event stream.
            
            Each <c>Read()</c> operation goes either to the next element or next attribute within
            the current element. <c>TestExpression()</c> is used to match the current event
            to an xpath expression. The general pattern looks like this:
            <code>
            UnmarshallerContext context = new UnmarshallerContext(...);
            while (context.Read())
            {
                if (context.TestExpresion("path/to/element"))
                {
                    myObject.stringMember = stringUnmarshaller.GetInstance().Unmarshall(context);
                    continue;
                }
                if (context.TestExpression("path/to/@attribute"))
                    myObject.MyComplexTypeMember = MyComplexTypeUnmarshaller.GetInstance().Unmarshall(context);
            }
            </code>
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext.#ctor(System.IO.Stream,System.Boolean,Amazon.Runtime.Internal.Transform.IWebResponseData)">
            <summary>
            Wrap an XmlTextReader with state for event-based parsing of an XML stream.
            </summary>
            <param name="responseStream"><c>Stream</c> with the XML from a service response.</param>
            <param name="maintainResponseBody"> If set to true, maintains a copy of the complete response body as the stream is being read.</param>
            <param name="responseData">Response data coming back from the request</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext.Read">
            <summary>
            Reads to the next node in the XML document, and updates the context accordingly.
            </summary>
            <returns>
            True if a node was read, false if there are no more elements to read./
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext.ReadText">
            <summary>
                Returns the text contents of the current element being parsed.
            </summary>
            <returns>
                The text contents of the current element being parsed.
            </returns>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext.CurrentPath">
            <summary>
            The current XML path that is being unmarshalled.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext.CurrentDepth">
            <summary>
                Returns the element depth of the parser's current position in the XML
                document being parsed.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext.IsStartElement">
            <summary>
            True if <c>NodeType</c> is <c>Element</c>.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext.IsEndElement">
            <summary>
            True if <c>NodeType</c> is <c>EndElement</c>.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext.IsStartOfDocument">
            <summary>
            True if the context is at the start of the document.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext.IsAttribute">
            <summary>
            True if <c>NodeType</c> is <c>Attribute</c>.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.EC2UnmarshallerContext.#ctor(System.IO.Stream,System.Boolean,Amazon.Runtime.Internal.Transform.IWebResponseData)">
            <summary>
            Wrap an XmlTextReader with state for event-based parsing of an XML stream.
            </summary>
            <param name="responseStream"><c>Stream</c> with the XML from a service response.</param>
            <param name="maintainResponseBody"> If set to true, maintains a copy of the complete response body as the stream is being read.</param>
            <param name="responseData">Response data coming back from the request</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Transform.EC2UnmarshallerContext.Read">
            <summary>
            Reads to the next node in the XML document, and updates the context accordingly.
            If node is RequestId, reads the contents and stores in RequestId property.
            </summary>
            <returns>
            True if a node was read, false if there are no more elements to read./
            </returns>
        </member>
        <member name="P:Amazon.Runtime.Internal.Transform.EC2UnmarshallerContext.RequestId">
            <summary>
            RequestId value, if found in response
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.AsyncHelpers">
            <summary>
            This is a utility class to be used in last resort for code paths that are synchronous but need to call an asynchronous method.
            This should never be used for methods that are called at high volume as this utility class has a performance cost. For example this 
            class was added for the refreshing credentials like Cognito which would need to use this about once an hour.
            
            This code is taken from: http://stackoverflow.com/questions/5095183/how-would-i-run-an-async-taskt-method-synchronously
            which is licensed under Creative Commons Attribution-ShareAlike 3.0 (http://creativecommons.org/licenses/by-sa/3.0/)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Amazon.Runtime.Internal.Util.AsyncHelpers.RunSync(System.Func{System.Threading.Tasks.Task})" -->
        <!-- Badly formed XML comment ignored for member "M:Amazon.Runtime.Internal.Util.AsyncHelpers.RunSync``1(System.Func{System.Threading.Tasks.Task{``0}})" -->
        <member name="T:Amazon.Runtime.Internal.Util.CachingWrapperStream">
            <summary>
            A stream which caches the contents of the underlying stream as it reads it.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.WrapperStream">
            <summary>
            A wrapper stream.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.WrapperStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes WrapperStream with a base stream.
            </summary>
            <param name="baseStream"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.WrapperStream.GetNonWrapperBaseStream">
            <summary>
            Returns the first base non-WrapperStream.
            </summary>
            <returns>First base stream that is non-WrapperStream.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.WrapperStream.GetNonWrapperBaseStream(System.IO.Stream)">
            <summary>
            Returns the first base non-WrapperStream.
            </summary>
            <param name="stream">Potential WrapperStream</param>
            <returns>Base non-WrapperStream.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.WrapperStream.Close">
            <summary>
            Closes the current stream and releases any resources (such as sockets and
            file handles) associated with the current stream.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.WrapperStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written
            to the underlying device.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.WrapperStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position
            within the stream by the number of bytes read.
            </summary>
            <param name="buffer">
            An array of bytes. When this method returns, the buffer contains the specified
            byte array with the values between offset and (offset + count - 1) replaced
            by the bytes read from the current source.
            </param>
            <param name="offset">
            The zero-based byte offset in buffer at which to begin storing the data read
            from the current stream.
            </param>
            <param name="count">
            The maximum number of bytes to be read from the current stream.
            </param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the
            number of bytes requested if that many bytes are not currently available,
            or zero (0) if the end of the stream has been reached.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.WrapperStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">
            A value of type System.IO.SeekOrigin indicating the reference point used
            to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.WrapperStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.WrapperStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current
            position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">
            An array of bytes. This method copies count bytes from buffer to the current stream.
            </param>
            <param name="offset">
            The zero-based byte offset in buffer at which to begin copying bytes to the
            current stream.
            </param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.WrapperStream.BaseStream">
            <summary>
            Base stream.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.WrapperStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            True if the stream supports reading; otherwise, false.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.WrapperStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            True if the stream supports seeking; otherwise, false.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.WrapperStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            True if the stream supports writing; otherwise, false.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.WrapperStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.WrapperStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.WrapperStream.ReadTimeout">
            <summary>
            Gets or sets a value, in miliseconds, that determines how long the stream
            will attempt to read before timing out.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.WrapperStream.WriteTimeout">
            <summary>
            Gets or sets a value, in miliseconds, that determines how long the stream
            will attempt to write before timing out.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.CachingWrapperStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes the CachingWrapperStream with a base stream.
            </summary>
            <param name="baseStream"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.CachingWrapperStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position
            within the stream by the number of bytes read.
            </summary>
            <param name="buffer">
            An array of bytes. When this method returns, the buffer contains the specified
            byte array with the values between offset and (offset + count - 1) replaced
            by the bytes read from the current source.
            </param>
            <param name="offset">
            The zero-based byte offset in buffer at which to begin storing the data read
            from the current stream.
            </param>
            <param name="count">
            The maximum number of bytes to be read from the current stream.
            </param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the
            number of bytes requested if that many bytes are not currently available,
            or zero (0) if the end of the stream has been reached.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.CachingWrapperStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            CachingWrapperStream does not support seeking, attempting to call Seek
            will throw NotSupportedException.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">
            A value of type System.IO.SeekOrigin indicating the reference point used
            to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.CachingWrapperStream.AllReadBytes">
            <summary>
            All the bytes read by the stream.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.CachingWrapperStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            CachingWrapperStream does not support seeking, this will always be false.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.CachingWrapperStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            CachingWrapperStream does not support seeking, attempting to set Position
            will throw NotSupportedException.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.ChunkedUploadWrapperStream">
            <summary>
            Stream wrapper that double-buffers from a wrapped stream and
            returns the buffered content as a series of signed 'chunks'
            for the AWS4 ('Signature V4') protocol.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.ChunkedUploadWrapperStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads some or all of the processed chunk to the consumer, constructing
            and streaming a new chunk if more input data is available.
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.ChunkedUploadWrapperStream.ConstructOutputBufferChunk(System.Int32)">
            <summary>
            Computes the derived signature for a chunk of data of given length in the input buffer, 
            placing a formatted chunk with headers, signature and data into the output buffer
            ready for streaming back to the consumer.
            </summary>
            <param name="dataLen"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.ChunkedUploadWrapperStream.ComputeChunkedContentLength(System.Int64)">
            <summary>
            Computes the total size of the data payload, including the chunk metadata.
            Called externally so as to be able to set the correct Content-Length header
            value.
            </summary>
            <param name="originalLength"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.ChunkedUploadWrapperStream.CalculateChunkHeaderLength(System.Int64)">
            <summary>
            Computes the size of the header data for each chunk.
            </summary>
            <param name="chunkDataSize"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.ChunkedUploadWrapperStream.FillInputBuffer">
            <summary>
            Attempt to read sufficient data for a whole chunk from the wrapped stream,
            returning the number of bytes successfully read to be processed into a chunk
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.ChunkedUploadWrapperStream.HeaderSigningResult">
            <summary>
            Results of the header-signing portion of the request
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.ChunkedUploadWrapperStream.PreviousChunkSignature">
            <summary>
            Computed signature of the chunk prior to the one in-flight, in
            hex
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.ChunkedUploadWrapperStream.Length">
            <summary>
            Length override to return the true length of the payload plus the metainfo
            supplied with each chunk
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.BackgroundDispatcher`1">
            <summary>
            Class to perform actions on a background thread.
            Uses a single background thread and performs actions
            on it in the order the data was sent through the instance.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.BackgroundDispatcher`1.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.BackgroundDispatcher`1.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.BackgroundInvoker">
            <summary>
            Class to invoke actions on a background thread.
            Uses a single background thread and invokes actions
            on it in the order they were invoked through the instance.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.Hashing.Hash(System.Object[])">
            <summary>
            Hashes a set of objects.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.Hashing.CombineHashes(System.Int32[])">
            <summary>
            Combines a set of hashses.
            </summary>
            <param name="hashes"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.Hashing.CombineHashesInternal(System.Int32,System.Int32)">
            <summary>
            Combines two hashes.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.HashStream">
            <summary>
            A wrapper stream that calculates a hash of the base stream as it
            is being read.
            The calculated hash is only available after the stream is closed or
            CalculateHash is called. After calling CalculateHash, any further reads
            on the streams will not change the CalculatedHash.
            If an ExpectedHash is specified and is not equal to the calculated hash,
            Close or CalculateHash methods will throw an AmazonClientException.
            If CalculatedHash is calculated for only the portion of the stream that
            is read.
            </summary>
            <exception cref="T:Amazon.Runtime.AmazonClientException">
            Exception thrown during Close() or CalculateHash(), if ExpectedHash is set and
            is different from CalculateHash that the stream calculates, provided that
            CalculatedHash is not a zero-length byte array.
            </exception>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.HashStream.#ctor(System.IO.Stream,System.Byte[],System.Int64)">
            <summary>
            Initializes an HashStream with a hash algorithm and a base stream.
            </summary>
            <param name="baseStream">Stream to calculate hash for.</param>
            <param name="expectedHash">
            Expected hash. Will be compared against calculated hash on stream close.
            Pass in null to disable check.
            </param>
            <param name="expectedLength">
            Expected length of the stream. If the reading stops before reaching this
            position, CalculatedHash will be set to empty array.
            </param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.HashStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position
            within the stream by the number of bytes read.
            </summary>
            <param name="buffer">
            An array of bytes. When this method returns, the buffer contains the specified
            byte array with the values between offset and (offset + count - 1) replaced
            by the bytes read from the current source.
            </param>
            <param name="offset">
            The zero-based byte offset in buffer at which to begin storing the data read
            from the current stream.
            </param>
            <param name="count">
            The maximum number of bytes to be read from the current stream.
            </param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the
            number of bytes requested if that many bytes are not currently available,
            or zero (0) if the end of the stream has been reached.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.HashStream.Close">
            <summary>
            Closes the underlying stream and finishes calculating the hash.
            If an ExpectedHash is specified and is not equal to the calculated hash,
            this method will throw an AmazonClientException.
            </summary>
            <exception cref="T:Amazon.Runtime.AmazonClientException">
            If ExpectedHash is set and is different from CalculateHash that the stream calculates.
            </exception>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.HashStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            HashStream does not support seeking, attempting to call Seek
            will throw NotSupportedException.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">
            A value of type System.IO.SeekOrigin indicating the reference point used
            to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.HashStream.CalculateHash">
            <summary>
            Calculates the hash for the stream so far and disables any further
            hashing.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.HashStream.Reset">
            <summary>
            Resets the hash stream to starting state.
            Use this if the underlying stream has been modified and needs
            to be rehashed without reconstructing the hierarchy.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.HashStream.ValidateBaseStream">
            <summary>
            Validates the underlying stream.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.HashStream.CompareHashes(System.Byte[],System.Byte[])">
            <summary>
            Compares two hashes (arrays of bytes).
            </summary>
            <param name="expected">Expected hash.</param>
            <param name="actual">Actual hash.</param>
            <returns>
            True if the hashes are identical; otherwise false.
            </returns>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.HashStream.Algorithm">
            <summary>
            Algorithm to use to calculate hash.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.HashStream.FinishedHashing">
            <summary>
            True if hashing is finished and no more hashing should be done;
            otherwise false.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.HashStream.CurrentPosition">
            <summary>
            Current position in the stream.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.HashStream.CalculatedHash">
            <summary>
            Calculated hash for the stream.
            This value is set only after the stream is closed.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.HashStream.ExpectedHash">
            <summary>
            Expected hash value. Compared against CalculatedHash upon Close().
            If the hashes are different, an AmazonClientException is thrown.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.HashStream.ExpectedLength">
            <summary>
            Expected length of stream.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.HashStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            HashStream does not support seeking, this will always be false.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.HashStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            HashStream does not support seeking, attempting to set Position
            will throw NotSupportedException.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.HashStream.Length">
            <summary>
            Gets the overridden length used to construct the HashStream
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.HashStream`1">
            <summary>
            A wrapper stream that calculates a hash of the base stream as it
            is being read or written.
            The calculated hash is only available after the stream is closed or
            CalculateHash is called. After calling CalculateHash, any further reads
            on the streams will not change the CalculatedHash.
            If an ExpectedHash is specified and is not equal to the calculated hash,
            Close or CalculateHash methods will throw an AmazonClientException.
            If base stream's position is not 0 or HashOnReads is true and the entire stream is
            not read, the CalculatedHash will be set to an empty byte array and
            comparison to ExpectedHash will not be made.
            </summary>
            <exception cref="T:Amazon.Runtime.AmazonClientException">
            Exception thrown during Close() or CalculateHash(), if ExpectedHash is set and
            is different from CalculateHash that the stream calculates, provided that
            CalculatedHash is not a zero-length byte array.
            </exception>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.HashStream`1.#ctor(System.IO.Stream,System.Byte[],System.Int64)">
            <summary>
            Initializes an HashStream with a hash algorithm and a base stream.
            </summary>
            <param name="baseStream">Stream to calculate hash for.</param>
            <param name="expectedHash">
            Expected hash. Will be compared against calculated hash on stream close.
            Pass in null to disable check.
            </param>
            <param name="expectedLength">
            Expected length of the stream. If the reading stops before reaching this
            position, CalculatedHash will be set to empty array.
            </param>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.MD5Stream">
            <summary>
            A wrapper stream that calculates an MD5 hash of the base stream as it
            is being read or written.
            The calculated hash is only available after the stream is closed or
            CalculateHash is called. After calling CalculateHash, any further reads
            on the streams will not change the CalculatedHash.
            If an ExpectedHash is specified and is not equal to the calculated hash,
            Close or CalculateHash methods will throw an AmazonClientException.
            If base stream's position is not 0 or HashOnReads is true and the entire stream is
            not read, the CalculatedHash will be set to an empty byte array and
            comparison to ExpectedHash will not be made.
            </summary>
            <exception cref="T:Amazon.Runtime.AmazonClientException">
            Exception thrown during Close() or CalculateHash(), if ExpectedHash is set and
            is different from CalculateHash that the stream calculates, provided that
            CalculatedHash is not a zero-length byte array.
            </exception>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.MD5Stream.#ctor(System.IO.Stream,System.Byte[],System.Int64)">
            <summary>
            Initializes an MD5Stream with a base stream.
            </summary>
            <param name="baseStream">Stream to calculate hash for.</param>
            <param name="expectedHash">
            Expected hash. Will be compared against calculated hash on stream close.
            Pass in null to disable check.
            </param>
            <param name="expectedLength">
            Expected length of the stream. If the reading stops before reaching this
            position, CalculatedHash will be set to empty array.
            </param>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.LogMessage">
            <summary>
            A single logged message
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.Logger">
            <summary>
            This is a dynamic wrapper around log4net so we can avoid log4net being required
            to be distributed with the SDK.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.InternalLogger">
            <summary>
            Abstract logger class, base for any custom/specific loggers.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.InternalLogger.Flush">
            <summary>
            Flushes the logger contents.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.InternalLogger.Error(System.Exception,System.String,System.Object[])">
            <summary>
            Simple wrapper around the log4net Error method.
            </summary>
            <param name="exception"></param>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.InternalLogger.Debug(System.Exception,System.String,System.Object[])">
            <summary>
            Simple wrapper around the log4net Debug method.
            </summary>
            <param name="exception"></param>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.InternalLogger.DebugFormat(System.String,System.Object[])">
            <summary>
            Simple wrapper around the log4net DebugFormat method.
            </summary>
            <param name="message"></param>
            <param name="arguments"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.InternalLogger.InfoFormat(System.String,System.Object[])">
            <summary>
            Simple wrapper around the log4net InfoFormat method.
            </summary>
            <param name="message"></param>
            <param name="arguments"></param>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.InternalLogger.IsErrorEnabled">
            <summary>
            Simple wrapper around the log4net IsErrorEnabled property.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.InternalLogger.IsDebugEnabled">
            <summary>
            Simple wrapper around the log4net IsDebugEnabled property.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.InternalLogger.IsInfoEnabled">
            <summary>
            Simple wrapper around the log4net IsInfoEnabled property.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.InternalLog4netLogger">
            <summary>
            Logger wrapper for reflected log4net logging methods.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.InternalLog4netLogger.loadStatics">
            <summary>
            This should be a one time call to use reflection to find all the types and methods
            needed for the logging API.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.InternalLog4netLogger.Error(System.Exception,System.String,System.Object[])">
            <summary>
            Simple wrapper around the log4net Error method.
            </summary>
            <param name="exception"></param>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.InternalLog4netLogger.Debug(System.Exception,System.String,System.Object[])">
            <summary>
            Simple wrapper around the log4net Debug method.
            </summary>
            <param name="exception"></param>
            <param name="messageFormat"></param>
            <param name="args"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.InternalLog4netLogger.DebugFormat(System.String,System.Object[])">
            <summary>
            Simple wrapper around the log4net DebugFormat method.
            </summary>
            <param name="message"></param>
            <param name="arguments"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.InternalLog4netLogger.InfoFormat(System.String,System.Object[])">
            <summary>
            Simple wrapper around the log4net InfoFormat method.
            </summary>
            <param name="message"></param>
            <param name="arguments"></param>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.InternalLog4netLogger.IsErrorEnabled">
            <summary>
            Simple wrapper around the log4net IsErrorEnabled property.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.InternalLog4netLogger.IsDebugEnabled">
            <summary>
            Simple wrapper around the log4net IsDebugEnabled property.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.InternalLog4netLogger.IsInfoEnabled">
            <summary>
            Simple wrapper around the log4net IsInfoEnabled property.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.RequestMetrics.#ctor">
            <summary>
            Constructs an empty, disabled metrics object
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.RequestMetrics.StartEvent(Amazon.Runtime.Internal.Util.Metric)">
            <summary>
            Starts timing an event. Logs an exception if an event
            of the same type was started but not stopped.
            </summary>
            <param name="metric"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.RequestMetrics.StopEvent(Amazon.Runtime.Internal.Util.Metric)">
            <summary>
            Stops timing an event. Logs an exception if the event wasn't started.
            </summary>
            <param name="metric"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.RequestMetrics.AddProperty(Amazon.Runtime.Internal.Util.Metric,System.Object)">
            <summary>
            Adds a property for a metric. If there are multiple, the
            object is added as a new item in a list.
            </summary>
            <param name="metric"></param>
            <param name="property"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.RequestMetrics.SetCounter(Amazon.Runtime.Internal.Util.Metric,System.Int64)">
            <summary>
            Sets a counter for a specific metric.
            </summary>
            <param name="metric"></param>
            <param name="value"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.RequestMetrics.IncrementCounter(Amazon.Runtime.Internal.Util.Metric)">
            <summary>
            Increments a specific metric counter.
            If counter doesn't exist yet, it is set to 1.
            </summary>
            <param name="metric"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.RequestMetrics.GetErrors">
            <summary>
            Returns errors associated with the metric, including
            if there are still any timing events in-flight.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.RequestMetrics.ToString">
            <summary>
            Returns a string representation of the current metrics.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.RequestMetrics.Properties">
            <summary>
            Collection of properties being tracked
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.RequestMetrics.Timings">
            <summary>
            Timings for metrics being tracked
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.RequestMetrics.Counters">
            <summary>
            Counters being tracked
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.RequestMetrics.IsEnabled">
            <summary>
            Whether metrics are enabled for the request
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.Timing">
            <summary>
            Timing information for a metric
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.Timing.#ctor">
            <summary>
            Empty, stopped timing object
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.Timing.#ctor(System.Int64)">
            <summary>
            Timing object in a started state
            </summary>
            <param name="currentTime"></param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.Timing.Stop(System.Int64)">
            <summary>
            Stops timing
            </summary>
            <param name="currentTime"></param>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.Timing.IsFinished">
            <summary>
            Whether the timing has been stopped
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.Timing.ElapsedTicks">
            <summary>
            Elapsed ticks from start to stop.
            If timing hasn't been stopped yet, returns 0.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.Util.Timing.ElapsedTime">
            <summary>
            Elapsed time from start to stop.
            If timing hasn't been stopped yet, returns TimeSpan.Zero
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.TimingEvent">
            <summary>
            Timing event, stops timing of a metric when disposed
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.TimingEvent.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.TimingEvent.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Util.TimingEvent.Finalize">
            <summary>
            The destructor for the client class.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.PartialWrapperStream">
            <summary>
            This class is used to wrap a stream for a particular segment of a stream.  It 
            makes that segment look like you are reading from beginning to end of the stream.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.ReadOnlyWrapperStream">
            <summary>
            Wrapper stream that only supports reading
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.PartialReadOnlyWrapperStream">
            <summary>
            Partial wrapper stream that only supports reading
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Util.StringUtils">
            <summary>
            Utilities for converting objects to strings. Used by the marshaller classes.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.ErrorHandler">
            <summary>
            This handler processes exceptions thrown from the HTTP handler and
            unmarshalls error responses.
            </summary>
        </member>
        <member name="F:Amazon.Runtime.Internal.ErrorHandler._exceptionHandlers">
            <summary>
            Default set of exception handlers.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.ErrorHandler.#ctor(Amazon.Runtime.Internal.Util.ILogger)">
            <summary>
            Constructor for ErrorHandler.
            </summary>
            <param name="logger">an ILogger instance.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.ErrorHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Handles and processes any exception thrown from underlying handlers.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.ErrorHandler.InvokeAsync``1(Amazon.Runtime.IExecutionContext)">
            <summary>
            Handles and processes any exception thrown from underlying handlers.
            </summary>
            <typeparam name="T">The response type for the current request.</typeparam>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.ErrorHandler.DisposeReponse(Amazon.Runtime.IResponseContext)">
            <summary>
            Disposes the response body.
            </summary>
            <param name="responseContext">The response context.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.ErrorHandler.ProcessException(Amazon.Runtime.IExecutionContext,System.Exception)">
            <summary>
            Processes an exception by invoking a matching exception handler
            for the given exception.
            </summary>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <param name="exception">The exception to be processed.</param>
            <returns>
            This method returns a boolean value which indicates if the original exception
            should be rethrown.
            This method can also throw a new exception that may be thrown by exception
            processing by a matching exception handler.
            </returns>
        </member>
        <member name="P:Amazon.Runtime.Internal.ErrorHandler.ExceptionHandlers">
            <summary>
            Default set of exception handlers.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.ExceptionHandler`1">
            <summary>
            The abstract base class for exception handlers.
            </summary>
            <typeparam name="T">The exception type.</typeparam>
        </member>
        <member name="T:Amazon.Runtime.IExceptionHandler`1">
            <summary>
            The interface for an exception handler with a generic parameter for the exception type.
            </summary>
            <typeparam name="T">The exception type.</typeparam>
        </member>
        <member name="T:Amazon.Runtime.IExceptionHandler">
            <summary>
            The interface for an exception handler.
            </summary>    
        </member>
        <member name="M:Amazon.Runtime.IExceptionHandler.Handle(Amazon.Runtime.IExecutionContext,System.Exception)">
            <summary>
            Handles an exception for the given execution context.
            </summary>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <param name="exception">The exception to handle.</param>
            <returns>
            Returns a boolean value which indicates if the original exception
            should be rethrown.
            This method can also throw a new exception to replace the original exception.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.IExceptionHandler`1.HandleException(Amazon.Runtime.IExecutionContext,`0)">
            <summary>
            Handles an exception for the given execution context.
            </summary>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <param name="exception">The exception to handle.</param>
            <returns>
            Returns a boolean value which indicates if the original exception
            should be rethrown.
            This method can also throw a new exception to replace the original exception.
            </returns>
        </member>
        <member name="T:Amazon.Runtime.Internal.HttpErrorResponseExceptionHandler">
            <summary>
            The exception handler for HttpErrorResponseException exception.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.HttpErrorResponseExceptionHandler.#ctor(Amazon.Runtime.Internal.Util.ILogger)">
            <summary>
            The constructor for HttpErrorResponseExceptionHandler.
            </summary>
            <param name="logger">in instance of ILogger.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.HttpErrorResponseExceptionHandler.HandleException(Amazon.Runtime.IExecutionContext,Amazon.Runtime.Internal.HttpErrorResponseException)">
            <summary>
            Handles an exception for the given execution context.
            </summary>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <param name="exception">The exception to handle.</param>
            <returns>
            Returns a boolean value which indicates if the original exception
            should be rethrown.
            This method can also throw a new exception to replace the original exception.
            </returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.HttpErrorResponseExceptionHandler.HandleSuppressed404(Amazon.Runtime.IExecutionContext,Amazon.Runtime.Internal.Transform.IWebResponseData)">
            <summary>
            Checks if a HTTP 404 status code is returned which needs to be suppressed and 
            processes it.
            If a suppressed 404 is present, it unmarshalls the response and returns true to 
            indicate that a suppressed 404 was processed, else returns false.
            </summary>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <param name="httpErrorResponse"></param>
            <returns>
            If a suppressed 404 is present, returns true, else returns false.
            </returns>
        </member>
        <member name="T:Amazon.Runtime.Internal.WebExceptionHandler">
            <summary>
            The exception handler for HttpErrorResponseException exception.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.CallbackHandler">
            <summary>
            A pipeline handler which provides hooks to run
            external code in the pre-invoke and post-invoke phases.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.CallbackHandler.PreInvoke(Amazon.Runtime.IExecutionContext)">
            <summary>
            Executes the OnPreInvoke action as part of pre-invoke.
            </summary>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.CallbackHandler.PostInvoke(Amazon.Runtime.IExecutionContext)">
            <summary>
            Executes the OnPreInvoke action as part of post-invoke.
            </summary>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
        </member>
        <member name="P:Amazon.Runtime.Internal.CallbackHandler.OnPreInvoke">
            <summary>
            Action to execute on the pre invoke phase.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.CallbackHandler.OnPostInvoke">
            <summary>
            Action to execute on the post invoke phase.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.EndpointResolver">
            <summary>
            This handler resolves the endpoint to be used for the current request.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.EndpointResolver.PreInvoke(Amazon.Runtime.IExecutionContext)">
            <summary>
            Resolves the endpoint to be used for the current request
            before invoking the next handler.
            </summary>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.EndpointResolver.DetermineEndpoint(Amazon.Runtime.IRequestContext)">
            <summary>
            Determines the endpoint for the request.
            </summary>
            <param name="requestContext">The request context.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Runtime.Internal.ErrorCallbackHandler">
            <summary>
            This handler provides an OnError action that can be used as hook for
            external code to handle exceptions in the runtime pipeline.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.ErrorCallbackHandler.HandleException(Amazon.Runtime.IExecutionContext,System.Exception)">
            <summary>
            Executes the OnError action if an exception occurs during the 
            execution of any underlying handlers.
            </summary>
            <param name="executionContext"></param>
            <param name="exception"></param>
        </member>
        <member name="P:Amazon.Runtime.Internal.ErrorCallbackHandler.OnError">
            <summary>
            Action to execute if an exception occurs during the 
            execution of any underlying handlers.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.Marshaller">
            <summary>
            This handler marshalls the request before calling invoking the next handler.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Marshaller.PreInvoke(Amazon.Runtime.IExecutionContext)">
            <summary>
            Marshalls the request before calling invoking the next handler.
            </summary>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
        </member>
        <member name="T:Amazon.Runtime.Internal.MetricsHandler">
            <summary>
            This handler manages the metrics used to time the complete call and
            logs the final metrics.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.MetricsHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Captures the overall execution time and logs final metrics.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.MetricsHandler.InvokeAsync``1(Amazon.Runtime.IExecutionContext)">
            <summary>
            Captures the overall execution time and logs final metrics.
            </summary>
            <typeparam name="T">The response type for the current request.</typeparam>
            <param name="executionContext">
            The execution context, it contains the request and response context.
            </param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.Runtime.Internal.RedirectHandler">
            <summary>
            This handler processes HTTP redirects and reissues the call to the
            redirected location.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.RedirectHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Processes HTTP redirects and reissues the call to the
            redirected location.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.RedirectHandler.InvokeAsync``1(Amazon.Runtime.IExecutionContext)">
            <summary>
            Processes HTTP redirects and reissues the call to the
            redirected location.
            </summary>
            <typeparam name="T">The response type for the current request.</typeparam>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.RedirectHandler.HandleRedirect(Amazon.Runtime.IExecutionContext,System.Net.WebException)">
            <summary>
            Checks if a HTTP 307 (temporary redirect) has occured and changes the 
            request endpoint to the redirected location.
            </summary>
            <param name="executionContext">
            The execution context, it contains the request and response context.
            </param>
            <param name="exception">The WebException from from the HTTP handler.</param>
            <returns>
            A boolean value that indicates if a redirect has occured.
            </returns>
        </member>
        <member name="T:Amazon.Runtime.Internal.Signer">
            <summary>
            This handler signs the request.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Signer.PreInvoke(Amazon.Runtime.IExecutionContext)">
            <summary>
            Signs the request before invoking the next handler.
            </summary>
            <param name="executionContext">
            The execution context, it contains the request and response context.
            </param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Signer.ShouldSign(Amazon.Runtime.IRequestContext)">
            <summary>
            Determines if the request should be signed.
            </summary>
            <param name="requestContext">The request context.</param>
            <returns>A boolean value that indicated if the request should be signed.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Signer.SignRequest(Amazon.Runtime.IRequestContext)">
            <summary>
            Signs the request.
            </summary>
            <param name="requestContext">The request context.</param>
        </member>
        <member name="T:Amazon.Runtime.Internal.Unmarshaller">
            <summary>
            This handler unmarshalls the HTTP response.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.Unmarshaller.#ctor(System.Boolean)">
            <summary>
            The constructor for Unmarshaller.
            </summary>
            <param name="supportsResponseLogging">
            Boolean value which indicated if the unmarshaller 
            handler supports response logging.
            </param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Unmarshaller.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Unmarshalls the response returned by the HttpHandler.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Unmarshaller.InvokeAsync``1(Amazon.Runtime.IExecutionContext)">
            <summary>
            Unmarshalls the response returned by the HttpHandler.
            </summary>
            <typeparam name="T">The response type for the current request.</typeparam>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.Unmarshaller.Unmarshall(Amazon.Runtime.IExecutionContext)">
            <summary>
            Unmarshalls the HTTP response.
            </summary>
            <param name="executionContext">
            The execution context, it contains the request and response context.
            </param>
        </member>
        <member name="M:Amazon.Runtime.Internal.Unmarshaller.UnmarshallAsync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Unmarshalls the HTTP response.
            </summary>
            <param name="executionContext">
            The execution context, it contains the request and response context.
            </param>
        </member>
        <member name="T:Amazon.Runtime.Internal.HttpHandler`1">
            <summary>
            The HTTP handler contains common logic for issuing an HTTP request that is 
            independent of the underlying HTTP infrastructure.
            </summary>
            <typeparam name="TRequestContent"></typeparam>
        </member>
        <member name="M:Amazon.Runtime.Internal.HttpHandler`1.#ctor(Amazon.Runtime.IHttpRequestFactory{`0},System.Object)">
            <summary>
            The constructor for HttpHandler.
            </summary>
            <param name="requestFactory">The request factory used to create HTTP Requests.</param>
            <param name="callbackSender">The sender parameter used in any events raised by this handler.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.HttpHandler`1.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Issues an HTTP request for the current request context.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.HttpHandler`1.InvokeAsync``1(Amazon.Runtime.IExecutionContext)">
            <summary>
            Issues an HTTP request for the current request context.
            </summary>
            <typeparam name="T">The response type for the current request.</typeparam>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.HttpHandler`1.WriteContentToRequestBody(`0,Amazon.Runtime.IHttpRequest{`0},Amazon.Runtime.IRequestContext)">
            <summary>
            Determines the content for request body and uses the HTTP request
            to write the content to the HTTP request body.
            </summary>
            <param name="requestContent">Content to be written.</param>
            <param name="httpRequest">The HTTP request.</param>
            <param name="requestContext">The request context.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.HttpHandler`1.CreateWebRequest(Amazon.Runtime.IRequestContext)">
            <summary>
            Creates the HttpWebRequest and configures the end point, content, user agent and proxy settings.
            </summary>
            <param name="requestContext">The async request.</param>
            <returns>The web request that actually makes the call.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.HttpHandler`1.Dispose">
            <summary>
            Disposes the HTTP handler.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.HttpHandler`1.CallbackSender">
            <summary>
            The sender parameter used in any events raised by this handler.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.HttpRequestMessageFactory">
            <summary>
            A factory which creates HTTP requests which uses System.Net.Http.HttpClient.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.IHttpRequestFactory`1">
            <summary>
            The interface for a HTTP request factory.
            </summary>
            <typeparam name="TRequestContent">The type used by the underlying HTTP API to represent the request body.</typeparam>
        </member>
        <member name="M:Amazon.Runtime.IHttpRequestFactory`1.CreateHttpRequest(System.Uri)">
            <summary>
            Creates an HTTP request for the given URI.
            </summary>
            <param name="requestUri">The request URI.</param>
            <returns>An HTTP request.</returns>
        </member>
        <member name="M:Amazon.Runtime.HttpRequestMessageFactory.#ctor(Amazon.Runtime.ClientConfig)">
            <summary>
            The constructor for HttpRequestMessageFactory.
            </summary>
            <param name="clientConfig">Configuration setting for a client.</param>
        </member>
        <member name="M:Amazon.Runtime.HttpRequestMessageFactory.CreateHttpRequest(System.Uri)">
            <summary>
            Creates an HTTP request for the given URI.
            </summary>
            <param name="requestUri">The request URI.</param>
            <returns>An HTTP request.</returns>
        </member>
        <member name="M:Amazon.Runtime.HttpRequestMessageFactory.Dispose">
            <summary>
            Disposes the HttpRequestMessageFactory.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.HttpRequestMessageFactory.HttpClient">
            <summary>
            Returns the HttpClient used by the request factory.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.HttpWebRequestMessage">
            <summary>
            HTTP request wrapper for System.Net.Http.HttpRequestMessage.
            </summary>    
        </member>
        <member name="T:Amazon.Runtime.IHttpRequest`1">
            <summary>
            The interface for an HTTP request that is agnostic of the underlying HTTP API.
            </summary>
            <typeparam name="TRequestContent">The type used by the underlying HTTP API to represent the HTTP request content.</typeparam>
        </member>
        <member name="M:Amazon.Runtime.IHttpRequest`1.ConfigureRequest(Amazon.Runtime.IRequestContext)">
            <summary>
            Configures a request as per the request context.
            </summary>
            <param name="requestContext">The request context.</param>
        </member>
        <member name="M:Amazon.Runtime.IHttpRequest`1.SetRequestHeaders(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Sets the headers on the request.
            </summary>
            <param name="headers">A dictionary of header names and values.</param>
        </member>
        <member name="M:Amazon.Runtime.IHttpRequest`1.GetRequestContent">
            <summary>
            Gets a handle to the request content.
            </summary>
            <returns>The request content.</returns>
        </member>
        <member name="M:Amazon.Runtime.IHttpRequest`1.GetResponse">
            <summary>
            Returns the HTTP response.
            </summary>
            <returns>The HTTP response.</returns>
        </member>
        <member name="M:Amazon.Runtime.IHttpRequest`1.WriteToRequestBody(`0,System.IO.Stream,System.Collections.Generic.IDictionary{System.String,System.String},System.Int32)">
            <summary>
            Writes a stream to the request body.
            </summary>
            <param name="requestContent">The destination where the content stream is written.</param>
            <param name="contentStream">The content stream to be written.</param>
            <param name="contentHeaders">HTTP content headers.</param>
            <param name="bufferSize">The size of the buffer used to read and transfer the stream.</param>
        </member>
        <member name="M:Amazon.Runtime.IHttpRequest`1.WriteToRequestBody(`0,System.Byte[],System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes a byte array to the request body.
            </summary>
            <param name="requestContent">The destination where the content stream is written.</param>
            <param name="content">The content stream to be written.</param>
            <param name="contentHeaders">HTTP content headers.</param>
        </member>
        <member name="M:Amazon.Runtime.IHttpRequest`1.Abort">
            <summary>
            Aborts the HTTP request.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.IHttpRequest`1.GetRequestContentAsync">
            <summary>
            Gets a handle to the request content.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.IHttpRequest`1.GetResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Returns the HTTP response.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used to cancel the asynchronous operation.</param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Runtime.IHttpRequest`1.Method">
            <summary>
            The HTTP method or verb.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.IHttpRequest`1.RequestUri">
            <summary>
            The request URI.
            </summary>
        </member>
        <member name="F:Amazon.Runtime.HttpWebRequestMessage.ContentHeaderNames">
            <summary>
            Set of content header names.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.HttpWebRequestMessage.#ctor(System.Uri,System.Net.Http.HttpClient)">
            <summary>
            The constructor for HttpWebRequestMessage.
            </summary>
            <param name="requestUri">The request URI.</param>
            <param name="client">The HTTP client used to create requests.</param>
        </member>
        <member name="M:Amazon.Runtime.HttpWebRequestMessage.ConfigureRequest(Amazon.Runtime.IRequestContext)">
            <summary>
            Configures a request as per the request context.
            </summary>
            <param name="requestContext">The request context.</param>
        </member>
        <member name="M:Amazon.Runtime.HttpWebRequestMessage.SetRequestHeaders(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Sets the headers on the request.
            </summary>
            <param name="headers">A dictionary of header names and values.</param>
        </member>
        <member name="M:Amazon.Runtime.HttpWebRequestMessage.GetRequestContent">
            <summary>
            Gets a handle to the request content.
            </summary>
            <returns>The request content.</returns>
        </member>
        <member name="M:Amazon.Runtime.HttpWebRequestMessage.GetResponse">
            <summary>
            Returns the HTTP response.
            </summary>
            <returns>The HTTP response.</returns>
        </member>
        <member name="M:Amazon.Runtime.HttpWebRequestMessage.Abort">
            <summary>
            Aborts the HTTP request.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.HttpWebRequestMessage.GetResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Returns the HTTP response.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used to cancel the asynchronous operation.</param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.HttpWebRequestMessage.WriteToRequestBody(System.Net.Http.HttpContent,System.IO.Stream,System.Collections.Generic.IDictionary{System.String,System.String},System.Int32)">
            <summary>
            Writes a stream to the request body.
            </summary>
            <param name="requestContent">The destination where the content stream is written.</param>
            <param name="contentStream">The content stream to be written.</param>
            <param name="contentHeaders">HTTP content headers.</param>
            <param name="bufferSize">The size of the buffer used to read and transfer the stream.</param>
        </member>
        <member name="M:Amazon.Runtime.HttpWebRequestMessage.WriteToRequestBody(System.Net.Http.HttpContent,System.Byte[],System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes a byte array to the request body.
            </summary>
            <param name="requestContent">The destination where the content stream is written.</param>
            <param name="content">The content stream to be written.</param>
            <param name="contentHeaders">HTTP content headers.</param>
        </member>
        <member name="M:Amazon.Runtime.HttpWebRequestMessage.GetRequestContentAsync">
            <summary>
            Gets a handle to the request content.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Amazon.Runtime.HttpWebRequestMessage.Dispose">
            <summary>
            Disposes the HttpWebRequestMessage.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.HttpWebRequestMessage.Request">
            <summary>
            The underlying HTTP web request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.HttpWebRequestMessage.Method">
            <summary>
            The HTTP method or verb.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.HttpWebRequestMessage.RequestUri">
            <summary>
            The request URI.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.RetryHandler">
            <summary>
            The retry handler has the generic logic for retrying requests.
            It uses a retry policy which specifies when 
            a retry should be performed.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.RetryHandler.#ctor(Amazon.Runtime.RetryPolicy)">
            <summary>
            Constructor which takes in a retry policy.
            </summary>
            <param name="retryPolicy">Retry Policy</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.RetryHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Invokes the inner handler and performs a retry, if required as per the
            retry policy.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.RetryHandler.InvokeAsync``1(Amazon.Runtime.IExecutionContext)">
            <summary>
            Invokes the inner handler and performs a retry, if required as per the
            retry policy.
            </summary>
            <typeparam name="T">The response type for the current request.</typeparam>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.RetryHandler.PrepareForRetry(Amazon.Runtime.IRequestContext)">
            <summary>
            Prepares the request for retry.
            </summary>
            <param name="requestContext">Request context containing the state of the request.</param>
        </member>
        <member name="P:Amazon.Runtime.Internal.RetryHandler.RetryPolicy">
            <summary>
            The retry policy which specifies when 
            a retry should be performed.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.RuntimeAsyncResult.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.RuntimeAsyncResult.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.Internal.RuntimePipeline">
            <summary>
            A runtime pipeline contains a collection of handlers which represent
            different stages of request and response processing.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.Internal.RuntimePipeline.#ctor(Amazon.Runtime.IPipelineHandler)">
            <summary>
            Constructor for RuntimePipeline.
            </summary>
            <param name="handler">The handler with which the pipeline is initalized.</param>        
        </member>
        <member name="M:Amazon.Runtime.Internal.RuntimePipeline.#ctor(System.Collections.Generic.IList{Amazon.Runtime.IPipelineHandler})">
            <summary>
            Constructor for RuntimePipeline.
            </summary>        
            <param name="handlers">List of handlers with which the pipeline is initalized.</param>                
        </member>
        <member name="M:Amazon.Runtime.Internal.RuntimePipeline.#ctor(System.Collections.Generic.IList{Amazon.Runtime.IPipelineHandler},Amazon.Runtime.Internal.Util.ILogger)">
            <summary>
            Constructor for RuntimePipeline.
            </summary>        
            <param name="handlers">List of handlers with which the pipeline is initalized.</param>        
            <param name="logger">The logger used to log messages.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.RuntimePipeline.#ctor(Amazon.Runtime.IPipelineHandler,Amazon.Runtime.Internal.Util.ILogger)">
            <summary>
            Constructor for RuntimePipeline.
            </summary>
            <param name="handler">The handler with which the pipeline is initalized.</param>
            <param name="logger">The logger used to log messages.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.RuntimePipeline.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Invokes the pipeline synchronously.
            </summary>
            <param name="executionContext">Request context</param>
            <returns>Response context</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.RuntimePipeline.InvokeAsync``1(Amazon.Runtime.IExecutionContext)">
            <summary>
            Invokes the pipeline asynchronously.
            </summary>
            <param name="executionContext">Request context</param>
            <returns>Response context</returns>
        </member>
        <member name="M:Amazon.Runtime.Internal.RuntimePipeline.AddHandler(Amazon.Runtime.IPipelineHandler)">
            <summary>
            Adds a new handler to the top of the pipeline.
            </summary>
            <param name="handler">The handler to be added to the pipeline.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.RuntimePipeline.AddHandlerAfter``1(Amazon.Runtime.IPipelineHandler)">
            <summary>
            Adds a handler after the first instance of handler of type T.        
            </summary>
            <typeparam name="T">Type of the handler after which the given handler instance is added.</typeparam>
            <param name="handler">The handler to be added to the pipeline.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.RuntimePipeline.AddHandlerBefore``1(Amazon.Runtime.IPipelineHandler)">
            <summary>
            Adds a handler before the first instance of handler of type T.
            </summary>
            <typeparam name="T">Type of the handler before which the given handler instance is added.</typeparam>
            <param name="handler">The handler to be added to the pipeline.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.RuntimePipeline.RemoveHandler``1">
            <summary>
            Removes the first occurance of a handler of type T.
            </summary>
            <typeparam name="T">Type of the handler which will be removed.</typeparam>
        </member>
        <member name="M:Amazon.Runtime.Internal.RuntimePipeline.ReplaceHandler``1(Amazon.Runtime.IPipelineHandler)">
            <summary>
            Replaces the first occurance of a handler of type T with the given handler.
            </summary>
            <typeparam name="T">Type of the handler which will be replaced.</typeparam>
            <param name="handler">The handler to be added to the pipeline.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.RuntimePipeline.InsertHandler(Amazon.Runtime.IPipelineHandler,Amazon.Runtime.IPipelineHandler)">
            <summary>
            Inserts the given handler after current handler in the pipeline.
            </summary>
            <param name="handler">Handler to be inserted in the pipeline.</param>
            <param name="current">Handler after which the given handler is inserted.</param>
        </member>
        <member name="M:Amazon.Runtime.Internal.RuntimePipeline.GetInnermostHandler(Amazon.Runtime.IPipelineHandler)">
            <summary>
            Gets the innermost handler by traversing the inner handler till 
            it reaches the last one.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.Internal.RuntimePipeline.Handler">
            <summary>
            The top-most handler in the pipeline.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.ResponseMetadata">
            <summary>
            Information about the request.
            </summary>
        </member>
        <member name="P:Amazon.Runtime.ResponseMetadata.RequestId">
            <summary>
            Gets and sets the RequestId property.
            ID that uniquely identifies a request. Amazon keeps track of request IDs. If you have a question about a request, include the request ID in your correspondence.
            </summary>
        </member>
        <member name="T:Amazon.Runtime.SignatureException">
            <summary>
            This exception is thrown if there are problems signing the request.
            </summary>
        </member>
        <member name="M:Amazon.Runtime.StreamTransferProgressArgs.#ctor(System.Int64,System.Int64,System.Int64)">
            <summary>
            The constructor takes the number of
            currently transferred bytes and the
            total number of bytes to be transferred
            </summary>
            <param name="incrementTransferred">The number of bytes transferred since last event</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
        </member>
        <member name="M:Amazon.Runtime.StreamTransferProgressArgs.ToString">
            <summary>
            Returns a string representation of this object
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.Runtime.StreamTransferProgressArgs.PercentDone">
            <summary>
            Gets the percentage of transfer completed
            </summary>
        </member>
        <member name="P:Amazon.Runtime.StreamTransferProgressArgs.IncrementTransferred">
            <summary>
            Gets the number of bytes transferred since last event
            </summary>
        </member>
        <member name="P:Amazon.Runtime.StreamTransferProgressArgs.TransferredBytes">
            <summary>
            Gets the number of bytes transferred
            </summary>
        </member>
        <member name="P:Amazon.Runtime.StreamTransferProgressArgs.TotalBytes">
            <summary>
            Gets the total number of bytes to be transferred
            </summary>
        </member>
        <member name="T:Amazon.S3.AmazonS3Client">
             <summary>
             Implementation for accessing S3
            
             
             </summary>
        </member>
        <member name="T:Amazon.S3.IAmazonS3">
             <summary>
             Interface for accessing S3
            
             
             </summary>
            <summary>
            Interface for Amazon S3 Clients.
            For more information about Amazon S3, go to <see href="http://aws.amazon.com/s3"/>
            </summary>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.AbortMultipartUploadAsync(Amazon.S3.Model.AbortMultipartUploadRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AbortMultipartUpload operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AbortMultipartUpload operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.CompleteMultipartUploadAsync(Amazon.S3.Model.CompleteMultipartUploadRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CompleteMultipartUpload operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CompleteMultipartUpload operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.CopyObjectAsync(Amazon.S3.Model.CopyObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CopyObject operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CopyObject operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.CopyPartAsync(Amazon.S3.Model.CopyPartRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CopyPart operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CopyPart operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteBucketAsync(Amazon.S3.Model.DeleteBucketRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBucket operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucket operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteBucketPolicyAsync(Amazon.S3.Model.DeleteBucketPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBucketPolicy operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucketPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteBucketTaggingAsync(Amazon.S3.Model.DeleteBucketTaggingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBucketTagging operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucketTagging operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteBucketWebsiteAsync(Amazon.S3.Model.DeleteBucketWebsiteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBucketWebsite operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucketWebsite operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteCORSConfigurationAsync(Amazon.S3.Model.DeleteCORSConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteCORSConfiguration operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteCORSConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteLifecycleConfigurationAsync(Amazon.S3.Model.DeleteLifecycleConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteLifecycleConfiguration operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLifecycleConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteObjectAsync(Amazon.S3.Model.DeleteObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteObject operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteObject operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.DeleteObjectsAsync(Amazon.S3.Model.DeleteObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteObjects operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteObjects operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetACLAsync(Amazon.S3.Model.GetACLRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetACL operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetACL operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketLocationAsync(Amazon.S3.Model.GetBucketLocationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketLocation operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketLocation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketLoggingAsync(Amazon.S3.Model.GetBucketLoggingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketLogging operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketLogging operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketNotificationAsync(Amazon.S3.Model.GetBucketNotificationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketNotification operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketNotification operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketPolicyAsync(Amazon.S3.Model.GetBucketPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketPolicy operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketRequestPaymentAsync(Amazon.S3.Model.GetBucketRequestPaymentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketRequestPayment operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketRequestPayment operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketTaggingAsync(Amazon.S3.Model.GetBucketTaggingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketTagging operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketTagging operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketVersioningAsync(Amazon.S3.Model.GetBucketVersioningRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketVersioning operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketVersioning operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetBucketWebsiteAsync(Amazon.S3.Model.GetBucketWebsiteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketWebsite operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketWebsite operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetCORSConfigurationAsync(Amazon.S3.Model.GetCORSConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetCORSConfiguration operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetCORSConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetLifecycleConfigurationAsync(Amazon.S3.Model.GetLifecycleConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetLifecycleConfiguration operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetLifecycleConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetObjectAsync(Amazon.S3.Model.GetObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetObject operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetObject operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetObjectMetadataAsync(Amazon.S3.Model.GetObjectMetadataRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetObjectMetadata operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetObjectMetadata operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetObjectTorrentAsync(Amazon.S3.Model.GetObjectTorrentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetObjectTorrent operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetObjectTorrent operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.InitiateMultipartUploadAsync(Amazon.S3.Model.InitiateMultipartUploadRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the InitiateMultipartUpload operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the InitiateMultipartUpload operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.ListBucketsAsync(Amazon.S3.Model.ListBucketsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListBuckets operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListBuckets operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.ListMultipartUploadsAsync(Amazon.S3.Model.ListMultipartUploadsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListMultipartUploads operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListMultipartUploads operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.ListObjectsAsync(Amazon.S3.Model.ListObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListObjects operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListObjects operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.ListPartsAsync(Amazon.S3.Model.ListPartsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListParts operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListParts operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.ListVersionsAsync(Amazon.S3.Model.ListVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListVersions operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListVersions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutACLAsync(Amazon.S3.Model.PutACLRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutACL operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutACL operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketAsync(Amazon.S3.Model.PutBucketRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucket operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucket operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketLoggingAsync(Amazon.S3.Model.PutBucketLoggingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketLogging operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketLogging operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketNotificationAsync(Amazon.S3.Model.PutBucketNotificationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketNotification operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketNotification operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketPolicyAsync(Amazon.S3.Model.PutBucketPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketPolicy operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketRequestPaymentAsync(Amazon.S3.Model.PutBucketRequestPaymentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketRequestPayment operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketRequestPayment operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketTaggingAsync(Amazon.S3.Model.PutBucketTaggingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketTagging operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketTagging operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketVersioningAsync(Amazon.S3.Model.PutBucketVersioningRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketVersioning operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketVersioning operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutBucketWebsiteAsync(Amazon.S3.Model.PutBucketWebsiteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketWebsite operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketWebsite operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutCORSConfigurationAsync(Amazon.S3.Model.PutCORSConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutCORSConfiguration operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutCORSConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutLifecycleConfigurationAsync(Amazon.S3.Model.PutLifecycleConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutLifecycleConfiguration operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutLifecycleConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.PutObjectAsync(Amazon.S3.Model.PutObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutObject operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutObject operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.RestoreObjectAsync(Amazon.S3.Model.RestoreObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RestoreObject operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RestoreObject operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.UploadPartAsync(Amazon.S3.Model.UploadPartRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UploadPart operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UploadPart operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.IAmazonS3.GetPreSignedURL(Amazon.S3.Model.GetPreSignedUrlRequest)">
            <summary>
            Create a signed URL allowing access to a resource that would 
            usually require authentication.
            </summary>
            <remarks>
            <para>
            When using query string authentication you create a query,
            specify an expiration time for the query, sign it with your
            signature, place the data in an HTTP request, and distribute
            the request to a user or embed the request in a web page.
            </para>
            <para>
            A PreSigned URL can be generated for GET, PUT, DELETE and HEAD
            operations on your bucketName, keys, and versions.
            </para>
            </remarks>
            <param name="request">The GetPreSignedUrlRequest that defines the
            parameters of the operation.</param>
            <returns>A string that is the signed http request.</returns>
            <exception cref="T:System.ArgumentException" />
            <exception cref="T:System.ArgumentNullException" />
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonS3Client with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonS3Client with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor(Amazon.Runtime.AWSCredentials,Amazon.S3.AmazonS3Config)">
            <summary>
            Constructs AmazonS3Client with AWS Credentials and an
            AmazonS3Client Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonS3Client Configuration Object</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonS3Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonS3Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor(System.String,System.String,Amazon.S3.AmazonS3Config)">
            <summary>
            Constructs AmazonS3Client with AWS Access Key ID, AWS Secret Key and an
            AmazonS3Client Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonS3Client Configuration Object</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonS3Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonS3Client with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.#ctor(System.String,System.String,System.String,Amazon.S3.AmazonS3Config)">
            <summary>
            Constructs AmazonS3Client with AWS Access Key ID, AWS Secret Key and an
            AmazonS3Client Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonS3Client Configuration Object</param>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.AbortMultipartUploadAsync(Amazon.S3.Model.AbortMultipartUploadRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AbortMultipartUpload operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AbortMultipartUpload operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.CompleteMultipartUploadAsync(Amazon.S3.Model.CompleteMultipartUploadRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CompleteMultipartUpload operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CompleteMultipartUpload operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.CopyObjectAsync(Amazon.S3.Model.CopyObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CopyObject operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CopyObject operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.CopyPartAsync(Amazon.S3.Model.CopyPartRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CopyPart operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CopyPart operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteBucketAsync(Amazon.S3.Model.DeleteBucketRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBucket operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucket operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteBucketPolicyAsync(Amazon.S3.Model.DeleteBucketPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBucketPolicy operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucketPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteBucketTaggingAsync(Amazon.S3.Model.DeleteBucketTaggingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBucketTagging operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucketTagging operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteBucketWebsiteAsync(Amazon.S3.Model.DeleteBucketWebsiteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteBucketWebsite operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBucketWebsite operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteCORSConfigurationAsync(Amazon.S3.Model.DeleteCORSConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteCORSConfiguration operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteCORSConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteLifecycleConfigurationAsync(Amazon.S3.Model.DeleteLifecycleConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteLifecycleConfiguration operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLifecycleConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteObjectAsync(Amazon.S3.Model.DeleteObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteObject operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteObject operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.DeleteObjectsAsync(Amazon.S3.Model.DeleteObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteObjects operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteObjects operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetACLAsync(Amazon.S3.Model.GetACLRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetACL operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetACL operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketLocationAsync(Amazon.S3.Model.GetBucketLocationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketLocation operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketLocation operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketLoggingAsync(Amazon.S3.Model.GetBucketLoggingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketLogging operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketLogging operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketNotificationAsync(Amazon.S3.Model.GetBucketNotificationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketNotification operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketNotification operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketPolicyAsync(Amazon.S3.Model.GetBucketPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketPolicy operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketRequestPaymentAsync(Amazon.S3.Model.GetBucketRequestPaymentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketRequestPayment operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketRequestPayment operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketTaggingAsync(Amazon.S3.Model.GetBucketTaggingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketTagging operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketTagging operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketVersioningAsync(Amazon.S3.Model.GetBucketVersioningRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketVersioning operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketVersioning operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetBucketWebsiteAsync(Amazon.S3.Model.GetBucketWebsiteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetBucketWebsite operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBucketWebsite operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetCORSConfigurationAsync(Amazon.S3.Model.GetCORSConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetCORSConfiguration operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetCORSConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetLifecycleConfigurationAsync(Amazon.S3.Model.GetLifecycleConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetLifecycleConfiguration operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetLifecycleConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetObjectAsync(Amazon.S3.Model.GetObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetObject operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetObject operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetObjectMetadataAsync(Amazon.S3.Model.GetObjectMetadataRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetObjectMetadata operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetObjectMetadata operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetObjectTorrentAsync(Amazon.S3.Model.GetObjectTorrentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetObjectTorrent operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetObjectTorrent operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.HeadBucketAsync(Amazon.S3.Model.HeadBucketRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the HeadBucket operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the HeadBucket operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.InitiateMultipartUploadAsync(Amazon.S3.Model.InitiateMultipartUploadRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the InitiateMultipartUpload operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the InitiateMultipartUpload operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.ListBucketsAsync(Amazon.S3.Model.ListBucketsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListBuckets operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListBuckets operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.ListMultipartUploadsAsync(Amazon.S3.Model.ListMultipartUploadsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListMultipartUploads operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListMultipartUploads operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.ListObjectsAsync(Amazon.S3.Model.ListObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListObjects operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListObjects operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.ListPartsAsync(Amazon.S3.Model.ListPartsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListParts operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListParts operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.ListVersionsAsync(Amazon.S3.Model.ListVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListVersions operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListVersions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutACLAsync(Amazon.S3.Model.PutACLRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutACL operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutACL operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketAsync(Amazon.S3.Model.PutBucketRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucket operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucket operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketLoggingAsync(Amazon.S3.Model.PutBucketLoggingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketLogging operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketLogging operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketNotificationAsync(Amazon.S3.Model.PutBucketNotificationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketNotification operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketNotification operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketPolicyAsync(Amazon.S3.Model.PutBucketPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketPolicy operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketRequestPaymentAsync(Amazon.S3.Model.PutBucketRequestPaymentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketRequestPayment operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketRequestPayment operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketTaggingAsync(Amazon.S3.Model.PutBucketTaggingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketTagging operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketTagging operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketVersioningAsync(Amazon.S3.Model.PutBucketVersioningRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketVersioning operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketVersioning operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutBucketWebsiteAsync(Amazon.S3.Model.PutBucketWebsiteRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutBucketWebsite operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutBucketWebsite operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutCORSConfigurationAsync(Amazon.S3.Model.PutCORSConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutCORSConfiguration operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutCORSConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutLifecycleConfigurationAsync(Amazon.S3.Model.PutLifecycleConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutLifecycleConfiguration operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutLifecycleConfiguration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.PutObjectAsync(Amazon.S3.Model.PutObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutObject operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutObject operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.RestoreObjectAsync(Amazon.S3.Model.RestoreObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RestoreObject operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RestoreObject operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.UploadPartAsync(Amazon.S3.Model.UploadPartRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UploadPart operation.
            <seealso cref="T:Amazon.S3.IAmazonS3"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UploadPart operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.GetPreSignedURL(Amazon.S3.Model.GetPreSignedUrlRequest)">
            <summary>
            Create a signed URL allowing access to a resource that would 
            usually require authentication.
            </summary>
            <remarks>
            <para>
            When using query string authentication you create a query,
            specify an expiration time for the query, sign it with your
            signature, place the data in an HTTP request, and distribute
            the request to a user or embed the request in a web page.
            </para>
            <para>
            A PreSigned URL can be generated for GET, PUT, DELETE and HEAD
            operations on your bucketName, keys, and versions.
            </para>
            </remarks>
            <param name="request">The GetPreSignedUrlRequest that defines the
            parameters of the operation.</param>
            <returns>A string that is the signed http request.</returns>
            <exception cref="T:System.ArgumentException" />
            <exception cref="T:System.ArgumentNullException" />
        </member>
        <member name="M:Amazon.S3.AmazonS3Client.Marshall(Amazon.S3.Model.GetPreSignedUrlRequest,System.String,System.String,System.Boolean)">
            <summary>
            Marshalls the parameters for a presigned url for a preferred signing protocol.
            </summary>
            <param name="getPreSignedUrlRequest"></param>
            <param name="accessKey"></param>
            <param name="token"></param>
            <param name="aws4Signing">
            True if AWS4 signing will be used; if the expiry period in the request exceeds the
            maximum allowed for AWS4 (one week), an ArgumentException is thrown.
            </param>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.AmazonS3Config">
            <summary>
            Configuration for accessing AmazonS3 service
            </summary>
        </member>
        <member name="M:Amazon.S3.AmazonS3Config.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.S3.AmazonS3Config.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.S3.AmazonS3Config.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.S3.AmazonS3Config.ForcePathStyle">
            <summary>
            When true, requests will always use path style addressing.
            </summary>
        </member>
        <member name="P:Amazon.S3.AmazonS3Exception.AmazonId2">
            <summary>
            A special token that helps AWS troubleshoot problems.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.AbortMultipartUploadRequest">
            <summary>
            The parameters to request an abort of a multipart upload.
            </summary>
            <remarks>
            After a multipart upload is aborted, no additional parts can be uploaded using that upload ID. 
            The storage consumed by any previously uploaded parts will be freed. However, if any part uploads 
            are currently in progress, those part uploads might or might not succeed. As a result, it might be 
            necessary to abort a given multipart upload multiple times in order to completely free all storage 
            consumed by all parts.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.AbortMultipartUploadRequest.BucketName">
            <summary>
            The name of the bucketName containing the S3 object that was being uploaded in parts.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.AbortMultipartUploadRequest.Key">
            <summary>
            The key of the S3 object that was being uploaded.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.AbortMultipartUploadRequest.UploadId">
            <summary>
            The upload id for the in-progress multipart upload that should be aborted.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.AbortMultipartUploadResponse">
            <summary>
            Returns information about the AbortMultipartUpload response metadata.
            The AbortMultipartUpload operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ByteRange">
            <summary>
            This class represents the byte range for a range GET from S3.
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.ByteRange.#ctor(System.Int64,System.Int64)">
            <summary>
            Constructs a ByteRange and sets the start and end.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="P:Amazon.S3.Model.ByteRange.Start">
            <summary>
            The starting byte number of the range
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ByteRange.End">
            <summary>
            The ending byte number of the range
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ByteRange.FormattedByteRange">
            <summary>
            The formatted string representing the byte range to be set for the range header.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.CompleteMultipartUploadRequest">
            <summary>
            Container for the parameters to the CompleteMultipartUpload operation.
            <para>Completes a multipart upload by assembling previously uploaded parts.</para>
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.CompleteMultipartUploadRequest.AddPartETags(Amazon.S3.Model.PartETag[])">
            <summary>
            Adds a collection of part numbers and corresponding etags.
            </summary>
            <param name="partETags">PartETags that will added to this request.</param>
        </member>
        <member name="M:Amazon.S3.Model.CompleteMultipartUploadRequest.AddPartETags(System.Collections.Generic.IEnumerable{Amazon.S3.Model.PartETag})">
            <summary>
            Adds a collection of part numbers and corresponding etags.
            </summary>
            <param name="partETags">PartETags that will added to this request.</param>
        </member>
        <member name="M:Amazon.S3.Model.CompleteMultipartUploadRequest.AddPartETags(Amazon.S3.Model.UploadPartResponse[])">
            <summary>
            Adds a collection of part numbers and corresponding etags by transforming the UploadPartResponses into PartETags.
            </summary>
            <param name="responses">The list of response objects return from UploadParts.</param>
        </member>
        <member name="M:Amazon.S3.Model.CompleteMultipartUploadRequest.AddPartETags(System.Collections.Generic.IEnumerable{Amazon.S3.Model.UploadPartResponse})">
            <summary>
            Adds a collection of part numbers and corresponding etags by transforming the UploadPartResponses into PartETags.
            </summary>
            <param name="responses">The list of response objects return from UploadParts.</param>
        </member>
        <member name="M:Amazon.S3.Model.CompleteMultipartUploadRequest.AddPartETags(Amazon.S3.Model.CopyPartResponse[])">
            <summary>
            Adds a collection of part numbers and corresponding etags by transforming the CopyPartResponse into PartETags.
            </summary>
            <param name="responses">The list of response objects return from CopyParts.</param>
        </member>
        <member name="M:Amazon.S3.Model.CompleteMultipartUploadRequest.AddPartETags(System.Collections.Generic.IEnumerable{Amazon.S3.Model.CopyPartResponse})">
            <summary>
            Adds a collection of part numbers and corresponding etags by transforming the CopyPartResponse into PartETags.
            </summary>
            <param name="responses">The list of response objects return from CopyParts.</param>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadRequest.BucketName">
            <summary>
            The name of the bucketName containing the S3 object that was being uploaded in parts.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadRequest.Key">
            <summary>
            The key of the S3 object that was being uploaded.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadRequest.PartETags">
            <summary>
            A collection of part numbers and corresponding etags.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadRequest.UploadId">
            <summary>
            The upload id for the in-progress multipart upload that should be completed.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.CompleteMultipartUploadResponse">
            <summary>
            Returns information about the  CompleteMultipartUpload response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadResponse.Location">
            <summary>
            Gets and sets the URI that identifies the newly created object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadResponse.BucketName">
            <summary>
            Gets and sets the name of the bucketName that contains the newly created object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadResponse.Key">
            <summary>
            Gets and sets the object key of the newly created object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadResponse.ETag">
            <summary>
            Gets and sets Entity tag that identifies the newly created object's data. Objects with different
            object data will have different entity tags. The entity tag is an opaque string.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadResponse.Expiration">
            <summary>
            Gets and sets the Expiration property.
            Specifies the expiration date for the object and the
            rule governing the expiration.
            Is null if expiration is not applicable.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadResponse.ServerSideEncryptionMethod">
            <summary>
            Gets and sets the ServerSideEncryptionMethod property.
            Specifies the encryption used on the server to
            store the content.
            Default is None.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CompleteMultipartUploadResponse.VersionId">
            <summary>
            Gets and sets the VersionId property.
            This is the version-id of the S3 object
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.CopyObjectRequest">
            <summary>
            Container for the parameters to the CopyObject operation.
            <para>Creates a copy of an object that is already stored in Amazon S3.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutWithACLRequest.Grants">
            <summary>
            Gets the access control lists (ACLs) for this request. 
            Please refer to <see cref="T:Amazon.S3.Model.Grant"/> for information on
            S3 Grants.
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetSourceBucket">
            <summary>
            Checks if SourceBucket property is set.
            </summary>
            <returns>true if SourceBucket property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetSourceKey">
            <summary>
            Checks if SourceKey property is set.
            </summary>
            <returns>true if SourceKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetSourceVersionId">
            <summary>
            Checks if SourceVersionId property is set.
            </summary>
            <returns>true if SourceVersionId property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetDestinationBucket">
            <summary>
            Checks if DestinationBucket property is set.
            </summary>
            <returns>true if DestinationBucket property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetDestinationKey">
            <summary>
            Checks if DestinationKey property is set.
            </summary>
            <returns>true if DestinationKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetETagToMatch">
            <summary>
            Checks if ETagToMatch property is set.
            </summary>
            <remarks>
            Copies the object if its entity tag (ETag) is different
            than the specified Etag; otherwise returns a 412 (failed condition).
            Constraints: This header can be used with IfModifiedSince, but cannot
            be used with other conditional copy properties.
            </remarks>
            <returns>true if ETagToMatch property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetETagToNotMatch">
            <summary>
            Checks if ETagToNotMatch property is set.
            </summary>
            <returns>true if ETagToNotMatch property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetModifiedSinceDate">
            <summary>
            Checks if ModifiedSinceDate property is set.
            </summary>
            <returns>true if ModifiedSinceDate property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetUnmodifiedSinceDate">
            <summary>
            Checks if UnmodifiedSinceDate property is set.
            </summary>
            <returns>true if UnmodifiedSinceDate property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetServerSideEncryptionCustomerProvidedKey">
            <summary>
            Checks if ServerSideEncryptionCustomerProvidedKey property is set.
            </summary>
            <returns>true if ServerSideEncryptionCustomerProvidedKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            Checks if ServerSideEncryptionCustomerProvidedKeyMD5 property is set.
            </summary>
            <returns>true if ServerSideEncryptionCustomerProvidedKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetCopySourceServerSideEncryptionCustomerProvidedKey">
            <summary>
            Checks if CopySourceServerSideEncryptionCustomerProvidedKey property is set.
            </summary>
            <returns>true if CopySourceServerSideEncryptionCustomerProvidedKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyObjectRequest.IsSetCopySourceServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            Checks if CopySourceServerSideEncryptionCustomerProvidedKeyMD5 property is set.
            </summary>
            <returns>true if CopySourceServerSideEncryptionCustomerProvidedKey property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.SourceBucket">
            <summary>
            The name of the bucket containing the object to copy.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.SourceKey">
            <summary>
            The key of the object to copy.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.SourceVersionId">
            <summary>
            Specifies a particular version of the source object to copy. By default the latest version is copied.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.DestinationBucket">
            <summary>
            The name of the bucket to contain the copy of the source object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.DestinationKey">
            <summary>
            The key to be given to the copy of the source object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.CannedACL">
            <summary>
            A canned access control list (CACL) to apply to the object.
            Please refer to <see cref="T:Amazon.S3.Model.S3CannedACL"/> for
            information on S3 Canned ACLs.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.ETagToMatch">
            <summary>
            ETag to be matched as a pre-condition for copying the source object
            otherwise returns a PreconditionFailed.
            </summary>
            <remarks>
            Copies the object if its entity tag (ETag) matches 
            the specified tag; otherwise return a 412 (precondition failed).
            Constraints: This property can be used with IfUnmodifiedSince,
            but cannot be used with other conditional copy properties.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.ETagToNotMatch">
            <summary>
            ETag that must not be matched as a pre-condition for copying the source object,
            otherwise returns a PreconditionFailed.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.ModifiedSinceDate">
            <summary>
            Copies the object if it has been modified since the specified time, otherwise returns a PreconditionFailed.
            </summary>
            <remarks>
            Copies the object if it has been modified since the
            specified time; otherwise returns a 412 (failed condition).
            Constraints: This property can be used with ETagToNotMatch,
            but cannot be used with other conditional copy properties.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.UnmodifiedSinceDate">
            <summary>
            Copies the object if it has not been modified since the specified time, otherwise returns a PreconditionFailed.
            </summary>
            <remarks>
            Copies the object if it hasn't been modified since the
            specified time; otherwise returns a 412 (precondition failed).
            Constraints: This property can be used with ETagToMatch,
            but cannot be used with other conditional copy properties.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.MetadataDirective">
            <summary>
            Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.ServerSideEncryptionMethod">
            <summary>
            The Server-side encryption algorithm used when storing this object in S3.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.StorageClass">
            <summary>
            The type of storage to use for the object. Defaults to 'STANDARD'.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.WebsiteRedirectLocation">
            <summary>
            If the bucketName is configured as a website, redirects requests for this object to another object in the same bucketName or to an external URL.
            Amazon S3 stores the value of this header in the object metadata.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.Headers">
            <summary>
            The collection of headers for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.Metadata">
            <summary>
            The collection of meta data for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.ContentType">
            <summary>
            This is a convenience property for Headers.ContentType.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.ServerSideEncryptionCustomerMethod">
            <summary>
            The Server-side encryption algorithm to be used with the customer provided key.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.ServerSideEncryptionCustomerProvidedKey">
            <summary>
            The base64-encoded encryption key for Amazon S3 to use to encrypt the object
            <para>
            Using the encryption key you provide as part of your request Amazon S3 manages both the encryption, as it writes 
            to disks, and decryption, when you access your objects. Therefore, you don't need to maintain any data encryption code. The only 
            thing you do is manage the encryption keys you provide.
            </para>        /// <para>
            When you retrieve an object, you must provide the same encryption key as part of your request. Amazon S3 first verifies 
            the encryption key you provided matches, and then decrypts the object before returning the object data to you.
            </para>
            <para>
            Important: Amazon S3 does not store the encryption key you provide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.ServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            The MD5 of the customer encryption key specified in the ServerSideEncryptionCustomerProvidedKey property. The MD5 is
            base 64 encoded. This field is optional, the SDK will calculate the MD5 if this is not set.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.CopySourceServerSideEncryptionCustomerMethod">
            <summary>
            The Server-side encryption algorithm to be used with the customer provided key.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.CopySourceServerSideEncryptionCustomerProvidedKey">
            <summary>
            The customer provided encryption key for the source object of the copy.
            <para>
            Important: Amazon S3 does not store the encryption key you provide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectRequest.CopySourceServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            The MD5 of the customer encryption key specified in the CopySourceServerSideEncryptionCustomerProvidedKey property. The MD5 is
            base 64 encoded. This field is optional, the SDK will calculate the MD5 if this is not set.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.CopyObjectResponse">
            <summary>
            Returns information about the  CopyObject response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectResponse.ETag">
            <summary>
            Gets and sets the ETag property.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectResponse.LastModified">
            <summary>
            Gets and sets the LastModified property.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectResponse.Expiration">
            <summary>
            Gets and sets the Expiration property.
            Specifies the expiration date for the object and the
            rule governing the expiration.
            Is null if expiration is not applicable.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectResponse.SourceVersionId">
            <summary>
            Gets and sets the SourceVersionId property.
            This is the Version Id of the Source Object
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyObjectResponse.ServerSideEncryptionMethod">
            <summary>
            The Server-side encryption algorithm used when storing this object in S3.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.CopyPartRequest">
            <summary>
            Container for the parameters to the CopyPart operation.
            <para>Uploads a part by copying data from an existing object as data source.</para>
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetSourceBucket">
            <summary>
            Checks if SourceBucket property is set.
            </summary>
            <returns>true if SourceBucket property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetSourceKey">
            <summary>
            Checks if SourceKey property is set.
            </summary>
            <returns>true if SourceKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetSourceVersionId">
            <summary>
            Checks if SourceVersionId property is set.
            </summary>
            <returns>true if SourceVersionId property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetDestinationBucket">
            <summary>
            Checks if DestinationBucket property is set.
            </summary>
            <returns>true if DestinationBucket property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetDestinationKey">
            <summary>
            Checks if DestinationKey property is set.
            </summary>
            <returns>true if DestinationKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetUploadId">
            <summary>
            Checks if UploadId property is set.
            </summary>
            <returns>true if UploadId property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetETagToMatch">
            <summary>
            Checks if ETagsToMatch property is set.
            </summary>
            <returns>true if ETagToMatch property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetETagToNotMatch">
            <summary>
            Checks if ETagToNotMatch property is set.
            </summary>
            <returns>true if ETagToNotMatch property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetModifiedSinceDate">
            <summary>
            Checks if ModifiedSinceDate property is set.
            </summary>
            <returns>true if ModifiedSinceDate property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetUnmodifiedSinceDate">
            <summary>
            Checks if UnmodifiedSinceDate property is set.
            </summary>
            <returns>true if UnmodifiedSinceDate property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetPartNumber">
            <summary>
            Checks if PartNumber property is set.
            </summary>
            <returns>true if PartNumber property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetFirstByte">
            <summary>
            Checks if FirstByte property is set.
            </summary>
            <returns>true if FirstByte property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetLastByte">
            <summary>
            Checks if LastByte property is set.
            </summary>
            <returns>true if LastByte property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetServerSideEncryptionMethod">
            <summary>
            Checks if ServerSideEncryptionMethod property is set.
            </summary>
            <returns>true if ServerSideEncryptionMethod property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetServerSideEncryptionCustomerProvidedKey">
            <summary>
            Checks if ServerSideEncryptionCustomerProvidedKey property is set.
            </summary>
            <returns>true if ServerSideEncryptionCustomerProvidedKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            Checks if ServerSideEncryptionCustomerProvidedKeyMD5 property is set.
            </summary>
            <returns>true if ServerSideEncryptionCustomerProvidedKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetCopySourceServerSideEncryptionCustomerProvidedKey">
            <summary>
            Checks if CopySourceServerSideEncryptionCustomerProvidedKey property is set.
            </summary>
            <returns>true if CopySourceServerSideEncryptionCustomerProvidedKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CopyPartRequest.IsSetCopySourceServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            Checks if CopySourceServerSideEncryptionCustomerProvidedKeyMD5 property is set.
            </summary>
            <returns>true if CopySourceServerSideEncryptionCustomerProvidedKey property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.SourceBucket">
            <summary>
            The name of the bucket containing the object to copy.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.SourceKey">
            <summary>
            The key of the object to copy.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.SourceVersionId">
            <summary>
            Specifies a particular version of the source object to copy. By default the latest version is copied.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.DestinationBucket">
            <summary>
            The name of the bucket to contain the copy of the source object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.DestinationKey">
            <summary>
            The key to be given to the copy of the source object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.UploadId">
            <summary>
            The ID identifying multipart upload for which we are copying a part.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.ETagToMatch">
            <summary>
            Collection of ETags to be matched as a pre-condition for copying the source object
            otherwise returns a PreconditionFailed.
            </summary>
            <remarks>
            Copies the object if its entity tag (ETag) matches one of
            the specified tags; otherwise return a 412 (precondition failed).
            Constraints: This property can be used with IfUnmodifiedSince,
            but cannot be used with other conditional copy properties.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.ETagsToNotMatch">
            <summary>
            Collection of ETags that must not be matched as a pre-condition for copying the source object
            otherwise returns a PreconditionFailed.
            </summary>
            <remarks>
            Copies the object if its entity tag (ETag) does not match any of the specified
            tags; otherwise returns a 412 (failed condition).
            Constraints: This header can be used with IfModifiedSince, but cannot
            be used with other conditional copy properties.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.ModifiedSinceDate">
            <summary>
            Copies the object if it has been modified since the specified time, otherwise returns a PreconditionFailed.
            </summary>
            <remarks>
            Copies the object if it has been modified since the
            specified time; otherwise returns a 412 (failed condition).
            Constraints: This property can be used with ETagToNotMatch,
            but cannot be used with other conditional copy properties.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.UnmodifiedSinceDate">
            <summary>
            Copies the object if it has not been modified since the specified time, otherwise returns a PreconditionFailed.
            </summary>
            <remarks>
            Copies the object if it hasn't been modified since the
            specified time; otherwise returns a 412 (precondition failed).
            Constraints: This property can be used with ETagToMatch,
            but cannot be used with other conditional copy properties.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.PartNumber">
            <summary>
            The number of the part to be copied.
            </summary>
            <remarks>
            Valid part numbers are from 1 to 10,000 inclusive and will uniquely identify the part 
            and determine the relative ordering within the destination object.  If a part already
            exists with the PartNumber it will be overwritten.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.FirstByte">
            <summary>
            The location of the first byte in the range if only a portion of the 
            source object is to be copied as the part. 
            </summary>
            <remarks>
            The LastByte property must also be set or this value will be ignored.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.LastByte">
            <summary>
            The location of the last byte in the range if only a portion of the 
            source object is to be copied as the part.  
            </summary>
            <remarks>
            The FirstByte property must also be set or this value will be ignored.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.ServerSideEncryptionMethod">
            <summary>
            <para>
            Specifies the encryption to be used on the server for the new object.
            </para>
            <para>
            Default: None
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.ServerSideEncryptionCustomerMethod">
            <summary>
            The Server-side encryption algorithm to be used with the customer provided key.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.ServerSideEncryptionCustomerProvidedKey">
            <summary>
            The base64-encoded encryption key for Amazon S3 to use to encrypt the object
            <para>
            Using the encryption key you provide as part of your request Amazon S3 manages both the encryption, as it writes 
            to disks, and decryption, when you access your objects. Therefore, you don't need to maintain any data encryption code. The only 
            thing you do is manage the encryption keys you provide.
            </para>
            <para>
            When you retrieve an object, you must provide the same encryption key as part of your request. Amazon S3 first verifies 
            the encryption key you provided matches, and then decrypts the object before returning the object data to you.
            </para>
            <para>
            Important: Amazon S3 does not store the encryption key you provide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.ServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            The MD5 of the customer encryption key specified in the ServerSideEncryptionCustomerProvidedKey property. The MD5 is
            base 64 encoded. This field is optional, the SDK will calculate the MD5 if this is not set.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.CopySourceServerSideEncryptionCustomerMethod">
            <summary>
            The Server-side encryption algorithm to be used with the customer provided key.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.CopySourceServerSideEncryptionCustomerProvidedKey">
            <summary>
            The customer provided encryption key for the source object of the copy.
            <para>
            Important: Amazon S3 does not store the encryption key you provide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartRequest.CopySourceServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            The MD5 of the customer encryption key specified in the CopySourceServerSideEncryptionCustomerProvidedKey property. The MD5 is
            base 64 encoded. This field is optional, the SDK will calculate the MD5 if this is not set.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.CopyPartResponse">
            <summary>
            Returns information about the  CopyPart response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartResponse.CopySourceVersionId">
            <summary>
            The version of the source object that was copied, if you have enabled versioning on the source bucketName.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartResponse.ETag">
            <summary>
            Entity tag of the object.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartResponse.LastModified">
            <summary>
            Date and time at which the object was uploaded.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartResponse.ServerSideEncryptionMethod">
            <summary>
            The Server-side encryption algorithm used when storing this object in S3.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CopyPartResponse.PartNumber">
            <summary>
            Gets and sets the PartNumber property.
            This is the part number in it's multi-part upload that will uniquely identify the part 
            and determine the relative ordering within the destination object.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.CORSConfiguration">
            <summary>
            A collection of up to 100 cross-origin resource sharing (CORS) rules.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CORSConfiguration.Rules">
            <summary>
            The collection of rules in this configuration.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.CORSRule">
            <summary>C O R S Rule
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.CORSRule.IsSetId">
            <summary>
            Checks if Id property is set.
            </summary>
            <returns>true if Id property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.CORSRule.IsSetAllowedHeaders">
            <summary>
            Checks if AllowedHeaders property is set.
            </summary>
            <returns>true if AllowedHeaders property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.CORSRule.AllowedMethods">
            <summary>
            Identifies HTTP methods that the domain/origin specified in the rule is allowed to execute.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CORSRule.AllowedOrigins">
            <summary>
            One or more origins you want customers to be able to access the bucket from.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CORSRule.Id">
            <summary>
            An optional unique identifier for the rule.
            </summary>
            <remarks>
            The ID value can be up to 255 characters long. The IDs help you find a rule in the configuration.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.CORSRule.ExposeHeaders">
            <summary>
            One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript
            XMLHttpRequest object).
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CORSRule.MaxAgeSeconds">
            <summary>
            The time in seconds that your browser is to cache the preflight response for the specified resource.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.CORSRule.AllowedHeaders">
            <summary>
            Specifies which headers are allowed in a pre-flight OPTIONS request through the 
            Access-Control-Request-Headers header. 
            </summary>
            <remarks>
            Each header name specified in the Access-Control-Request-Headers must have a corresponding 
            entry in the rule. Only the headers that were requested will be sent back. 
            This element can contain at most one * wildcard character.
            </remarks>
        </member>
        <member name="T:Amazon.S3.Model.DeleteBucketPolicyRequest">
            <summary>
            Container for the parameters to the DeleteBucketPolicy operation.
            <para>Deletes the policy from the bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteBucketPolicyRequest.BucketName">
            <summary>
            The bucket on which the policy is to be deleted.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteBucketPolicyResponse">
            <summary>
            Returns information about the DeleteBucketPolicy response metadata.
            The DeleteBucketPolicy operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteBucketRequest">
            <summary>
            Container for the parameters to the DeleteBucket operation.
            <para>Deletes the bucket. All objects (including all object versions and Delete Markers) in the bucket must be deleted before the bucket
            itself can be deleted.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteBucketRequest.BucketName">
            <summary>
            The name of the bucket to be created.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteBucketRequest.BucketRegion">
            <summary>
            The region locality for the bucket.
            </summary>
            <remarks>
            When set, this will determine the region the bucket exists in.
            Refer <see cref="T:Amazon.S3.Model.S3Region"/>
            for a list of possible values.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.DeleteBucketRequest.UseClientRegion">
            <summary>
            If set to true the bucket will be deleted in the same region as the configuration of the AmazonS3 client.
            DeleteBucketRequest.BucketRegion takes precedence over this property if both are set.
            Default: true.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteBucketResponse">
            <summary>
            Returns information about the DeleteBucket response metadata.
            The DeleteBucket operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteBucketTaggingRequest">
            <summary>
            The parameters to request deletion of a tag set from a bucket.
            </summary>
            <remarks>
            To use this operation, you must have permission to perform the s3:PutBucketTagging action. 
            By default, the bucket owner has this permission and can grant this permission to others.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.DeleteBucketTaggingRequest.BucketName">
            <summary>
            The name of the bucket on which the tag set is to be removed.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteBucketTaggingResponse">
            <summary>
            Returns information about the DeleteBucketTagging response metadata.
            The DeleteBucketTagging operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteBucketWebsiteRequest">
            <summary>
            Container for the parameters to the DeleteBucketWebsite operation.
            <para>This operation removes the website configuration from the bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteBucketWebsiteRequest.BucketName">
            <summary>
            The name of the bucket on which website configuration is to be removed.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteBucketWebsiteResponse">
            <summary>
            Returns information about the DeleteBucketWebsite response metadata.
            The DeleteBucketWebsite operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteCORSConfigurationRequest">
            <summary>
            Container for the parameters to the DeleteCORSConfiguration operation.
            <para>Deletes the cors configuration information set for the bucket.</para>
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteCORSConfigurationResponse">
            <summary>
            Returns information about the DeleteCORSConfiguration response metadata.
            The DeleteCORSConfiguration operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeletedObject">
            <summary>
            Contains information about a successful delete operation against a specific S3 object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeletedObject.DeleteMarker">
            <summary>
            Specifies whether the versioned object that was permanently deleted was (true) or was not (false) a 
            delete marker. In a simple DELETE, this header indicates whether (true) or not (false) a delete 
            marker was created.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeletedObject.DeleteMarkerVersionId">
            <summary>
            The version ID of the delete marker created as a result of the DELETE operation. If you delete a 
            specific object version, the value returned by this header is the version ID of the object version 
            deleted.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeletedObject.Key">
            <summary>
            The key of the deleted S3 object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeletedObject.VersionId">
            <summary>
            The version of the deleted S3 object.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteError">
            <summary>
            Contains information about a failed delete operation against a specific S3 object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteError.Key">
            <summary>
            The key of the S3 object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteError.VersionId">
            <summary>
            The version of the S3 object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteError.Code">
            <summary>
            The failure code for the delete error.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteError.Message">
            <summary>
            The failure message for the delete error.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteLifecycleConfigurationRequest">
            <summary>
            The parameters to request deletion of the lifecycle configuration on a bucket. 
            </summary>
            <remarks>
            <para>
            Amazon S3 removes all the lifecycle configuration rules in the lifecycle subresource associated with the bucket. 
            Your objects never expire, and Amazon S3 no longer automatically deletes any objects on the basis of rules contained 
            in the deleted lifecycle configuration.
            </para>
            <para>
            To use this operation, you must have permission to perform the s3:PutLifecycleConfiguration action. By default, the 
            bucket owner has this permission and the bucket owner can grant this permission to others.
            </para>
            <para>
            There is usually some time lag before lifecycle configuration deletion is fully propagated to all the Amazon S3 systems.
            </para>
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.DeleteLifecycleConfigurationRequest.BucketName">
            <summary>
            The name of the bucket on which the lifecycle configuration is to be deleted.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteLifecycleConfigurationResponse">
            <summary>
            Returns information about the DeleteLifecycleConfiguration response metadata.
            The DeleteLifecycleConfiguration operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteObjectRequest">
            <summary>
            The parameters to request deletion of an object in a bucket. 
            The operation removes the null version (if there is one) of an object and inserts a delete marker, which 
            becomes the latest version of the object.
            </summary>
            <remarks>
            <para>
            To remove a specific version, you must be the bucket owner and you must use the versionId subresource. 
            Using this subresource permanently deletes the version.
            </para>
            <para>
            If the object you want to delete is in a bucket where the bucket versioning configuration is MFA Delete enabled, 
            you must include specify the MFA serial number and value in the request.
            </para>
            <para>
            If there isn't a null version, Amazon S3 does not remove any objects.     
            </para>
            </remarks>
        </member>
        <member name="M:Amazon.S3.Model.DeleteObjectRequest.IsSetVersionId">
            <summary>
            Checks if VersionId property is set.
            </summary>
            <returns>true if VersionId property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.DeleteObjectRequest.IsSetMfaCodes">
            <summary>
            Checks if the MfaCodes property is set.
            </summary>
            <returns>true if the MfaCodes property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectRequest.BucketName">
            <summary>
            The name of the bucket containing the object to delete.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectRequest.Key">
            <summary>
            The key identifying the object to delete.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectRequest.VersionId">
            <summary>
            The identifier for the specific version of the object to be deleted, if required.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectRequest.MfaCodes">
            <summary>
            The MfaCodes Tuple associates the Serial Number and the current Token/Code displayed on the
            Multi-Factor Authentication device associated with your AWS Account. 
            </summary>
            <remarks>
            This is a required property for this request if:<br />
            1. EnableMfaDelete was configured on the bucket
            containing this object's version.<br />
            2. You are deleting an object's version
            </remarks>
        </member>
        <member name="T:Amazon.S3.Model.DeleteObjectResponse">
            <summary>
            Returns information about the  DeleteObject response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectResponse.DeleteMarker">
            <summary>
            Specifies whether the versioned object that was permanently deleted was (true) or was not (false) a delete marker.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectResponse.VersionId">
            <summary>
            Returns the version ID of the delete marker created as a result of the DELETE operation.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.DeleteObjectsException">
            <summary>
            AmazonS3 exception.
            Thrown when DeleteObjects returns successfully, but some of the objects
            were not deleted.
            </summary>
        </member>
        <member name="P:Amazon.S3.DeleteObjectsException.Response">
            <summary>
            Gets and sets the ErrorResponse property.
            The DeleteObjectsErrorResponse associated with this exception.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.DeleteObjectsRequest">
            <summary>
            Container for the parameters to the DeleteObjects operation.
            <para>This operation enables you to delete multiple objects from a bucket using a single HTTP request. You may specify up to 1000
            keys.</para>
            </summary>
            <summary>
            Container for the parameters to the DeleteObjects operation.
            <para>This operation enables you to delete multiple objects from a bucket using a single HTTP request. You may specify up to 1000
            keys.</para>
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.DeleteObjectsRequest.IsSetMfaCodes">
            <summary>
            Checks if the MfaCodes property is set.
            </summary>
            <returns>true if the MfaCodes property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.DeleteObjectsRequest.AddKey(System.String)">
            <summary>
            Add a key to the set of keys of objects to be deleted.
            </summary>
            <param name="key">Object key</param>
        </member>
        <member name="M:Amazon.S3.Model.DeleteObjectsRequest.AddKey(System.String,System.String)">
            <summary>
            Add a key and a version to be deleted.
            </summary>
            <param name="key">Key of the object to be deleted.</param>
            <param name="version">Version of the object to be deleted.</param>
        </member>
        <member name="M:Amazon.S3.Model.DeleteObjectsRequest.AddKey(Amazon.S3.Model.KeyVersion)">
            <summary>
            Add a KeyVersion object representing the S3 object to be deleted.
            </summary>
            <param name="keyVersion">KeyVersion representation of object to be deleted.</param>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectsRequest.BucketName">
            <summary>
            The name of the bucket containing the objects to be deleted.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectsRequest.Quiet">
            <summary>
            Toggles between Quiet and Verbose mode for the operation.
            If set to true (Quiet mode), the response includes only those keys for objects on which
            the delete operation failed.
            </summary>
            <remarks>
            By default this property is false and keys for both successful deletes
            and failures are returned in the response.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectsRequest.MfaCodes">
            <summary>
            The MfaCodes Tuple associates the Serial Number and the current Token/Code displayed on the
            Multi-Factor Authentication device associated with your AWS Account. 
            </summary>
            <remarks>
            This is a required property for this request if:<br />
            1. EnableMfaDelete was configured on the bucket
            containing this object's version.<br />
            2. You are deleting an object's version
            </remarks>
        </member>
        <member name="T:Amazon.S3.Model.DeleteObjectsResponse">
            <summary>
            Returns information about the  DeleteObjects response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectsResponse.DeletedObjects">
            <summary>
            Gets and sets the DeletedObjects property.
            A list of successful deletes.
            Set only when Quiet=false on DeleteObjectsRequest.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.DeleteObjectsResponse.DeleteErrors">
            <summary>
            Gets and sets the DeleteErrors property.
            A list of errors encountered while deleting objects.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Expiration">
            <summary>
            Defines the expiration policy for a given object.
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.Expiration.#ctor">
            <summary>
            Constructs an empty instance of an Expiration object
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.Expiration.ExpiryDate">
            <summary>
            The date and time for expiry.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.Expiration.RuleId">
            <summary>
            Id of the configuration rule for this expiry.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetACLRequest">
            <summary>
            Container for the parameters to the GetACL operation.
            <para>Returns the access control list (ACL) of an object.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetACLRequest.BucketName">
            <summary>
            The name of the bucket to be queried or containing the object to be queried.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetACLRequest.Key">
            <summary>
            The key of the S3 object to be queried.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetACLRequest.VersionId">
            <summary>
            VersionId used to reference a specific version of the object.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetACLResponse">
            <summary>
            Returns information about the GetACL response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetACLResponse.AccessControlList">
            <summary>
            Gets and sets the AccessControlList property.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketLocationRequest">
            <summary>
            Container for the parameters to the GetBucketLocation operation.
            <para>Returns the region the bucket resides in.</para>
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketLocationResponse">
            <summary>
            Returns information about the GetBucketLocation response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketLocationResponse.Location">
            <summary>
            Gets and sets the Location property.
            If the the bucket is located in us-east-1 S3Region.US will be return which has a 
            value of empty string.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketLoggingRequest">
            <summary>
            Container for the parameters to the GetBucketLogging operation.
            <para>Returns the logging status of a bucket and the permissions users have to view and modify that status. To use GET, you must be the
            bucket owner.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketLoggingRequest.BucketName">
            <summary>
            The name of the bucket to query.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketLoggingResponse">
            <summary>
            Returns information about the  GetBucketLogging response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketLoggingResponse.BucketLoggingConfig">
            <summary>
            Gets and sets the LoggingConfig property.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketNotificationRequest">
            <summary>
            Container for the parameters to the GetBucketNotification operation.
            <para>Return the notification configuration of a bucket.</para>
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketNotificationResponse">
            <summary>
            Returns information about the  GetBucketNotification response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketPolicyRequest">
            <summary>
            Container for the parameters to the GetBucketPolicy operation.
            <para>Returns the policy of a specified bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketPolicyRequest.BucketName">
            <summary>
            The name of the bucket.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketPolicyResponse">
            <summary>
            Get BucketName Policy Response
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketPolicyResponse.Policy">
            <summary>
            The bucket policy as a JSON document.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketRequestPaymentRequest">
            <summary>
            Container for the parameters to the GetBucketRequestPayment operation.
            <para>Returns the request payment configuration of a bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketRequestPaymentRequest.BucketName">
            <summary>
            The name of the bucket.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketRequestPaymentResponse">
            <summary>
            Returns information about the  GetBucketRequestPayment response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketRequestPaymentResponse.Payer">
            <summary>
            Specifies who pays for the download and request fees.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketTaggingRequest">
            <summary>
            Container for the parameters to the GetBucketTagging operation.
            <para>Returns the tag set associated with the bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketTaggingRequest.BucketName">
            <summary>
            The name of the bucket to be queried.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketTaggingResponse">
            <summary>
            Returns information about the  GetBucketTagging response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketTaggingResponse.TagSet">
            <summary>
            The collection of tags.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketVersioningRequest">
            <summary>
            Container for the parameters to the GetBucketVersioning operation.
            <para>Returns the versioning state of a bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketVersioningRequest.BucketName">
            <summary>
            The name of the bucket to be queried.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketVersioningResponse">
            <summary>
            Returns information about the  GetBucketVersioning response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketVersioningResponse.VersioningConfig">
            <summary>
            Gets and sets the Versioning property.
            Unless Versioning has been explicitly "Enabled" on a bucket,
            Versioning Status is "Off". Once Versioning has been 
            "Enabled", it can be "Suspended" but cannot be switched "Off".
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketWebsiteRequest">
            <summary>
            Container for the parameters to the GetBucketWebsite operation.
            <para>Returns the website configuration for a bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketWebsiteRequest.BucketName">
            <summary>
            The name of the bucket to be queried.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetBucketWebsiteResponse">
            <summary>
            Returns information about the  GetBucketWebsite response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetBucketWebsiteResponse.WebsiteConfiguration">
            <summary>
            Gets and sets the WebsiteConfiguration property.
            
            This is where the index document suffix and custom error page are defined.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetCORSConfigurationRequest">
            <summary>
            Container for the parameters to the GetBucketCors operation.
            <para>Returns the cors configuration for the bucket.</para>
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetCORSConfigurationResponse">
            <summary>
            Returns information about the  GetBucketCors response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetCORSConfigurationResponse.Configuration">
            <summary>
            The current CORSConfiguration for the bucket.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetLifecycleConfigurationRequest">
            <summary>
            Container for the parameters to the GetLifecycleConfiguration operation.
            <para>Returns the lifecycle configuration information set on the bucket.</para>
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetLifecycleConfigurationResponse">
            <summary>
            Returns information about the  GetLifecycleConfiguration response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetLifecycleConfigurationResponse.Configuration">
            <summary>
            Gets and Sets the property that governs whether
            the response includes successful deletes as well as errors
            following the DeleteObjects call against S3.
            
            By default this property is false and successful deletes
            are returned in the response.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetObjectMetadataRequest">
            <summary>
            Container for the parameters to the HeadObject operation.
            <para>The HEAD operation retrieves metadata from an object without returning the object itself. This operation is useful if you''re only
            interested in an object''s metadata. To use HEAD, you must have READ access to the object.</para>
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.GetObjectMetadataRequest.IsSetServerSideEncryptionCustomerProvidedKey">
            <summary>
            Checks if ServerSideEncryptionCustomerProvidedKey property is set.
            </summary>
            <returns>true if ServerSideEncryptionCustomerProvidedKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.GetObjectMetadataRequest.IsSetServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            Checks if ServerSideEncryptionCustomerProvidedKeyMD5 property is set.
            </summary>
            <returns>true if ServerSideEncryptionCustomerProvidedKey property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataRequest.BucketName">
            <summary>
            The name of the bucket that contains the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataRequest.EtagToMatch">
            <summary>
            ETag to be matched as a pre-condition for returning the object,
            otherwise a PreconditionFailed signal is returned.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataRequest.ModifiedSinceDate">
            <summary>
            Returns the object only if it has been modified since the specified time, 
            otherwise returns a PreconditionFailed.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataRequest.EtagToNotMatch">
            <summary>
            ETag that should not be matched as a pre-condition for returning the object,
            otherwise a PreconditionFailed signal is returned.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataRequest.UnmodifiedSinceDate">
            <summary>
            Returns the object only if it has not been modified since the specified time, 
            otherwise returns a PreconditionFailed.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataRequest.Key">
            <summary>
            The key of the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataRequest.VersionId">
            <summary>
            VersionId used to reference a specific version of the object.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataRequest.ServerSideEncryptionCustomerMethod">
            <summary>
            The Server-side encryption algorithm to be used with the customer provided key.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataRequest.ServerSideEncryptionCustomerProvidedKey">
            <summary>
            The base64-encoded encryption key for Amazon S3 to use to decrypt the object
            <para>
            Using the encryption key you provide as part of your request Amazon S3 manages both the encryption, as it writes 
            to disks, and decryption, when you access your objects. Therefore, you don't need to maintain any data encryption code. The only 
            thing you do is manage the encryption keys you provide.
            </para>
            <para>
            When you retrieve an object, you must provide the same encryption key as part of your request. Amazon S3 first verifies 
            the encryption key you provided matches, and then decrypts the object before returning the object data to you.
            </para>
            <para>
            Important: Amazon S3 does not store the encryption key you provide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataRequest.ServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            The MD5 of the customer encryption key specified in the ServerSideEncryptionCustomerProvidedKey property. The MD5 is
            base 64 encoded. This field is optional, the SDK will calculate the MD5 if this is not set.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetObjectMetadataResponse">
            <summary>
            Returns information about the  HeadObject response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.Headers">
            <summary>
            The collection of headers for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.Metadata">
            <summary>
            The collection of meta data for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.DeleteMarker">
            <summary>
            Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If false, this response header does not appear in the
            response.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.Expiration">
            <summary>
            Gets and sets the Expiration property.
            Specifies the expiration date for the object and the
            rule governing the expiration.
            Is null if expiration is not applicable.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.RestoreExpiration">
            <summary>
            Gets and sets the RestoreExpiration property.
            RestoreExpiration will be set for objects that have been restored from Amazon Glacier.  
            It indiciates for those objects how long the restored object will exist.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.RestoreInProgress">
            <summary>
            Gets and sets the RestoreInProgress
            Will be true when the object is in the process of being restored from Amazon Glacier.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.LastModified">
            <summary>
            Last modified date of the object
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.ETag">
            <summary>
            An ETag is an opaque identifier assigned by a web server to a specific version of a resource found at a URL
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.MissingMeta">
            <summary>
            This is set to the number of metadata entries not returned in x-amz-meta headers. This can happen if you create metadata using an API like
            SOAP that supports more flexible metadata than the REST API. For example, using SOAP, you can create metadata whose values are not legal
            HTTP headers.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.VersionId">
            <summary>
            Version of the object.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.Expires">
            <summary>
            The date and time at which the object is no longer cacheable.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.WebsiteRedirectLocation">
            <summary>
            If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL.
            Amazon S3 stores the value of this header in the object metadata.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.ServerSideEncryptionMethod">
            <summary>
            The Server-side encryption algorithm used when storing this object in S3.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectMetadataResponse.ServerSideEncryptionCustomerMethod">
            <summary>
            The Server-side encryption algorithm to be used with the customer provided key.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetObjectRequest">
            <summary>
            Container for the parameters to the GetObject operation.
            <para>Retrieves objects from Amazon S3.</para>
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.GetObjectRequest.IsSetServerSideEncryptionCustomerProvidedKey">
            <summary>
            Checks if ServerSideEncryptionCustomerProvidedKey property is set.
            </summary>
            <returns>true if ServerSideEncryptionCustomerProvidedKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.GetObjectRequest.IsSetServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            Checks if ServerSideEncryptionCustomerProvidedKeyMD5 property is set.
            </summary>
            <returns>true if ServerSideEncryptionCustomerProvidedKey property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.BucketName">
            <summary>
            The name of the bucket containing the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.EtagToMatch">
            <summary>
            ETag to be matched as a pre-condition for returning the object,
            otherwise a PreconditionFailed signal is returned.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.ModifiedSinceDate">
            <summary>
            Returns the object only if it has been modified since the specified time, 
            otherwise returns a PreconditionFailed.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.EtagToNotMatch">
            <summary>
            ETag that should not be matched as a pre-condition for returning the object,
            otherwise a PreconditionFailed signal is returned.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.UnmodifiedSinceDate">
            <summary>
            Returns the object only if it has not been modified since the specified time, 
            otherwise returns a PreconditionFailed.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.ByteRange">
            <summary>
            Downloads the specified range bytes of an object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.ResponseHeaderOverrides">
            <summary>
            A set of response headers that should be returned with the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.ResponseExpires">
            <summary>
            Sets the Expires header of the response.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.VersionId">
            <summary>
            VersionId used to reference a specific version of the object.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.ServerSideEncryptionCustomerMethod">
            <summary>
            The Server-side encryption algorithm to be used with the customer provided key.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.ServerSideEncryptionCustomerProvidedKey">
            <summary>
            The base64-encoded encryption key for Amazon S3 to use to decrypt the object
            <para>
            Using the encryption key you provide as part of your request Amazon S3 manages both the encryption, as it writes 
            to disks, and decryption, when you access your objects. Therefore, you don't need to maintain any data encryption code. The only 
            thing you do is manage the encryption keys you provide.
            </para>        
            <para>
            When you retrieve an object, you must provide the same encryption key as part of your request. Amazon S3 first verifies 
            the encryption key you provided matches, and then decrypts the object before returning the object data to you.
            </para>
            <para>
            Important: Amazon S3 does not store the encryption key you provide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectRequest.ServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            The MD5 of the customer encryption key specified in the ServerSideEncryptionCustomerProvidedKey property. The MD5 is
            base 64 encoded. This field is optional, the SDK will calculate the MD5 if this is not set.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetObjectResponse">
            <summary>
            Returns information about the  GetObject response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.StreamResponse">
            <summary>
            Base class for responses that return a stream.
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.StreamResponse.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.StreamResponse.ResponseStream">
            <summary>
            An open stream read from to get the data from S3. In order to
            use this stream without leaking the underlying resource, please
            wrap access to the stream within a using block.
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.GetObjectResponse.OnRaiseProgressEvent(System.String,System.Int64,System.Int64,System.Int64)">
            <summary>
            This method is called by a producer of write object progress
            notifications. When called, all the subscribers in the 
            invocation list will be called sequentially.
            </summary>
            <param name="file">The file being written.</param>
            <param name="incrementTransferred">The number of bytes transferred since last event</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.Key">
            <summary>
            Gets and sets the Key property.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.DeleteMarker">
            <summary>
            Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If false, this response header does not appear in the
            response.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.Headers">
            <summary>
            The collection of headers for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.Metadata">
            <summary>
            The collection of meta data for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.Expiration">
            <summary>
            Gets and sets the Expiration property.
            Specifies the expiration date for the object and the
            rule governing the expiration.
            Is null if expiration is not applicable.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.RestoreExpiration">
            <summary>
            Gets and sets the RestoreExpiration property.
            RestoreExpiration will be set for objects that have been restored from Amazon Glacier.  
            It indiciates for those objects how long the restored object will exist.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.RestoreInProgress">
            <summary>
            Gets and sets the RestoreInProgress
            Will be true when the object is in the process of being restored from Amazon Glacier.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.LastModified">
            <summary>
            Last modified date of the object
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.ETag">
            <summary>
            An ETag is an opaque identifier assigned by a web server to a specific version of a resource found at a URL
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.MissingMeta">
            <summary>
            This is set to the number of metadata entries not returned in x-amz-meta headers. This can happen if you create metadata using an API like
            SOAP that supports more flexible metadata than the REST API. For example, using SOAP, you can create metadata whose values are not legal
            HTTP headers.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.VersionId">
            <summary>
            Version of the object.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.Expires">
            <summary>
            The date and time at which the object is no longer cacheable.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.WebsiteRedirectLocation">
            <summary>
            If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL.
            Amazon S3 stores the value of this header in the object metadata.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.ServerSideEncryptionMethod">
            <summary>
            The Server-side encryption algorithm used when storing this object in S3.
             
            </summary>
        </member>
        <member name="E:Amazon.S3.Model.GetObjectResponse.WriteObjectProgressEvent">
            <summary>
            The event for Write Object progress notifications. All
            subscribers will be notified when a new progress
            event is raised.
            </summary>
            <remarks>
            Subscribe to this event if you want to receive
            put object progress notifications. Here is how:<br />
            1. Define a method with a signature similar to this one:
            <code>
            private void displayProgress(object sender, WriteObjectProgressArgs args)
            {
                Console.WriteLine(args);
            }
            </code>
            2. Add this method to the Put Object Progress Event delegate's invocation list
            <code>
            GetObjectResponse response = s3Client.GetObject(request);
            response.WriteObjectProgressEvent += displayProgress;
            </code>
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectResponse.ServerSideEncryptionCustomerMethod">
            <summary>
            The Server-side encryption algorithm to be used with the customer provided key.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.WriteObjectProgressArgs">
            <summary>
            Encapsulates the information needed to provide
            download progress for the Write Object Event.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.TransferProgressArgs">
            <summary>
            Arguments containing event details for an in-flight transfer.
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.TransferProgressArgs.#ctor(System.Int64,System.Int64,System.Int64)">
            <summary>
            The constructor takes the number of
            currently transferred bytes and the
            total number of bytes to be transferred
            </summary>
            <param name="incrementTransferred">The number of bytes transferred since last event</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
        </member>
        <member name="M:Amazon.S3.Model.TransferProgressArgs.ToString">
            <summary>
            Returns a string representation of this object
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.S3.Model.TransferProgressArgs.PercentDone">
            <summary>
            Gets the percentage of transfer completed
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.TransferProgressArgs.IncrementTransferred">
            <summary>
            Gets the number of bytes transferred since last event
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.TransferProgressArgs.TransferredBytes">
            <summary>
            Gets the number of bytes transferred
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.TransferProgressArgs.TotalBytes">
            <summary>
            Gets the total number of bytes to be transferred
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.WriteObjectProgressArgs.#ctor(System.String,System.String,System.String,System.Int64,System.Int64,System.Int64)">
            <summary>
            The constructor takes the number of
            currently transferred bytes and the
            total number of bytes to be transferred
            </summary>
            <param name="bucketName">The bucket name for the S3 object being written.</param>
            <param name="key">The object key for the S3 object being written.</param>
            <param name="versionId">The version-id of the S3 object.</param>
            <param name="incrementTransferred">The number of bytes transferred since last event</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
        </member>
        <member name="M:Amazon.S3.Model.WriteObjectProgressArgs.#ctor(System.String,System.String,System.String,System.String,System.Int64,System.Int64,System.Int64)">
            <summary>
            The constructor takes the number of
            currently transferred bytes and the
            total number of bytes to be transferred
            </summary>
            <param name="bucketName">The bucket name for the S3 object being written.</param>
            <param name="key">The object key for the S3 object being written.</param>
            <param name="filePath">The file for the S3 object being written.</param>
            <param name="versionId">The version-id of the S3 object.</param>
            <param name="incrementTransferred">The number of bytes transferred since last event</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
        </member>
        <member name="P:Amazon.S3.Model.WriteObjectProgressArgs.BucketName">
            <summary>
            Gets the bucket name for the S3 object being written.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.WriteObjectProgressArgs.Key">
            <summary>
            Gets the object key for the S3 object being written.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.WriteObjectProgressArgs.VersionId">
            <summary>
            Gets the version-id of the S3 object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.WriteObjectProgressArgs.FilePath">
            <summary>
            The file for the S3 object being written.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetObjectTorrentRequest">
            <summary>
            Container for the parameters to the GetObjectTorrent operation.
            <para>Return torrent files from a bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectTorrentRequest.BucketName">
            <summary>
            The name of the bucket containing the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetObjectTorrentRequest.Key">
            <summary>
            The key identifying the object.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetObjectTorrentResponse">
            <summary>
            Returns information about the  GetObjectTorrent response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.GetPreSignedUrlRequest">
            <summary>
            The parameters to create a pre-signed URL to a bucket or object. 
            </summary>
            <remarks>
            For more information, refer to: <see href="http://docs.amazonwebservices.com/AmazonS3/latest/dev/S3_QSAuth.html"/>.
            <br />Required Parameters: BucketName, Expires
            <br />Optional Parameters: Key, VersionId, Verb: default is GET
            </remarks>
        </member>
        <member name="M:Amazon.S3.Model.GetPreSignedUrlRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.GetPreSignedUrlRequest.IsSetKey">
            <summary>
            Checks if Key property is set.
            </summary>
            <returns>true if Key property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.GetPreSignedUrlRequest.IsSetExpires">
            <summary>
            Checks if Expires property is set.
            </summary>
            <returns>true if Expires property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.GetPreSignedUrlRequest.IsSetVersionId">
            <summary>
            Checks if VersionId property is set.
            </summary>
            <returns>true if VersionId property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.BucketName">
            <summary>
            The name of the bucket to create a pre-signed url to, or containing the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.Key">
            <summary>
            The key to the object for which a pre-signed url should be created.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.ContentType">
            <summary>
            A standard MIME type describing the format of the object data.
            </summary>
            <remarks>
            <para>
            The content type for the content being uploaded. This property defaults to "binary/octet-stream".
            For more information, refer to: <see href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17"/>.
            </para>
            <para>
            Note that if content type is specified, it should also be included in the HttpRequest headers
            of the eventual upload request, otherwise a signature error may result.
            </para>
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.Expires">
            <summary>
            The expiry date and time for the pre-signed url.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.Protocol">
            <summary>
            The requested protocol (http/https) for the pre-signed url.
            </summary>
            <remarks>
            Defaults to https.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.Verb">
            <summary>
            The verb for the pre-signed url. 
            </summary>
            <remarks>
            Accepted verbs are GET, PUT, DELETE and HEAD.
            Default is GET.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.VersionId">
            <summary>
            Version id for the object that the pre-signed url will reference. If not set,
            the url will reference the latest version of the object.
            </summary>
            <remarks>
            This is the VersionId for the S3 Object you want to get
            a PreSigned URL for. The VersionId property will be ignored
            for PreSigned "PUT" requests and for requests that don't specify
            the Key property.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.ServerSideEncryptionMethod">
            <summary>
            Specifies the encryption used on the server to store the content.
            </summary>
            <remarks>
            <para>
            Default is None.
            </para>
            <para>
            If specifying encryption (not None), the corresponding request must include header
            "x-amz-server-side-encryption" with the value of the encryption.
            </para>
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.ServerSideEncryptionCustomerMethod">
            <summary>
            The Server-side encryption algorithm to be used with the customer provided key.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.ResponseHeaderOverrides">
            <summary>
            A set of response headers that should be returned with the pre-signed url creation response.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.Headers">
            <summary>
            The collection of headers for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.GetPreSignedUrlRequest.Metadata">
            <summary>
            The collection of meta data for the request.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.HeadBucketRequest">
            <summary>
            Container for the parameters to the HeadBucket operation.
            <para>This operation is useful to determine if a bucket exists and you have permission to access it.</para>
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.HeadBucketResponse">
            <summary>
            Returns information about the HeadBucket response metadata.
            The HeadBucket operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.HeadersCollection">
            <summary>
            This class contains the headers for an S3 object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.HeadersCollection.Item(System.String)">
            <summary>
            Gets and sets headers to set for the object.
            </summary>
            <param name="name">The name of the header</param>
            <returns>The value for the header</returns>
        </member>
        <member name="P:Amazon.S3.Model.HeadersCollection.Count">
            <summary>
            Gets the count of headers.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.HeadersCollection.Keys">
            <summary>
            Gets the names of the headers set.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.HeadersCollection.CacheControl">
            <summary>
            Specifies caching behavior along the request/reply chain.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.HeadersCollection.ContentDisposition">
            <summary>
            Specifies presentational information for the object.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.HeadersCollection.ContentEncoding">
            <summary>
            Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type
            referenced by the Content-Type header field.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.HeadersCollection.ContentLength">
            <summary>
            The size of the object, in bytes.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.HeadersCollection.ContentMD5">
            <summary>
            The base64-encoded 128-bit MD5 digest of the message (without the headers) according to RFC 1864. This 
            header can be used as a message integrity check to verify that the data is the same data that was originally sent.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.HeadersCollection.ContentType">
            <summary>
            A standard MIME type describing the format of the object data.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.HeadersCollection.Expires">
            <summary>
            The date and time at which the object is no longer cacheable.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.InitiateMultipartUploadRequest">
            <summary>
            Container for the parameters to the InitiateMultipartUpload operation.
            <para>Initiates a multipart upload and returns an upload ID.</para>
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.InitiateMultipartUploadRequest.IsSetServerSideEncryptionCustomerProvidedKey">
            <summary>
            Checks if ServerSideEncryptionCustomerProvidedKey property is set.
            </summary>
            <returns>true if ServerSideEncryptionCustomerProvidedKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.InitiateMultipartUploadRequest.IsSetServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            Checks if ServerSideEncryptionCustomerProvidedKeyMD5 property is set.
            </summary>
            <returns>true if ServerSideEncryptionCustomerProvidedKey property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.EnvelopeKey">
            <summary>
            Symmetric Envelope Key to Encrypt data
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.IV">
            <summary>
            Initialization Vector for encryption
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.CannedACL">
            <summary>
            A canned access control list (ACL) to apply to the object.
            Please refer to <see cref="T:Amazon.S3.Model.S3CannedACL"/> for information on S3 Canned ACLs.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.BucketName">
            <summary>
            The name of the bucketName where the new object will be created, or existing object updated.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.Key">
            <summary>
            The key of the object to create or update.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.StorageClass">
            <summary>
            StorageClass property for the object.
            </summary>
            <remarks>
            Default: S3StorageClass.Standard. Set this property
            only if you want reduced redundancy for this object.
            Please refer to 
            <see cref="T:Amazon.S3.S3StorageClass"/> for
            information on S3 Storage Classes.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.WebsiteRedirectLocation">
            <summary>
            If the bucketName is configured as a website, redirects requests for this object to another object in the same bucketName or to an external URL.
            Amazon S3 stores the value of this header in the object metadata.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.Headers">
            <summary>
            The collection of headers for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.Metadata">
            <summary>
            The collection of meta data for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.ContentType">
            <summary>
            This is a convenience property for Headers.ContentType.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.ServerSideEncryptionMethod">
            <summary>
            <para>
            Specifies the encryption to be used on the server for the new object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.ServerSideEncryptionCustomerMethod">
            <summary>
            The Server-side encryption algorithm to be used with the customer provided key.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.ServerSideEncryptionCustomerProvidedKey">
            <summary>
            The base64-encoded encryption key for Amazon S3 to use to encrypt the object
            <para>
            Using the encryption key you provide as part of your request Amazon S3 manages both the encryption, as it writes 
            to disks, and decryption, when you access your objects. Therefore, you don't need to maintain any data encryption code. The only 
            thing you do is manage the encryption keys you provide.
            </para>
            <para>
            When you retrieve an object, you must provide the same encryption key as part of your request. Amazon S3 first verifies 
            the encryption key you provided matches, and then decrypts the object before returning the object data to you.
            </para>
            <para>
            Important: Amazon S3 does not store the encryption key you provide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadRequest.ServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            The MD5 of the customer encryption key specified in the ServerSideEncryptionCustomerProvidedKey property. The MD5 is
            base 64 encoded. This field is optional, the SDK will calculate the MD5 if this is not set.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.InitiateMultipartUploadResponse">
            <summary>
            Returns information about the  InitiateMultipartUpload response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadResponse.BucketName">
            <summary>
            Name of the bucketName to which the multipart upload was initiated.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadResponse.Key">
            <summary>
            Object key for which the multipart upload was initiated.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadResponse.UploadId">
            <summary>
            Gets and sets the initiated multipart upload id.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.InitiateMultipartUploadResponse.ServerSideEncryptionMethod">
            <summary>
            The Server-side encryption algorithm used when storing this object in S3.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Initiator">
            <summary>
            <para>Identifies who initiated the multipart upload.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.Initiator.DisplayName">
            <summary>
            Name of the Principal.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.Initiator.Id">
            <summary>
            If the principal is an AWS account, it provides the Canonical User ID. If the principal is an IAM User, it provides a user ARN value.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.AbortMultipartUploadRequestMarshaller">
            <summary>
            Abort Multipart Upload Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.AbortMultipartUploadResponseUnmarshaller">
            <summary>
               Response Unmarshaller for AbortMultipartUpload operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.BucketUnmarshaller">
            <summary>
              Bucket Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.CommonPrefixesItemUnmarshaller">
            <summary>
              CommonPrefixesItem Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.CompleteMultipartUploadRequestMarshaller">
            <summary>
            Complete Multipart Upload Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.CompleteMultipartUploadResponseUnmarshaller">
            <summary>
               Response Unmarshaller for CompleteMultipartUpload operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ContentsItemUnmarshaller">
            <summary>
              ContentsItem Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.CopyObjectRequestMarshaller">
            <summary>
            Copy Object Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.CopyObjectResponseUnmarshaller">
            <summary>
               Response Unmarshaller for CopyObject operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.CopyPartRequestMarshaller">
            <summary>
            Upload Part Copy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.CopyPartResponseUnmarshaller">
            <summary>
               Response Unmarshaller for CopyPart operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.CORSRuleUnmarshaller">
            <summary>
              CORSRule Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteCORSConfigurationResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteCORSConfiguration operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketPolicyRequestMarshaller">
            <summary>
            Delete Bucket Policy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketPolicyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteBucketPolicy operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketRequestMarshaller">
            <summary>
            Delete Bucket Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteBucket operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketTaggingRequestMarshaller">
            <summary>
            Delete Bucket Tagging Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketTaggingResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteBucketTagging operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketWebsiteRequestMarshaller">
            <summary>
            Delete Bucket Website Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteBucketWebsiteResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteBucketWebsite operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteCORSConfigurationRequestMarshaller">
            <summary>
            Delete Bucket Cors Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeletedObjectUnmarshaller">
            <summary>
              DeletedObject Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteLifecycleConfigurationRequestMarshaller">
            <summary>
            Delete Bucket Lifecycle Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteLifecycleConfigurationResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteBucketLifecycle operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteObjectRequestMarshaller">
            <summary>
            Delete Object Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteObjectResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteObject operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteObjectsRequestMarshaller">
            <summary>
            Delete Objects Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.DeleteObjectsResponseUnmarshaller">
            <summary>
               Response Unmarshaller for DeleteObjects operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ErrorsItemUnmarshaller">
            <summary>
              ErrorsItem Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ExpirationUnmarshaller">
            <summary>
              Expiration Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetACLRequestMarshaller">
            <summary>
            Get Object Acl Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetACLResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetACL operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketLocationRequestMarshaller">
            <summary>
            Get Bucket Location Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketLocationResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetBucketLocation operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketLoggingRequestMarshaller">
            <summary>
            Get Bucket Logging Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketLoggingResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetBucketLogging operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketNotificationRequestMarshaller">
            <summary>
            Get Bucket Notification Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketNotificationResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetBucketNotification operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketPolicyRequestMarshaller">
            <summary>
            Get BucketName Policy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketPolicyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetBucketPolicy operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketRequestPaymentRequestMarshaller">
            <summary>
            Get Bucket Request Payment Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketRequestPaymentResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetBucketRequestPayment operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketTaggingRequestMarshaller">
            <summary>
            Get Bucket Tagging Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketTaggingResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetBucketTagging operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketVersioningRequestMarshaller">
            <summary>
            Get Bucket Versioning Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketVersioningResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetBucketVersioning operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketWebsiteRequestMarshaller">
            <summary>
            Get Bucket Website Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetBucketWebsiteResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetBucketWebsite operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetCORSConfigurationRequestMarshaller">
            <summary>
            Get Bucket Cors Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetCORSConfigurationResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetCORSConfiguration operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetLifecycleConfigurationRequestMarshaller">
            <summary>
            Get Bucket Lifecycle Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetLifecycleConfigurationResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetLifecycleConfiguration operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetObjectMetadataRequestMarshaller">
            <summary>
            GetObjectMetadata Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetObjectMetadataResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetObjectMetadata operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetObjectRequestMarshaller">
            <summary>
            Get Object Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetObjectResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetObject operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetObjectTorrentRequestMarshaller">
            <summary>
            Get Object Torrent Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GetObjectTorrentResponseUnmarshaller">
            <summary>
               Response Unmarshaller for GetObjectTorrent operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GranteeUnmarshaller">
            <summary>
              Grantee Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.GrantUnmarshaller">
            <summary>
              Grant Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.HeadBucketRequestMarshaller">
            <summary>
            Head Bucket Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.HeadBucketResponseUnmarshaller">
            <summary>
               Response Unmarshaller for HeadBucket operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.InitiateMultipartUploadRequestMarshaller">
            <summary>
            Create Multipart Upload Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.InitiateMultipartUploadResponseUnmarshaller">
            <summary>
               Response Unmarshaller for InitiateMultipartUpload operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.InitiatorUnmarshaller">
            <summary>
              Initiator Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.LifecycleRuleNoncurrentVersionExpirationUnmarshaller">
            <summary>
              LifecycleRuleNoncurrentVersionExpiration Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.LifecycleRuleNoncurrentVersionTransitionUnmarshaller">
            <summary>
              LifecycleRuleNoncurrentVersionTransition Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ListBucketsRequestMarshaller">
            <summary>
            List Buckets Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ListBucketsResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListBuckets operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ListMultipartUploadsRequestMarshaller">
            <summary>
            List Multipart Uploads Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ListMultipartUploadsResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListMultipartUploads operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ListObjectsRequestMarshaller">
            <summary>
            List Objects Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ListObjectsResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListObjects operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ListPartsRequestMarshaller">
            <summary>
            List Parts Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ListPartsResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListParts operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ListVersionsRequestMarshaller">
            <summary>
            List Object Versions Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.ListVersionsResponseUnmarshaller">
            <summary>
               Response Unmarshaller for ListVersions operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.LoggingEnabledUnmarshaller">
            <summary>
              LoggingEnabled Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.MultipartUploadUnmarshaller">
            <summary>
              UploadsItem Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.OwnerUnmarshaller">
            <summary>
              Owner Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PartDetailUnmarshaller">
            <summary>
              PartsItem Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutACLRequestMarshaller">
            <summary>
            Put Object Acl Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutACLResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutObjectAcl operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketLoggingRequestMarshaller">
            <summary>
            Enable Bucket Logging Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketLoggingResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutBucketLogging operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketNotificationRequestMarshaller">
            <summary>
            Put Bucket Notification Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketNotificationResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutBucketNotification operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketPolicyRequestMarshaller">
            <summary>
            Put Bucket Policy Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketPolicyResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutBucketPolicy operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketRequestMarshaller">
            <summary>
            Put Bucket Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketRequestPaymentRequestMarshaller">
            <summary>
            Put Bucket Request Payment Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketRequestPaymentResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutBucketRequestPayment operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutBucket operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketTaggingRequestMarshaller">
            <summary>
            Put Bucket Tagging Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketTaggingResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutBucketTagging operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketVersioningRequestMarshaller">
            <summary>
            Put Bucket Versioning Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketVersioningResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutBucketVersioning operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketWebsiteRequestMarshaller">
            <summary>
            Put Bucket Website Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutBucketWebsiteResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutBucketWebsite operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutCORSConfigurationRequestMarshaller">
            <summary>
            Put Bucket Cors Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutCORSConfigurationResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutCORSConfiguration operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutLifecycleConfigurationRequestMarshaller">
            <summary>
            Put Bucket Lifecycle Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutLifecycleConfigurationResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutLifecycleConfiguration operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutObjectRequestMarshaller">
            <summary>
            Put Object Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.PutObjectResponseUnmarshaller">
            <summary>
               Response Unmarshaller for PutObject operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.RestoreObjectRequestMarshaller">
            <summary>
            Restore Object Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.RestoreObjectResponseUnmarshaller">
            <summary>
               Response Unmarshaller for RestoreObject operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.RoutingRuleConditionUnmarshaller">
            <summary>
              Condition Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.RoutingRuleRedirectUnmarshaller">
            <summary>
              Redirect Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.RoutingRuleUnmarshaller">
            <summary>
              RoutingRule Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.RulesItemUnmarshaller">
            <summary>
              RulesItem Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.S3ErrorResponseUnmarshaller">
            <summary>
               Response Unmarshaller for all Errors
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.Internal.MarshallTransformations.S3ErrorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Build an S3ErrorResponse from XML 
            </summary>
            <param name="context">The XML parsing context. 
            Usually an <c>Amazon.Runtime.Internal.UnmarshallerContext</c>.</param>
            <returns>An <c>S3ErrorResponse</c> object.</returns>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
              Tag Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.TopicConfigurationUnmarshaller">
            <summary>
              TopicConfiguration Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.TransitionUnmarshaller">
            <summary>
              Transition Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.UploadPartRequestMarshaller">
            <summary>
            Upload Part Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.UploadPartResponseUnmarshaller">
            <summary>
               Response Unmarshaller for UploadPart operation
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Internal.MarshallTransformations.VersionsItemUnmarshaller">
            <summary>
              VersionsItem Unmarshaller
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.KeyVersion">
            <summary>
            Specifies an object key and optional object version.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.KeyVersion.Key">
            <summary>
            Key name of the object to delete.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.KeyVersion.VersionId">
            <summary>
            VersionId for the specific version of the object to delete.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.LifecycleConfiguration">
            <summary>Lifecycle Configuration
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.LifecycleRule">
            <summary>Rules Item
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleRule.Expiration">
            <summary>
            Defines the length of time, in days, before objects expire.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleRule.Id">
            <summary>
            Unique identifier for the rule. The value cannot be longer than 255 characters.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleRule.Prefix">
            <summary>
            Prefix identifying one or more objects to which the rule applies.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleRule.Status">
            <summary>
            If 'Enabled', the rule is currently being applied. If 'Disabled', the rule is not currently being applied.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleRule.Transition">
            <summary>
            The transition rule that describes when objects transition to the Glacier storage class.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleRule.NoncurrentVersionExpiration">
            <summary>
            Defines the length of time, in days, before noncurrent versions expire.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleRule.NoncurrentVersionTransition">
            <summary>
            The transition rule that describes when noncurrent versions transition to
            the Glacier storage class.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.LifecycleRuleExpiration">
            <summary>Expiration
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleRuleExpiration.Date">
            <summary>
            Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleRuleExpiration.Days">
            <summary>
            Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.LifecycleRuleNoncurrentVersionExpiration">
            <summary>
            Noncurrent Version Expiration
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleRuleNoncurrentVersionExpiration.NoncurrentDays">
            <summary>
            Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.LifecycleRuleNoncurrentVersionTransition">
            <summary>
            LifecycleTransition defines when and how objects transition.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleRuleNoncurrentVersionTransition.NoncurrentDays">
            <summary>
            Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleRuleNoncurrentVersionTransition.StorageClass">
            <summary>
            The class of storage used to store the object.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.LifecycleTransition">
            <summary>
            LifecycleTransition defines when and how objects transition.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleTransition.Date">
            <summary>
            Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleTransition.Days">
            <summary>
            Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.LifecycleTransition.StorageClass">
            <summary>
            The class of storage used to store the object.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ListBucketsRequest">
            <summary>
            Container for the parameters to the ListBuckets operation.
            <para>Returns a list of all buckets owned by the authenticated sender of the request.</para>
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ListBucketsResponse">
            <summary>
            Returns information about the  ListBuckets response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListBucketsResponse.Buckets">
            <summary>
            List of buckets.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListBucketsResponse.Owner">
            <summary>
            Owner of the buckets.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ListMultipartUploadsRequest">
            <summary>
            Container for the parameters to the ListMultipartUploads operation.
            <para>This operation lists in-progress multipart uploads.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsRequest.BucketName">
            <summary>
            The name of the bucketName receiving the multipart upload(s)
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsRequest.Delimiter">
            <summary>
            Character you use to group keys.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsRequest.KeyMarker">
            <summary>
            Together with upload-id-marker, this parameter specifies the multipart upload after which listing should begin.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsRequest.MaxUploads">
            <summary>
            Sets the maximum number of multipart uploads, from 1 to 1,000, to return in the response body. 1,000 is the maximum number of uploads that
            can be returned in a response.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsRequest.Prefix">
            <summary>
            Lists in-progress uploads only for those keys that begin with the specified prefix.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsRequest.UploadIdMarker">
            <summary>
            Together with key-marker, specifies the multipart upload after which listing should begin. If key-marker is not specified, the
            upload-id-marker parameter is ignored.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsRequest.Encoding">
            <summary>
            Requests Amazon S3 to encode the object keys in the response and specifies
            the encoding method to use. An object key may contain any Unicode character;
            however, XML 1.0 parser cannot parse some characters, such as characters
            with an ASCII value from 0 to 10. For characters that are not supported in
            XML 1.0, you can add this parameter to request that Amazon S3 encode the
            keys in the response.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ListMultipartUploadsResponse">
            <summary>
            Returns information about the  ListMultipartUploads response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.BucketName">
            <summary>
            Name of the bucketName to which the multipart upload was initiated.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.KeyMarker">
            <summary>
            The key at or after which the listing began.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.UploadIdMarker">
            <summary>
            Upload ID after which listing began.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.NextKeyMarker">
            <summary>
            When a list is truncated, this element specifies the value that should be used for the key-marker request parameter in a subsequent request.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.NextUploadIdMarker">
            <summary>
            When a list is truncated, this element specifies the value that should be used for the upload-id-marker request parameter in a subsequent
            request.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.MaxUploads">
            <summary>
            Maximum number of multipart uploads that could have been included in the response.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.IsTruncated">
            <summary>
            Indicates whether the returned list of multipart uploads is truncated. A value of true indicates that the list was truncated. The list can
            be truncated if the number of multipart uploads exceeds the limit allowed or specified by max uploads.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.MultipartUploads">
            <summary>
            Gets and sets the MultipartUploads property.
            <para>
            Container for elements related to a particular multipart upload. A response
            can contain zero or more Upload elements.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.Prefix">
            <summary>
            Gets and sets the Prefix property.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.Delimiter">
            <summary>
            Gets and sets the Delimiter property.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListMultipartUploadsResponse.CommonPrefixes">
            <summary>
            Gets the CommonPrefixes property. 
            A response can contain CommonPrefixes only if you specify a delimiter. 
            When you do, CommonPrefixes contains all (if there are any) keys between 
            Prefix and the next occurrence of the string specified by delimiter. In effect, 
            CommonPrefixes lists keys that act like subdirectories in the directory specified 
            by Prefix. For example, if prefix is notes/ and delimiter is a slash (/), in 
            notes/summer/july, the common prefix is notes/summer/.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ListObjectsRequest">
            <summary>
            Container for the parameters to the ListObjects operation.
            <para>Returns some or all (up to 1000) of the objects in a bucket. You can use the request parameters as selection criteria to return a
            subset of the objects in a bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsRequest.BucketName">
            <summary>
            The name of the bucket containing the objects whose keys are to be listed.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsRequest.Delimiter">
            <summary>
            A delimiter is a character you use to group keys.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsRequest.Marker">
            <summary>
            Specifies the key to start with when listing objects in a bucket.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsRequest.MaxKeys">
            <summary>
            Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsRequest.Prefix">
            <summary>
            Limits the response to keys that begin with the specified prefix.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsRequest.Encoding">
            <summary>
            Requests Amazon S3 to encode the object keys in the response and specifies
            the encoding method to use. An object key may contain any Unicode character;
            however, XML 1.0 parser cannot parse some characters, such as characters
            with an ASCII value from 0 to 10. For characters that are not supported in
            XML 1.0, you can add this parameter to request that Amazon S3 encode the
            keys in the response.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ListObjectsResponse">
            <summary>
            Returns information about the  ListObjects response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsResponse.IsTruncated">
            <summary>
            A flag that indicates whether or not Amazon S3 returned all of the results that satisfied 
            the search criteria.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsResponse.NextMarker">
            <summary>
            Gets and sets the NextMarker property.
            NextMarker is set by S3 only if a Delimiter was specified
            in the original ListObjects request. If a delimiter was
            not specified, the AWS SDK for .NET returns the last Key
            of the List of Objects retrieved from S3 as the NextMarker.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsResponse.S3Objects">
            <summary>
            Gets the S3Objects property. This is a list of 
            objects in the bucket that match your search criteria.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsResponse.CommonPrefixes">
            <summary>
            Gets the CommonPrefixes property. 
            A response can contain CommonPrefixes only if you specify a delimiter. 
            When you do, CommonPrefixes contains all (if there are any) keys between 
            Prefix and the next occurrence of the string specified by delimiter. In effect, 
            CommonPrefixes lists keys that act like subdirectories in the directory specified 
            by Prefix. For example, if prefix is notes/ and delimiter is a slash (/), in 
            notes/summer/july, the common prefix is notes/summer/.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListObjectsResponse.Delimiter">
            <summary>
            Gets and sets the Delimiter property.
            Causes keys that contain the same string between the prefix and the 
            first occurrence of the delimiter to be rolled up into a single result 
            element in the CommonPrefixes collection.
            </summary>
            <remarks>
            These rolled-up keys are not returned elsewhere in the response.
            </remarks>
        </member>
        <member name="T:Amazon.S3.Model.ListPartsRequest">
            <summary>
            Container for the parameters to the ListParts operation.
            <para>Lists the parts that have been uploaded for a specific multipart upload.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsRequest.BucketName">
            <summary>
            The name of the bucketName receiving the multipart upload.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsRequest.Key">
            <summary>
            The object key for which the multipart upload was initiated.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsRequest.MaxParts">
            <summary>
            Sets the maximum number of parts to return.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsRequest.PartNumberMarker">
            <summary>
            Specifies the part after which listing should begin. Only parts with higher part numbers will be listed.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsRequest.UploadId">
            <summary>
            Upload ID identifying the multipart upload whose parts are being listed.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsRequest.Encoding">
            <summary>
            Requests Amazon S3 to encode the object keys in the response and specifies
            the encoding method to use. An object key may contain any Unicode character;
            however, XML 1.0 parser cannot parse some characters, such as characters
            with an ASCII value from 0 to 10. For characters that are not supported in
            XML 1.0, you can add this parameter to request that Amazon S3 encode the
            keys in the response.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ListPartsResponse">
            <summary>
            Returns information about the  ListParts response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.BucketName">
            <summary>
            Name of the bucketName to which the multipart upload was initiated.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.Key">
            <summary>
            Object key for which the multipart upload was initiated.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.UploadId">
            <summary>
            Upload ID identifying the multipart upload whose parts are being listed.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.PartNumberMarker">
            <summary>
            Part number after which listing begins.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.NextPartNumberMarker">
            <summary>
            When a list is truncated, this element specifies the last part in the list, as well as the value to use for the part-number-marker request
            parameter in a subsequent request.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.MaxParts">
            <summary>
            Maximum number of parts that were allowed in the response.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.IsTruncated">
            <summary>
            Indicates whether the returned list of parts is truncated.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.Parts">
            <summary>
            Gets and sets the Parts property.
            <para>
            PartDetails is a container for elements related to a particular part. A response can contain
            zero or more Part elements.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.Initiator">
            <summary>
            Identifies who initiated the multipart upload.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.Owner">
            <summary>
            Gets and sets the Owner property.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListPartsResponse.StorageClass">
            <summary>
            The class of storage used to store the object.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ListVersionsRequest">
            <summary>
            Container for the parameters to the ListVersions operation.
            <para>Returns metadata about all of the versions of objects in a bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsRequest.BucketName">
            <summary>
            The name of the bucket containing the objects.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsRequest.Delimiter">
            <summary>
            A delimiter is a character you use to group keys.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsRequest.KeyMarker">
            <summary>
            Specifies the key to start with when listing objects in a bucket.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsRequest.MaxKeys">
            <summary>
            Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsRequest.Prefix">
            <summary>
            Limits the response to keys that begin with the specified prefix.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsRequest.VersionIdMarker">
            <summary>
            Specifies the object version you want to start listing from.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsRequest.Encoding">
            <summary>
            Requests Amazon S3 to encode the object keys in the response and specifies
            the encoding method to use. An object key may contain any Unicode character;
            however, XML 1.0 parser cannot parse some characters, such as characters
            with an ASCII value from 0 to 10. For characters that are not supported in
            XML 1.0, you can add this parameter to request that Amazon S3 encode the
            keys in the response.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ListVersionsResponse">
            <summary>
            Returns information about the  ListVersions response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.IsTruncated">
            <summary>
            A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria. If your results were
            truncated, you can make a follow-up paginated request using the NextKeyMarker and NextVersionIdMarker response parameters as a starting
            place in another request to return the rest of the results.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.KeyMarker">
            <summary>
            Marks the last Key returned in a truncated response.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.VersionIdMarker">
            <summary>
            Gets and sets the VersionIdMarker property.
            Marks the last Version-Id returned in a truncated response.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.NextKeyMarker">
            <summary>
            Use this value for the key marker request parameter in a subsequent request.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.NextVersionIdMarker">
            <summary>
            Use this value for the next version id marker parameter in a subsequent request.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.Versions">
            <summary>
            Gets and sets the Versions property. This is a list of 
            object versions in the bucket that match your search criteria.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.Name">
            <summary>
            Gets and sets the Name property.
            The bucket's name.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.Prefix">
            <summary>
            Gets and sets the Prefix property.
            Keys that begin with the indicated prefix are listed.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.MaxKeys">
            <summary>
            Gets and sets the MaxKeys property.
            This is the maximum number of keys in the S3ObjectVersions collection.
            The value is derived from the MaxKeys parameter to ListVersionsRequest.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.CommonPrefixes">
            <summary>
            Gets the CommonPrefixes property. 
            A response can contain CommonPrefixes only if you specify a delimiter. 
            When you do, CommonPrefixes contains all (if there are any) keys between 
            Prefix and the next occurrence of the string specified by delimiter.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ListVersionsResponse.Delimiter">
            <summary>
            Gets and sets the Delimiter property.
            Causes keys that contain the same string between the prefix and the 
            first occurrence of the delimiter to be rolled up into a single result 
            element in the CommonPrefixes collection.
            </summary>
            <remarks>
            These rolled-up keys are not returned elsewhere in the response.
            </remarks>
        </member>
        <member name="T:Amazon.S3.Model.MetadataCollection">
            <summary>
            This class contains the meta data for an S3 object.
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.MetadataCollection.Add(System.String,System.String)">
            <summary>
            Adds the metadata to the collection, if the name already exists it will be overwritten.
            </summary>
            <param name="name">The name of the metadata element</param>
            <param name="value">The value for the metadata</param>
        </member>
        <member name="P:Amazon.S3.Model.MetadataCollection.Item(System.String)">
            <summary>
            Gets and sets meta data for the object. Meta data names must start with "x-amz-meta-". If the name passeed in as the indexer 
            doesn't start with "x-amz-meta-" then it will be prepended.
            </summary>
            <param name="name">The name of the meta data.</param>
            <returns>The value for the meta data</returns>
        </member>
        <member name="P:Amazon.S3.Model.MetadataCollection.Count">
            <summary>
            Gets the count of headers.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.MetadataCollection.Keys">
            <summary>
            Gets the names of the meta data elements.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.MfaCodes">
            <summary>
            This class contains the mfa codes used authentication
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.MfaCodes.SerialNumber">
            <summary>
            Gets and sets the serial number of the authentication device
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.MfaCodes.AuthenticationValue">
            <summary>
            Gets and sets the displated value on the authentication device
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.MfaCodes.FormattedMfaCodes">
            <summary>
            The formatted string of the mfa codes to be passed to S3.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.MultipartUpload">
            <summary>
            Container for elements related to a particular multipart upload.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.MultipartUpload.Initiated">
            <summary>
            Date and time at which the multipart upload was initiated.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.MultipartUpload.Initiator">
            <summary>
            Identifies who initiated the multipart upload.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.MultipartUpload.Key">
            <summary>
            Key of the object for which the multipart upload was initiated.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.MultipartUpload.StorageClass">
            <summary>
            The class of storage used to store the object.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.MultipartUpload.UploadId">
            <summary>
            Upload ID that identifies the multipart upload.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Owner">
            <summary>
            The owner of an S3 bucket.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.Owner.DisplayName">
            <summary>
            The display name of the owner.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.Owner.Id">
            <summary>
            The unique identifier of the owner.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PartDetail">
            <summary>
            A container for elements related to a particular part in a multipart operation. 
            A response can contain zero or more Part elements.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PartETag">
            <summary>
            A container holding the part number and etag used when completing a multipart upload.
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.PartETag.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.PartETag.#ctor(System.Int32,System.String)">
            <summary>
            Constructs an instance of PartETag and sets the part number and etag.
            </summary>
            <param name="partNumber">The part number.</param>
            <param name="eTag">the associated ETag for the part number.</param>
        </member>
        <member name="M:Amazon.S3.Model.PartETag.CompareTo(Amazon.S3.Model.PartETag)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings:
            Value
            Meaning
            Less than zero
            This object is less than the <paramref name="other"/> parameter.
            Zero
            This object is equal to <paramref name="other"/>.
            Greater than zero
            This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="P:Amazon.S3.Model.PartETag.PartNumber">
            <summary>
            The part number identifying the part.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PartETag.ETag">
            <summary>
            The entity tag associated with the part.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PartDetail.LastModified">
            <summary>
            The date and time at which the part was uploaded.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PartDetail.Size">
            <summary>
            The size of the uploaded part data.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutACLRequest">
            <summary>
            Container for the parameters to the PutAcl operation.
            <para>uses the acl subresource to set the access control list (ACL) permissions for an object that already exists in a bucket</para>
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.PutACLRequest.IsSetVersionId">
            <summary>
            Checks if VersionId property is set.
            </summary>
            <returns>true if VersionId property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.PutACLRequest.CannedACL">
            <summary>
            The canned ACL to apply to the bucket.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutACLRequest.AccessControlList">
            <summary>
            Custom ACLs to be applied to the bucket or object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutACLRequest.BucketName">
            <summary>
            The name of the bucket.
            If an object key is not specified, the ACLs are applied to the bucket.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutACLRequest.Key">
            <summary>
            The key of an S3 object.
            If not specified, the ACLs are applied to the bucket.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutACLRequest.VersionId">
            <summary>
            If set and an object key has been specified, the ACLs are applied
            to the specific version of the object.
            This property is ignored if the ACL is to be set on a Bucket.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutACLResponse">
            <summary>
            Returns information about the PutObjectAcl response metadata.
            The PutAcl operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketLoggingRequest">
            <summary>
            Container for the parameters to the PutBucketLoggingRequest operation.
            <para>Set the logging parameters for a bucket and to specify permissions for who can view and modify the logging parameters. To set the
            logging status of a bucket, you must be the bucket owner.</para>
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketLoggingResponse">
            <summary>
            Returns information about the PutBucketLogging response metadata.
            The EnableBucketLogging operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketNotificationRequest">
            <summary>
            Container for the parameters to the PutBucketNotification operation.
            <para>Enables notifications of specified events for a bucket.</para>
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketNotificationResponse">
            <summary>
            Returns information about the PutBucketNotification response metadata.
            The PutBucketNotification operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketPolicyRequest">
            <summary>
            Container for the parameters to the PutBucketPolicy operation.
            <para>Replaces a policy on a bucket. If the bucket already has a policy, the one in this request completely replaces it.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketPolicyRequest.BucketName">
            <summary>
            The name of the bucket.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketPolicyRequest.ContentMD5">
            <summary>
            The base64 encoded 128-bit MD5 digest of the message (without the headers) according to RFC 1864. 
            </summary>
            <remarks>
            This header can be used as a message integrity check to verify that the data is the same data that was originally sent. 
            Although it is optional, we recommend using the Content-MD5 mechanism as an end-to-end integrity check. 
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketPolicyRequest.Policy">
            <summary>
            The bucket policy as a JSON document.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketPolicyResponse">
            <summary>
            Returns information about the PutBucketPolicy response metadata.
            The PutBucketPolicy operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketRequest">
            <summary>
            Container for the parameters to the PutBucket operation.
            <para>Creates a new bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketRequest.CannedACL">
            <summary>
            The canned ACL to apply to the bucket.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketRequest.UseClientRegion">
            <summary>
            If set to true the bucket will be created in the same region
            as the configuration of the AmazonS3 client.
            If PutBucketRequest.BucketRegion or PutBucketRequest.BucketRegionName are set they take precedence over
            this property.
            Default: true.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketRequest.BucketName">
            <summary>
            The name of the bucket to be created.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketRequest.BucketRegion">
            <summary>
            The region locality for the bucket.
            </summary>
            <remarks>
            When set, this will determine where your data will
            reside in S3. Refer <see cref="T:Amazon.S3.Model.S3Region"/>
            for a list of possible values.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketRequest.BucketRegionName">
            <summary>
            The bucket region locality expressed using the name of the region.
            When set, this will determine where your data will reside in S3.
            Valid values: us-east-1, us-west-1, us-west-2, eu-west-1, ap-southeast-1, ap-southeast-2, ap-northeast-1, sa-east-1
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketRequestPaymentRequest">
            <summary>
            Container for the parameters to the PutBucketRequestPayment operation.
            <para>Sets the request payment configuration for a bucket. By default, the bucket owner pays for downloads from the bucket. This
            configuration parameter enables the bucket owner (only) to specify that the person requesting the download will be charged for the
            download.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketRequestPaymentRequest.BucketName">
            <summary>
            The name of the bucket to set payment config.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketRequestPaymentRequest.RequestPaymentConfiguration">
            <summary>
            Gets and sets request payment configuration
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketRequestPaymentResponse">
            <summary>
            Returns information about the PutBucketRequestPayment response metadata.
            The PutBucketRequestPayment operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketResponse">
            <summary>
            Returns information about the  PutBucket response and response metadata.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketTaggingRequest">
            <summary>
            Container for the parameters to the PutBucketTagging operation.
            <para>Sets the tags for a bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketTaggingRequest.BucketName">
            <summary>
            The name of the bucket to apply the tags to.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketTaggingRequest.TagSet">
            <summary>
            The collection of tags.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketTaggingResponse">
            <summary>
            Returns information about the PutBucketTagging response metadata.
            The PutBucketTagging operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketVersioningRequest">
            <summary>
            Container for the parameters to the PutBucketVersioning operation.
            <para>Sets the versioning state of an existing bucket. To set the versioning state, you must be the bucket owner.</para>
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.PutBucketVersioningRequest.IsSetMfaCodes">
            <summary>
            Checks if the MfaCodes property is set.
            </summary>
            <returns>true if the MfaCodes property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketVersioningRequest.BucketName">
            <summary>
            The name of the bucket to be updated.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketVersioningRequest.MfaCodes">
            <summary>
            The MfaCodes Tuple associates the Serial Number and the current Token/Code displayed on the
            Multi-Factor Authentication device associated with your AWS Account. 
            </summary>
            <remarks>
            This is a required property for this request if:<br />
            1. EnableMfaDelete was configured on the bucket
            containing this object's version.<br />
            2. You are deleting an object's version
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketVersioningRequest.VersioningConfig">
            <summary>
            The versioning configuration to apply to the bucket.
            </summary>
            <remarks>
            Once Versioning has been "Enabled" on a bucket, it can be "Suspended" 
            but cannot be switched "Off". If EnableMfaDelete is set,
            the MfaCodes property needs to contain the Serial of and current Token
            displayed on the MFA device.
            </remarks>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketVersioningResponse">
            <summary>
            Returns information about the PutBucketVersioning response metadata.
            The PutBucketVersioning operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketWebsiteRequest">
            <summary>
            Container for the parameters to the PutBucketWebsite operation.
            <para>Set the website configuration for a bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketWebsiteRequest.BucketName">
            <summary>
            The name of the bucket to apply the configuration to.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutBucketWebsiteRequest.WebsiteConfiguration">
            <summary>
            The website configuration to apply. The configuration defines the index
            document suffix and custom error page.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutBucketWebsiteResponse">
            <summary>
            Returns information about the PutBucketWebsite response metadata.
            The PutBucketWebsite operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutCORSConfigurationRequest">
            <summary>
            Container for the parameters to the PutCORSConfiguration operation.
            <para>Sets the cors configuration for a bucket.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutCORSConfigurationRequest.BucketName">
            <summary>
            The name of the bucket to have the CORS configuration applied.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutCORSConfigurationRequest.Configuration">
            <summary>
            The CORS configuration to apply.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutCORSConfigurationResponse">
            <summary>
            Returns information about the PutCORSConfiguration response metadata.
            The PutCORSConfiguration operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutLifecycleConfigurationRequest">
            <summary>
            Container for the parameters to the PutLifecycleConfiguration operation.
            <para>Sets lifecycle configuration for your bucket. If a lifecycle configuration exists, it replaces it.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutLifecycleConfigurationRequest.BucketName">
            <summary>
            The name of the bucket to have the lifecycle configuration applied.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutLifecycleConfigurationRequest.Configuration">
            <summary>
            The lifecycle configuration to be applied.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutLifecycleConfigurationResponse">
            <summary>
            Returns information about the PutLifecycleConfiguration response metadata.
            The PutLifecycleConfiguration operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutObjectRequest">
            <summary>
            Container for the parameters to the PutObject operation.
            <para>Adds an object to a bucket.</para>
            </summary>
            <summary>
            Container for the parameters to the PutObject operation.
            <para>Adds an object to a bucket.</para>
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.PutObjectRequest.IsSetServerSideEncryptionCustomerProvidedKey">
            <summary>
            Checks if ServerSideEncryptionCustomerProvidedKey property is set.
            </summary>
            <returns>true if ServerSideEncryptionCustomerProvidedKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.PutObjectRequest.IsSetServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            Checks if ServerSideEncryptionCustomerProvidedKeyMD5 property is set.
            </summary>
            <returns>true if ServerSideEncryptionCustomerProvidedKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.PutObjectRequest.IsSetMD5Digest">
            <summary>
            Checks if MD5Digest property is set.
            </summary>
            <returns>true if MD5Digest property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.CannedACL">
            <summary>
            A canned access control list (CACL) to apply to the object.
            Please refer to <see cref="T:Amazon.S3.Model.S3CannedACL"/> for
            information on S3 Canned ACLs.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.InputStream">
            <summary>
            Input stream for the request; content for the request will be read from the stream.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.FilePath">
            <summary>
            <para>
            The full path and name to a file to be uploaded.
            If this is set the request will upload the specified file to S3. 
            </para>
            <para>
            For WinRT and Windows Phone this property must be in the form of "ms-appdata:///local/file.txt".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.ContentBody">
            <summary>
            Text content to be uploaded. Use this property if you want to upload plaintext to S3. 
            The content type will be set to 'text/plain'.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.AutoCloseStream">
            <summary>
            If this value is set to true then the stream used with this request will be closed when all the content 
            is read from the stream.  
            Default: true.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.AutoResetStreamPosition">
            <summary>
            If this value is set to true then the stream will be seeked back to the start before being read for upload.
            Default: true.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.BucketName">
            <summary>
            The name of the bucket to contain the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.Headers">
            <summary>
            The collection of headers for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.Metadata">
            <summary>
            The collection of meta data for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.ServerSideEncryptionMethod">
            <summary>
            The Server-side encryption algorithm used when storing this object in S3.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.ServerSideEncryptionCustomerMethod">
            <summary>
            The Server-side encryption algorithm to be used with the customer provided key.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.ServerSideEncryptionCustomerProvidedKey">
            <summary>
            The base64-encoded encryption key for Amazon S3 to use to encrypt the object
            <para>
            Using the encryption key you provide as part of your request Amazon S3 manages both the encryption, as it writes 
            to disks, and decryption, when you access your objects. Therefore, you don't need to maintain any data encryption code. The only 
            thing you do is manage the encryption keys you provide.
            </para>
            <para>
            When you retrieve an object, you must provide the same encryption key as part of your request. Amazon S3 first verifies 
            the encryption key you provided matches, and then decrypts the object before returning the object data to you.
            </para>
            <para>
            Important: Amazon S3 does not store the encryption key you provide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.ServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            The MD5 of the customer encryption key specified in the ServerSideEncryptionCustomerProvidedKey property. The MD5 is
            base 64 encoded. This field is optional, the SDK will calculate the MD5 if this is not set.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.StorageClass">
            <summary>
            The type of storage to use for the object. Defaults to 'STANDARD'.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.WebsiteRedirectLocation">
            <summary>
            If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL.
            Amazon S3 stores the value of this header in the object metadata.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.StreamTransferProgress">
            <summary>
            Attach a callback that will be called as data is being sent to the AWS Service.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.ContentType">
            <summary>
            This is a convenience property for Headers.ContentType.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.MD5Digest">
            <summary>
            An MD5 digest for the content.
            </summary>
            <remarks>
            <para>
            The base64 encoded 128-bit MD5 digest of the message
            (without the headers) according to RFC 1864. This header
            can be used as a message integrity check to verify that
            the data is the same data that was originally sent.
            </para>
            <para>
            If supplied, after the file has been uploaded to S3,
            S3 checks to ensure that the MD5 hash of the uploaded file
            matches the hash supplied.
            </para>
            <para>
            Although it is optional, we recommend using the
            Content-MD5 mechanism as an end-to-end integrity check.
            </para>
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectRequest.StorageFile">
            <summary>
            Gets and sets the StorageFile property. The Windows.Storage.IStorageFile that will be read 
            from and upload to Amazon S3.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.PutObjectResponse">
            <summary>
            Returns information about the  PutObject response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectResponse.Expiration">
            <summary>
            Gets and sets the Expiration property.
            Specifies the expiration date for the object and the
            rule governing the expiration.
            Is null if expiration is not applicable.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectResponse.ServerSideEncryptionMethod">
            <summary>
            The Server-side encryption algorithm used when storing this object in S3.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectResponse.ETag">
            <summary>
            Entity tag for the uploaded object.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.PutObjectResponse.VersionId">
            <summary>
            Version of the object.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.RequestPaymentConfiguration">
            <summary>
            Request Payment Configuration
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RequestPaymentConfiguration.Payer">
            <summary>
            Specifies who pays for the download and request fees.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.ResponseHeaderOverrides">
            <summary>
            Container for values of the response headers that will be set on a response from a GetObject request. 
            These values override any headers that were set when the object was uploaded to S3.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ResponseHeaderOverrides.ContentType">
            <summary>
            A standard MIME type describing the format of the object data.
            </summary>
            <remarks>
            The content type for the content being uploaded. This property defaults to "binary/octet-stream".
            For more information, refer to: <see href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17"/>
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.ResponseHeaderOverrides.ContentLanguage">
            <summary>
            ContentLanguage header value.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ResponseHeaderOverrides.Expires">
            <summary>
            Expiry header value.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ResponseHeaderOverrides.CacheControl">
            <summary>
            CacheControl header value.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ResponseHeaderOverrides.ContentDisposition">
            <summary>
            The ContentDisposition header value.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.ResponseHeaderOverrides.ContentEncoding">
            <summary>
            The ContentEncoding header value.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.RestoreObjectRequest">
            <summary>
            Container for the parameters to the RestoreObject operation.
            <para>Restores an archived copy of an object back into Amazon S3</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RestoreObjectRequest.BucketName">
            <summary>
            Gets and sets the BucketName property.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RestoreObjectRequest.Days">
            <summary>
            Lifetime of the active copy in days
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RestoreObjectRequest.VersionId">
            <summary>
            VersionId used to reference a specific version of the object.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.RestoreObjectResponse">
            <summary>
            Returns information about the RestoreObject response metadata.
            The RestoreObject operation has a void result type.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.RoutingRule">
            <summary>Routing Rule
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RoutingRule.Condition">
            <summary>
            A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the
            /docs folder, redirect to the /documents folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might
            process the error.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RoutingRule.Redirect">
            <summary>
            Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an
            error, you can can specify a different error code to return.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.RoutingRuleCondition">
            <summary>
            <para>A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages
            in the /docs folder, redirect to the /documents folder. 2. If request results in HTTP error 4xx, redirect request to another host where you
            might process the error.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RoutingRuleCondition.HttpErrorCodeReturnedEquals">
            <summary>
            The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect
            is applied. Required when parent element Condition is specified and sibling KeyPrefixEquals is not specified. If both are specified, then
            both must be true for the redirect to be applied.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RoutingRuleCondition.KeyPrefixEquals">
            <summary>
            The object key name prefix when the redirect is applied. For example, to redirect requests for ExamplePage.html, the key prefix will be
            ExamplePage.html. To redirect request for all pages with the prefix docs/, the key prefix will be /docs, which identifies all objects in the
            docs/ folder. Required when the parent element Condition is specified and sibling HttpErrorCodeReturnedEquals is not specified. If both
            conditions are specified, both must be true for the redirect to be applied.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.RoutingRuleRedirect">
            <summary>
            <para>Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event
            of an error, you can can specify a different error code to return.</para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RoutingRuleRedirect.HostName">
            <summary>
            Name of the host where requests will be redirected.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RoutingRuleRedirect.HttpRedirectCode">
            <summary>
            The HTTP redirect code to use on the response. Not required if one of the siblings is present.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RoutingRuleRedirect.Protocol">
            <summary>
            Protocol to use (http, https) when redirecting requests. The default is the protocol that is used in the original request.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RoutingRuleRedirect.ReplaceKeyPrefixWith">
            <summary>
            The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix docs/ (objects in the
            docs/ folder) to documents/, you can set a condition block with KeyPrefixEquals set to docs/ and in the Redirect set ReplaceKeyPrefixWith to
            /documents. Not required if one of the siblings is present. Can be present only if ReplaceKeyWith is not provided.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.RoutingRuleRedirect.ReplaceKeyWith">
            <summary>
            The specific object key to use in the redirect request. For example, redirect request to error.html. Not required if one of the sibling is
            present. Can be present only if ReplaceKeyPrefixWith is not provided.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.S3AccessControlList">
            <summary>
            Represents an access control list (ACL) for S3. An AccessControlList is represented by an Owner,
            and a List of Grants, where each Grant is a Grantee and a Permission.
            </summary>
            <remarks>
            <para>
            Each bucket and object in Amazon S3 has an ACL that defines its access control policy.
            When a request is made, Amazon S3 authenticates the request using its standard
            authentication procedure and then checks the ACL to verify the sender was granted access
            to the bucket or object. If the sender is approved, the request proceeds.
            Otherwise, Amazon S3 returns an error.
            </para>
            <para>
            An ACL is a list of grants. A grant consists of one grantee and one permission.
            ACLs only grant permissions; they do not deny them.
            </para>
            <para>
            For convenience, some commonly used Access Control Lists are defined in
            S3CannedACL.
            </para>
            <para>
            Note: BucketName and object ACLs are completely independent; an object does not inherit the ACL
            from its bucket. For example, if you create a bucket and grant write access to another user,
            you will not be able to access the user's objects unless the user explicitly grants access.
            This also applies if you grant anonymous write access to a bucket. Only the user "anonymous"
            will be able to access objects the user created unless permission is explicitly granted to
            the bucket owner.
            </para>
            <para>
            Important: We highly recommend that you do not grant the anonymous group write access to your
            buckets as you will have no control over the objects others can store and their associated charges.
            For more information, see Grantees and Permissions</para>
            </remarks>
        </member>
        <member name="M:Amazon.S3.Model.S3AccessControlList.AddGrant(Amazon.S3.Model.S3Grantee,Amazon.S3.S3Permission)">
            <summary>
            Creates a S3Grant and adds it to the list of grants.
            </summary>
            <param name="grantee">The grantee for the grant.</param>
            <param name="permission">The permission for the grantee.</param>
        </member>
        <member name="M:Amazon.S3.Model.S3AccessControlList.RemoveGrant(Amazon.S3.Model.S3Grantee,Amazon.S3.S3Permission)">
            <summary>
            Removes a specific permission for the given grantee.
            </summary>
            <param name="grantee">The grantee</param>
            <param name="permission">The permission for the grantee to remove</param>
        </member>
        <member name="M:Amazon.S3.Model.S3AccessControlList.RemoveGrant(Amazon.S3.Model.S3Grantee)">
            <summary>
            Removes all permissions for the given grantee.
            </summary>
            <param name="grantee"></param>
        </member>
        <member name="M:Amazon.S3.Model.S3AccessControlList.IsSetOwner">
            <summary>
            Checks if Owner property is set.
            </summary>
            <returns>true if Owner property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.S3AccessControlList.IsSetGrants">
            <summary>
            Checks if Grants property is set.
            </summary>
            <returns>true if Grants property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.S3AccessControlList.Owner">
            <summary>
            The owner of the bucket or object.
            </summary>
            <remarks>
            <para>
            Every bucket and object in Amazon S3 has an owner, the user that
            created the bucket or object. The owner of a bucket or object cannot
            be changed. However, if the object is overwritten by another user
            (deleted and rewritten), the new object will have a new owner.
            </para>
            <para>
            Note: Even the owner is subject to the ACL. For example, if an owner
            does not have Permission.READ access to an object, the owner cannot read
            that object. However, the owner of an object always has write access to the
            access control policy (Permission.WriteAcp) and can change the ACL to
            read the object.
            </para>
            </remarks>
        </member>
        <member name="P:Amazon.S3.Model.S3AccessControlList.Grants">
            <summary>
            A collection of grants.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.S3Bucket">
            <summary>Bucket
            Represents an S3 bucket, contains the name of the S3 bucket and the date that the bucket was created.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Bucket.CreationDate">
            <summary>
            Date the bucket was created.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Bucket.BucketName">
            <summary>
            The name of the bucket.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.S3BucketLoggingConfig">
            <summary>Logging Enabled
            </summary>
        </member>
        <member name="M:Amazon.S3.Model.S3BucketLoggingConfig.AddGrant(Amazon.S3.Model.S3Grantee,Amazon.S3.S3Permission)">
            <summary>
            Creates a S3Grant and adds it to the list of grants.
            </summary>
            <param name="grantee">The grantee for the grant.</param>
            <param name="permission">The permission for the grantee.</param>
        </member>
        <member name="M:Amazon.S3.Model.S3BucketLoggingConfig.RemoveGrant(Amazon.S3.Model.S3Grantee,Amazon.S3.S3Permission)">
            <summary>
            Removes a specific permission for the given grantee.
            </summary>
            <param name="grantee">The grantee</param>
            <param name="permission">The permission for the grantee to remove</param>
        </member>
        <member name="M:Amazon.S3.Model.S3BucketLoggingConfig.RemoveGrant(Amazon.S3.Model.S3Grantee)">
            <summary>
            Removes all permissions for the given grantee.
            </summary>
            <param name="grantee"></param>
        </member>
        <member name="P:Amazon.S3.Model.S3BucketLoggingConfig.TargetBucketName">
            <summary>
            Specifies the bucket where you want Amazon S3 to store server access logs. You can have your logs delivered to any bucket that you own,
            including the same bucket that is being logged. You can also configure multiple buckets to deliver their logs to the same target bucket. In
            this case you should choose a different TargetPrefix for each source bucket so that the delivered log files can be distinguished by key.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3BucketLoggingConfig.Grants">
            <summary>
            A collection of grants.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3BucketLoggingConfig.TargetPrefix">
            <summary>
            This element lets you specify a prefix for the keys that the log files will be stored under.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.S3BucketVersioningConfig">
            <summary>
            An S3 bucket versioning configuration.
            </summary>
            <remarks>
            Contains the bucket's versioning status (Off, Enabled, Suspended) and whether an MFADelete 
            has been enabled for the bucket.
            </remarks>
        </member>
        <member name="M:Amazon.S3.Model.S3BucketVersioningConfig.IsSetStatus">
            <summary>
            Checks if Status property is set
            </summary>
            <returns>true if Status property is set</returns>
        </member>
        <member name="M:Amazon.S3.Model.S3BucketVersioningConfig.IsSetEnableMfaDelete">
            <summary>
            Checks if EnableMfaDelete property is set.
            </summary>
            <returns>true if Status property is set</returns>
        </member>
        <member name="P:Amazon.S3.Model.S3BucketVersioningConfig.Status">
            <summary>
            Versioning status for the bucket.
            Accepted values: Off, Enabled, Suspended.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3BucketVersioningConfig.EnableMfaDelete">
            <summary>
            Specifies whether MFA Delete is enabled on this S3 Bucket.
            </summary>
            <remarks>
            If this property is set, please ensure that the 
            PutBucketVersioningRequest's MfaCodes property is set with 
            the Serial of and Token on the MFA device.
            </remarks>
        </member>
        <member name="T:Amazon.S3.Model.S3Grant">
            <summary>Grant
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Grant.Grantee">
            <summary>
            The grantee details.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Grant.Permission">
            <summary>
            Specifies the permission given to the grantee.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.S3Grantee">
            <summary>Grantee
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Grantee.Type">
            <summary>
            Type of grantee
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Grantee.DisplayName">
            <summary>
            Screen name of the grantee.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Grantee.EmailAddress">
            <summary>
            Email address of the grantee.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Grantee.CanonicalUser">
            <summary>
            The canonical user ID of the grantee.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Grantee.URI">
            <summary>
            URI of the grantee group.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.S3Object">
            <summary>
            Represents an S3 Object. Contains all attributes that an S3 Object has.
            For more information about S3 Objects refer:
            <see href="http://docs.amazonwebservices.com/AmazonS3/latest/UsingObjects.html"/>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Object.ETag">
            <summary>
            Any ETag set on the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Object.Key">
            <summary>
            The key of the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Object.LastModified">
            <summary>
            The date and time the object was last modified.
            <remarks>
            The date retrieved from S3 is in ISO8601 format. A GMT formatted date is passed back to the user.
            </remarks>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Object.Owner">
            <summary>
            The owner of the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Object.Size">
            <summary>
            The size of the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3Object.StorageClass">
            <summary>
            The class of storage used to store the object.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.S3ObjectVersion">
            <summary>
            Represents a version of an object in an S3 Bucket. An S3 object version is an S3 object
            that also has a version identifier, an indication of whether this is the latest version of the object 
            and whether it's a DeleteMarker or not.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3ObjectVersion.IsLatest">
            <summary>
            Specifies whether the object is (true) or is not (false) the latest version of an object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3ObjectVersion.VersionId">
            <summary>
            Version ID of an object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.S3ObjectVersion.IsDeleteMarker">
            <summary>
            If true, the object is a delete marker for a deleted object.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.StreamSizeMismatchException">
            <summary>
            The exception that is thrown when the size of a stream does not match it's expected size.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.Tag">
            <summary>Tag
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.Tag.Key">
            <summary>
            Name of the tag.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.Tag.Value">
            <summary>
            Value of the tag.
             
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.TopicConfiguration">
            <summary>Topic Configuration
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.TopicConfiguration.Event">
            <summary>
            Bucket event for which to send notifications.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.TopicConfiguration.Topic">
            <summary>
            Amazon SNS topic to which Amazon S3 will publish a message to report the specified events for the bucket.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.UploadPartRequest">
            <summary>
            The parameters to request upload of a part in a multipart upload operation.
            </summary>
            <remarks>
            <para>
            If PartSize is not specified then the rest of the content from the file
            or stream will be sent to Amazon S3.
            </para>
            <para>
            You must set either the FilePath or InputStream.  If FilePath is set then the FilePosition
            property must be set.
            </para>
            </remarks>
            <summary>
            The parameters to request upload of a part in a multipart upload operation.
            </summary>
            <remarks>
            <para>
            If PartSize is not specified then the rest of the content from the file
            or stream will be sent to Amazon S3.
            </para>
            <para>
            You must set either the FilePath or InputStream.  If FilePath is set then the FilePosition
            property must be set.
            </para>
            </remarks>
        </member>
        <member name="M:Amazon.S3.Model.UploadPartRequest.IsSetPartSize">
            <summary>
            Checks if PartSize property is set.
            </summary>
            <returns>true if PartSize property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.UploadPartRequest.IsSetServerSideEncryptionCustomerProvidedKey">
            <summary>
            Checks if ServerSideEncryptionCustomerProvidedKey property is set.
            </summary>
            <returns>true if ServerSideEncryptionCustomerProvidedKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.UploadPartRequest.IsSetServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            Checks if ServerSideEncryptionCustomerProvidedKeyMD5 property is set.
            </summary>
            <returns>true if ServerSideEncryptionCustomerProvidedKey property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.UploadPartRequest.IsSetFilePath">
            <summary>
            Checks if the FilePath property is set.
            </summary>
            <returns>true if FilePath property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.UploadPartRequest.IsSetFilePosition">
            <summary>
            Checks if the FilePosition property is set.
            </summary>
            <returns>true if FilePosition property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Model.UploadPartRequest.IsSetMD5Digest">
            <summary>
            Checks if the MD5Digest property is set.
            </summary>
            <returns>true if Md5Digest property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.IsLastPart">
            <summary>
            Caller needs to set this to true when uploading the last part. This property only needs to be set
            when using the AmazonS3EncryptionClient.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.InputStream">
            <summary>
            Input stream for the request; content for the request will be read from the stream.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.BucketName">
            <summary>
            The name of the bucket containing the object to receive the part.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.Key">
            <summary>
            The key of the object.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.PartNumber">
            <summary>
            Part number of part being uploaded.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.PartSize">
            <summary>
            The size of the part to be uploaded.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.UploadId">
            <summary>
            Upload ID identifying the multipart upload whose part is being uploaded.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.MD5Digest">
            <summary>
            An MD5 digest for the part.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.ServerSideEncryptionCustomerMethod">
            <summary>
            The Server-side encryption algorithm to be used with the customer provided key.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.ServerSideEncryptionCustomerProvidedKey">
            <summary>
            The base64-encoded encryption key for Amazon S3 to use to encrypt the object
            <para>
            Using the encryption key you provide as part of your request Amazon S3 manages both the encryption, as it writes 
            to disks, and decryption, when you access your objects. Therefore, you don't need to maintain any data encryption code. The only 
            thing you do is manage the encryption keys you provide.
            </para>
            <para>
            When you retrieve an object, you must provide the same encryption key as part of your request. Amazon S3 first verifies 
            the encryption key you provided matches, and then decrypts the object before returning the object data to you.
            </para>
            <para>
            Important: Amazon S3 does not store the encryption key you provide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.ServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            The MD5 of the customer encryption key specified in the ServerSideEncryptionCustomerProvidedKey property. The MD5 is
            base 64 encoded. This field is optional, the SDK will calculate the MD5 if this is not set.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.FilePath">
            <summary>
            <para>
            Full path and name of a file from which the content for the part is retrieved.
            </para>
            <para>
            For WinRT and Windows Phone this property must be in the form of "ms-appdata:///local/file.txt".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.FilePosition">
            <summary>
            Position in the file specified by FilePath from which to retrieve the content of the part. 
            This field is required when a file path is specified. It is ignored when using the InputStream property.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.StreamTransferProgress">
            <summary>
            Attach a callback that will be called as data is being sent to the AWS Service.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartRequest.StorageFile">
            <summary>
            Gets and sets the StorageFile property. The Windows.Storage.IStorageFile that will be read 
            from and upload to Amazon S3.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.UploadPartResponse">
            <summary>
            Returns information about the  UploadPart response and response metadata.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartResponse.ServerSideEncryptionMethod">
            <summary>
            The Server-side encryption algorithm used when storing this object in S3.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartResponse.ETag">
            <summary>
            Entity tag for the uploaded object.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.UploadPartResponse.PartNumber">
            <summary>
            Gets and sets the part number specified for the part upload.  This is needed when
            completing the multipart upload.
            </summary>
        </member>
        <member name="T:Amazon.S3.Model.WebsiteConfiguration">
            <summary>Website Configuration
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.WebsiteConfiguration.ErrorDocument">
            <summary>
            The ErrorDocument value, an object key name to use when a 4XX class error occurs.
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.WebsiteConfiguration.IndexDocumentSuffix">
            <summary>
            <para>
            This value is a suffix that is appended to a request that is for a "directory" 
            on the website endpoint (e.g. if the suffix is index.html and
            you make a request to samplebucket/images/ the data that
            is returned will be for the object with the key name
            images/index.html)
            </para>
            <para>
            The suffix must not be empty and must not include a slash
            character.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.WebsiteConfiguration.RedirectAllRequestsTo">
            <summary>
            Container for redirect information where all requests will be redirect
            to. You can redirect requests to another host, to another page, or with
            another protocol. In the event of an error, you can can specify a
            different error code to return. .
            </summary>
        </member>
        <member name="P:Amazon.S3.Model.WebsiteConfiguration.RoutingRules">
            <summary>
            The list of routing rules that can be used for configuring redirects if certain conditions are meet.
            </summary>
        </member>
        <member name="T:Amazon.S3.S3CannedACL">
            <summary>
            A list of all possible CannedACLs that can be used
            for S3 Buckets or S3 Objects. For more information about CannedACLs, refer:
            <see href="http://docs.amazonwebservices.com/AmazonS3/latest/RESTAccessPolicy.html#RESTCannedAccessPolicies"/>
            </summary>
        </member>
        <member name="F:Amazon.S3.S3CannedACL.NoACL">
            <summary>
            Owner gets FULL_CONTROL.
            No one else has access rights (default).
            </summary>
        </member>
        <member name="F:Amazon.S3.S3CannedACL.Private">
            <summary>
            Owner gets FULL_CONTROL.
            No one else has access rights (default).
            </summary>
        </member>
        <member name="F:Amazon.S3.S3CannedACL.PublicRead">
            <summary>
            Owner gets FULL_CONTROL and the anonymous principal is granted READ access.
            If this policy is used on an object, it can be read from a browser with no authentication.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3CannedACL.PublicReadWrite">
            <summary>
            Owner gets FULL_CONTROL, the anonymous principal is granted READ and WRITE access.
            This can be a useful policy to apply to a bucket, but is generally not recommended.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3CannedACL.AuthenticatedRead">
            <summary>
            Owner gets FULL_CONTROL, and any principal authenticated as a registered Amazon
            S3 user is granted READ access.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3CannedACL.BucketOwnerRead">
            <summary>
            Object Owner gets FULL_CONTROL, Bucket Owner gets READ
            This ACL applies only to objects and is equivalent to private when used with PUT Bucket. 
            You use this ACL to let someone other than the bucket owner write content (get full control) 
            in the bucket but still grant the bucket owner read access to the objects.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3CannedACL.BucketOwnerFullControl">
            <summary>
            Object Owner gets FULL_CONTROL, Bucket Owner gets FULL_CONTROL.
            This ACL applies only to objects and is equivalent to private when used with PUT Bucket. 
            You use this ACL to let someone other than the bucket owner write content (get full control) 
            in the bucket but still grant the bucket owner full rights over the objects.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3CannedACL.LogDeliveryWrite">
            <summary>
            The LogDelivery group gets WRITE and READ_ACP permissions on the bucket.
            </summary>
        </member>
        <member name="M:Amazon.S3.S3CannedACL.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.S3Region">
            <summary>
            A list of all possible S3 Bucket region possibilities. For
            more information, refer:
            <see href="http://docs.amazonwebservices.com/AmazonS3/latest/BucketConfiguration.html#LocationSelection"/>
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Region.US">
            <summary>
            Specifies that the S3 Bucket should use US locality.
            This is the default value.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Region.EU">
            <summary>
            Specifies that the S3 Bucket should use EU locality.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Region.USW1">
            <summary>
            Specifies that the S3 Bucket should use US-WEST-1 locality.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Region.USW2">
            <summary>
            Specifies that the S3 Bucket should use US-WEST-2 locality.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Region.APS1">
            <summary>
            Specifies that the S3 Bucket should use the AP-SOUTHEAST-1 locality.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Region.APS2">
            <summary>
            Specifies that the S3 Bucket should use the AP-SOUTHEAST-2 locality.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Region.APN1">
            <summary>
            Specifies that the S3 Bucket should use the AP-NORTHEAST-1 locality.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Region.SAE1">
            <summary>
            Specifies that the S3 Bucket should use the SA-EAST-1 locality.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Region.SFO">
            <summary>
            Specifies that the S3 Bucket should use US-WEST-1 locality.
            </summary>
        </member>
        <member name="M:Amazon.S3.S3Region.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.S3Permission">
            <summary>
            A list of all ACL permissions. For more information, refer:
            <see href="http://docs.amazonwebservices.com/AmazonS3/latest/S3_ACLs.html#S3_ACLs_Permissions"/>
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Permission.READ">
            <summary>
            When applied to a bucket, grants permission to list the bucket.
            When applied to an object, this grants permission to read the
            object data and/or metadata.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Permission.WRITE">
            <summary>
            When applied to a bucket, grants permission to create, overwrite,
            and delete any object in the bucket. This permission is not
            supported for objects.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Permission.READ_ACP">
            <summary>
            Grants permission to read the ACL for the applicable bucket or object.
            The owner of a bucket or object always has this permission implicitly.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Permission.WRITE_ACP">
            <summary>
            Gives permission to overwrite the ACP for the applicable bucket or object.
            The owner of a bucket or object always has this permission implicitly.
            Granting this permission is equivalent to granting FULL_CONTROL because
            the grant recipient can make any changes to the ACP.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Permission.FULL_CONTROL">
            <summary>
            Provides READ, WRITE, READ_ACP, and WRITE_ACP permissions.
            It does not convey additional rights and is provided only for convenience.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3Permission.RESTORE_OBJECT">
            <summary>
            Gives permission to restore an object that is currently stored in Amazon Glacier
            for archival storage.
            </summary>
        </member>
        <member name="M:Amazon.S3.S3Permission.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.S3MetadataDirective">
            <summary>
            An enumeration of all Metadata directives that
            can be used for the CopyObject operation.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3MetadataDirective.COPY">
            <summary>
            Specifies that the metadata is copied from the source object.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3MetadataDirective.REPLACE">
            <summary>
            Specifies that the metadata is replaced with metadata provided in the request.
            All original metadata is replaced by the metadata you specify.
            </summary>
        </member>
        <member name="T:Amazon.S3.Protocol">
            <summary>
            An enumeration of all protocols that the pre-signed
            URL can be created against.
            </summary>
        </member>
        <member name="F:Amazon.S3.Protocol.HTTPS">
            <summary>
            https protocol will be used in the pre-signed URL.
            </summary>
        </member>
        <member name="F:Amazon.S3.Protocol.HTTP">
            <summary>
            http protocol will be used in the pre-signed URL.
            </summary>
        </member>
        <member name="T:Amazon.S3.HttpVerb">
            <summary>
            An enumeration of supported HTTP verbs
            </summary>
        </member>
        <member name="F:Amazon.S3.HttpVerb.GET">
            <summary>
            The GET HTTP verb.
            </summary>
        </member>
        <member name="F:Amazon.S3.HttpVerb.HEAD">
            <summary>
            The HEAD HTTP verb.
            </summary>
        </member>
        <member name="F:Amazon.S3.HttpVerb.PUT">
            <summary>
            The PUT HTTP verb.
            </summary>
        </member>
        <member name="F:Amazon.S3.HttpVerb.DELETE">
            <summary>
            The DELETE HTTP verb.
            </summary>
        </member>
        <member name="T:Amazon.S3.S3StorageClass">
            <summary>
            Specifies the Storage Class of of an S3 object. Possible values
            are: <list type="bullet">
            <item>ReducedRedundancy: provides a 99.99% durability guarantee</item>
            <item>Standard: provides a 99.999999999% durability guarantee</item>
            </list>
            </summary>
        </member>
        <member name="F:Amazon.S3.S3StorageClass.Standard">
            <summary>
            The STANDARD storage class, which is the default
            storage class for S3 objects. Provides a 99.999999999%
            durability guarantee.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3StorageClass.ReducedRedundancy">
            <summary>
            The REDUCED_REDUNDANCY storage class for S3 objects. This
            provides a reduced (99.99%) durability guarantee at a lower
            cost as compared to the STANDARD storage class. Use this
            storage class for non-mission critical data or for data 
            that doesn’t require the higher level of durability that S3
            provides with the STANDARD storage class.
            </summary>
        </member>
        <member name="F:Amazon.S3.S3StorageClass.Glacier">
            <summary>
            The GLACIER storage is for object that are stored in Amazon Glacier.
            This storage class is for objects that are for archival purpose and 
            get operations are rare.
            </summary>
        </member>
        <member name="M:Amazon.S3.S3StorageClass.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.NotificationEvents">
            <summary>
            The constants for the known event names used by S3 notification. S3 might add new
            events before the SDK is updated. In which case the names listed in the S3 documentation
            will work as well as these constants.
            </summary>
        </member>
        <member name="F:Amazon.S3.NotificationEvents.ReducedRedundancyLostObject">
            <summary>
            An event that says an object has been lost in the reduced redundancy storage.
            </summary>
        </member>
        <member name="T:Amazon.S3.ServerSideEncryptionCustomerMethod">
            <summary>
            A list of all server-side encryption methods for customer provided encryption keys.
            </summary>
        </member>
        <member name="F:Amazon.S3.ServerSideEncryptionCustomerMethod.None">
            <summary>
            No server side encryption to be used.
            </summary>
        </member>
        <member name="F:Amazon.S3.ServerSideEncryptionCustomerMethod.AES256">
            <summary>
            Use AES 256 server side encryption.
            </summary>
        </member>
        <member name="M:Amazon.S3.ServerSideEncryptionCustomerMethod.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.ServerSideEncryptionMethod">
            <summary>
            A list of all server-side encryption methods.
            </summary>
        </member>
        <member name="F:Amazon.S3.ServerSideEncryptionMethod.None">
            <summary>
            No server side encryption to be used.
            </summary>
        </member>
        <member name="F:Amazon.S3.ServerSideEncryptionMethod.AES256">
            <summary>
            Use AES 256 server side encryption.
            </summary>
        </member>
        <member name="M:Amazon.S3.ServerSideEncryptionMethod.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.GranteeType">
            <summary>
            A list of all grantee types.
            </summary>
        </member>
        <member name="F:Amazon.S3.GranteeType.Group">
            <summary>
            The predefined group.
            </summary>
        </member>
        <member name="F:Amazon.S3.GranteeType.Email">
            <summary>
            The email address of an AWS account
            </summary>
        </member>
        <member name="F:Amazon.S3.GranteeType.CanonicalUser">
            <summary>
            The canonical user ID of an AWS account
            </summary>
        </member>
        <member name="M:Amazon.S3.GranteeType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.LifecycleRuleStatus">
            <summary>
            A list of all lifecycle statuses.
            </summary>
        </member>
        <member name="F:Amazon.S3.LifecycleRuleStatus.Enabled">
            <summary>
            The rule is enabled.
            </summary>
        </member>
        <member name="F:Amazon.S3.LifecycleRuleStatus.Disabled">
            <summary>
            The rule is disabled.
            </summary>
        </member>
        <member name="M:Amazon.S3.LifecycleRuleStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.VersionStatus">
            <summary>
            A list of all version statuses.
            </summary>
        </member>
        <member name="F:Amazon.S3.VersionStatus.Off">
            <summary>
            The rule is off.
            </summary>
        </member>
        <member name="F:Amazon.S3.VersionStatus.Suspended">
            <summary>
            The rule is suspended.
            </summary>
        </member>
        <member name="F:Amazon.S3.VersionStatus.Enabled">
            <summary>
            The rule is enabled.
            </summary>
        </member>
        <member name="M:Amazon.S3.VersionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.EncodingType">
            <summary>
            A list of all encoding types.
            </summary>
        </member>
        <member name="F:Amazon.S3.EncodingType.Url">
            <summary>
            Url encoding.
            </summary>
        </member>
        <member name="M:Amazon.S3.EncodingType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.S3.Transfer.TransferUtilityDownloadRequest">
            <summary>
            Contains all the parameters
            that can be set when making a this request with the 
            <c>TransferUtility</c> method.
            </summary>
            <summary>
            Contains all the parameters
            that can be set when making a this request with the 
            <c>TransferUtility</c> method.
            </summary>
        </member>
        <member name="T:Amazon.S3.Transfer.BaseDownloadRequest">
            <summary>
            The base class for requests that return Amazon S3 objects.
            </summary>
        </member>
        <member name="M:Amazon.S3.Transfer.BaseDownloadRequest.IsSetBucketName">
            <summary>
            Gets whether or not the bucket name is set.
            </summary>
            <returns>
            	A value of <c>true</c> if the bucket name is set.
               Returns <c>false</c> if otherwise.
            </returns>
        </member>
        <member name="M:Amazon.S3.Transfer.BaseDownloadRequest.IsSetKey">
            <summary>
            	Gets whether or not the key property is set.
            </summary>
            <returns>
            	A value of <c>true</c> if key property is set.
            	Returns <c>false</c> if otherwise.
            </returns>
        </member>
        <member name="M:Amazon.S3.Transfer.BaseDownloadRequest.IsSetVersionId">
            <summary>
            Checks if VersionId property is set.
            </summary>
            <returns>true if VersionId property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.BaseDownloadRequest.IsSetModifiedSinceDate">
            <summary>
            Checks if ModifiedSinceDate property is set.
            </summary>
            <returns>true if ModifiedSinceDate property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.BaseDownloadRequest.IsSetUnmodifiedSinceDate">
            <summary>
            Checks if UnmodifiedSinceDate property is set.
            </summary>
            <returns>true if UnmodifiedSinceDate property is set.</returns>
        </member>
        <member name="P:Amazon.S3.Transfer.BaseDownloadRequest.BucketName">
            <summary>
            	Gets or sets the name of the bucket.
            </summary>
            <value>
            	The name of the bucket.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.BaseDownloadRequest.Key">
            <summary>
            	Gets or sets the key under which the Amazon S3 object is stored.
            </summary>
            <value>
            	The key under which the Amazon S3 object is stored. 
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.BaseDownloadRequest.VersionId">
            <summary>
            	Gets or sets the version ID of the Amazon S3 object.
            </summary>
            <value>
            	The version ID of the Amazon S3 object.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.BaseDownloadRequest.ModifiedSinceDate">
            <summary>
            	Gets or sets the <c>ModifiedSinceDate</c> property.
            </summary>
            <value>
            	The <c>ModifiedSinceDate</c> property. 
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.BaseDownloadRequest.UnmodifiedSinceDate">
            <summary>
            	Gets or sets the <c>UnmodifiedSinceDate</c> property.
            </summary>
            <value>
            	The <c>UnmodifiedSinceDate</c> property.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.BaseDownloadRequest.ServerSideEncryptionCustomerMethod">
            <summary>
            The Server-side encryption algorithm to be used with the customer provided key.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Transfer.BaseDownloadRequest.ServerSideEncryptionCustomerProvidedKey">
            <summary>
            The base64-encoded encryption key for Amazon S3 to use to decrypt the object
            <para>
            Using the encryption key you provide as part of your request Amazon S3 manages both the encryption, as it writes 
            to disks, and decryption, when you access your objects. Therefore, you don't need to maintain any data encryption code. The only 
            thing you do is manage the encryption keys you provide.
            </para>
            <para>
            When you retrieve an object, you must provide the same encryption key as part of your request. Amazon S3 first verifies 
            the encryption key you provided matches, and then decrypts the object before returning the object data to you.
            </para>
            <para>
            Important: Amazon S3 does not store the encryption key you provide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Transfer.BaseDownloadRequest.ServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            The MD5 of the customer encryption key specified in the ServerSideEncryptionCustomerProvidedKey property. The MD5 is
            base 64 encoded. This field is optional, the SDK will calculate the MD5 if this is not set.
            </summary>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityDownloadRequest.IsSetStorageFile">
            <summary>
            Checks if StorageFile property is set.
            </summary>
            <returns>True if StorageFile property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityDownloadRequest.OnRaiseProgressEvent(Amazon.S3.Model.WriteObjectProgressArgs)">
            <summary>
            Causes the WriteObjectProgressEvent event to be fired.
            </summary>
            <param name="progressArgs">Progress data for the stream being written to file.</param>        
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityDownloadRequest.StorageFile">
            <summary>
            Gets and sets the StorageFile property. The Windows.Storage.IStorageFile that will be read 
            from and upload to Amazon S3.
            </summary>
        </member>
        <member name="E:Amazon.S3.Transfer.TransferUtilityDownloadRequest.WriteObjectProgressEvent">
            <summary>
            The event for WriteObjectProgressEvent notifications. All
            subscribers will be notified when a new progress
            event is raised.
            <para>
            The WriteObjectProgressEvent is fired as data
            is downloaded from S3.  The delegates attached to the event 
            will be passed information detailing how much data
            has been downloaded as well as how much will be downloaded.
            </para>
            </summary>
            <remarks>
            Subscribe to this event if you want to receive
            WriteObjectProgressEvent notifications. Here is how:<br />
            1. Define a method with a signature similar to this one:
            <code>
            private void displayProgress(object sender, WriteObjectProgressArgs args)
            {
                Console.WriteLine(args);
            }
            </code>
            2. Add this method to the WriteObjectProgressEvent delegate's invocation list
            <code>
            TransferUtilityDownloadRequest request = new TransferUtilityDownloadRequest();
            request.WriteObjectProgressEvent += displayProgress;
            </code>
            </remarks>
        </member>
        <member name="T:Amazon.S3.Transfer.TransferUtilityUploadRequest">
            <summary>
            Contains all the parameters
            that can be set when making a this request with the 
            <c>TransferUtility</c> method.
            </summary>
            <summary>
            Contains all the parameters
            that can be set when making a this request with the 
            <c>TransferUtility</c> method.
            </summary>
        </member>
        <member name="T:Amazon.S3.Transfer.BaseUploadRequest">
            <summary>
            The base class TransferUtility request classes.
            </summary>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadRequest.IsSetStorageFile">
            <summary>
            Checks if StorageFile property is set.
            </summary>
            <returns>True if StorageFile property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadRequest.IsSetBucketName">
            <summary>
            Checks if BucketName property is set.
            </summary>
            <returns>true if BucketName property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadRequest.IsSetKey">
            <summary>
            Checks if Key property is set.
            </summary>
            <returns>true if Key property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadRequest.IsSetCannedACL">
            <summary>
            Checks if the CannedACL property is set.
            </summary>
            <returns>true if there is the CannedACL property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadRequest.RemoveCannedACL">
            <summary>
            	Removes the cannned access control list (ACL)
            	for the uploaded object.
            </summary>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadRequest.IsSetContentType">
            <summary>
            Checks if ContentType property is set.
            </summary>
            <returns>true if ContentType property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadRequest.IsSetFilePath">
            <summary>
            Checks if FilePath property is set.
            </summary>
            <returns>true if FilePath property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadRequest.IsSetPartSize">
            <summary>
            Checks if PartSize property is set.
            </summary>
            <returns>true if PartSize property is set.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadRequest.OnRaiseProgressEvent(Amazon.S3.Transfer.UploadProgressArgs)">
            <summary>
            Causes the UploadProgressEvent event to be fired.
            </summary>
            <param name="progressArgs">Progress data for the file being uploaded.</param>        
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityUploadRequest.WithAutoCloseStream(System.Boolean)">
            <summary>
            	Sets whether or not the stream used with this request is
            	automatically closed when all of the content is read from the stream
              	and returns this object instance, 
            	enabling additional method calls to be chained together.
            </summary>
            <param name="autoCloseStream">
            	A value of <c>true</c> if the if the stream is
            	automatically closed when all of the content is read from the stream.
            	A value of <c>false</c> if otherwise. 	
            </param>
            <returns>
            	This object instance, enabling additional method calls to be chained together.
            </returns>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.StorageFile">
            <summary>
            Gets and sets the StorageFile property. The Windows.Storage.IStorageFile that will be read 
            from and upload to Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.BucketName">
            <summary>
            	Gets or sets the name of the bucket.
            </summary>
            <value>
            	The name of the bucket.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.Key">
            <summary>
            	Gets or sets the key under which the Amazon S3 object is to be stored.
            </summary>
            <value>
            	The key under which the Amazon S3 object is to be stored. 
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.CannedACL">
            <summary>
            	Gets or sets the canned access control list (ACL)
            	for the uploaded object.
            	Please refer to 
            	<see cref="T:Amazon.S3.Model.S3CannedACL"/> for
            	information on Amazon S3 canned ACLs.
            </summary>
            <value>
            	The canned access control list (ACL)
            	for the uploaded object.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.ContentType">
            <summary>
            	Gets or sets the content type of the uploaded Amazon S3 object.
            </summary>
            <value>
            	The content type of the uploaded Amazon S3 object.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.StorageClass">
            <summary>
            	Gets or sets the storage class for the uploaded Amazon S3 object.
            	Please refer to 
            	<see cref="T:Amazon.S3.Model.S3StorageClass"/> for
            	information on S3 Storage Classes.
            </summary>
            <value>
            	The storage class for the uploaded Amazon S3 object.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.ServerSideEncryptionMethod">
            <summary>
            Gets and sets the ServerSideEncryptionMethod property.
            Specifies the encryption used on the server to
            store the content.
            </summary>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.ServerSideEncryptionCustomerMethod">
            <summary>
            The Server-side encryption algorithm to be used with the customer provided key.
             
            </summary>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.ServerSideEncryptionCustomerProvidedKey">
            <summary>
            The base64-encoded encryption key for Amazon S3 to use to encrypt the object
            <para>
            Using the encryption key you provide as part of your request Amazon S3 manages both the encryption, as it writes 
            to disks, and decryption, when you access your objects. Therefore, you don't need to maintain any data encryption code. The only 
            thing you do is manage the encryption keys you provide.
            </para>
            <para>
            When you retrieve an object, you must provide the same encryption key as part of your request. Amazon S3 first verifies 
            the encryption key you provided matches, and then decrypts the object before returning the object data to you.
            </para>
            <para>
            Important: Amazon S3 does not store the encryption key you provide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.ServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            The MD5 of the customer encryption key specified in the ServerSideEncryptionCustomerProvidedKey property. The MD5 is
            base 64 encoded. This field is optional, the SDK will calculate the MD5 if this is not set.
            </summary>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.InputStream">
            <summary>
            Input stream for the request; content for the request will be read from the stream.
            </summary>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.FilePath">
            <summary>
            <para>
            	Gets or sets the file path
            	where the Amazon S3 object will be uploaded from.
            </para>
            <para>
                For WinRT and Windows Phone this property must be in the form of "ms-appdata:///local/file.txt".
            </para>
            </summary>
            <value>
            	The file path where the Amazon S3 object will be uploaded from.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.PartSize">
            <summary>
            	Gets or sets the part size of the upload in bytes.
            	The uploaded file will be divided into 
            	parts the size specified and
            	uploaded to Amazon S3 individually.
            </summary>
            <value>
            	The part size of the upload.
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.Headers">
            <summary>
            The collection of headers for the request.
            </summary>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.Metadata">
            <summary>
            The collection of meta data for the request.
            </summary>
        </member>
        <member name="E:Amazon.S3.Transfer.TransferUtilityUploadRequest.UploadProgressEvent">
            <summary>
            The event for UploadProgressEvent notifications. All
            subscribers will be notified when a new progress
            event is raised.
            <para>
            The UploadProgressEvent is fired as data
            is uploaded to S3.  The delegates attached to the event 
            will be passed information detailing how much data
            has been uploaded as well as how much will be uploaded.
            </para>
            </summary>
            <remarks>
            Subscribe to this event if you want to receive
            UploadProgressEvent notifications. Here is how:<br />
            1. Define a method with a signature similar to this one:
            <code>
            private void displayProgress(object sender, UploadProgressArgs args)
            {
                Console.WriteLine(args);
            }
            </code>
            2. Add this method to the UploadProgressEvent delegate's invocation list
            <code>
            TransferUtilityUploadRequest request = new TransferUtilityUploadRequest();
            request.UploadProgressEvent += displayProgress;
            </code>
            </remarks>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.ContentLength">
            <summary>
            Gets the length of the content by either checking the FileInfo.Length property or the Stream.Length property.
            </summary>
            <value>The length of the content.</value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.AutoCloseStream">
            <summary>
            	Gets or sets whether or not the stream used with this request is
            	automatically closed when all of the content is read from the stream.         
            </summary>
            <value>
            	A value of <c>true</c> if the if the stream is
            	automatically closed when all of the content is read from the stream.
            	A value of <c>false</c> if otherwise. 		
            </value>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityUploadRequest.AutoResetStreamPosition">
            <summary>
            If this value is set to true then the stream's position will be reset to the start before being read for upload.
            Default: true.
            </summary>
        </member>
        <member name="M:Amazon.S3.Transfer.Internal.BaseCommand.WhenAllOrFirstExceptionAsync``1(System.Collections.Generic.List{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
            <summary>
             Waits for all of the tasks to complete or till any task fails.
            </summary>        
        </member>
        <member name="M:Amazon.S3.Transfer.Internal.BaseCommand.WhenAllOrFirstExceptionAsync(System.Collections.Generic.List{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            Waits for all of the tasks to complete or till any task fails.
            </summary>        
        </member>
        <member name="T:Amazon.S3.Transfer.Internal.MultipartUploadCommand">
            <summary>
            The command to manage an upload using the S3 multipart API.
            </summary>
        </member>
        <member name="M:Amazon.S3.Transfer.Internal.MultipartUploadCommand.#ctor(Amazon.S3.IAmazonS3,Amazon.S3.Transfer.TransferUtilityConfig,Amazon.S3.Transfer.TransferUtilityUploadRequest)">
            <summary>
            Initializes a new instance of the <see cref="T:Amazon.S3.Transfer.Internal.MultipartUploadCommand"/> class.
            </summary>
            <param name="s3Client">The s3 client.</param>
            <param name="config">The config object that has the number of threads to use.</param>
            <param name="fileTransporterRequest">The file transporter request.</param>
        </member>
        <member name="T:Amazon.S3.Transfer.Internal.SimpleUploadCommand">
            <summary>
            This command is for doing regular PutObject requests.
            </summary>
        </member>
        <member name="T:Amazon.S3.Transfer.TransferUtility">
            <summary>
            	<para>
            	Provides a high level utility for managing transfers to and from Amazon S3.
            	</para>
            	<para>
            	<c>TransferUtility</c> provides a simple API for 
            	uploading content to and downloading content
            	from Amazon S3. It makes extensive use of Amazon S3 multipart uploads to
            	achieve enhanced throughput, performance, and reliability. 
            	</para>
            	<para>
            	When uploading large files by specifying file paths instead of a stream, 
            	<c>TransferUtility</c> uses multiple threads to upload
            	multiple parts of a single upload at once. When dealing with large content
            	sizes and high bandwidth, this can increase throughput significantly.
            	</para>
            </summary>
            <remarks>
            	<para>
            	Transfers are stored in memory. If the application is restarted, 
            	previous transfers are no longer accessible.  In this situation, if necessary, 
            	you should clean up any multipart uploads	that are incomplete.
            	</para>
            </remarks>
            <summary>
            	<para>
            	Provides a high level utility for managing transfers to and from Amazon S3.
            	</para>
            	<para>
            	<c>TransferUtility</c> provides a simple API for 
            	uploading content to and downloading content
            	from Amazon S3. It makes extensive use of Amazon S3 multipart uploads to
            	achieve enhanced throughput, performance, and reliability. 
            	</para>
            	<para>
            	When uploading large files by specifying file paths instead of a stream, 
            	<c>TransferUtility</c> uses multiple threads to upload
            	multiple parts of a single upload at once. When dealing with large content
            	sizes and high bandwidth, this can increase throughput significantly.
            	</para>
            </summary>
            <remarks>
            	<para>
            	Transfers are stored in memory. If the application is restarted, 
            	previous transfers are no longer accessible. In this situation, if necessary, 
            	you should clean up any multipart uploads that are incomplete.
            	</para>
            </remarks>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.UploadAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            	Uploads the specified file.  
            	The object key is derived from the file's name.
            	Multiple threads are used to read the file and perform multiple uploads in parallel.  
            	For large uploads, the file will be divided and uploaded in parts using 
            	Amazon S3's multipart API.  The parts will be reassembled as one object in
            	Amazon S3.
            </summary>
            <remarks>
            <para>
            If you are uploading large files, TransferUtility will use multipart upload to fulfill the request. 
            If a multipart upload is interrupted, TransferUtility will attempt to abort the multipart upload. 
            Under certain circumstances (network outage, power failure, etc.), TransferUtility will not be able 
            to abort the multipart upload. In this case, in order to stop getting charged for the storage of uploaded parts,
            you should manually invoke TransferUtility.AbortMultipartUploadsAsync() to abort the incomplete multipart uploads.
            </para>
            </remarks>
            <param name="filePath">
            	The file path of the file to upload.
            </param>
            <param name="bucketName">
            	The target Amazon S3 bucket, that is, the name of the bucket to upload the file to.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.UploadAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            	Uploads the specified file.  
            	Multiple threads are used to read the file and perform multiple uploads in parallel.  
            	For large uploads, the file will be divided and uploaded in parts using 
            	Amazon S3's multipart API.  The parts will be reassembled as one object in
            	Amazon S3.
            </summary>
            <remarks>
            <para>
            If you are uploading large files, TransferUtility will use multipart upload to fulfill the request. 
            If a multipart upload is interrupted, TransferUtility will attempt to abort the multipart upload. 
            Under certain circumstances (network outage, power failure, etc.), TransferUtility will not be able 
            to abort the multipart upload. In this case, in order to stop getting charged for the storage of uploaded parts,
            you should manually invoke TransferUtility.AbortMultipartUploadsAsync() to abort the incomplete multipart uploads.
            </para>
            </remarks>
            <param name="filePath">
            	The file path of the file to upload.
            </param>
            <param name="bucketName">
            	The target Amazon S3 bucket, that is, the name of the bucket to upload the file to.
            </param>
            <param name="key">
            	The key under which the Amazon S3 object is stored.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.UploadAsync(System.IO.Stream,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            	Uploads the contents of the specified stream.  
            	For large uploads, the file will be divided and uploaded in parts using 
            	Amazon S3's multipart API.  The parts will be reassembled as one object in
            	Amazon S3.
            </summary>
            <remarks>
            <para>
            If you are uploading large files, TransferUtility will use multipart upload to fulfill the request. 
            If a multipart upload is interrupted, TransferUtility will attempt to abort the multipart upload. 
            Under certain circumstances (network outage, power failure, etc.), TransferUtility will not be able 
            to abort the multipart upload. In this case, in order to stop getting charged for the storage of uploaded parts,
            you should manually invoke TransferUtility.AbortMultipartUploadsAsync() to abort the incomplete multipart uploads.
            </para>
            </remarks>
            <param name="stream">
            	The stream to read to obtain the content to upload.
            </param>
            <param name="bucketName">
            	The target Amazon S3 bucket, that is, the name of the bucket to upload the stream to.
            </param>
            <param name="key">
            	The key under which the Amazon S3 object is stored.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.UploadAsync(Amazon.S3.Transfer.TransferUtilityUploadRequest,System.Threading.CancellationToken)">
            <summary>
            	Uploads the file or stream specified by the request.  
            	To track the progress of the upload,
            	add an event listener to the request's <c>UploadProgressEvent</c>.
            	For large uploads, the file will be divided and uploaded in parts using 
            	Amazon S3's multipart API.  The parts will be reassembled as one object in
            	Amazon S3.
            </summary>
            <remarks>
            <para>
            If you are uploading large files, TransferUtility will use multipart upload to fulfill the request. 
            If a multipart upload is interrupted, TransferUtility will attempt to abort the multipart upload. 
            Under certain circumstances (network outage, power failure, etc.), TransferUtility will not be able 
            to abort the multipart upload. In this case, in order to stop getting charged for the storage of uploaded parts,
            you should manually invoke TransferUtility.AbortMultipartUploadsAsync() to abort the incomplete multipart uploads.
            </para>
            </remarks>
            <param name="request">
            	Contains all the parameters required to upload to Amazon S3.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.AbortMultipartUploadsAsync(System.String,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            	Aborts the multipart uploads that were initiated before the specified date.
            </summary>
            <param name="bucketName">
            	The name of the bucket containing multipart uploads.
            </param>
            <param name="initiatedDate">
            	The date before which the multipart uploads were initiated.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.DownloadAsync(Amazon.S3.Transfer.TransferUtilityDownloadRequest,System.Threading.CancellationToken)">
            <summary>
            	Downloads the content from Amazon S3 and writes it to the specified file.    
            	If the key is not specified in the request parameter,
            	the file name will used as the key name.
            </summary>
            <param name="request">
            	Contains all the parameters required to download an Amazon S3 object.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.OpenStreamAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            	Returns a stream from which the caller can read the content from the specified
            	Amazon S3  bucket and key.
            	The caller of this method is responsible for closing the stream.
            </summary>
            <param name="bucketName">
            	The name of the bucket.
            </param>
            <param name="key">
            	The object key.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.OpenStreamAsync(Amazon.S3.Transfer.TransferUtilityOpenStreamRequest,System.Threading.CancellationToken)">
            <summary>
            	Returns a stream to read the contents from Amazon S3 as 
            	specified by the <c>TransferUtilityOpenStreamRequest</c>.
            	The caller of this method is responsible for closing the stream.
            </summary>
            <param name="request">
            	Contains all the parameters required for the OpenStream operation.
            </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.#ctor(System.String,System.String)">
            <summary>
            	Constructs a new <see cref="T:Amazon.S3.Transfer.TransferUtility"/> class.
            </summary>
            <param name="awsAccessKeyId">
            	The AWS Access Key ID.
            </param>
            <param name="awsSecretAccessKey">
            	The AWS Secret Access Key.
            </param>
            <remarks>
            <para>
            If a Timeout needs to be specified, use the constructor which takes an <see cref="T:Amazon.S3.AmazonS3Client"/> as a paramater.
            Use an instance of <see cref="T:Amazon.S3.AmazonS3Client"/> constructed with an <see cref="T:Amazon.S3.AmazonS3Config"/> object with the Timeout specified. 
            </para>        
            </remarks>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            	Constructs a new <see cref="T:Amazon.S3.Transfer.TransferUtility"/> class.
            </summary>
            <param name="awsAccessKeyId">
            	The AWS Access Key ID.
            </param>
            <param name="awsSecretAccessKey">
            	The AWS Secret Access Key.
            </param>
            <param name="region">
                The region to configure the transfer utility for.
            </param>
            <remarks>
            <para>
            If a Timeout needs to be specified, use the constructor which takes an <see cref="T:Amazon.S3.AmazonS3Client"/> as a paramater.
            Use an instance of <see cref="T:Amazon.S3.AmazonS3Client"/> constructed with an <see cref="T:Amazon.S3.AmazonS3Config"/> object with the Timeout specified. 
            </para>        
            </remarks>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.#ctor(System.String,System.String,Amazon.S3.Transfer.TransferUtilityConfig)">
            <summary>
            	Constructs a new instance of the <see cref="T:Amazon.S3.Transfer.TransferUtility"/> class.
            </summary>
            <param name="awsAccessKeyId">
            	The AWS Access Key ID.
            </param>
            <param name="awsSecretAccessKey">
            	The AWS Secret Access Key.
            </param>
            <param name="config">
            	Specifies advanced settings.
            </param>
            <remarks>
            <para>
            If a Timeout needs to be specified, use the constructor which takes an <see cref="T:Amazon.S3.AmazonS3Client"/> as a paramater.
            Use an instance of <see cref="T:Amazon.S3.AmazonS3Client"/> constructed with an <see cref="T:Amazon.S3.AmazonS3Config"/> object with the Timeout specified. 
            </para>        
            </remarks>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.#ctor(System.String,System.String,Amazon.RegionEndpoint,Amazon.S3.Transfer.TransferUtilityConfig)">
            <summary>
            	Constructs a new instance of the <see cref="T:Amazon.S3.Transfer.TransferUtility"/> class.
            </summary>
            <param name="awsAccessKeyId">
            	The AWS Access Key ID.
            </param>
            <param name="awsSecretAccessKey">
            	The AWS Secret Access Key.
            </param>
            <param name="region">
                The region to configure the transfer utility for.
            </param>
            <param name="config">
            	Specifies advanced settings.
            </param>
            <remarks>
            <para>
            If a Timeout needs to be specified, use the constructor which takes an <see cref="T:Amazon.S3.AmazonS3Client"/> as a paramater.
            Use an instance of <see cref="T:Amazon.S3.AmazonS3Client"/> constructed with an <see cref="T:Amazon.S3.AmazonS3Config"/> object with the Timeout specified. 
            </para>        
            </remarks>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.#ctor(Amazon.S3.IAmazonS3)">
            <summary>
            	Constructs a new instance of the <see cref="T:Amazon.S3.Transfer.TransferUtility"/> class.
            </summary>
            <param name="s3Client">
            	The Amazon S3 client.
            </param>
            <remarks>
            <para>
            If a Timeout needs to be specified, use the constructor which takes an <see cref="T:Amazon.S3.AmazonS3Client"/> as a paramater.
            Use an instance of <see cref="T:Amazon.S3.AmazonS3Client"/> constructed with an <see cref="T:Amazon.S3.AmazonS3Config"/> object with the Timeout specified. 
            </para>        
            </remarks>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.#ctor(Amazon.S3.IAmazonS3,Amazon.S3.Transfer.TransferUtilityConfig)">
            <summary>
            	Initializes a new instance of the <see cref="T:Amazon.S3.Transfer.TransferUtility"/> class.
            </summary>
            <param name="s3Client">
            	The Amazon S3 client.
            </param>
            <param name="config">
            	Specifies advanced configuration settings for <see cref="T:Amazon.S3.Transfer.TransferUtility"/>.
            </param>
            <remarks>
            <para>
            If a Timeout needs to be specified, use the constructor which takes an <see cref="T:Amazon.S3.AmazonS3Client"/> as a paramater.
            Use an instance of <see cref="T:Amazon.S3.AmazonS3Client"/> constructed with an <see cref="T:Amazon.S3.AmazonS3Config"/> object with the Timeout specified. 
            </para>        
            </remarks>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtility.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtility.S3Client">
            <summary>
            	Gets the Amazon S3 client used for making calls into Amazon S3.
            </summary>
            <value>
            	The Amazon S3 client used for making calls into Amazon S3.
            </value>
        </member>
        <member name="T:Amazon.S3.Transfer.TransferUtilityConfig">
            <summary>
            	<para>
            	Provides configuration options for how <see cref="T:Amazon.S3.Transfer.TransferUtility"/> processes requests.
            	</para>
            	<para>
            	The best configuration settings depend on network
            	configuration, latency and bandwidth. 
            	The default configuration settings are suitable
            	for most applications, but this class enables developers to experiment with
            	different configurations and tune transfer manager performance.
            	</para>
            </summary>
        </member>
        <member name="M:Amazon.S3.Transfer.TransferUtilityConfig.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityConfig.MinSizeBeforePartUpload">
            <summary>
            Gets or sets the minimum part size for upload parts in bytes. The default is 16 MB.
            Decreasing the minimum part size causes 
            multipart uploads to be split into a larger number
            of smaller parts. Setting this value too low has a negative effect
            on transfer speeds, causing extra latency and network
            communication for each part.
            </summary>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityConfig.ConcurrentServiceRequests">
            <summary>
            This property determines how many active threads
            or the number of concurrent asynchronous web requests 
            will be used to upload/download the file .
            The default value is 10.
            </summary>
            <remarks>
            	A value less than or equal to 0 will be silently ignored.
            </remarks>
        </member>
        <member name="P:Amazon.S3.Transfer.TransferUtilityConfig.NumberOfUploadThreads">
            <summary>
            	Gets or sets the number of executing threads.
            	This property determines how many active threads will be used to upload 
            	the file. The default value is 10 threads.
            </summary>
            <remarks>
            	A value less than or equal to 0 will be silently ignored.
            </remarks>
        </member>
        <member name="T:Amazon.S3.Transfer.TransferUtilityOpenStreamRequest">
            <summary>
            Contains all the parameters
            that can be set when making a this request with the 
            <c>TransferUtility</c> method.
            </summary>
        </member>
        <member name="T:Amazon.S3.Transfer.UploadProgressArgs">
            <summary>
            Encapsulates the information needed to provide
            transfer progress to subscribers of the Put Object
            Event.
            </summary>
        </member>
        <member name="M:Amazon.S3.Transfer.UploadProgressArgs.#ctor(System.Int64,System.Int64,System.Int64)">
            <summary>
            The constructor takes the number of
            currently transferred bytes and the
            total number of bytes to be transferred
            </summary>
            <param name="incrementTransferred">The how many bytes were transferred since last event.</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
        </member>
        <member name="M:Amazon.S3.Transfer.UploadProgressArgs.#ctor(System.Int64,System.Int64,System.Int64,System.String)">
            <summary>
            The constructor takes the number of
            currently transferred bytes and the
            total number of bytes to be transferred
            </summary>
            <param name="incrementTransferred">The how many bytes were transferred since last event.</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>        
            <param name="filePath">The file being uploaded</param>
        </member>
        <member name="M:Amazon.S3.Transfer.UploadProgressArgs.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.String)">
            <summary>
            The constructor takes the number of
            currently transferred bytes and the
            total number of bytes to be transferred
            </summary>
            <param name="incrementTransferred">The how many bytes were transferred since last event.</param>
            <param name="transferred">The number of bytes transferred</param>
            <param name="total">The total number of bytes to be transferred</param>
            <param name="compensationForRetry">A compensation for any upstream aggregators if this event to correct theit totalTransferred count,
            in case the underlying request is retried.</param>
            <param name="filePath">The file being uploaded</param>
        </member>
        <member name="T:Amazon.S3.Util.AmazonS3Util">
            <summary>
            Provides utilities used by the Amazon S3 client implementation.
            These utilities might be useful to consumers of the Amazon S3
            library.
            </summary>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.MimeTypeFromExtension(System.String)">
            <summary>
            Determines MIME type from a file extension
            </summary>
            <param name="ext">The extension of the file</param>
            <returns>The MIME type for the extension, or text/plain</returns>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.UrlEncode(System.String,System.Boolean)">
            <summary>
            URL encodes a string. If the path property is specified,
            the accepted path characters {/+:} are not encoded.
            </summary>
            <param name="data">The string to encode</param>
            <param name="path">Whether the string is a URL path or not</param>
            <returns></returns>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.MakeStreamSeekable(System.IO.Stream)">
            <summary>
            Converts a non-seekable stream into a System.IO.MemoryStream.
            A MemoryStream's position can be moved arbitrarily
            </summary>
            <param name="input">The stream to be converted</param>
            <returns>A seekable MemoryStream</returns>
            <remarks>MemoryStreams use byte arrays as their backing store.
            Please use this judicially as it is likely that a very large
            stream will cause system resources to be used up.
            </remarks>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.GenerateChecksumForContent(System.String,System.Boolean)">
            <summary>
            Generates an MD5 Digest for the string-based content
            </summary>
            <param name="content">The content for which the MD5 Digest needs
            to be computed.
            </param>
            <param name="fBase64Encode">Whether the returned checksum should be
            base64 encoded.
            </param>
            <returns>A string representation of the hash with or w/o base64 encoding
            </returns>
        </member>
        <member name="M:Amazon.S3.Util.AmazonS3Util.ValidateV2Bucket(System.String)">
            <summary>
            Version2 S3 buckets adhere to RFC 1035:
            <list type="number">
            <item>Less than 255 characters, with each label less than 63 characters.</item>
            <item>Label must start with a letter</item>
            <item>Label must end with a letter or digit</item>
            <item>Label can have a string of letter, digits and hyphens in the middle.</item>
            <item>Although names can be case-sensitive, no significance is attached to the case.</item>
            <item>RFC 1123: Allow label to start with letter or digit (e.g. 3ware.com works)</item>
            <item>RFC 2181: No restrictions apart from the length restrictions.</item>
            </list>
            S3 V2 will start with RFCs 1035 and 1123 and impose the following additional restrictions:
            <list type="number">
            <item>Length between 3 and 63 characters (to allow headroom for upper-level domains,
                as well as to avoid separate length restrictions for bucket-name and its labels</item>
            <item>Only lower-case to avoid user confusion.</item>
            <item>No dotted-decimal IPv4-like strings</item>
            </list>
            </summary>
            <param name="bucketName">The BucketName to validate if V2 addressing should be used</param>
            <returns>True if the BucketName should use V2 bucket addressing, false otherwise</returns>
            <seealso href="http://docs.amazonwebservices.com/AmazonS3/2006-03-01/dev/index.html?BucketRestrictions.html">
            S3 v2 Bucket restrictions</seealso>
        </member>
        <member name="P:Amazon.S3.Util.AmazonS3Util.FormattedCurrentTimestamp">
            <summary>
            Formats the current date as a GMT timestamp
            </summary>
            <returns>A GMT formatted string representation
            of the current date and time
            </returns>
        </member>
        <member name="T:Amazon.SecurityToken.AmazonSecurityTokenServiceClient">
             <summary>
             Implementation for accessing SecurityTokenService
            
             AWS Security Token Service    
             <para>
             The AWS Security Token Service (STS) is a web service that enables you to request
             temporary,      limited-privilege credentials for AWS Identity and Access Management
             (IAM) users or for users that you authenticate      (federated users). This guide
             provides descriptions of the STS API. For more detailed      information about using
             this service, go to <a href="http://docs.aws.amazon.com/IAM/latest/UsingSTS/Welcome.html"
             target="_blank">Using        Temporary Security Credentials</a>. 
             </para>
                 <note> As an alternative to using the API, you can use one of the AWS SDKs, which
             consist of      libraries and sample code for various programming languages and platforms
             (Java, Ruby, .NET,      iOS, Android, etc.). The SDKs provide a convenient way to
             create programmatic access to      STS. For example, the SDKs take care of cryptographically
             signing requests, managing      errors, and retrying requests automatically. For information
             about the AWS SDKs, including how      to download and install them, see the <a href="http://aws.amazon.com/tools/">Tools
             for Amazon        Web Services page</a>. </note>    
             <para>
             For information about setting up signatures and authorization through the API, go
             to <a href="http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html"
             target="_blank">Signing AWS API Requests</a> in the <i>AWS General Reference</i>.
             For      general information about the Query API, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html"
             target="_blank">Making Query Requests</a> in <i>Using IAM</i>. For information about
             using      security tokens with other AWS products, go to <a href="http://docs.aws.amazon.com/IAM/latest/UsingSTS/UsingTokens.html">Using
             Temporary        Security Credentials to Access AWS</a> in <i>Using Temporary Security
             Credentials</i>. 
             </para>
                 
             <para>
             If you're new to AWS and need additional technical information about a specific AWS
             product,      you can find the product's technical documentation at <a href="http://aws.amazon.com/documentation/"
             target="_blank">http://aws.amazon.com/documentation/</a>. 
             </para>
                 
             <para>
                   <b>Endpoints</b>    
             </para>
                 
             <para>
             For information about STS endpoints, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#sts_region"
             target="_blank">Regions and Endpoints</a> in the <i>AWS General Reference</i>.
             </para>
                 
             <para>
                   <b>Recording API requests</b>    
             </para>
                 
             <para>
             STS supports AWS CloudTrail, which is a service that records AWS calls for your AWS
                  account and delivers log files to an Amazon S3 bucket. By using information collected
             by      CloudTrail, you can determine what requests were successfully made to STS,
             who made the      request, when it was made, and so on. To learn more about CloudTrail,
             including how to turn it      on and find your log files, see the <a href="http://docs.aws.amazon.com/awscloudtrail/latest/userguide/whatisawscloudtrail.html">AWS
                    CloudTrail User Guide</a>.
             </para>
             </summary>
        </member>
        <member name="T:Amazon.SecurityToken.IAmazonSecurityTokenService">
             <summary>
             Interface for accessing SecurityTokenService
            
             AWS Security Token Service    
             <para>
             The AWS Security Token Service (STS) is a web service that enables you to request
             temporary,      limited-privilege credentials for AWS Identity and Access Management
             (IAM) users or for users that you authenticate      (federated users). This guide
             provides descriptions of the STS API. For more detailed      information about using
             this service, go to <a href="http://docs.aws.amazon.com/IAM/latest/UsingSTS/Welcome.html"
             target="_blank">Using        Temporary Security Credentials</a>. 
             </para>
                 <note> As an alternative to using the API, you can use one of the AWS SDKs, which
             consist of      libraries and sample code for various programming languages and platforms
             (Java, Ruby, .NET,      iOS, Android, etc.). The SDKs provide a convenient way to
             create programmatic access to      STS. For example, the SDKs take care of cryptographically
             signing requests, managing      errors, and retrying requests automatically. For information
             about the AWS SDKs, including how      to download and install them, see the <a href="http://aws.amazon.com/tools/">Tools
             for Amazon        Web Services page</a>. </note>    
             <para>
             For information about setting up signatures and authorization through the API, go
             to <a href="http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html"
             target="_blank">Signing AWS API Requests</a> in the <i>AWS General Reference</i>.
             For      general information about the Query API, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html"
             target="_blank">Making Query Requests</a> in <i>Using IAM</i>. For information about
             using      security tokens with other AWS products, go to <a href="http://docs.aws.amazon.com/IAM/latest/UsingSTS/UsingTokens.html">Using
             Temporary        Security Credentials to Access AWS</a> in <i>Using Temporary Security
             Credentials</i>. 
             </para>
                 
             <para>
             If you're new to AWS and need additional technical information about a specific AWS
             product,      you can find the product's technical documentation at <a href="http://aws.amazon.com/documentation/"
             target="_blank">http://aws.amazon.com/documentation/</a>. 
             </para>
                 
             <para>
                   <b>Endpoints</b>    
             </para>
                 
             <para>
             For information about STS endpoints, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#sts_region"
             target="_blank">Regions and Endpoints</a> in the <i>AWS General Reference</i>.
             </para>
                 
             <para>
                   <b>Recording API requests</b>    
             </para>
                 
             <para>
             STS supports AWS CloudTrail, which is a service that records AWS calls for your AWS
                  account and delivers log files to an Amazon S3 bucket. By using information collected
             by      CloudTrail, you can determine what requests were successfully made to STS,
             who made the      request, when it was made, and so on. To learn more about CloudTrail,
             including how to turn it      on and find your log files, see the <a href="http://docs.aws.amazon.com/awscloudtrail/latest/userguide/whatisawscloudtrail.html">AWS
                    CloudTrail User Guide</a>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.SecurityToken.IAmazonSecurityTokenService.AssumeRoleAsync(Amazon.SecurityToken.Model.AssumeRoleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssumeRole operation.
            <seealso cref="T:Amazon.SecurityToken.IAmazonSecurityTokenService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssumeRole operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.IAmazonSecurityTokenService.AssumeRoleWithSAMLAsync(Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssumeRoleWithSAML operation.
            <seealso cref="T:Amazon.SecurityToken.IAmazonSecurityTokenService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssumeRoleWithSAML operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.IAmazonSecurityTokenService.AssumeRoleWithWebIdentityAsync(Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssumeRoleWithWebIdentity operation.
            <seealso cref="T:Amazon.SecurityToken.IAmazonSecurityTokenService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssumeRoleWithWebIdentity operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.IAmazonSecurityTokenService.DecodeAuthorizationMessageAsync(Amazon.SecurityToken.Model.DecodeAuthorizationMessageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DecodeAuthorizationMessage operation.
            <seealso cref="T:Amazon.SecurityToken.IAmazonSecurityTokenService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DecodeAuthorizationMessage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.IAmazonSecurityTokenService.GetFederationTokenAsync(Amazon.SecurityToken.Model.GetFederationTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetFederationToken operation.
            <seealso cref="T:Amazon.SecurityToken.IAmazonSecurityTokenService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetFederationToken operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.IAmazonSecurityTokenService.GetSessionTokenAsync(Amazon.SecurityToken.Model.GetSessionTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetSessionToken operation.
            <seealso cref="T:Amazon.SecurityToken.IAmazonSecurityTokenService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSessionToken operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonSecurityTokenServiceClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSecurityTokenServiceClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.SecurityToken.AmazonSecurityTokenServiceConfig)">
            <summary>
            Constructs AmazonSecurityTokenServiceClient with AWS Credentials and an
            AmazonSecurityTokenServiceClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonSecurityTokenServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonSecurityTokenServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSecurityTokenServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor(System.String,System.String,Amazon.SecurityToken.AmazonSecurityTokenServiceConfig)">
            <summary>
            Constructs AmazonSecurityTokenServiceClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSecurityTokenServiceClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonSecurityTokenServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonSecurityTokenServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSecurityTokenServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.#ctor(System.String,System.String,System.String,Amazon.SecurityToken.AmazonSecurityTokenServiceConfig)">
            <summary>
            Constructs AmazonSecurityTokenServiceClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSecurityTokenServiceClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonSecurityTokenServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.AssumeRoleAsync(Amazon.SecurityToken.Model.AssumeRoleRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssumeRole operation.
            <seealso cref="T:Amazon.SecurityToken.IAmazonSecurityTokenService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssumeRole operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.AssumeRoleWithSAMLAsync(Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssumeRoleWithSAML operation.
            <seealso cref="T:Amazon.SecurityToken.IAmazonSecurityTokenService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssumeRoleWithSAML operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.AssumeRoleWithWebIdentityAsync(Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssumeRoleWithWebIdentity operation.
            <seealso cref="T:Amazon.SecurityToken.IAmazonSecurityTokenService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssumeRoleWithWebIdentity operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.DecodeAuthorizationMessageAsync(Amazon.SecurityToken.Model.DecodeAuthorizationMessageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DecodeAuthorizationMessage operation.
            <seealso cref="T:Amazon.SecurityToken.IAmazonSecurityTokenService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DecodeAuthorizationMessage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.GetFederationTokenAsync(Amazon.SecurityToken.Model.GetFederationTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetFederationToken operation.
            <seealso cref="T:Amazon.SecurityToken.IAmazonSecurityTokenService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetFederationToken operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceClient.GetSessionTokenAsync(Amazon.SecurityToken.Model.GetSessionTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetSessionToken operation.
            <seealso cref="T:Amazon.SecurityToken.IAmazonSecurityTokenService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSessionToken operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.SecurityToken.AmazonSecurityTokenServiceConfig">
            <summary>
            Configuration for accessing Amazon SecurityTokenService service
            </summary>
        </member>
        <member name="M:Amazon.SecurityToken.AmazonSecurityTokenServiceConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.AmazonSecurityTokenServiceConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.AmazonSecurityTokenServiceConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.AmazonSecurityTokenServiceRequest">
            <summary>
            Base class for SecurityTokenService operation requests.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.AssumedRoleUser">
            <summary>
            The identifiers for the temporary security credentials that the operation returns.
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumedRoleUser.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN of the temporary security credentials that are returned from the <a>AssumeRole</a>
                 action. For more information about ARNs and how to use them in policies, see
            <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html" target="_blank">
            Identifiers for IAM Entities </a> in <i>Using IAM</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumedRoleUser.AssumedRoleId">
            <summary>
            Gets and sets the property AssumedRoleId. 
            <para>
            A unique identifier that contains the role ID and the role session name of the role
            that is      being assumed. The role ID is generated by AWS when the role is created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.AssumeRoleRequest">
            <summary>
            Container for the parameters to the AssumeRole operation.
            Returns a set of temporary security credentials (consisting of an access key ID, a
            secret      access key, and a security token) that you can use to access AWS resources
            that you might not      normally have access to. Typically, you use <code>AssumeRole</code>
            for cross-account access      or federation. 
            
                
            <para>
            <b>Important:</b> You cannot call <code>AssumeRole</code> by using AWS account credentials;
                 access will be denied. You must use IAM user credentials or temporary security
            credentials      to call <code>AssumeRole</code>. 
            </para>
                
            <para>
            For cross-account access, imagine that you own multiple accounts and need to access
            resources      in each account. You could create long-term credentials in each account
            to access those      resources. However, managing all those credentials and remembering
            which one can access which      account can be time consuming. Instead, you can create
            one set of long-term credentials in one      account and then use temporary security
            credentials to access all the other accounts by      assuming roles in those accounts.
            For more information about roles, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Roles</a>
            in        <i>Using IAM</i>. 
            </para>
                
            <para>
            For federation, you can, for example, grant single sign-on access to the AWS Management
                 Console. If you already have an identity and authentication system in your corporate
            network,      you don't have to recreate user identities in AWS in order to grant
            those user identities      access to AWS. Instead, after a user has been authenticated,
            you call <code>AssumeRole</code>      (and specify the role with the appropriate permissions)
            to get temporary security credentials      for that user. With those temporary security
            credentials, you construct a sign-in URL that      users can use to access the console.
            For more information, see <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/STSUseCases.html">Scenarios
            for        Granting Temporary Access</a> in <i>Using Temporary Security Credentials</i>.
            
            </para>
                
            <para>
            The temporary security credentials are valid for the duration that you specified when
            calling        <code>AssumeRole</code>, which can be from 900 seconds (15 minutes)
            to 3600 seconds (1      hour). The default is 1 hour. 
            </para>
                
            <para>
            Optionally, you can pass an IAM access policy to this operation. If you choose not
            to pass      a policy, the temporary security credentials that are returned by the
            operation have the      permissions that are defined in the access policy of the role
            that is being assumed. If you      pass a policy to this operation, the temporary
            security credentials that are returned by the      operation have the permissions
            that are allowed by both the access policy of the role that is      being assumed,
            <i><b>and</b></i> the policy that you pass. This gives you a way to further      restrict
            the permissions for the resulting temporary security credentials. You cannot use the
                 passed policy to grant permissions that are in excess of those allowed by the
            access policy of      the role that is being assumed. For more information, see <a
            href="http://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html">Permissions
            for        AssumeRole</a> in <i>Using Temporary Security Credentials</i>.
            </para>
                
            <para>
            To assume a role, your AWS account must be trusted by the role. The trust relationship
            is      defined in the role's trust policy when the role is created. You must also
            have a policy that      allows you to call <code>sts:AssumeRole</code>. 
            </para>
                
            <para>
                  <b>Using MFA with AssumeRole</b>    
            </para>
                
            <para>
            You can optionally include multi-factor authentication (MFA) information when you
            call        <code>AssumeRole</code>. This is useful for cross-account scenarios in
            which you want to      make sure that the user who is assuming the role has been authenticated
            using an AWS MFA      device. In that scenario, the trust policy of the role being
            assumed includes a condition that      tests for MFA authentication; if the caller
            does not include valid MFA information, the      request to assume the role is denied.
            The condition in a trust policy that tests for MFA      authentication might look
            like the following example.
            </para>
                
            <para>
                  <code>"Condition": {"Null": {"aws:MultiFactorAuthAge": false}}</code>    
            </para>
                
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/MFAProtectedAPI.html">Configuring
                   MFA-Protected API Access</a> in the <i>Using IAM</i> guide. 
            </para>
                
            <para>
            To use MFA with <code>AssumeRole</code>, you pass values for the <code>SerialNumber</code>
                 and <code>TokenCode</code> parameters. The <code>SerialNumber</code> value identifies
            the      user's hardware or virtual MFA device. The <code>TokenCode</code> is the
            time-based one-time      password (TOTP) that the MFA devices produces. 
            </para>
                <member name="RoleArn" target="arnType"></member>    <member name="RoleSessionName"
            target="userNameType"></member>    <member name="Policy" target="sessionPolicyDocumentType"></member>
               <member name="DurationSeconds" target="roleDurationSecondsType"></member>    <member
            name="ExternalId" target="externalIdType"></member>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleRequest.DurationSeconds">
            <summary>
            Gets and sets the property DurationSeconds. 
            <para>
            The duration, in seconds, of the role session. The value can range from 900 seconds
            (15      minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleRequest.ExternalId">
            <summary>
            Gets and sets the property ExternalId. 
            <para>
            A unique identifier that is used by third parties to assume a role in their customers'
                 accounts. For each role that the third party can assume, they should instruct
            their customers      to create a role with the external ID that the third party generated.
            Each time the third      party assumes the role, they must pass the customer's external
            ID. The external ID is useful      in order to help third parties bind a role to the
            customer who created it. For more      information about the external ID, see <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/sts-delegating-externalid.html"
            target="_blank">About the External ID</a> in <i>Using Temporary Security Credentials</i>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleRequest.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            An IAM policy in JSON format.
            </para>
                
            <para>
            The policy parameter is optional. If you pass a policy, the temporary security credentials
                 that are returned by the operation have the permissions that are allowed by both
            the access      policy of the role that is being assumed, <i><b>and</b></i> the policy
            that you pass. This      gives you a way to further restrict the permissions for the
            resulting temporary security      credentials. You cannot use the passed policy to
            grant permissions that are in excess of those      allowed by the access policy of
            the role that is being assumed. For more information, see <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html">Permissions
            for        AssumeRole</a> in <i>Using Temporary Security Credentials</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the role that the caller is assuming.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleRequest.RoleSessionName">
            <summary>
            Gets and sets the property RoleSessionName. 
            <para>
            An identifier for the assumed role session. The session name is included as part of
            the        <code>AssumedRoleUser</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleRequest.SerialNumber">
            <summary>
            Gets and sets the property SerialNumber. 
            <para>
            The identification number of the MFA device that is associated with the user who is
            making      the <code>AssumeRole</code> call. Specify this value if the trust policy
            of the role being      assumed includes a condition that requires MFA authentication.
            The value is either the serial      number for a hardware device (such as <code>GAHT12345678</code>)
            or an Amazon Resource Name      (ARN) for a virtual device (such as <code>arn:aws:iam::123456789012:mfa/user</code>).
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleRequest.TokenCode">
            <summary>
            Gets and sets the property TokenCode. 
            <para>
            The value provided by the MFA device, if the trust policy of the role being assumed
            requires      MFA (that is, if the policy includes a condition that tests for MFA).
            If the role being      assumed requires MFA and if the <code>TokenCode</code> value
            is missing or expired, the        <code>AssumeRole</code> call returns an "access
            denied" error. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.AssumeRoleResponse">
            <summary>
            Configuration for accessing Amazon AssumeRole service
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.AssumeRoleResult">
            <summary>
            Contains the result of a successful call to the <a>AssumeRole</a> action, including
                 temporary AWS credentials that can be used to make AWS requests.
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleResult.AssumedRoleUser">
            <summary>
            Gets and sets the property AssumedRoleUser. 
            <para>
            The Amazon Resource Name (ARN) and the assumed role ID, which are identifiers that
            you can      use to refer to the resulting temporary security credentials. For example,
            you can reference      these credentials as a principal in a resource-based policy
            by using the ARN or assumed role      ID. The ARN and ID include the <code>RoleSessionName</code>
            that you specified when you called        <code>AssumeRole</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleResult.Credentials">
            <summary>
            Gets and sets the property Credentials. 
            <para>
            The temporary security credentials, which include an access key ID, a secret access
            key, and      a security (or session) token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleResult.PackedPolicySize">
            <summary>
            Gets and sets the property PackedPolicySize. 
            <para>
            A percentage value that indicates the size of the policy in packed form. The service
            rejects      any policy with a packed size greater than 100 percent, which means the
            policy exceeded the      allowed space. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleResponse.AssumeRoleResult">
            <summary>
            Gets and sets the AssumeRoleResult property.
            Represents the output of a AssumeRole operation.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest">
            <summary>
            Container for the parameters to the AssumeRoleWithSAML operation.
            Returns a set of temporary security credentials for users who have been authenticated
            via a      SAML authentication response. This operation provides a mechanism for tying
            an enterprise      identity store or directory to role-based AWS access without user-specific
            credentials or      configuration. 
            
                
            <para>
            The temporary security credentials returned by this operation consist of an access
            key ID, a      secret access key, and a security token. Applications can use these
            temporary security      credentials to sign calls to AWS services. The credentials
            are valid for the duration that you      specified when calling <code>AssumeRoleWithSAML</code>,
            which can be up to 3600 seconds (1      hour) or until the time specified in the SAML
            authentication response's        <code>NotOnOrAfter</code> value, whichever is shorter.
            </para>
                <note>The maximum duration for a session is 1 hour, and the minimum duration is
            15 minutes, even      if values outside this range are specified. </note>
            <para>
            Optionally, you can pass an IAM access policy to this operation. If you choose not
            to pass a      policy, the temporary security credentials that are returned by the
            operation have the      permissions that are defined in the access policy of the role
            that is being assumed. If you      pass a policy to this operation, the temporary
            security credentials that are returned by the      operation have the permissions
            that are allowed by both the access policy of the role that is      being assumed,
            <i><b>and</b></i> the policy that you pass. This gives you a way to further      restrict
            the permissions for the resulting temporary security credentials. You cannot use the
                 passed policy to grant permissions that are in excess of those allowed by the
            access policy of      the role that is being assumed. For more information, see <a
            href="http://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html">Permissions
            for        AssumeRoleWithSAML</a> in <i>Using Temporary Security Credentials</i>.
            </para>
                
            <para>
            Before your application can call <code>AssumeRoleWithSAML</code>, you must configure
            your      SAML identity provider (IdP) to issue the claims required by AWS. Additionally,
            you must use      AWS Identity and Access Management (IAM) to create a SAML provider
            entity in your AWS account that represents your      identity provider, and create
            an IAM role that specifies this SAML provider in its trust      policy. 
            </para>
                
            <para>
            Calling <code>AssumeRoleWithSAML</code> does not require the use of AWS security 
                credentials. The identity of the caller is validated by using keys in the metadata
            document      that is uploaded for the SAML provider entity for your identity provider.
            
            </para>
                
            <para>
            For more information, see the following resources:
            </para>
                <ul>      <li><a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingSAML.html">Creating
            Temporary Security Credentials for SAML          Federation</a> in <i>Using Temporary
            Security Credentials</i>. </li>      <li>        <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/idp-managing-identityproviders.html">SAML
            Providers</a> in          <i>Using IAM</i>. </li>      <li>        <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html">Configuring
            a Relying Party and          Claims</a> in <i>Using IAM</i>. </li>      <li>     
              <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml.html">Creating
            a Role for SAML-Based Federation</a>        in <i>Using IAM</i>. </li>    </ul>  
             <member name="RoleArn" target="arnType"></member>    <member name="SAMLAssertion"
            target="SAMLAssertionType"></member>    <member name="Policy" target="sessionPolicyDocumentType"></member>
               <member name="DurationSeconds" target="roleDurationSecondsType"></member>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest.DurationSeconds">
            <summary>
            Gets and sets the property DurationSeconds. 
            <para>
            The duration, in seconds, of the role session. The value can range from 900 seconds
            (15      minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds.
            An expiration      can also be specified in the SAML authentication response's <code>NotOnOrAfter</code>
            value.      The actual expiration time is whichever value is shorter. 
            </para>
                <note>The maximum duration for a session is 1 hour, and the minimum duration is
            15 minutes, even      if values outside this range are specified. </note>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            An IAM policy in JSON format.
            </para>
                
            <para>
            The policy parameter is optional. If you pass a policy, the temporary security credentials
                 that are returned by the operation have the permissions that are allowed by both
            the access      policy of the role that is being assumed, <i><b>and</b></i> the policy
            that you pass. This      gives you a way to further restrict the permissions for the
            resulting temporary security      credentials. You cannot use the passed policy to
            grant permissions that are in excess of those      allowed by the access policy of
            the role that is being assumed. For more information, see <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html">Permissions
            for        AssumeRoleWithSAML</a> in <i>Using Temporary Security Credentials</i>.
            
            </para>
                <note>The policy must be 2048 bytes or shorter, and its packed size must be less
            than 450      bytes.</note>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest.PrincipalArn">
            <summary>
            Gets and sets the property PrincipalArn. 
            <para>
            The Amazon Resource Name (ARN) of the SAML provider in IAM that describes the IdP.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the role that the caller is assuming.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLRequest.SAMLAssertion">
            <summary>
            Gets and sets the property SAMLAssertion. 
            <para>
            The base-64 encoded SAML authentication response provided by the IdP.
            </para>
                
            <para>
            For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html">Configuring
                   a Relying Party and Adding Claims</a> in the <i>Using IAM</i> guide. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.AssumeRoleWithSAMLResponse">
            <summary>
            Configuration for accessing Amazon AssumeRoleWithSAML service
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.AssumeRoleWithSAMLResult">
            <summary>
            Contains the result of a successful call to the <a>AssumeRoleWithSAML</a> action,
            including      temporary AWS credentials that can be used to make AWS requests.
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLResult.AssumedRoleUser">
            <summary>
            Gets and sets the property AssumedRoleUser.
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLResult.Audience">
            <summary>
            Gets and sets the property Audience.
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLResult.Credentials">
            <summary>
            Gets and sets the property Credentials.
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLResult.Issuer">
            <summary>
            Gets and sets the property Issuer.
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLResult.NameQualifier">
            <summary>
            Gets and sets the property NameQualifier.
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLResult.PackedPolicySize">
            <summary>
            Gets and sets the property PackedPolicySize. 
            <para>
            A percentage value that indicates the size of the policy in packed form. The service
            rejects      any policy with a packed size greater than 100 percent, which means the
            policy exceeded the      allowed space. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLResult.Subject">
            <summary>
            Gets and sets the property Subject.
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLResult.SubjectType">
            <summary>
            Gets and sets the property SubjectType.
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithSAMLResponse.AssumeRoleWithSAMLResult">
            <summary>
            Gets and sets the AssumeRoleWithSAMLResult property.
            Represents the output of a AssumeRoleWithSAML operation.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest">
            <summary>
            Container for the parameters to the AssumeRoleWithWebIdentity operation.
            Returns a set of temporary security credentials for users who have been authenticated
            in a      mobile or web application with a web identity provider, such as Login with
            Amazon, Facebook,      or Google. 
            
                
            <para>
            Calling <code>AssumeRoleWithWebIdentity</code> does not require the use of AWS security
                 credentials. Therefore, you can distribute an application (for example, on mobile
            devices)      that requests temporary security credentials without including long-term
            AWS credentials in      the application, and without deploying server-based proxy
            services that use long-term AWS      credentials. Instead, the identity of the caller
            is validated by using a token from the web      identity provider. 
            </para>
                
            <para>
            The temporary security credentials returned by this API consist of an access key ID,
            a      secret access key, and a security token. Applications can use these temporary
            security      credentials to sign calls to AWS service APIs. The credentials are valid
            for the duration that      you specified when calling <code>AssumeRoleWithWebIdentity</code>,
            which can be from 900      seconds (15 minutes) to 3600 seconds (1 hour). By default,
            the temporary security credentials      are valid for 1 hour. 
            </para>
                
            <para>
            Optionally, you can pass an IAM access policy to this operation. If you choose not
            to pass      a policy, the temporary security credentials that are returned by the
            operation have the      permissions that are defined in the access policy of the role
            that is being assumed. If you      pass a policy to this operation, the temporary
            security credentials that are returned by the      operation have the permissions
            that are allowed by both the access policy of the role that is      being assumed,
            <i><b>and</b></i> the policy that you pass. This gives you a way to further      restrict
            the permissions for the resulting temporary security credentials. You cannot use the
                 passed policy to grant permissions that are in excess of those allowed by the
            access policy of      the role that is being assumed. For more information, see <a
            href="http://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html">Permissions
            for        AssumeRoleWithWebIdentity</a> in <i>Using Temporary Security Credentials</i>.
            </para>
                
            <para>
            Before your application can call <code>AssumeRoleWithWebIdentity</code>, you must
            have an      identity token from a supported identity provider and create a role that
            the application can      assume. The role that your application assumes must trust
            the identity provider that is      associated with the identity token. In other words,
            the identity provider must be specified in      the role's trust policy. 
            </para>
                
            <para>
            For more information about how to use web identity federation and the        <code>AssumeRoleWithWebIdentity</code>,
            see the following resources: 
            </para>
                <ul>      <li>        <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/STSUseCases.html#MobileApplication-KnownProvider"
            target="_blank"> Creating a Mobile Application with Third-Party Sign-In</a> and <a
            href="http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingWIF.html" target="_blank">
                     Creating Temporary Security Credentials for Mobile Apps Using Third-Party
            Identity          Providers</a> in <i>Using Temporary Security Credentials</i>. </li>
                 <li><a href="https://web-identity-federation-playground.s3.amazonaws.com/index.html"
            target="_blank"> Web Identity Federation Playground</a>. This interactive website
            lets you        walk through the process of authenticating via Login with Amazon,
            Facebook, or Google,        getting temporary security credentials, and then using
            those credentials to make a request        to AWS. </li>      <li><a href="http://aws.amazon.com/sdkforios/">AWS
            SDK for iOS</a> and <a href="http://aws.amazon.com/sdkforandroid/" target="_blank">AWS
            SDK for Android</a>. These        toolkits contain sample apps that show how to invoke
            the identity providers, and then how to        use the information from these providers
            to get and use temporary security credentials. </li>      <li><a href="http://aws.amazon.com/articles/4617974389850313"
            target="_blank">Web Identity          Federation with Mobile Applications</a>. This
            article discusses web identity federation        and shows an example of how to use
            web identity federation to get access to content in        Amazon S3. </li>    </ul>
               <member name="RoleArn" target="arnType"></member>    <member name="RoleSessionName"
            target="userNameType"></member>    <member name="WebIdentityToken" target="clientTokenType"></member>
               <member name="ProviderId" target="urlType"></member>    <member name="Policy" target="sessionPolicyDocumentType"></member>
               <member name="DurationSeconds" target="roleDurationSecondsType"></member>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest.DurationSeconds">
            <summary>
            Gets and sets the property DurationSeconds. 
            <para>
            The duration, in seconds, of the role session. The value can range from 900 seconds
            (15      minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            An IAM policy in JSON format.
            </para>
                
            <para>
            The policy parameter is optional. If you pass a policy, the temporary security credentials
                 that are returned by the operation have the permissions that are allowed by both
            the access      policy of the role that is being assumed, <i><b>and</b></i> the policy
            that you pass. This      gives you a way to further restrict the permissions for the
            resulting temporary security      credentials. You cannot use the passed policy to
            grant permissions that are in excess of those      allowed by the access policy of
            the role that is being assumed. For more information, see <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-assume-role.html">Permissions
            for        AssumeRoleWithWebIdentity</a> in <i>Using Temporary Security Credentials</i>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest.ProviderId">
            <summary>
            Gets and sets the property ProviderId. 
            <para>
            The fully-qualified host component of the domain name of the identity provider. Specify
            this      value only for OAuth access tokens. Do not specify this value for OpenID
            Connect ID tokens,      such as <code>accounts.google.com</code>. Do not include URL
            schemes and port numbers.      Currently, <code>www.amazon.com</code> and <code>graph.facebook.com</code>
            are supported. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the role that the caller is assuming.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest.RoleSessionName">
            <summary>
            Gets and sets the property RoleSessionName. 
            <para>
            An identifier for the assumed role session. Typically, you pass the name or identifier
            that      is associated with the user who is using your application. That way, the
            temporary security      credentials that your application will use are associated
            with that user. This session name is      included as part of the ARN and assumed
            role ID in the <code>AssumedRoleUser</code> response      element. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityRequest.WebIdentityToken">
            <summary>
            Gets and sets the property WebIdentityToken. 
            <para>
            The OAuth 2.0 access token or OpenID Connect ID token that is provided by the identity
                 provider. Your application must get this token by authenticating the user who
            is using your      application with a web identity provider before the application
            makes an        <code>AssumeRoleWithWebIdentity</code> call. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResponse">
            <summary>
            Configuration for accessing Amazon AssumeRoleWithWebIdentity service
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResult">
            <summary>
            Contains the result of a successful call to the <a>AssumeRoleWithWebIdentity</a> action,
                 including temporary AWS credentials that can be used to make AWS requests.
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResult.AssumedRoleUser">
            <summary>
            Gets and sets the property AssumedRoleUser. 
            <para>
            The Amazon Resource Name (ARN) and the assumed role ID, which are identifiers that
            you can      use to refer to the resulting temporary security credentials. For example,
            you can reference      these credentials as a principal in a resource-based policy
            by using the ARN or assumed role      ID. The ARN and ID include the <code>RoleSessionName</code>
            that you specified when you called        <code>AssumeRole</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResult.Audience">
            <summary>
            Gets and sets the property Audience. 
            <para>
             The intended audience of the web identity token. This is traditionally the      
               client identifier issued to the application that requested the web identity token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResult.Credentials">
            <summary>
            Gets and sets the property Credentials. 
            <para>
            The temporary security credentials, which include an access key ID, a secret access
            key, and      a security token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResult.PackedPolicySize">
            <summary>
            Gets and sets the property PackedPolicySize. 
            <para>
            A percentage value that indicates the size of the policy in packed form. The service
            rejects      any policy with a packed size greater than 100 percent, which means the
            policy exceeded the      allowed space. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResult.Provider">
            <summary>
            Gets and sets the property Provider. 
            <para>
             The issuing authority of the web identity token presented. For OpenID Connect ID
            Tokens this contains          the value of the <code>iss</code> field. For OAuth 2.0
            Access Tokens, this contains the value of the          <code>ProviderId</code> parameter
            that was passed in the <code>AssumeRoleWithWebIdentity</code> request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResult.SubjectFromWebIdentityToken">
            <summary>
            Gets and sets the property SubjectFromWebIdentityToken. 
            <para>
            The unique user identifier that is returned by the identity provider. This identifier
            is      associated with the <code>WebIdentityToken</code> that was submitted with
            the        <code>AssumeRoleWithWebIdentity</code> call. The identifier is typically
            unique to the user      and the application that acquired the <code>WebIdentityToken</code>
            (pairwise identifier). If      an OpenID Connect ID token was submitted in the <code>WebIdentityToken</code>,
            this value is      returned by the identity provider as the token's <code>sub</code>
            (Subject) claim. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResponse.AssumeRoleWithWebIdentityResult">
            <summary>
            Gets and sets the AssumeRoleWithWebIdentityResult property.
            Represents the output of a AssumeRoleWithWebIdentity operation.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.Credentials">
            <summary>
            AWS credentials for API authentication.
            </summary>
            <summary>
            <para>AWS credentials for API authentication.</para>
            </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.Credentials.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.Credentials.#ctor(System.String,System.String,System.String,System.DateTime)">
            <summary>
            Instantiates Credentials with the parameterized properties
            </summary>
            <param name="accessKeyId">The access key ID that identifies the temporary security credentials.</param>
            <param name="secretAccessKey">The secret access key that can be used to sign requests.</param>
            <param name="sessionToken">The token that users must pass to the service API to use the temporary credentials.</param>
            <param name="expiration">The date on which the current credentials expire.</param>
        </member>
        <member name="M:Amazon.SecurityToken.Model.Credentials.GetCredentials">
            <summary>
            Returns a copy of ImmutableCredentials corresponding to these credentials
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.SecurityToken.Model.Credentials.AccessKeyId">
            <summary>
            Gets and sets the property AccessKeyId. 
            <para>
            The access key ID that identifies the temporary security credentials.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.Credentials.Expiration">
            <summary>
            Gets and sets the property Expiration. 
            <para>
            The date on which the current credentials expire.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.Credentials.SecretAccessKey">
            <summary>
            Gets and sets the property SecretAccessKey. 
            <para>
            The secret access key that can be used to sign requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.Credentials.SessionToken">
            <summary>
            Gets and sets the property SessionToken. 
            <para>
            The token that users must pass to the service API to use the temporary credentials.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.DecodeAuthorizationMessageRequest">
            <summary>
            Container for the parameters to the DecodeAuthorizationMessage operation.
            Decodes additional information about the authorization status of a request from an
            encoded      message returned in response to an AWS request. 
            
                
            <para>
            For example, if a user is not authorized to perform an action that he or she has requested,
                 the request returns a <code>Client.UnauthorizedOperation</code> response (an
            HTTP 403      response). Some AWS actions additionally return an encoded message that
            can provide details      about this authorization failure. 
            </para>
                <note> Only certain AWS actions return an encoded authorization message. The documentation
            for      an individual action indicates whether that action returns an encoded message
            in addition to      returning an HTTP code. </note>    
            <para>
            The message is encoded because the details of the authorization status can constitute
                 privileged information that the user who requested the action should not see.
            To decode an      authorization status message, a user must be granted permissions
            via an IAM policy to      request the <code>DecodeAuthorizationMessage</code>    
               (<code>sts:DecodeAuthorizationMessage</code>) action. 
            </para>
                
            <para>
            The decoded message includes the following type of information: 
            </para>
                <ul>      <li>Whether the request was denied due to an explicit deny or due to
            the absence of an        explicit allow. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccessPolicyLanguage_EvaluationLogic.html#policy-eval-denyallow">Determining
            Whether a Request is Allowed or Denied</a> in <i>Using IAM</i>. </li>      <li>The
            principal who made the request.</li>      <li>The requested action.</li>      <li>The
            requested resource.</li>      <li>The values of condition keys in the context of the
            user's request.</li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.DecodeAuthorizationMessageRequest.EncodedMessage">
            <summary>
            Gets and sets the property EncodedMessage. 
            <para>
            The encoded message that was returned with the response.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.DecodeAuthorizationMessageResponse">
            <summary>
            Configuration for accessing Amazon DecodeAuthorizationMessage service
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.DecodeAuthorizationMessageResult">
            <summary>
            A document that contains additional information about the authorization status of
            a request      from an encoded message that is returned in response to an AWS request.
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.DecodeAuthorizationMessageResult.DecodedMessage">
            <summary>
            Gets and sets the property DecodedMessage. 
            <para>
            An XML document that contains the decoded message. For more information, see     
              <code>DecodeAuthorizationMessage</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.DecodeAuthorizationMessageResponse.DecodeAuthorizationMessageResult">
            <summary>
            Gets and sets the DecodeAuthorizationMessageResult property.
            Represents the output of a DecodeAuthorizationMessage operation.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.ExpiredTokenException">
            <summary>
             SecurityTokenService exception
             </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.ExpiredTokenException.#ctor(System.String)">
            <summary>
            Constructs a new ExpiredTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SecurityToken.Model.FederatedUser">
            <summary>
            Identifiers for the federated user that is associated with the credentials.
            </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.FederatedUser.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.FederatedUser.#ctor(System.String,System.String)">
            <summary>
            Instantiates FederatedUser with the parameterized properties
            </summary>
            <param name="federatedUserId">The string that identifies the federated user associated with the credentials, similar to the   unique ID of an IAM user.</param>
            <param name="arn">The ARN that specifies the federated user that is associated with the credentials. For more   information about ARNs and how to use them in policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using IAM</i>. </param>
        </member>
        <member name="P:Amazon.SecurityToken.Model.FederatedUser.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN that specifies the federated user that is associated with the credentials.
            For more      information about ARNs and how to use them in policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html"
            target="_blank">Identifiers for IAM Entities</a> in <i>Using IAM</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.FederatedUser.FederatedUserId">
            <summary>
            Gets and sets the property FederatedUserId. 
            <para>
            The string that identifies the federated user associated with the credentials, similar
            to the      unique ID of an IAM user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.GetFederationTokenRequest">
            <summary>
            Container for the parameters to the GetFederationToken operation.
            Returns a set of temporary security credentials (consisting of an access key ID, a
            secret      access key, and a security token) for a federated user. A typical use
            is in a proxy      application that gets temporary security credentials on behalf
            of distributed applications      inside a corporate network. Because you must call
            the <code>GetFederationToken</code> action      using the long-term security credentials
            of an IAM user, this call is appropriate in      contexts where those credentials
            can be safely stored, usually in a server-based      application.
            
                
            <para>
                  <b>Note:</b> Do not use this call in mobile applications or client-based web
            applications that      directly get temporary security credentials. For those types
            of applications, use        <code>AssumeRoleWithWebIdentity</code>.
            </para>
                
            <para>
            The <code>GetFederationToken</code> action must be called by using the long-term AWS
            security      credentials of an IAM user. You can also call <code>GetFederationToken</code>
            using the      security credentials of an AWS account (root), but this is not recommended.
            Instead, we      recommend that you create an IAM user for the purpose of the proxy
            application and then      attach a policy to the IAM user that limits federated users
            to only the actions and      resources they need access to. For more information,
            see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAMBestPractices.html">IAM
            Best Practices</a> in        <i>Using IAM</i>. 
            </para>
                
            <para>
            The temporary security credentials that are obtained by using the long-term credentials
            of an      IAM user are valid for the specified duration, between 900 seconds (15
            minutes) and 129600      seconds (36 hours). Temporary credentials that are obtained
            by using AWS account (root)      credentials have a maximum duration of 3600 seconds
            (1 hour)
            </para>
                
            <para>
                  <b>Permissions</b>    
            </para>
                    
            <para>
            The permissions for the temporary security credentials returned by        <code>GetFederationToken</code>
            are determined by a combination of the following: 
            </para>
                        <ul>        <li>The policy or policies that are attached to the IAM user
            whose credentials are used to        call <code>GetFederationToken</code>.</li>  
                 <li>The policy that is passed as a parameter in the call.</li>       </ul>  
             
            <para>
            The passed policy is attached to the temporary security credentials that result from
            the        <code>GetFederationToken</code> API call--that is, to the <i>federated
            user</i>. When the      federated user makes an AWS request, AWS evaluates the policy
            attached to the federated user      in combination with the policy or policies attached
            to the IAM user whose credentials were      used to call <code>GetFederationToken</code>.
            AWS allows the federated user's request only      when both the federated user <i><b>and</b></i>
            the IAM user are explicitly allowed to      perform the requested action. The passed
            policy cannot grant more permissions than those that      are defined in the IAM user
            policy.
            </para>
                
            <para>
            A typical use case is that the permissions of the IAM user whose credentials are used
            to      call <code>GetFederationToken</code> are designed to allow access to all the
            actions and      resources that any federated user will need. Then, for individual
            users, you pass a policy to      the operation that scopes down the permissions to
            a level that's appropriate to that      individual user, using a policy that allows
            only a subset of permissions that are granted to      the IAM user. 
            </para>
                
            <para>
            If you do not pass a policy, the resulting temporary security credentials have no
            effective      permissions. The only exception is when the temporary security credentials
            are used to access      a resource that has a resource-based policy that specifically
            allows the federated user to      access the resource. 
            </para>
                
            <para>
            For more information about how permissions work, see <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-get-federation-token.html">Permissions
            for GetFederationToken</a> in <i>Using Temporary Security Credentials</i>. For information
                 about using <code>GetFederationToken</code> to create temporary security credentials,
            see <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingFedTokens.html">Creating
            Temporary Credentials        to Enable Access for Federated Users</a> in <i>Using
            Temporary Security Credentials</i>. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.GetFederationTokenRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.GetFederationTokenRequest.#ctor(System.String)">
            <summary>
            Instantiates GetFederationTokenRequest with the parameterized properties
            </summary>
            <param name="name">The name of the federated user. The name is used as an identifier for the temporary security   credentials (such as <code>Bob</code>). For example, you can reference the federated user name   in a resource-based policy, such as in an Amazon S3 bucket policy. </param>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetFederationTokenRequest.DurationSeconds">
            <summary>
            Gets and sets the property DurationSeconds. 
            <para>
            The duration, in seconds, that the session should last. Acceptable durations for federation
                 sessions range from 900 seconds (15 minutes) to 129600 seconds (36 hours), with
            43200 seconds      (12 hours) as the default. Sessions obtained using AWS account
            (root) credentials are      restricted to a maximum of 3600 seconds (one hour). If
            the specified duration is longer than      one hour, the session obtained by using
            AWS account (root) credentials defaults to one hour.    
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetFederationTokenRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the federated user. The name is used as an identifier for the temporary
            security      credentials (such as <code>Bob</code>). For example, you can reference
            the federated user name      in a resource-based policy, such as in an Amazon S3 bucket
            policy. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetFederationTokenRequest.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            An IAM policy in JSON format that is passed with the <code>GetFederationToken</code>
            call      and evaluated along with the policy or policies that are attached to the
            IAM user whose      credentials are used to call <code>GetFederationToken</code>.
            The passed policy is used to      scope down the permissions that are available to
            the IAM user, by allowing only a subset of      the permissions that are granted to
            the IAM user. The passed policy cannot grant more      permissions than those granted
            to the IAM user. The final permissions for the federated user      are the most restrictive
            set based on the intersection of the passed policy and the IAM user      policy.
            </para>
                
            <para>
            If you do not pass a policy, the resulting temporary security credentials have no
            effective      permissions. The only exception is when the temporary security credentials
            are used to access      a resource that has a resource-based policy that specifically
            allows the federated user to      access the resource. 
            </para>
                
            <para>
            For more information about how permissions work, see <a href="http://docs.aws.amazon.com/STS/latest/UsingSTS/permissions-get-federation-token.html">Permissions
            for        GetFederationToken</a> in <i>Using Temporary Security Credentials</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.GetFederationTokenResponse">
            <summary>
            Configuration for accessing Amazon GetFederationToken service
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.GetFederationTokenResult">
            <summary>
            Contains the result of a successful call to the <a>GetFederationToken</a> action,
            including      temporary AWS credentials that can be used to make AWS requests.
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetFederationTokenResult.Credentials">
            <summary>
            Gets and sets the property Credentials. 
            <para>
            Credentials for the service API authentication. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetFederationTokenResult.FederatedUser">
            <summary>
            Gets and sets the property FederatedUser. 
            <para>
            Identifiers for the federated user associated with the credentials (such as      
             <code>arn:aws:sts::123456789012:federated-user/Bob</code> or <code>123456789012:Bob</code>).
                 You can use the federated user's ARN in your resource-based policies, such as
            an Amazon S3      bucket policy. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetFederationTokenResult.PackedPolicySize">
            <summary>
            Gets and sets the property PackedPolicySize. 
            <para>
            A percentage value indicating the size of the policy in packed form. The service rejects
                 policies for which the packed size is greater than 100 percent of the allowed
            value. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetFederationTokenResponse.GetFederationTokenResult">
            <summary>
            Gets and sets the GetFederationTokenResult property.
            Represents the output of a GetFederationToken operation.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.GetSessionTokenRequest">
            <summary>
            Container for the parameters to the GetSessionToken operation.
            Returns a set of temporary credentials for an AWS account or IAM user. The credentials
                 consist of an access key ID, a secret access key, and a security token. Typically,
            you use        <code>GetSessionToken</code> if you want to use MFA to protect programmatic
            calls to      specific AWS APIs like Amazon EC2 <code>StopInstances</code>. MFA-enabled
            IAM users would      need to call <code>GetSessionToken</code> and submit an MFA code
            that is associated with their      MFA device. Using the temporary security credentials
            that are returned from the call, IAM      users can then make programmatic calls to
            APIs that require MFA authentication. 
            
                
            <para>
            The <code>GetSessionToken</code> action must be called by using the long-term AWS
            security      credentials of the AWS account or an IAM user. Credentials that are
            created by IAM users      are valid for the duration that you specify, between 900
            seconds (15 minutes) and 129600      seconds (36 hours); credentials that are created
            by using account credentials have a maximum      duration of 3600 seconds (1 hour).
            
            </para>
                    <note>      
            <para>
            We recommend that you do not call <code>GetSessionToken</code> with root account credentials.
            Instead, follow our <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAMBestPractices.html#create-iam-users">best
            practices</a> by creating one or more IAM users, giving them the necessary permissions,
            and using IAM users for everyday interaction with AWS. 
            </para>
                </note>        
            <para>
            The permissions associated with the temporary security credentials returned by   
                <code>GetSessionToken</code> are based on the permissions associated with account
            or IAM      user whose credentials are used to call the action. If <code>GetSessionToken</code>
            is called      using root account credentials, the temporary credentials have root
            account permissions.      Similarly, if <code>GetSessionToken</code> is called using
            the credentials of an IAM user,      the temporary credentials have the same permissions
            as the IAM user. 
            </para>
                
            <para>
            For more information about using <code>GetSessionToken</code> to create temporary
                 credentials, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/CreatingSessionTokens.html"
            target="_blank"> Creating Temporary Credentials to Enable Access for IAM Users</a>
            in        <i>Using Temporary Security Credentials</i>. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.GetSessionTokenRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetSessionTokenRequest.DurationSeconds">
            <summary>
            Gets and sets the property DurationSeconds. 
            <para>
            The duration, in seconds, that the credentials should remain valid. Acceptable durations
            for      IAM user sessions range from 900 seconds (15 minutes) to 129600 seconds (36
            hours), with 43200      seconds (12 hours) as the default. Sessions for AWS account
            owners are restricted to a maximum      of 3600 seconds (one hour). If the duration
            is longer than one hour, the session for AWS      account owners defaults to one hour.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetSessionTokenRequest.SerialNumber">
            <summary>
            Gets and sets the property SerialNumber. 
            <para>
            The identification number of the MFA device that is associated with the IAM user who
            is      making the <code>GetSessionToken</code> call. Specify this value if the IAM
            user has a policy      that requires MFA authentication. The value is either the serial
            number for a hardware device      (such as <code>GAHT12345678</code>) or an Amazon
            Resource Name (ARN) for a virtual device      (such as <code>arn:aws:iam::123456789012:mfa/user</code>).
            You can find the device for an IAM      user by going to the AWS Management Console
            and viewing the user's security credentials. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetSessionTokenRequest.TokenCode">
            <summary>
            Gets and sets the property TokenCode. 
            <para>
            The value provided by the MFA device, if MFA is required. If any policy requires the
            IAM user      to submit an MFA code, specify this value. If MFA authentication is
            required, and the user      does not provide a code when requesting a set of temporary
            security credentials, the user will      receive an "access denied" response when
            requesting resources that require MFA      authentication.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.GetSessionTokenResponse">
            <summary>
            Configuration for accessing Amazon GetSessionToken service
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.GetSessionTokenResult">
            <summary>
            Contains the result of a successful call to the <a>GetSessionToken</a> action, including
                 temporary AWS credentials that can be used to make AWS requests.
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetSessionTokenResult.Credentials">
            <summary>
            Gets and sets the property Credentials. 
            <para>
            The session credentials for API authentication. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SecurityToken.Model.GetSessionTokenResponse.GetSessionTokenResult">
            <summary>
            Gets and sets the GetSessionTokenResult property.
            Represents the output of a GetSessionToken operation.
            </summary>
        </member>
        <member name="T:Amazon.SecurityToken.Model.IDPCommunicationErrorException">
            <summary>
             SecurityTokenService exception
             </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.IDPCommunicationErrorException.#ctor(System.String)">
            <summary>
            Constructs a new IDPCommunicationErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SecurityToken.Model.IDPRejectedClaimException">
            <summary>
             SecurityTokenService exception
             </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.IDPRejectedClaimException.#ctor(System.String)">
            <summary>
            Constructs a new IDPRejectedClaimException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumedRoleUserUnmarshaller">
            <summary>
            Response Unmarshaller for AssumedRoleUser Object
            </summary>  
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumeRoleRequestMarshaller">
            <summary>
            AssumeRole Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumeRoleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssumeRole operation
            </summary>  
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumeRoleWithSAMLRequestMarshaller">
            <summary>
            AssumeRoleWithSAML Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumeRoleWithSAMLResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssumeRoleWithSAML operation
            </summary>  
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumeRoleWithWebIdentityRequestMarshaller">
            <summary>
            AssumeRoleWithWebIdentity Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.AssumeRoleWithWebIdentityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssumeRoleWithWebIdentity operation
            </summary>  
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.CredentialsUnmarshaller">
            <summary>
            Response Unmarshaller for Credentials Object
            </summary>  
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.DecodeAuthorizationMessageRequestMarshaller">
            <summary>
            DecodeAuthorizationMessage Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.DecodeAuthorizationMessageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DecodeAuthorizationMessage operation
            </summary>  
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.FederatedUserUnmarshaller">
            <summary>
            Response Unmarshaller for FederatedUser Object
            </summary>  
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.GetFederationTokenRequestMarshaller">
            <summary>
            GetFederationToken Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.GetFederationTokenResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetFederationToken operation
            </summary>  
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.GetSessionTokenRequestMarshaller">
            <summary>
            GetSessionToken Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SecurityToken.Model.Internal.MarshallTransformations.GetSessionTokenResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSessionToken operation
            </summary>  
        </member>
        <member name="T:Amazon.SecurityToken.Model.InvalidAuthorizationMessageException">
            <summary>
             SecurityTokenService exception
             </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.InvalidAuthorizationMessageException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidAuthorizationMessageException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SecurityToken.Model.InvalidIdentityTokenException">
            <summary>
             SecurityTokenService exception
             </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.InvalidIdentityTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidIdentityTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SecurityToken.Model.MalformedPolicyDocumentException">
            <summary>
             SecurityTokenService exception
             </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.MalformedPolicyDocumentException.#ctor(System.String)">
            <summary>
            Constructs a new MalformedPolicyDocumentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SecurityToken.Model.PackedPolicyTooLargeException">
            <summary>
             SecurityTokenService exception
             </summary>
        </member>
        <member name="M:Amazon.SecurityToken.Model.PackedPolicyTooLargeException.#ctor(System.String)">
            <summary>
            Constructs a new PackedPolicyTooLargeException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleDB.AmazonSimpleDBClient">
             <summary>
             Implementation for accessing SimpleDB
            
             Amazon SimpleDB is a web service providing the core database functions of data indexing
             and querying in the cloud. By offloading the time and effort associated with building
             and operating a web-scale database, SimpleDB provides developers the freedom to focus
             on application development. 
             <para>
              A traditional, clustered relational database requires a sizable upfront capital outlay,
             is complex to design, and often requires extensive and repetitive database administration.
             Amazon SimpleDB is dramatically simpler, requiring no schema, automatically indexing
             your data and providing a simple API for storage and access. This approach eliminates
             the administrative burden of data modeling, index maintenance, and performance tuning.
             Developers gain access to this functionality within Amazon's proven computing environment,
             are able to scale instantly, and pay only for what they use. 
             </para>
              
             <para>
              Visit <a href="http://aws.amazon.com/simpledb/">http://aws.amazon.com/simpledb/</a>
             for more information. 
             </para>
             </summary>
        </member>
        <member name="T:Amazon.SimpleDB.IAmazonSimpleDB">
             <summary>
             Interface for accessing SimpleDB
            
             Amazon SimpleDB is a web service providing the core database functions of data indexing
             and querying in the cloud. By offloading the time and effort associated with building
             and operating a web-scale database, SimpleDB provides developers the freedom to focus
             on application development. 
             <para>
              A traditional, clustered relational database requires a sizable upfront capital outlay,
             is complex to design, and often requires extensive and repetitive database administration.
             Amazon SimpleDB is dramatically simpler, requiring no schema, automatically indexing
             your data and providing a simple API for storage and access. This approach eliminates
             the administrative burden of data modeling, index maintenance, and performance tuning.
             Developers gain access to this functionality within Amazon's proven computing environment,
             are able to scale instantly, and pay only for what they use. 
             </para>
              
             <para>
              Visit <a href="http://aws.amazon.com/simpledb/">http://aws.amazon.com/simpledb/</a>
             for more information. 
             </para>
             </summary>
        </member>
        <member name="M:Amazon.SimpleDB.IAmazonSimpleDB.BatchDeleteAttributesAsync(Amazon.SimpleDB.Model.BatchDeleteAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the BatchDeleteAttributes operation.
            <seealso cref="T:Amazon.SimpleDB.IAmazonSimpleDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the BatchDeleteAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleDB.IAmazonSimpleDB.BatchPutAttributesAsync(Amazon.SimpleDB.Model.BatchPutAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the BatchPutAttributes operation.
            <seealso cref="T:Amazon.SimpleDB.IAmazonSimpleDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the BatchPutAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleDB.IAmazonSimpleDB.CreateDomainAsync(Amazon.SimpleDB.Model.CreateDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateDomain operation.
            <seealso cref="T:Amazon.SimpleDB.IAmazonSimpleDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateDomain operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleDB.IAmazonSimpleDB.DeleteAttributesAsync(Amazon.SimpleDB.Model.DeleteAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteAttributes operation.
            <seealso cref="T:Amazon.SimpleDB.IAmazonSimpleDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleDB.IAmazonSimpleDB.DeleteDomainAsync(Amazon.SimpleDB.Model.DeleteDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteDomain operation.
            <seealso cref="T:Amazon.SimpleDB.IAmazonSimpleDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteDomain operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleDB.IAmazonSimpleDB.DomainMetadataAsync(Amazon.SimpleDB.Model.DomainMetadataRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DomainMetadata operation.
            <seealso cref="T:Amazon.SimpleDB.IAmazonSimpleDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DomainMetadata operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleDB.IAmazonSimpleDB.GetAttributesAsync(Amazon.SimpleDB.Model.GetAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetAttributes operation.
            <seealso cref="T:Amazon.SimpleDB.IAmazonSimpleDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleDB.IAmazonSimpleDB.ListDomainsAsync(Amazon.SimpleDB.Model.ListDomainsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListDomains operation.
            <seealso cref="T:Amazon.SimpleDB.IAmazonSimpleDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListDomains operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleDB.IAmazonSimpleDB.PutAttributesAsync(Amazon.SimpleDB.Model.PutAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutAttributes operation.
            <seealso cref="T:Amazon.SimpleDB.IAmazonSimpleDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleDB.IAmazonSimpleDB.SelectAsync(Amazon.SimpleDB.Model.SelectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Select operation.
            <seealso cref="T:Amazon.SimpleDB.IAmazonSimpleDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Select operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleDB.AmazonSimpleDBClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonSimpleDBClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.SimpleDB.AmazonSimpleDBClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSimpleDBClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SimpleDB.AmazonSimpleDBClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.SimpleDB.AmazonSimpleDBConfig)">
            <summary>
            Constructs AmazonSimpleDBClient with AWS Credentials and an
            AmazonSimpleDBClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonSimpleDBClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SimpleDB.AmazonSimpleDBClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonSimpleDBClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.SimpleDB.AmazonSimpleDBClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSimpleDBClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SimpleDB.AmazonSimpleDBClient.#ctor(System.String,System.String,Amazon.SimpleDB.AmazonSimpleDBConfig)">
            <summary>
            Constructs AmazonSimpleDBClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSimpleDBClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonSimpleDBClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SimpleDB.AmazonSimpleDBClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonSimpleDBClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.SimpleDB.AmazonSimpleDBClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSimpleDBClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SimpleDB.AmazonSimpleDBClient.#ctor(System.String,System.String,System.String,Amazon.SimpleDB.AmazonSimpleDBConfig)">
            <summary>
            Constructs AmazonSimpleDBClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSimpleDBClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonSimpleDBClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SimpleDB.AmazonSimpleDBClient.BatchDeleteAttributesAsync(Amazon.SimpleDB.Model.BatchDeleteAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the BatchDeleteAttributes operation.
            <seealso cref="T:Amazon.SimpleDB.IAmazonSimpleDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the BatchDeleteAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleDB.AmazonSimpleDBClient.BatchPutAttributesAsync(Amazon.SimpleDB.Model.BatchPutAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the BatchPutAttributes operation.
            <seealso cref="T:Amazon.SimpleDB.IAmazonSimpleDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the BatchPutAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleDB.AmazonSimpleDBClient.CreateDomainAsync(Amazon.SimpleDB.Model.CreateDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateDomain operation.
            <seealso cref="T:Amazon.SimpleDB.IAmazonSimpleDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateDomain operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleDB.AmazonSimpleDBClient.DeleteAttributesAsync(Amazon.SimpleDB.Model.DeleteAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteAttributes operation.
            <seealso cref="T:Amazon.SimpleDB.IAmazonSimpleDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleDB.AmazonSimpleDBClient.DeleteDomainAsync(Amazon.SimpleDB.Model.DeleteDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteDomain operation.
            <seealso cref="T:Amazon.SimpleDB.IAmazonSimpleDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteDomain operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleDB.AmazonSimpleDBClient.DomainMetadataAsync(Amazon.SimpleDB.Model.DomainMetadataRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DomainMetadata operation.
            <seealso cref="T:Amazon.SimpleDB.IAmazonSimpleDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DomainMetadata operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleDB.AmazonSimpleDBClient.GetAttributesAsync(Amazon.SimpleDB.Model.GetAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetAttributes operation.
            <seealso cref="T:Amazon.SimpleDB.IAmazonSimpleDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleDB.AmazonSimpleDBClient.ListDomainsAsync(Amazon.SimpleDB.Model.ListDomainsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListDomains operation.
            <seealso cref="T:Amazon.SimpleDB.IAmazonSimpleDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListDomains operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleDB.AmazonSimpleDBClient.PutAttributesAsync(Amazon.SimpleDB.Model.PutAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutAttributes operation.
            <seealso cref="T:Amazon.SimpleDB.IAmazonSimpleDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleDB.AmazonSimpleDBClient.SelectAsync(Amazon.SimpleDB.Model.SelectRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Select operation.
            <seealso cref="T:Amazon.SimpleDB.IAmazonSimpleDB"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Select operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.SimpleDB.AmazonSimpleDBConfig">
            <summary>
            Configuration for accessing Amazon SimpleDB service
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.AmazonSimpleDBConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.AmazonSimpleDBConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.AmazonSimpleDBConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.AmazonSimpleDBRequest">
            <summary>
            Base class for SimpleDB operation requests.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.Attribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.Attribute.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.Attribute.#ctor(System.String,System.String)">
            <summary>
            Instantiates Attribute with the parameterized properties
            </summary>
            <param name="name">The name of the attribute.</param>
            <param name="value">The value of the attribute.</param>
        </member>
        <member name="P:Amazon.SimpleDB.Model.Attribute.AlternateNameEncoding">
            <summary>
            Gets and sets the property AlternateNameEncoding. 
            <para>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.Attribute.AlternateValueEncoding">
            <summary>
            Gets and sets the property AlternateValueEncoding. 
            <para>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.Attribute.Name">
            <summary>
            Gets and sets the property Name. The name of the attribute.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.Attribute.Value">
            <summary>
            Gets and sets the property Value. The value of the attribute.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.AttributeDoesNotExistException">
            <summary>
             SimpleDB exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.AttributeDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new AttributeDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleDB.Model.BatchDeleteAttributesRequest">
            <summary>
            Container for the parameters to the BatchDeleteAttributes operation.
            Performs multiple DeleteAttributes operations in a single call, which reduces round
            trips and latencies. This enables Amazon SimpleDB to optimize requests, which generally
            yields better throughput. 
            
             
            <para>
             The following limitations are enforced for this operation: <ul> <li>1 MB request
            size</li> <li>25 item limit per BatchDeleteAttributes operation</li> </ul> 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.BatchDeleteAttributesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.BatchDeleteAttributesRequest.#ctor(System.String,System.Collections.Generic.List{Amazon.SimpleDB.Model.DeletableItem})">
            <summary>
            Instantiates BatchDeleteAttributesRequest with the parameterized properties
            </summary>
            <param name="domainName">The name of the domain in which the attributes are being deleted.</param>
            <param name="items">A list of items on which to perform the operation.</param>
        </member>
        <member name="P:Amazon.SimpleDB.Model.BatchDeleteAttributesRequest.DomainName">
            <summary>
            Gets and sets the property DomainName. The name of the domain in which the attributes
            are being deleted.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.BatchDeleteAttributesRequest.Items">
            <summary>
            Gets and sets the property Items. A list of items on which to perform the operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.BatchDeleteAttributesResponse">
            <summary>
            Configuration for accessing Amazon BatchDeleteAttributes service
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.BatchDeleteAttributesResponse.BatchDeleteAttributesResult">
            <summary>
            Gets and sets the BatchDeleteAttributesResult property.
            Represents the output of a BatchDeleteAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.BatchPutAttributesRequest">
            <summary>
            Container for the parameters to the BatchPutAttributes operation.
            The <code>BatchPutAttributes</code> operation creates or replaces attributes within
            one or more items. By using this operation, the client can perform multiple <a>PutAttribute</a>
            operation with a single call. This helps yield savings in round trips and latencies,
            enabling Amazon SimpleDB to optimize requests and generally produce better throughput.
            
            
             
            <para>
             The client may specify the item name with the <code>Item.X.ItemName</code> parameter.
            The client may specify new attributes using a combination of the <code>Item.X.Attribute.Y.Name</code>
            and <code>Item.X.Attribute.Y.Value</code> parameters. The client may specify the first
            attribute for the first item using the parameters <code>Item.0.Attribute.0.Name</code>
            and <code>Item.0.Attribute.0.Value</code>, and for the second attribute for the first
            item by the parameters <code>Item.0.Attribute.1.Name</code> and <code>Item.0.Attribute.1.Value</code>,
            and so on. 
            </para>
             
            <para>
             Attributes are uniquely identified within an item by their name/value combination.
            For example, a single item can have the attributes <code>{ "first_name", "first_value"
            }</code> and <code>{ "first_name", "second_value" }</code>. However, it cannot have
            two attribute instances where both the <code>Item.X.Attribute.Y.Name</code> and <code>Item.X.Attribute.Y.Value</code>
            are the same. 
            </para>
             
            <para>
             Optionally, the requester can supply the <code>Replace</code> parameter for each
            individual value. Setting this value to <code>true</code> will cause the new attribute
            values to replace the existing attribute values. For example, if an item <code>I</code>
            has the attributes <code>{ 'a', '1' }, { 'b', '2'}</code> and <code>{ 'b', '3' }</code>
            and the requester does a BatchPutAttributes of <code>{'I', 'b', '4' }</code> with
            the Replace parameter set to true, the final attributes of the item will be <code>{
            'a', '1' }</code> and <code>{ 'b', '4' }</code>, replacing the previous values of
            the 'b' attribute with the new value. 
            </para>
             <important> This operation is vulnerable to exceeding the maximum URL size when making
            a REST request using the HTTP GET method. This operation does not support conditions
            using <code>Expected.X.Name</code>, <code>Expected.X.Value</code>, or <code>Expected.X.Exists</code>.
            </important> 
            <para>
             You can execute multiple <code>BatchPutAttributes</code> operations and other operations
            in parallel. However, large numbers of concurrent <code>BatchPutAttributes</code>
            calls can result in Service Unavailable (503) responses. 
            </para>
             
            <para>
             The following limitations are enforced for this operation: <ul> <li>256 attribute
            name-value pairs per item</li> <li>1 MB request size</li> <li>1 billion attributes
            per domain</li> <li>10 GB of total user data storage per domain</li> <li>25 item limit
            per <code>BatchPutAttributes</code> operation</li> </ul> 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.BatchPutAttributesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.BatchPutAttributesRequest.#ctor(System.String,System.Collections.Generic.List{Amazon.SimpleDB.Model.ReplaceableItem})">
            <summary>
            Instantiates BatchPutAttributesRequest with the parameterized properties
            </summary>
            <param name="domainName">The name of the domain in which the attributes are being stored.</param>
            <param name="items">A list of items on which to perform the operation.</param>
        </member>
        <member name="P:Amazon.SimpleDB.Model.BatchPutAttributesRequest.DomainName">
            <summary>
            Gets and sets the property DomainName. The name of the domain in which the attributes
            are being stored.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.BatchPutAttributesRequest.Items">
            <summary>
            Gets and sets the property Items. A list of items on which to perform the operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.BatchPutAttributesResponse">
            <summary>
            Configuration for accessing Amazon BatchPutAttributes service
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.BatchPutAttributesResponse.BatchPutAttributesResult">
            <summary>
            Gets and sets the BatchPutAttributesResult property.
            Represents the output of a BatchPutAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.CreateDomainRequest">
            <summary>
            Container for the parameters to the CreateDomain operation.
            The <code>CreateDomain</code> operation creates a new domain. The domain name should
            be unique among the domains associated with the Access Key ID provided in the request.
            The <code>CreateDomain</code> operation may take 10 or more seconds to complete. 
            
             
            <para>
             The client can create up to 100 domains per account. 
            </para>
             
            <para>
             If the client requires additional domains, go to <a href="http://aws.amazon.com/contact-us/simpledb-limit-request/">
            http://aws.amazon.com/contact-us/simpledb-limit-request/</a>. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.CreateDomainRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.CreateDomainRequest.#ctor(System.String)">
            <summary>
            Instantiates CreateDomainRequest with the parameterized properties
            </summary>
            <param name="domainName">The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, '_', '-', and '.'.</param>
        </member>
        <member name="P:Amazon.SimpleDB.Model.CreateDomainRequest.DomainName">
            <summary>
            Gets and sets the property DomainName. The name of the domain to create. The name
            can range between 3 and 255 characters and can contain the following characters: a-z,
            A-Z, 0-9, '_', '-', and '.'.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.CreateDomainResponse">
            <summary>
            Configuration for accessing Amazon CreateDomain service
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.CreateDomainResponse.CreateDomainResult">
            <summary>
            Gets and sets the CreateDomainResult property.
            Represents the output of a CreateDomain operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.DeletableItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.DeletableItem.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.DeletableItem.#ctor(System.String,System.Collections.Generic.List{Amazon.SimpleDB.Model.Attribute})">
            <summary>
            Instantiates DeletableItem with the parameterized properties
            </summary>
            <param name="name">Sets the DeletableItem Name property</param>
            <param name="attributes">Sets the DeletableItem Attributes property</param>
        </member>
        <member name="P:Amazon.SimpleDB.Model.DeletableItem.Attributes">
            <summary>
            Gets and sets the property Attributes.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.DeletableItem.Name">
            <summary>
            Gets and sets the property Name.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.DeleteAttributesRequest">
            <summary>
            Container for the parameters to the DeleteAttributes operation.
            Deletes one or more attributes associated with an item. If all attributes of the
            item are deleted, the item is deleted. 
            
             
            <para>
             <code>DeleteAttributes</code> is an idempotent operation; running it multiple times
            on the same item or attribute does not result in an error response. 
            </para>
             
            <para>
             Because Amazon SimpleDB makes multiple copies of item data and uses an eventual consistency
            update model, performing a <a>GetAttributes</a> or <a>Select</a> operation (read)
            immediately after a <code>DeleteAttributes</code> or <a>PutAttributes</a> operation
            (write) might not return updated item data. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.DeleteAttributesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.DeleteAttributesRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates DeleteAttributesRequest with the parameterized properties
            </summary>
            <param name="domainName">The name of the domain in which to perform the operation.</param>
            <param name="itemName">The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.</param>
        </member>
        <member name="M:Amazon.SimpleDB.Model.DeleteAttributesRequest.#ctor(System.String,System.String,System.Collections.Generic.List{Amazon.SimpleDB.Model.Attribute})">
            <summary>
            Instantiates DeleteAttributesRequest with the parameterized properties
            </summary>
            <param name="domainName">The name of the domain in which to perform the operation.</param>
            <param name="itemName">The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.</param>
            <param name="attributes">A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.</param>
        </member>
        <member name="M:Amazon.SimpleDB.Model.DeleteAttributesRequest.#ctor(System.String,System.String,System.Collections.Generic.List{Amazon.SimpleDB.Model.Attribute},Amazon.SimpleDB.Model.UpdateCondition)">
            <summary>
            Instantiates DeleteAttributesRequest with the parameterized properties
            </summary>
            <param name="domainName">The name of the domain in which to perform the operation.</param>
            <param name="itemName">The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.</param>
            <param name="attributes">A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.</param>
            <param name="expected">The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.</param>
        </member>
        <member name="P:Amazon.SimpleDB.Model.DeleteAttributesRequest.Attributes">
            <summary>
            Gets and sets the property Attributes. A list of Attributes. Similar to columns on
            a spreadsheet, attributes represent categories of data that can be assigned to items.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.DeleteAttributesRequest.DomainName">
            <summary>
            Gets and sets the property DomainName. The name of the domain in which to perform
            the operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.DeleteAttributesRequest.Expected">
            <summary>
            Gets and sets the property Expected. The update condition which, if specified, determines
            whether the specified attributes will be deleted or not. The update condition must
            be satisfied in order for this request to be processed and the attributes to be deleted.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.DeleteAttributesRequest.ItemName">
            <summary>
            Gets and sets the property ItemName. The name of the item. Similar to rows on a spreadsheet,
            items represent individual objects that contain one or more value-attribute pairs.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.DeleteAttributesResponse">
            <summary>
            Configuration for accessing Amazon DeleteAttributes service
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.DeleteAttributesResponse.DeleteAttributesResult">
            <summary>
            Gets and sets the DeleteAttributesResult property.
            Represents the output of a DeleteAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.DeleteDomainRequest">
            <summary>
            Container for the parameters to the DeleteDomain operation.
            The <code>DeleteDomain</code> operation deletes a domain. Any items (and their attributes)
            in the domain are deleted as well. The <code>DeleteDomain</code> operation might take
            10 or more seconds to complete.
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.DeleteDomainRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.DeleteDomainRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteDomainRequest with the parameterized properties
            </summary>
            <param name="domainName">The name of the domain to delete.</param>
        </member>
        <member name="P:Amazon.SimpleDB.Model.DeleteDomainRequest.DomainName">
            <summary>
            Gets and sets the property DomainName. The name of the domain to delete.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.DeleteDomainResponse">
            <summary>
            Configuration for accessing Amazon DeleteDomain service
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.DeleteDomainResponse.DeleteDomainResult">
            <summary>
            Gets and sets the DeleteDomainResult property.
            Represents the output of a DeleteDomain operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.DomainMetadataRequest">
            <summary>
            Container for the parameters to the DomainMetadata operation.
            Returns information about the domain, including when the domain was created, the
            number of items and attributes in the domain, and the size of the attribute names
            and values.
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.DomainMetadataRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.DomainMetadataRequest.#ctor(System.String)">
            <summary>
            Instantiates DomainMetadataRequest with the parameterized properties
            </summary>
            <param name="domainName">The name of the domain for which to display the metadata of.</param>
        </member>
        <member name="P:Amazon.SimpleDB.Model.DomainMetadataRequest.DomainName">
            <summary>
            Gets and sets the property DomainName. The name of the domain for which to display
            the metadata of.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.DomainMetadataResponse">
            <summary>
            Configuration for accessing Amazon DomainMetadata service
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.DomainMetadataResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.DomainMetadataResult.AttributeNameCount">
            <summary>
            Gets and sets the property AttributeNameCount. The number of unique attribute names
            in the domain.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.DomainMetadataResult.AttributeNamesSizeBytes">
            <summary>
            Gets and sets the property AttributeNamesSizeBytes. The total size of all unique attribute
            names in the domain, in bytes.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.DomainMetadataResult.AttributeValueCount">
            <summary>
            Gets and sets the property AttributeValueCount. The number of all attribute name/value
            pairs in the domain.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.DomainMetadataResult.AttributeValuesSizeBytes">
            <summary>
            Gets and sets the property AttributeValuesSizeBytes. The total size of all attribute
            values in the domain, in bytes.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.DomainMetadataResult.ItemCount">
            <summary>
            Gets and sets the property ItemCount. The number of all items in the domain.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.DomainMetadataResult.ItemNamesSizeBytes">
            <summary>
            Gets and sets the property ItemNamesSizeBytes. The total size of all item names in
            the domain, in bytes.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.DomainMetadataResult.Timestamp">
            <summary>
            Gets and sets the property Timestamp. The data and time when metadata was calculated,
            in Epoch (UNIX) seconds.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.DomainMetadataResponse.DomainMetadataResult">
            <summary>
            Gets and sets the DomainMetadataResult property.
            Represents the output of a DomainMetadata operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.DuplicateItemNameException">
            <summary>
             SimpleDB exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.DuplicateItemNameException.#ctor(System.String)">
            <summary>
            Constructs a new DuplicateItemNameException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleDB.Model.GetAttributesRequest">
            <summary>
            Container for the parameters to the GetAttributes operation.
            Returns all of the attributes associated with the specified item. Optionally, the
            attributes returned can be limited to one or more attributes by specifying an attribute
            name parameter. 
            
             
            <para>
             If the item does not exist on the replica that was accessed for this operation, an
            empty set is returned. The system does not return an error as it cannot guarantee
            the item does not exist on other replicas. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.GetAttributesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.GetAttributesRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates GetAttributesRequest with the parameterized properties
            </summary>
            <param name="domainName">The name of the domain in which to perform the operation.</param>
            <param name="itemName">The name of the item.</param>
        </member>
        <member name="P:Amazon.SimpleDB.Model.GetAttributesRequest.AttributeNames">
            <summary>
            Gets and sets the property AttributeNames. The names of the attributes.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.GetAttributesRequest.ConsistentRead">
            <summary>
            Gets and sets the property ConsistentRead. Determines whether or not strong consistency
            should be enforced when data is read from SimpleDB. If <code>true</code>, any data
            previously written to SimpleDB will be returned. Otherwise, results will be consistent
            eventually, and the client may not see data that was written immediately before your
            read.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.GetAttributesRequest.DomainName">
            <summary>
            Gets and sets the property DomainName. The name of the domain in which to perform
            the operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.GetAttributesRequest.ItemName">
            <summary>
            Gets and sets the property ItemName. The name of the item.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.GetAttributesResponse">
            <summary>
            Configuration for accessing Amazon GetAttributes service
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.GetAttributesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.GetAttributesResult.Attributes">
            <summary>
            Gets and sets the property Attributes. The list of attributes returned by the operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.GetAttributesResponse.GetAttributesResult">
            <summary>
            Gets and sets the GetAttributesResult property.
            Represents the output of a GetAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.AttributeUnmarshaller">
            <summary>
            Response Unmarshaller for Attribute Object
            </summary>  
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.BatchDeleteAttributesRequestMarshaller">
            <summary>
            BatchDeleteAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.BatchDeleteAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchDeleteAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.BatchPutAttributesRequestMarshaller">
            <summary>
            BatchPutAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.BatchPutAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchPutAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.CreateDomainRequestMarshaller">
            <summary>
            CreateDomain Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.CreateDomainResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDomain operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.DeleteAttributesRequestMarshaller">
            <summary>
            DeleteAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.DeleteAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.DeleteDomainRequestMarshaller">
            <summary>
            DeleteDomain Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.DeleteDomainResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDomain operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.DomainMetadataRequestMarshaller">
            <summary>
            DomainMetadata Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.DomainMetadataResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DomainMetadata operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.GetAttributesRequestMarshaller">
            <summary>
            GetAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.GetAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.ItemUnmarshaller">
            <summary>
            Response Unmarshaller for Item Object
            </summary>  
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.ListDomainsRequestMarshaller">
            <summary>
            ListDomains Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.ListDomainsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDomains operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.PutAttributesRequestMarshaller">
            <summary>
            PutAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.PutAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.SelectRequestMarshaller">
            <summary>
            Select Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleDB.Model.Internal.MarshallTransformations.SelectResponseUnmarshaller">
            <summary>
            Response Unmarshaller for Select operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleDB.Model.InvalidNextTokenException">
            <summary>
             SimpleDB exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.InvalidNextTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidNextTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleDB.Model.InvalidNumberPredicatesException">
            <summary>
             SimpleDB exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.InvalidNumberPredicatesException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidNumberPredicatesException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleDB.Model.InvalidNumberValueTestsException">
            <summary>
             SimpleDB exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.InvalidNumberValueTestsException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidNumberValueTestsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleDB.Model.InvalidParameterValueException">
            <summary>
             SimpleDB exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.InvalidParameterValueException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterValueException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleDB.Model.InvalidQueryExpressionException">
            <summary>
             SimpleDB exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.InvalidQueryExpressionException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidQueryExpressionException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleDB.Model.Item">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.Item.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.Item.#ctor(System.String,System.Collections.Generic.List{Amazon.SimpleDB.Model.Attribute})">
            <summary>
            Instantiates Item with the parameterized properties
            </summary>
            <param name="name">The name of the item.</param>
            <param name="attributes">A list of attributes.</param>
        </member>
        <member name="P:Amazon.SimpleDB.Model.Item.AlternateNameEncoding">
            <summary>
            Gets and sets the property AlternateNameEncoding. 
            <para>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.Item.Attributes">
            <summary>
            Gets and sets the property Attributes. A list of attributes.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.Item.Name">
            <summary>
            Gets and sets the property Name. The name of the item.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.ListDomainsRequest">
            <summary>
            Container for the parameters to the ListDomains operation.
            The <code>ListDomains</code> operation lists all domains associated with the Access
            Key ID. It returns domain names up to the limit set by <a href="#MaxNumberOfDomains">MaxNumberOfDomains</a>.
            A <a href="#NextToken">NextToken</a> is returned if there are more than <code>MaxNumberOfDomains</code>
            domains. Calling <code>ListDomains</code> successive times with the <code>NextToken</code>
            provided by the operation returns up to <code>MaxNumberOfDomains</code> more domain
            names with each successive operation call.
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.ListDomainsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.ListDomainsRequest.MaxNumberOfDomains">
            <summary>
            Gets and sets the property MaxNumberOfDomains. The maximum number of domain names
            you want returned. The range is 1 to 100. The default setting is 100.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.ListDomainsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. A string informing Amazon SimpleDB where to
            start the next list of domain names.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.ListDomainsResponse">
            <summary>
            Configuration for accessing Amazon ListDomains service
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.ListDomainsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.ListDomainsResult.DomainNames">
            <summary>
            Gets and sets the property DomainNames. A list of domain names that match the expression.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.ListDomainsResult.NextToken">
            <summary>
            Gets and sets the property NextToken. An opaque token indicating that there are more
            domains than the specified <code>MaxNumberOfDomains</code> still available.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.ListDomainsResponse.ListDomainsResult">
            <summary>
            Gets and sets the ListDomainsResult property.
            Represents the output of a ListDomains operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.MissingParameterException">
            <summary>
             SimpleDB exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.MissingParameterException.#ctor(System.String)">
            <summary>
            Constructs a new MissingParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleDB.Model.NoSuchDomainException">
            <summary>
             SimpleDB exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.NoSuchDomainException.#ctor(System.String)">
            <summary>
            Constructs a new NoSuchDomainException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleDB.Model.NumberDomainAttributesExceededException">
            <summary>
             SimpleDB exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.NumberDomainAttributesExceededException.#ctor(System.String)">
            <summary>
            Constructs a new NumberDomainAttributesExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleDB.Model.NumberDomainBytesExceededException">
            <summary>
             SimpleDB exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.NumberDomainBytesExceededException.#ctor(System.String)">
            <summary>
            Constructs a new NumberDomainBytesExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleDB.Model.NumberDomainsExceededException">
            <summary>
             SimpleDB exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.NumberDomainsExceededException.#ctor(System.String)">
            <summary>
            Constructs a new NumberDomainsExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleDB.Model.NumberItemAttributesExceededException">
            <summary>
             SimpleDB exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.NumberItemAttributesExceededException.#ctor(System.String)">
            <summary>
            Constructs a new NumberItemAttributesExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleDB.Model.NumberSubmittedAttributesExceededException">
            <summary>
             SimpleDB exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.NumberSubmittedAttributesExceededException.#ctor(System.String)">
            <summary>
            Constructs a new NumberSubmittedAttributesExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleDB.Model.NumberSubmittedItemsExceededException">
            <summary>
             SimpleDB exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.NumberSubmittedItemsExceededException.#ctor(System.String)">
            <summary>
            Constructs a new NumberSubmittedItemsExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleDB.Model.PutAttributesRequest">
            <summary>
            Container for the parameters to the PutAttributes operation.
            The PutAttributes operation creates or replaces attributes in an item. The client
            may specify new attributes using a combination of the <code>Attribute.X.Name</code>
            and <code>Attribute.X.Value</code> parameters. The client specifies the first attribute
            by the parameters <code>Attribute.0.Name</code> and <code>Attribute.0.Value</code>,
            the second attribute by the parameters <code>Attribute.1.Name</code> and <code>Attribute.1.Value</code>,
            and so on. 
            
             
            <para>
             Attributes are uniquely identified in an item by their name/value combination. For
            example, a single item can have the attributes <code>{ "first_name", "first_value"
            }</code> and <code>{ "first_name", second_value" }</code>. However, it cannot have
            two attribute instances where both the <code>Attribute.X.Name</code> and <code>Attribute.X.Value</code>
            are the same. 
            </para>
             
            <para>
             Optionally, the requestor can supply the <code>Replace</code> parameter for each
            individual attribute. Setting this value to <code>true</code> causes the new attribute
            value to replace the existing attribute value(s). For example, if an item has the
            attributes <code>{ 'a', '1' }</code>, <code>{ 'b', '2'}</code> and <code>{ 'b', '3'
            }</code> and the requestor calls <code>PutAttributes</code> using the attributes <code>{
            'b', '4' }</code> with the <code>Replace</code> parameter set to true, the final attributes
            of the item are changed to <code>{ 'a', '1' }</code> and <code>{ 'b', '4' }</code>,
            which replaces the previous values of the 'b' attribute with the new value. 
            </para>
             
            <para>
             You cannot specify an empty string as an attribute name. 
            </para>
             
            <para>
             Because Amazon SimpleDB makes multiple copies of client data and uses an eventual
            consistency update model, an immediate <a>GetAttributes</a> or <a>Select</a> operation
            (read) immediately after a <a>PutAttributes</a> or <a>DeleteAttributes</a> operation
            (write) might not return the updated data. 
            </para>
             
            <para>
             The following limitations are enforced for this operation: <ul> <li>256 total attribute
            name-value pairs per item</li> <li>One billion attributes per domain</li> <li>10 GB
            of total user data storage per domain</li> </ul> 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.PutAttributesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.PutAttributesRequest.#ctor(System.String,System.String,System.Collections.Generic.List{Amazon.SimpleDB.Model.ReplaceableAttribute})">
            <summary>
            Instantiates PutAttributesRequest with the parameterized properties
            </summary>
            <param name="domainName">The name of the domain in which to perform the operation.</param>
            <param name="itemName">The name of the item.</param>
            <param name="attributes">The list of attributes.</param>
        </member>
        <member name="M:Amazon.SimpleDB.Model.PutAttributesRequest.#ctor(System.String,System.String,System.Collections.Generic.List{Amazon.SimpleDB.Model.ReplaceableAttribute},Amazon.SimpleDB.Model.UpdateCondition)">
            <summary>
            Instantiates PutAttributesRequest with the parameterized properties
            </summary>
            <param name="domainName">The name of the domain in which to perform the operation.</param>
            <param name="itemName">The name of the item.</param>
            <param name="attributes">The list of attributes.</param>
            <param name="expected">The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.</param>
        </member>
        <member name="P:Amazon.SimpleDB.Model.PutAttributesRequest.Attributes">
            <summary>
            Gets and sets the property Attributes. The list of attributes.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.PutAttributesRequest.DomainName">
            <summary>
            Gets and sets the property DomainName. The name of the domain in which to perform
            the operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.PutAttributesRequest.Expected">
            <summary>
            Gets and sets the property Expected. The update condition which, if specified, determines
            whether the specified attributes will be updated or not. The update condition must
            be satisfied in order for this request to be processed and the attributes to be updated.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.PutAttributesRequest.ItemName">
            <summary>
            Gets and sets the property ItemName. The name of the item.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.PutAttributesResponse">
            <summary>
            Configuration for accessing Amazon PutAttributes service
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.PutAttributesResponse.PutAttributesResult">
            <summary>
            Gets and sets the PutAttributesResult property.
            Represents the output of a PutAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.ReplaceableAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.ReplaceableAttribute.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.ReplaceableAttribute.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Instantiates ReplaceableAttribute with the parameterized properties
            </summary>
            <param name="name">The name of the replaceable attribute.</param>
            <param name="value">The value of the replaceable attribute.</param>
            <param name="replace">A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is <code>false</code>.</param>
        </member>
        <member name="P:Amazon.SimpleDB.Model.ReplaceableAttribute.Name">
            <summary>
            Gets and sets the property Name. The name of the replaceable attribute.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.ReplaceableAttribute.Replace">
            <summary>
            Gets and sets the property Replace. A flag specifying whether or not to replace the
            attribute/value pair or to add a new attribute/value pair. The default setting is
            <code>false</code>.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.ReplaceableAttribute.Value">
            <summary>
            Gets and sets the property Value. The value of the replaceable attribute.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.ReplaceableItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.ReplaceableItem.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.ReplaceableItem.#ctor(System.String)">
            <summary>
            Instantiates ReplaceableItem with the parameterized properties
            </summary>
            <param name="name">The name of the replaceable item.</param>
        </member>
        <member name="M:Amazon.SimpleDB.Model.ReplaceableItem.#ctor(System.String,System.Collections.Generic.List{Amazon.SimpleDB.Model.ReplaceableAttribute})">
            <summary>
            Instantiates ReplaceableItem with the parameterized properties
            </summary>
            <param name="name">The name of the replaceable item.</param>
            <param name="attributes">The list of attributes for a replaceable item.</param>
        </member>
        <member name="P:Amazon.SimpleDB.Model.ReplaceableItem.Attributes">
            <summary>
            Gets and sets the property Attributes. The list of attributes for a replaceable item.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.ReplaceableItem.Name">
            <summary>
            Gets and sets the property Name. The name of the replaceable item.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.RequestTimeoutException">
            <summary>
             SimpleDB exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.RequestTimeoutException.#ctor(System.String)">
            <summary>
            Constructs a new RequestTimeoutException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleDB.Model.SelectRequest">
            <summary>
            Container for the parameters to the Select operation.
            The <code>Select</code> operation returns a set of attributes for <code>ItemNames</code>
            that match the select expression. <code>Select</code> is similar to the standard SQL
            SELECT statement. 
            
             
            <para>
             The total size of the response cannot exceed 1 MB in total size. Amazon SimpleDB
            automatically adjusts the number of items returned per page to enforce this limit.
            For example, if the client asks to retrieve 2500 items, but each individual item is
            10 kB in size, the system returns 100 items and an appropriate <code>NextToken</code>
            so the client can access the next page of results. 
            </para>
             
            <para>
             For information on how to construct select expressions, see Using Select to Create
            Amazon SimpleDB Queries in the Developer Guide. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.SelectRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.SelectRequest.#ctor(System.String)">
            <summary>
            Instantiates SelectRequest with the parameterized properties
            </summary>
            <param name="selectExpression">The expression used to query the domain.</param>
        </member>
        <member name="M:Amazon.SimpleDB.Model.SelectRequest.#ctor(System.String,System.Boolean)">
            <summary>
            Instantiates SelectRequest with the parameterized properties
            </summary>
            <param name="selectExpression">The expression used to query the domain.</param>
            <param name="consistentRead">Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.</param>
        </member>
        <member name="P:Amazon.SimpleDB.Model.SelectRequest.ConsistentRead">
            <summary>
            Gets and sets the property ConsistentRead. Determines whether or not strong consistency
            should be enforced when data is read from SimpleDB. If <code>true</code>, any data
            previously written to SimpleDB will be returned. Otherwise, results will be consistent
            eventually, and the client may not see data that was written immediately before your
            read.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.SelectRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. A string informing Amazon SimpleDB where to
            start the next list of <code>ItemNames</code>.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.SelectRequest.SelectExpression">
            <summary>
            Gets and sets the property SelectExpression. The expression used to query the domain.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.SelectResponse">
            <summary>
            Configuration for accessing Amazon Select service
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.SelectResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.SelectResult.Items">
            <summary>
            Gets and sets the property Items. A list of items that match the select expression.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.SelectResult.NextToken">
            <summary>
            Gets and sets the property NextToken. An opaque token indicating that more items than
            <code>MaxNumberOfItems</code> were matched, the response size exceeded 1 megabyte,
            or the execution time exceeded 5 seconds.
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.SelectResponse.SelectResult">
            <summary>
            Gets and sets the SelectResult property.
            Represents the output of a Select operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleDB.Model.TooManyRequestedAttributesException">
            <summary>
             SimpleDB exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.TooManyRequestedAttributesException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyRequestedAttributesException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleDB.Model.UpdateCondition">
            <summary>
            Specifies the conditions under which data should be updated. If an update condition
            is specified for a request, the data will only be updated if the condition is satisfied.
            For example, if an attribute with a specific name and value exists, or if a specific
            attribute doesn't exist.
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.UpdateCondition.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleDB.Model.UpdateCondition.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Instantiates UpdateCondition with the parameterized properties
            </summary>
            <param name="name">The name of the attribute involved in the condition.</param>
            <param name="value">The value of an attribute. This value can only be specified when the <code>Exists</code> parameter is equal to <code>true</code>.</param>
            <param name="exists">A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify <code>true</code> if the attribute must exist for the update condition to be satisfied. Specify <code>false</code> if the attribute should not exist in order for the update condition to be satisfied.</param>
        </member>
        <member name="P:Amazon.SimpleDB.Model.UpdateCondition.Exists">
            <summary>
            Gets and sets the property Exists. 
            <para>
            A value specifying whether or not the specified attribute must exist with the specified
            value in order for the update condition to be satisfied. Specify <code>true</code>
            if the attribute must exist for the update condition to be satisfied. Specify <code>false</code>
            if the attribute should not exist in order for the update condition to be satisfied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.UpdateCondition.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the attribute involved in the condition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleDB.Model.UpdateCondition.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of an attribute. This value can only be specified when the <code>Exists</code>
            parameter is equal to <code>true</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient">
             <summary>
             Implementation for accessing SimpleEmailService
            
             Amazon Simple Email Service        
             <para>
                         This is the API Reference for Amazon Simple Email Service (Amazon SES).
             This documentation is intended to be            used in conjunction with the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html">Amazon
             SES Developer Guide</a>.        
             </para>
                     <note>For a list of Amazon SES endpoints to use in service requests, see <a
             href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html">Regions and
             Amazon SES</a>             in the Amazon SES Developer Guide.         </note>
             </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.IAmazonSimpleEmailService">
             <summary>
             Interface for accessing SimpleEmailService
            
             Amazon Simple Email Service        
             <para>
                         This is the API Reference for Amazon Simple Email Service (Amazon SES).
             This documentation is intended to be            used in conjunction with the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html">Amazon
             SES Developer Guide</a>.        
             </para>
                     <note>For a list of Amazon SES endpoints to use in service requests, see <a
             href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html">Regions and
             Amazon SES</a>             in the Amazon SES Developer Guide.         </note>
             </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.DeleteIdentityAsync(Amazon.SimpleEmail.Model.DeleteIdentityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteIdentity operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteIdentity operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.DeleteVerifiedEmailAddressAsync(Amazon.SimpleEmail.Model.DeleteVerifiedEmailAddressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVerifiedEmailAddress operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVerifiedEmailAddress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.GetIdentityDkimAttributesAsync(Amazon.SimpleEmail.Model.GetIdentityDkimAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetIdentityDkimAttributes operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIdentityDkimAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.GetIdentityNotificationAttributesAsync(Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetIdentityNotificationAttributes operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIdentityNotificationAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.GetIdentityVerificationAttributesAsync(Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetIdentityVerificationAttributes operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIdentityVerificationAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.GetSendQuotaAsync(Amazon.SimpleEmail.Model.GetSendQuotaRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetSendQuota operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSendQuota operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.GetSendStatisticsAsync(Amazon.SimpleEmail.Model.GetSendStatisticsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetSendStatistics operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSendStatistics operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.ListIdentitiesAsync(Amazon.SimpleEmail.Model.ListIdentitiesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListIdentities operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListIdentities operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.ListVerifiedEmailAddressesAsync(Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListVerifiedEmailAddresses operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListVerifiedEmailAddresses operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.SendEmailAsync(Amazon.SimpleEmail.Model.SendEmailRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SendEmail operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SendEmail operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.SendRawEmailAsync(Amazon.SimpleEmail.Model.SendRawEmailRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SendRawEmail operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SendRawEmail operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.SetIdentityDkimEnabledAsync(Amazon.SimpleEmail.Model.SetIdentityDkimEnabledRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetIdentityDkimEnabled operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetIdentityDkimEnabled operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.SetIdentityFeedbackForwardingEnabledAsync(Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetIdentityFeedbackForwardingEnabled operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetIdentityFeedbackForwardingEnabled operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.SetIdentityNotificationTopicAsync(Amazon.SimpleEmail.Model.SetIdentityNotificationTopicRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetIdentityNotificationTopic operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetIdentityNotificationTopic operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.VerifyDomainDkimAsync(Amazon.SimpleEmail.Model.VerifyDomainDkimRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the VerifyDomainDkim operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the VerifyDomainDkim operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.VerifyDomainIdentityAsync(Amazon.SimpleEmail.Model.VerifyDomainIdentityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the VerifyDomainIdentity operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the VerifyDomainIdentity operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.VerifyEmailAddressAsync(Amazon.SimpleEmail.Model.VerifyEmailAddressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the VerifyEmailAddress operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the VerifyEmailAddress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.VerifyEmailIdentityAsync(Amazon.SimpleEmail.Model.VerifyEmailIdentityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the VerifyEmailIdentity operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the VerifyEmailIdentity operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonSimpleEmailServiceClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSimpleEmailServiceClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig)">
            <summary>
            Constructs AmazonSimpleEmailServiceClient with AWS Credentials and an
            AmazonSimpleEmailServiceClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonSimpleEmailServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonSimpleEmailServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSimpleEmailServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor(System.String,System.String,Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig)">
            <summary>
            Constructs AmazonSimpleEmailServiceClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSimpleEmailServiceClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonSimpleEmailServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonSimpleEmailServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSimpleEmailServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor(System.String,System.String,System.String,Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig)">
            <summary>
            Constructs AmazonSimpleEmailServiceClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSimpleEmailServiceClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonSimpleEmailServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.DeleteIdentityAsync(Amazon.SimpleEmail.Model.DeleteIdentityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteIdentity operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteIdentity operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.DeleteVerifiedEmailAddressAsync(Amazon.SimpleEmail.Model.DeleteVerifiedEmailAddressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteVerifiedEmailAddress operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVerifiedEmailAddress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.GetIdentityDkimAttributesAsync(Amazon.SimpleEmail.Model.GetIdentityDkimAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetIdentityDkimAttributes operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIdentityDkimAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.GetIdentityNotificationAttributesAsync(Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetIdentityNotificationAttributes operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIdentityNotificationAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.GetIdentityVerificationAttributesAsync(Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetIdentityVerificationAttributes operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIdentityVerificationAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.GetSendQuotaAsync(Amazon.SimpleEmail.Model.GetSendQuotaRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetSendQuota operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSendQuota operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.GetSendStatisticsAsync(Amazon.SimpleEmail.Model.GetSendStatisticsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetSendStatistics operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSendStatistics operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.ListIdentitiesAsync(Amazon.SimpleEmail.Model.ListIdentitiesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListIdentities operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListIdentities operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.ListVerifiedEmailAddressesAsync(Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListVerifiedEmailAddresses operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListVerifiedEmailAddresses operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.SendEmailAsync(Amazon.SimpleEmail.Model.SendEmailRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SendEmail operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SendEmail operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.SendRawEmailAsync(Amazon.SimpleEmail.Model.SendRawEmailRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SendRawEmail operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SendRawEmail operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.SetIdentityDkimEnabledAsync(Amazon.SimpleEmail.Model.SetIdentityDkimEnabledRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetIdentityDkimEnabled operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetIdentityDkimEnabled operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.SetIdentityFeedbackForwardingEnabledAsync(Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetIdentityFeedbackForwardingEnabled operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetIdentityFeedbackForwardingEnabled operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.SetIdentityNotificationTopicAsync(Amazon.SimpleEmail.Model.SetIdentityNotificationTopicRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetIdentityNotificationTopic operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetIdentityNotificationTopic operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.VerifyDomainDkimAsync(Amazon.SimpleEmail.Model.VerifyDomainDkimRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the VerifyDomainDkim operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the VerifyDomainDkim operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.VerifyDomainIdentityAsync(Amazon.SimpleEmail.Model.VerifyDomainIdentityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the VerifyDomainIdentity operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the VerifyDomainIdentity operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.VerifyEmailAddressAsync(Amazon.SimpleEmail.Model.VerifyEmailAddressRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the VerifyEmailAddress operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the VerifyEmailAddress operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.VerifyEmailIdentityAsync(Amazon.SimpleEmail.Model.VerifyEmailIdentityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the VerifyEmailIdentity operation.
            <seealso cref="T:Amazon.SimpleEmail.IAmazonSimpleEmailService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the VerifyEmailIdentity operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig">
            <summary>
            Configuration for accessing Amazon SimpleEmailService service
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.AmazonSimpleEmailServiceRequest">
            <summary>
            Base class for SimpleEmailService operation requests.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Body">
            <summary>
            Represents the body of the message. You can specify text, HTML, or both. If you use
            both, then            the message should display correctly in the widest variety of
            email clients.
            </summary>
            <summary>
            Represents the body of the message. You can specify text, HTML, or both. If you use
            both, then            the message should display correctly in the widest variety of
            email clients.
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Body.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Body.#ctor(Amazon.SimpleEmail.Model.Content)">
            <summary>
            Instantiates Body with the parameterized properties
            </summary>
            <param name="text">The content of the message, in text format. Use this for text-based email clients, or clients on high-latency networks (such as mobile   devices).  </param>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Body.Html">
            <summary>
            Gets and sets the property Html. 
            <para>
            The content of the message, in HTML format. Use this for email clients that can process
            HTML. You can include clickable links, formatted            text, and much more in
            an HTML message.        
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Body.Text">
            <summary>
            Gets and sets the property Text. 
            <para>
            The content of the message, in text format. Use this for text-based email clients,
            or clients on high-latency networks (such as mobile            devices).        
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Content">
            <summary>
            Represents textual data, plus an optional character set specification.
            
                    
            <para>
            By default, the text must be 7-bit ASCII, due to the constraints of the SMTP protocol.
            If the text must            contain any other characters, then you must also specify
            a character set. Examples include UTF-8, ISO-8859-1,            and Shift_JIS.   
                
            </para>
            </summary>
            <summary>
            Represents textual data, plus an optional character set specification.
            
                    
            <para>
            By default, the text must be 7-bit ASCII, due to the constraints of the SMTP protocol.
            If the text must            contain any other characters, then you must also specify
            a character set. Examples include UTF-8, ISO-8859-1,            and Shift_JIS.   
                
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Content.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Content.#ctor(System.String)">
            <summary>
            Instantiates Content with the parameterized properties
            </summary>
            <param name="data">The textual data of the content.</param>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Content.Charset">
            <summary>
            Gets and sets the property Charset. 
            <para>
            The character set of the content.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Content.Data">
            <summary>
            Gets and sets the property Data. 
            <para>
            The textual data of the content.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DeleteIdentityRequest">
            <summary>
            Container for the parameters to the DeleteIdentity operation.
            Deletes the specified identity (email address or domain) from the list of verified
            identities.
            
                    
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.DeleteIdentityRequest.Identity">
            <summary>
            Gets and sets the property Identity. 
            <para>
            The identity to be removed from the list of identities for the AWS Account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DeleteIdentityResponse">
            <summary>
            Configuration for accessing Amazon DeleteIdentity service
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DeleteIdentityResult">
            <summary>
            An empty element.  Receiving this element indicates that the request completed successfully.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.DeleteIdentityResponse.DeleteIdentityResult">
            <summary>
            Gets and sets the DeleteIdentityResult property.
            Represents the output of a DeleteIdentity operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DeleteVerifiedEmailAddressRequest">
            <summary>
            Container for the parameters to the DeleteVerifiedEmailAddress operation.
            Deletes the specified email address from the list of verified addresses.
            
                    <important>The DeleteVerifiedEmailAddress action is deprecated as of the May
            15, 2012 release        of Domain Verification. The DeleteIdentity action is now preferred.</important>
                   
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.DeleteVerifiedEmailAddressRequest.EmailAddress">
            <summary>
            Gets and sets the property EmailAddress. 
            <para>
            An email address to be removed from the list of verified addresses.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DeleteVerifiedEmailAddressResponse">
            <summary>
            Configuration for accessing Amazon DeleteVerifiedEmailAddress service
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.DeleteVerifiedEmailAddressResponse.DeleteVerifiedEmailAddressResult">
            <summary>
            Gets and sets the DeleteVerifiedEmailAddressResult property.
            Represents the output of a DeleteVerifiedEmailAddress operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Destination">
            <summary>
            Represents the destination of the message, consisting of To:, CC:, and BCC: fields.
            
                    
            <para>
                        By default, the string must be 7-bit ASCII. If the text must contain any
            other characters,             then you must use MIME encoded-word syntax (RFC 2047)
            instead of a literal string.             MIME encoded-word syntax uses the following
            form: <code>=?charset?encoding?encoded-text?=</code>.             For more information,
            see <a href="http://tools.ietf.org/html/rfc2047">RFC 2047</a>.        
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Destination.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Destination.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates Destination with the parameterized properties
            </summary>
            <param name="toAddresses">The To: field(s) of the message.</param>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Destination.BccAddresses">
            <summary>
            Gets and sets the property BccAddresses. 
            <para>
            The BCC: field(s) of the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Destination.CcAddresses">
            <summary>
            Gets and sets the property CcAddresses. 
            <para>
            The CC: field(s) of the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Destination.ToAddresses">
            <summary>
            Gets and sets the property ToAddresses. 
            <para>
            The To: field(s) of the message.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetIdentityDkimAttributesRequest">
            <summary>
            Container for the parameters to the GetIdentityDkimAttributes operation.
            Returns the current status of Easy DKIM signing for an entity. For domain name   
                    identities, this action also returns the DKIM tokens that are required for
            Easy DKIM            signing, and whether Amazon SES has successfully verified that
            these tokens have been            published.
            
                    
            <para>
            This action takes a list of identities as input and returns the following        
               information for each:
            </para>
                    <ul>            <li>Whether Easy DKIM signing is enabled or disabled.</li>
                       <li>A set of DKIM tokens that represent the identity. If the identity is
            an email                address, the tokens represent the domain of that address.</li>
                       <li>Whether Amazon SES has successfully verified the DKIM tokens published
            in the                domain's DNS.  This information is only returned for domain
            name identities, not for                email addresses.</li>        </ul>       
            
            <para>
            This action is throttled at one request per second.
            </para>
                    
            <para>
            For more information about creating DNS records using DKIM tokens, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html">Amazon
            SES                Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetIdentityDkimAttributesRequest.Identities">
            <summary>
            Gets and sets the property Identities. 
            <para>
            A list of one or more verified identities - email addresses, domains, or both.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetIdentityDkimAttributesResponse">
            <summary>
            Configuration for accessing Amazon GetIdentityDkimAttributes service
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetIdentityDkimAttributesResult">
            <summary>
            Represents a list of all the DKIM attributes for the specified identity.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetIdentityDkimAttributesResult.DkimAttributes">
            <summary>
            Gets and sets the property DkimAttributes. 
            <para>
            The DKIM attributes for an email address or a domain. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetIdentityDkimAttributesResponse.GetIdentityDkimAttributesResult">
            <summary>
            Gets and sets the GetIdentityDkimAttributesResult property.
            Represents the output of a GetIdentityDkimAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesRequest">
            <summary>
            Container for the parameters to the GetIdentityNotificationAttributes operation.
            Given a list of verified identities (email addresses and/or domains), returns a structure
            describing identity         notification attributes.
            
                    
            <para>
            This action is throttled at one request per second.
            </para>
                    
            <para>
            For more information about using notifications with Amazon SES, see the          
             <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesRequest.Identities">
            <summary>
            Gets and sets the property Identities. 
            <para>
            A list of one or more identities.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesResponse">
            <summary>
            Configuration for accessing Amazon GetIdentityNotificationAttributes service
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesResult">
            <summary>
            Describes whether an identity has Amazon Simple Notification Service (Amazon SNS)
            topics set for        bounce, complaint, and/or delivery notifications, and specifies
            whether feedback forwarding is        enabled for bounce and complaint notifications.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesResult.NotificationAttributes">
            <summary>
            Gets and sets the property NotificationAttributes. 
            <para>
            A map of Identity to IdentityNotificationAttributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesResponse.GetIdentityNotificationAttributesResult">
            <summary>
            Gets and sets the GetIdentityNotificationAttributesResult property.
            Represents the output of a GetIdentityNotificationAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesRequest">
            <summary>
            Container for the parameters to the GetIdentityVerificationAttributes operation.
            Given a list of identities (email addresses and/or domains), returns the verification
                   status and (for domain identities) the verification token for each identity.
            
                    
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesRequest.Identities">
            <summary>
            Gets and sets the property Identities. 
            <para>
            A list of identities.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesResponse">
            <summary>
            Configuration for accessing Amazon GetIdentityVerificationAttributes service
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesResult">
            <summary>
            Represents the verification attributes for a list of identities.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesResult.VerificationAttributes">
            <summary>
            Gets and sets the property VerificationAttributes. 
            <para>
            A map of Identities to IdentityVerificationAttributes objects.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesResponse.GetIdentityVerificationAttributesResult">
            <summary>
            Gets and sets the GetIdentityVerificationAttributesResult property.
            Represents the output of a GetIdentityVerificationAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetSendQuotaRequest">
            <summary>
            Container for the parameters to the GetSendQuota operation.
            Returns the user's current sending limits.
            
                    
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetSendQuotaResponse">
            <summary>
            Configuration for accessing Amazon GetSendQuota service
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetSendQuotaResult">
            <summary>
            Represents the user's current activity limits returned from a successful         
              <code>GetSendQuota</code>            request.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetSendQuotaResult.Max24HourSend">
            <summary>
            Gets and sets the property Max24HourSend. 
            <para>
            The maximum number of emails the user is allowed to send in a 24-hour interval.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetSendQuotaResult.MaxSendRate">
            <summary>
            Gets and sets the property MaxSendRate. 
            <para>
            The maximum number of emails the user is allowed to send per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetSendQuotaResult.SentLast24Hours">
            <summary>
            Gets and sets the property SentLast24Hours. 
            <para>
            The number of emails sent during the previous 24 hours.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetSendQuotaResponse.GetSendQuotaResult">
            <summary>
            Gets and sets the GetSendQuotaResult property.
            Represents the output of a GetSendQuota operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetSendStatisticsRequest">
            <summary>
            Container for the parameters to the GetSendStatistics operation.
            Returns the user's sending statistics. The result is a list of data points, representing
            the last two weeks of            sending activity.        
            
                    
            <para>
            Each data point in the list contains statistics for a 15-minute interval.
            </para>
                    
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetSendStatisticsResponse">
            <summary>
            Configuration for accessing Amazon GetSendStatistics service
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetSendStatisticsResult">
            <summary>
            Represents a list of            <code>SendDataPoint</code>            items returned
            from a successful            <code>GetSendStatistics</code>            request. This
            list contains aggregated data from the previous two weeks of sending activity.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetSendStatisticsResult.SendDataPoints">
            <summary>
            Gets and sets the property SendDataPoints. 
            <para>
            A list of data points, each of which represents 15 minutes of activity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetSendStatisticsResponse.GetSendStatisticsResult">
            <summary>
            Gets and sets the GetSendStatisticsResult property.
            Represents the output of a GetSendStatistics operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.IdentityDkimAttributes">
            <summary>
            Represents the DKIM attributes of a verified email address or a domain.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityDkimAttributes.DkimEnabled">
            <summary>
            Gets and sets the property DkimEnabled. 
            <para>
            True if DKIM signing is enabled for email sent from the identity; false otherwise.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityDkimAttributes.DkimTokens">
            <summary>
            Gets and sets the property DkimTokens. 
            <para>
            A set of character strings that represent the domain's identity. Using these tokens,
            you            will need to create DNS CNAME records that point to DKIM public keys
            hosted by Amazon            SES. Amazon Web Services will eventually detect that you
            have updated your DNS records;            this detection process may take up to 72
            hours. Upon successful detection, Amazon SES            will be able to DKIM-sign
            email originating from that domain. (This only applies to            domain identities,
            not email address identities.)
            </para>
                    
            <para>
            For more information about creating DNS records using DKIM tokens, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html">Amazon
            SES                Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityDkimAttributes.DkimVerificationStatus">
            <summary>
            Gets and sets the property DkimVerificationStatus. 
            <para>
            Describes whether Amazon SES has successfully verified the DKIM DNS records      
                 (tokens) published in the domain name's DNS.  (This only applies to domain identities,
            not email address identities.)
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.IdentityNotificationAttributes">
            <summary>
            Represents the notification attributes of an identity, including whether an identity
            has Amazon Simple        Notification Service (Amazon SNS) topics set for bounce,
            complaint, and/or delivery notifications,        and whether feedback forwarding is
            enabled for bounce and complaint notifications.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityNotificationAttributes.BounceTopic">
            <summary>
            Gets and sets the property BounceTopic. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon SNS topic        where Amazon SES will
            publish bounce notifications.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityNotificationAttributes.ComplaintTopic">
            <summary>
            Gets and sets the property ComplaintTopic. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon SNS topic        where Amazon SES will
            publish complaint notifications.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityNotificationAttributes.DeliveryTopic">
            <summary>
            Gets and sets the property DeliveryTopic. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon SNS topic        where Amazon SES will
            publish delivery notifications.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityNotificationAttributes.ForwardingEnabled">
            <summary>
            Gets and sets the property ForwardingEnabled. 
            <para>
            Describes whether Amazon SES will forward bounce and complaint notifications as email.
            <code>true</code> indicates        that Amazon SES will forward bounce and complaint
            notifications as email, while <code>false</code> indicates that        bounce and
            complaint notifications will be published only to the specified bounce and complaint
            Amazon SNS topics.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.IdentityVerificationAttributes">
            <summary>
            Represents the verification attributes of a single identity.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityVerificationAttributes.VerificationStatus">
            <summary>
            Gets and sets the property VerificationStatus. 
            <para>
            The verification status of the identity: "Pending", "Success", "Failed", or "TemporaryFailure".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityVerificationAttributes.VerificationToken">
            <summary>
            Gets and sets the property VerificationToken. 
            <para>
            The verification token for a domain identity. Null for email address identities.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityRequestMarshaller">
            <summary>
            DeleteIdentity Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteIdentity operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteVerifiedEmailAddressRequestMarshaller">
            <summary>
            DeleteVerifiedEmailAddress Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteVerifiedEmailAddressResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteVerifiedEmailAddress operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityDkimAttributesRequestMarshaller">
            <summary>
            GetIdentityDkimAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityDkimAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetIdentityDkimAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityNotificationAttributesRequestMarshaller">
            <summary>
            GetIdentityNotificationAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityNotificationAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetIdentityNotificationAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityVerificationAttributesRequestMarshaller">
            <summary>
            GetIdentityVerificationAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityVerificationAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetIdentityVerificationAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendQuotaRequestMarshaller">
            <summary>
            GetSendQuota Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendQuotaResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSendQuota operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendStatisticsRequestMarshaller">
            <summary>
            GetSendStatistics Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendStatisticsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSendStatistics operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityDkimAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityDkimAttributes Object
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityNotificationAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityNotificationAttributes Object
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityVerificationAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityVerificationAttributes Object
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentitiesRequestMarshaller">
            <summary>
            ListIdentities Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentitiesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListIdentities operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListVerifiedEmailAddressesRequestMarshaller">
            <summary>
            ListVerifiedEmailAddresses Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListVerifiedEmailAddressesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListVerifiedEmailAddresses operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendDataPointUnmarshaller">
            <summary>
            Response Unmarshaller for SendDataPoint Object
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendEmailRequestMarshaller">
            <summary>
            SendEmail Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendEmailResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SendEmail operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendRawEmailRequestMarshaller">
            <summary>
            SendRawEmail Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendRawEmailResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SendRawEmail operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityDkimEnabledRequestMarshaller">
            <summary>
            SetIdentityDkimEnabled Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityDkimEnabledResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetIdentityDkimEnabled operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityFeedbackForwardingEnabledRequestMarshaller">
            <summary>
            SetIdentityFeedbackForwardingEnabled Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityFeedbackForwardingEnabledResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetIdentityFeedbackForwardingEnabled operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityNotificationTopicRequestMarshaller">
            <summary>
            SetIdentityNotificationTopic Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityNotificationTopicResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetIdentityNotificationTopic operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainDkimRequestMarshaller">
            <summary>
            VerifyDomainDkim Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainDkimResponseUnmarshaller">
            <summary>
            Response Unmarshaller for VerifyDomainDkim operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainIdentityRequestMarshaller">
            <summary>
            VerifyDomainIdentity Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainIdentityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for VerifyDomainIdentity operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailAddressRequestMarshaller">
            <summary>
            VerifyEmailAddress Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailAddressResponseUnmarshaller">
            <summary>
            Response Unmarshaller for VerifyEmailAddress operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailIdentityRequestMarshaller">
            <summary>
            VerifyEmailIdentity Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailIdentityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for VerifyEmailIdentity operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ListIdentitiesRequest">
            <summary>
            Container for the parameters to the ListIdentities operation.
            Returns a list containing all of the identities (email addresses and domains) for
                    a specific AWS Account, regardless of verification status.
            
                    
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ListIdentitiesRequest.IdentityType">
            <summary>
            Gets and sets the property IdentityType. 
            <para>
            The type of the identities to list. Possible values are "EmailAddress" and "Domain".
            If this parameter is omitted, then all identities will be listed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ListIdentitiesRequest.MaxItems">
            <summary>
            Gets and sets the property MaxItems. 
            <para>
            The maximum number of identities per page. Possible values are 1-100 inclusive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ListIdentitiesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use for pagination.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ListIdentitiesResponse">
            <summary>
            Configuration for accessing Amazon ListIdentities service
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ListIdentitiesResult">
            <summary>
            Represents a list of all verified identities for the AWS Account.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ListIdentitiesResult.Identities">
            <summary>
            Gets and sets the property Identities. 
            <para>
            A list of identities.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ListIdentitiesResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token used for pagination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ListIdentitiesResponse.ListIdentitiesResult">
            <summary>
            Gets and sets the ListIdentitiesResult property.
            Represents the output of a ListIdentities operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesRequest">
            <summary>
            Container for the parameters to the ListVerifiedEmailAddresses operation.
            Returns a list containing all of the email addresses that have been verified.
            
                    <important>The ListVerifiedEmailAddresses action is deprecated as of the May
            15, 2012 release of         Domain Verification. The ListIdentities action is now
            preferred.</important>        
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesResponse">
            <summary>
            Configuration for accessing Amazon ListVerifiedEmailAddresses service
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesResult">
            <summary>
            Represents a list of all the email addresses verified for the current user.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesResult.VerifiedEmailAddresses">
            <summary>
            Gets and sets the property VerifiedEmailAddresses. 
            <para>
            A list of email addresses that have been verified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesResponse.ListVerifiedEmailAddressesResult">
            <summary>
            Gets and sets the ListVerifiedEmailAddressesResult property.
            Represents the output of a ListVerifiedEmailAddresses operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Message">
            <summary>
            Represents the message to be sent, composed of a subject and a body.
            </summary>
            <summary>
            Represents the message to be sent, composed of a subject and a body.
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Message.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Message.#ctor(Amazon.SimpleEmail.Model.Content,Amazon.SimpleEmail.Model.Body)">
            <summary>
            Instantiates Message with the parameterized properties
            </summary>
            <param name="subject">The subject of the message: A short summary of the content, which will appear in the recipient's inbox.</param>
            <param name="body">The message body.</param>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Message.Body">
            <summary>
            Gets and sets the property Body. 
            <para>
            The message body.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Message.Subject">
            <summary>
            Gets and sets the property Subject. 
            <para>
            The subject of the message: A short summary of the content, which will appear in the
            recipient's inbox.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.MessageRejectedException">
            <summary>
             SimpleEmailService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.MessageRejectedException.#ctor(System.String)">
            <summary>
            Constructs a new MessageRejectedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.RawMessage">
            <summary>
            Represents the raw data of the message.
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.RawMessage.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.RawMessage.#ctor(System.IO.MemoryStream)">
            <summary>
            Instantiates RawMessage with the parameterized properties
            </summary>
            <param name="data">The raw data of the message. The client must ensure that the message format complies with Internet email   standards regarding email header fields, MIME types, MIME encoding, and base64 encoding (if necessary).    The To:, CC:, and BCC: headers in the raw message can contain a group list.    For more information, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-raw.html">Amazon SES Developer Guide</a>.  </param>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.RawMessage.Data">
            <summary>
            Gets and sets the property Data. 
            <para>
            The raw data of the message. The client must ensure that the message format complies
            with Internet email            standards regarding email header fields, MIME types,
            MIME encoding, and base64 encoding (if necessary).        
            </para>
                    
            <para>
            The To:, CC:, and BCC: headers in the raw message can contain a group list.      
             
            </para>
                    
            <para>
            For more information, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-raw.html">Amazon
            SES Developer Guide</a>.        
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SendDataPoint">
            <summary>
            Represents sending statistics data. Each            <code>SendDataPoint</code>   
                    contains statistics for a 15-minute period of sending activity.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendDataPoint.Bounces">
            <summary>
            Gets and sets the property Bounces. 
            <para>
            Number of emails that have bounced.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendDataPoint.Complaints">
            <summary>
            Gets and sets the property Complaints. 
            <para>
            Number of unwanted emails that were rejected by recipients.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendDataPoint.DeliveryAttempts">
            <summary>
            Gets and sets the property DeliveryAttempts. 
            <para>
            Number of emails that have been enqueued for sending.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendDataPoint.Rejects">
            <summary>
            Gets and sets the property Rejects. 
            <para>
            Number of emails rejected by Amazon SES.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendDataPoint.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            Time of the data point.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SendEmailRequest">
            <summary>
            Container for the parameters to the SendEmail operation.
            Composes an email message based on input data, and then immediately queues the message
                       for sending.        
            
                    <important>            You can only send email from verified email addresses
            and domains.             If you have not requested production access to Amazon SES,
            you must also             verify every recipient email address except for the recipients
            provided             by the Amazon SES mailbox simulator. For more information, go
            to the            <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html">Amazon
            SES                Developer Guide</a>.        </important>        
            <para>
            The total size of the message cannot exceed 10 MB.
            </para>
                    
            <para>
            Amazon SES has a limit on the total number of recipients per message: The combined
            number            of To:, CC: and BCC: email addresses cannot exceed 50. If you need
            to send an email            message to a larger audience, you can divide your recipient
            list into groups of 50 or            fewer, and then call Amazon SES repeatedly to
            send the message to each group.        
            </para>
                    
            <para>
            For every message that you send, the total number of recipients (To:, CC: and BCC:)
            is            counted against your            <i>sending quota</i>            - the
            maximum number of emails you can send in            a 24-hour period. For information
            about your sending quota, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/manage-sending-limits.html">Amazon
            SES                Developer Guide</a>.        
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.SendEmailRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.SendEmailRequest.#ctor(System.String,Amazon.SimpleEmail.Model.Destination,Amazon.SimpleEmail.Model.Message)">
            <summary>
            Instantiates SendEmailRequest with the parameterized properties
            </summary>
            <param name="source">The identity's email address.     By default, the string must be 7-bit ASCII. If the text must contain any other characters,    then you must use MIME encoded-word syntax (RFC 2047) instead of a literal string.    MIME encoded-word syntax uses the following form: <code>=?charset?encoding?encoded-text?=</code>.    For more information, see <a href="http://tools.ietf.org/html/rfc2047">RFC 2047</a>.  </param>
            <param name="destination">The destination for this email, composed of To:, CC:, and BCC: fields.</param>
            <param name="message">The message to be sent.</param>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendEmailRequest.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The destination for this email, composed of To:, CC:, and BCC: fields.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendEmailRequest.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The message to be sent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendEmailRequest.ReplyToAddresses">
            <summary>
            Gets and sets the property ReplyToAddresses. 
            <para>
            The reply-to email address(es) for the message. If the recipient replies to the message,
            each reply-to address            will receive the reply.        
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendEmailRequest.ReturnPath">
            <summary>
            Gets and sets the property ReturnPath. 
            <para>
            The email address to which bounces and complaints are to be forwarded when feedback
            forwarding is enabled. If the message cannot be delivered to the            recipient,
            then an error message will be returned from the recipient's ISP; this message will
            then be forwarded            to the email address specified by the            <code>ReturnPath</code>
                       parameter.        
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendEmailRequest.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The identity's email address.
            </para>
                    
            <para>
                        By default, the string must be 7-bit ASCII. If the text must contain any
            other characters,             then you must use MIME encoded-word syntax (RFC 2047)
            instead of a literal string.             MIME encoded-word syntax uses the following
            form: <code>=?charset?encoding?encoded-text?=</code>.             For more information,
            see <a href="http://tools.ietf.org/html/rfc2047">RFC 2047</a>.        
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SendEmailResponse">
            <summary>
            Configuration for accessing Amazon SendEmail service
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SendEmailResult">
            <summary>
            Represents a unique message ID returned from a successful            <code>SendEmail</code>
                       request.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendEmailResult.MessageId">
            <summary>
            Gets and sets the property MessageId. 
            <para>
            The unique message identifier returned from the            <code>SendEmail</code>
                       action.        
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendEmailResponse.SendEmailResult">
            <summary>
            Gets and sets the SendEmailResult property.
            Represents the output of a SendEmail operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SendRawEmailRequest">
            <summary>
            Container for the parameters to the SendRawEmail operation.
            Sends an email message, with header and content specified by the client. The     
                  <code>SendRawEmail</code>            action is useful for sending multipart
            MIME emails. The raw text of the message must comply with Internet            email
            standards; otherwise, the message cannot be sent.        
            
                    <important>            You can only send email from verified email addresses
            and domains.             If you have not requested production access to Amazon SES,
            you must also             verify every recipient email address except for the recipients
            provided             by the Amazon SES mailbox simulator. For more information, go
            to the            <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html">Amazon
            SES                Developer Guide</a>.        </important>        
            <para>
            The total size of the message cannot exceed 10 MB. This includes any attachments that
            are part of the message.
            </para>
                    
            <para>
            Amazon SES has a limit on the total number of recipients per message: The combined
            number            of To:, CC: and BCC: email addresses cannot exceed 50. If you need
            to send an email            message to a larger audience, you can divide your recipient
            list into groups of 50 or            fewer, and then call Amazon SES repeatedly to
            send the message to each group.        
            </para>
                    
            <para>
            The To:, CC:, and BCC: headers in the raw message can contain a group list. Note that
            each recipient in a group list         counts towards the 50-recipient limit.    
               
            </para>
                    
            <para>
            For every message that you send, the total number of recipients (To:, CC: and BCC:)
            is            counted against your            <i>sending quota</i>            - the
            maximum number of emails you can send in            a 24-hour period. For information
            about your sending quota, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/manage-sending-limits.html">Amazon
            SES                Developer Guide</a>.        
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.SendRawEmailRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.SendRawEmailRequest.#ctor(Amazon.SimpleEmail.Model.RawMessage)">
            <summary>
            Instantiates SendRawEmailRequest with the parameterized properties
            </summary>
            <param name="rawMessage">The raw text of the message. The client is responsible for ensuring the following:     <ul>    <li>Message must contain a header and a body, separated by a blank line.</li>    <li>All required header fields must be present.</li>    <li>Each part of a multipart MIME message must be formatted properly.</li>    <li>MIME content types must be among those supported by Amazon SES. For more information, go to the     <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/mime-types.html">Amazon SES      Developer Guide</a>.    </li>    <li>Content must be base64-encoded, if MIME requires it.</li>   </ul>  </param>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendRawEmailRequest.Destinations">
            <summary>
            Gets and sets the property Destinations. 
            <para>
            A list of destinations for the message, consisting of To:, CC:, and BCC: addresses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendRawEmailRequest.RawMessage">
            <summary>
            Gets and sets the property RawMessage. 
            <para>
            The raw text of the message. The client is responsible for ensuring the following:
            </para>
                    
            <para>
                        <ul>                <li>Message must contain a header and a body, separated
            by a blank line.</li>                <li>All required header fields must be present.</li>
                           <li>Each part of a multipart MIME message must be formatted properly.</li>
                           <li>MIME content types must be among those supported by Amazon SES.
            For more information, go to the                    <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/mime-types.html">Amazon
            SES                        Developer Guide</a>.                </li>             
              <li>Content must be base64-encoded, if MIME requires it.</li>            </ul> 
                  
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendRawEmailRequest.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The identity's email address.
            </para>
                    
            <para>
                        By default, the string must be 7-bit ASCII. If the text must contain any
            other characters,             then you must use MIME encoded-word syntax (RFC 2047)
            instead of a literal string.             MIME encoded-word syntax uses the following
            form: <code>=?charset?encoding?encoded-text?=</code>.             For more information,
            see <a href="http://tools.ietf.org/html/rfc2047">RFC 2047</a>.        
            </para>
                    <note>If you specify the            <code>Source</code>            parameter
            and have feedback forwarding enabled, then bounces and            complaints will
            be sent to this email address. This takes precedence over any            <i>Return-Path</i>
                       header that you might include in the raw text of the message.        </note>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SendRawEmailResponse">
            <summary>
            Configuration for accessing Amazon SendRawEmail service
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SendRawEmailResult">
            <summary>
            Represents a unique message ID returned from a successful            <code>SendRawEmail</code>
                       request.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendRawEmailResult.MessageId">
            <summary>
            Gets and sets the property MessageId. 
            <para>
            The unique message identifier returned from the            <code>SendRawEmail</code>
                       action.        
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendRawEmailResponse.SendRawEmailResult">
            <summary>
            Gets and sets the SendRawEmailResult property.
            Represents the output of a SendRawEmail operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetIdentityDkimEnabledRequest">
            <summary>
            Container for the parameters to the SetIdentityDkimEnabled operation.
            Enables or disables Easy DKIM signing of email sent from an identity:
            
                        <ul>                <li>If Easy DKIM            signing is enabled for
            a domain name identity (e.g., <code>example.com</code>), then Amazon SES will DKIM-sign
                       all email sent by addresses under that domain name (e.g.,             
                  <code>user@example.com</code>).</li>                <li>If Easy DKIM signing
            is enabled for an email address, then Amazon SES will DKIM-sign            all email
            sent by that email address.</li>            </ul>        
            <para>
            For email addresses (e.g., <code>user@example.com</code>), you can only enable Easy
            DKIM signing  if the        corresponding domain (e.g., <code>example.com</code>)
            has been set up for Easy DKIM using the AWS Console or             the <code>VerifyDomainDkim</code>
            action.
            </para>
                    
            <para>
            This action is throttled at one request per second.
            </para>
                    
            <para>
            For more information about Easy DKIM signing, go to the             <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityDkimEnabledRequest.DkimEnabled">
            <summary>
            Gets and sets the property DkimEnabled. 
            <para>
            Sets whether DKIM signing is enabled for an identity.  Set to <code>true</code> to
            enable DKIM signing for this identity;             <code>false</code> to disable it.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityDkimEnabledRequest.Identity">
            <summary>
            Gets and sets the property Identity. 
            <para>
            The identity for which DKIM signing should be enabled or disabled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetIdentityDkimEnabledResponse">
            <summary>
            Configuration for accessing Amazon SetIdentityDkimEnabled service
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetIdentityDkimEnabledResult">
            <summary>
            An empty element.  Receiving this element indicates that the request completed successfully.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityDkimEnabledResponse.SetIdentityDkimEnabledResult">
            <summary>
            Gets and sets the SetIdentityDkimEnabledResult property.
            Represents the output of a SetIdentityDkimEnabled operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledRequest">
            <summary>
            Container for the parameters to the SetIdentityFeedbackForwardingEnabled operation.
            Given an identity (email address or domain), enables or disables whether Amazon SES
            forwards            bounce and complaint notifications as email. Feedback forwarding
            can only be disabled when            Amazon Simple Notification Service (Amazon SNS)
            topics are specified for both bounces and complaints.
            
                    <note>Feedback forwarding does not apply to delivery notifications.      
                 Delivery notifications are only available through Amazon SNS.</note>        
            <para>
            This action is throttled at one request per second.
            </para>
                    
            <para>
            For more information about using notifications with Amazon SES,            see the
            <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledRequest.ForwardingEnabled">
            <summary>
            Gets and sets the property ForwardingEnabled. 
            <para>
            Sets whether Amazon SES will forward bounce and complaint notifications as email.
            <code>true</code> specifies         that Amazon SES will forward bounce and complaint
            notifications as email, in addition to any Amazon SNS topic publishing         otherwise
            specified. <code>false</code> specifies that Amazon SES         will publish bounce
            and complaint notifications only through Amazon SNS. This value can only be      
              set to <code>false</code> when Amazon SNS topics are set for both <code>Bounce</code>
            and         <code>Complaint</code> notification types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledRequest.Identity">
            <summary>
            Gets and sets the property Identity. 
            <para>
            The identity for which to set bounce and complaint notification forwarding.      
              Examples: <code>user@example.com</code>, <code>example.com</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledResponse">
            <summary>
            Configuration for accessing Amazon SetIdentityFeedbackForwardingEnabled service
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledResult">
            <summary>
            An empty element.  Receiving this element indicates that the request completed successfully.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledResponse.SetIdentityFeedbackForwardingEnabledResult">
            <summary>
            Gets and sets the SetIdentityFeedbackForwardingEnabledResult property.
            Represents the output of a SetIdentityFeedbackForwardingEnabled operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetIdentityNotificationTopicRequest">
            <summary>
            Container for the parameters to the SetIdentityNotificationTopic operation.
            Given an identity (email address or domain), sets the Amazon Simple Notification Service
            (Amazon SNS) topic to which Amazon SES will publish        bounce, complaint, and/or
            delivery notifications for emails sent with that identity as the <code>Source</code>.
            
                    <note>Unless feedback forwarding is enabled, you must specify Amazon SNS topics
            for bounce and complaint notifications.            For more information, see <code>SetIdentityFeedbackForwardingEnabled</code>.
                   </note>        
            <para>
            This action is throttled at one request per second.
            </para>
                    
            <para>
            For more information about feedback notification, see the            <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityNotificationTopicRequest.Identity">
            <summary>
            Gets and sets the property Identity. 
            <para>
            The identity for which the Amazon SNS topic will be set.  Examples: <code>user@example.com</code>,
            <code>example.com</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityNotificationTopicRequest.NotificationType">
            <summary>
            Gets and sets the property NotificationType. 
            <para>
            The type of notifications that will be published to the specified Amazon SNS topic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityNotificationTopicRequest.SnsTopic">
            <summary>
            Gets and sets the property SnsTopic. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon SNS topic.        If the parameter is
            omitted from the request or a null value is passed, <code>SnsTopic</code> is cleared
            and publishing is disabled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetIdentityNotificationTopicResponse">
            <summary>
            Configuration for accessing Amazon SetIdentityNotificationTopic service
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetIdentityNotificationTopicResult">
            <summary>
            An empty element.  Receiving this element indicates that the request completed successfully.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityNotificationTopicResponse.SetIdentityNotificationTopicResult">
            <summary>
            Gets and sets the SetIdentityNotificationTopicResult property.
            Represents the output of a SetIdentityNotificationTopic operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.VerifyDomainDkimRequest">
            <summary>
            Container for the parameters to the VerifyDomainDkim operation.
            Returns a set of DKIM tokens for a domain. DKIM <i>tokens</i> are character strings
            that            represent your domain's identity. Using these tokens, you will need
            to create DNS CNAME            records that point to DKIM public keys hosted by Amazon
            SES. Amazon Web Services will            eventually detect that you have updated your
            DNS records; this detection process may            take up to 72 hours. Upon successful
            detection, Amazon SES will be able to DKIM-sign            email originating from
            that domain.
            
                    
            <para>
            This action is throttled at one request per second.
            </para>
                    
            <para>
            To enable or disable Easy DKIM signing for            a domain, use the <code>SetIdentityDkimEnabled</code>
            action.
            </para>
                    
            <para>
            For more information about creating DNS records using DKIM tokens, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html">Amazon
            SES                Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.VerifyDomainDkimRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain to be verified for Easy DKIM signing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.VerifyDomainDkimResponse">
            <summary>
            Configuration for accessing Amazon VerifyDomainDkim service
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.VerifyDomainDkimResult">
            <summary>
            Represents the DNS records that must be published in the domain name's DNS to complete
                   DKIM setup.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.VerifyDomainDkimResult.DkimTokens">
            <summary>
            Gets and sets the property DkimTokens. 
            <para>
            A set of character strings that represent the domain's identity. If the identity is
            an            email address, the tokens represent the domain of that address.
            </para>
                    
            <para>
            Using these tokens, you will need to create DNS CNAME records that point to DKIM public
                       keys hosted by Amazon SES. Amazon Web Services will eventually detect that
            you have            updated your DNS records; this detection process may take up to
            72 hours. Upon            successful detection, Amazon SES will be able to DKIM-sign
            emails originating from that            domain.
            </para>
                    
            <para>
            For more information about creating DNS records using DKIM tokens, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html">Amazon
            SES                Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.VerifyDomainDkimResponse.VerifyDomainDkimResult">
            <summary>
            Gets and sets the VerifyDomainDkimResult property.
            Represents the output of a VerifyDomainDkim operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.VerifyDomainIdentityRequest">
            <summary>
            Container for the parameters to the VerifyDomainIdentity operation.
            Verifies a domain.
            
                    
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.VerifyDomainIdentityRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain to be verified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.VerifyDomainIdentityResponse">
            <summary>
            Configuration for accessing Amazon VerifyDomainIdentity service
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.VerifyDomainIdentityResult">
            <summary>
            Represents a token used for domain ownership verification.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.VerifyDomainIdentityResult.VerificationToken">
            <summary>
            Gets and sets the property VerificationToken. 
            <para>
            A TXT record that must be placed in the DNS settings for the domain, in order to complete
            domain verification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.VerifyDomainIdentityResponse.VerifyDomainIdentityResult">
            <summary>
            Gets and sets the VerifyDomainIdentityResult property.
            Represents the output of a VerifyDomainIdentity operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.VerifyEmailAddressRequest">
            <summary>
            Container for the parameters to the VerifyEmailAddress operation.
            Verifies an email address. This action causes a confirmation email message to be 
                   sent to the specified address.
            
                    <important>The VerifyEmailAddress action is deprecated as of the May 15, 2012
            release        of Domain Verification. The VerifyEmailIdentity action is now preferred.</important>
                   
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.VerifyEmailAddressRequest.EmailAddress">
            <summary>
            Gets and sets the property EmailAddress. 
            <para>
            The email address to be verified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.VerifyEmailAddressResponse">
            <summary>
            Configuration for accessing Amazon VerifyEmailAddress service
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.VerifyEmailAddressResponse.VerifyEmailAddressResult">
            <summary>
            Gets and sets the VerifyEmailAddressResult property.
            Represents the output of a VerifyEmailAddress operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.VerifyEmailIdentityRequest">
            <summary>
            Container for the parameters to the VerifyEmailIdentity operation.
            Verifies an email address. This action causes a confirmation email message       
            to be sent to the specified address.
            
                    
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.VerifyEmailIdentityRequest.EmailAddress">
            <summary>
            Gets and sets the property EmailAddress. 
            <para>
            The email address to be verified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.VerifyEmailIdentityResponse">
            <summary>
            Configuration for accessing Amazon VerifyEmailIdentity service
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.VerifyEmailIdentityResult">
            <summary>
            An empty element.  Receiving this element indicates that the request completed successfully.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.VerifyEmailIdentityResponse.VerifyEmailIdentityResult">
            <summary>
            Gets and sets the VerifyEmailIdentityResult property.
            Represents the output of a VerifyEmailIdentity operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.IdentityType">
            <summary>
            Constants used for properties of type IdentityType.
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.IdentityType.Domain">
            <summary>
            Constant Domain for IdentityType
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.IdentityType.EmailAddress">
            <summary>
            Constant EmailAddress for IdentityType
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.IdentityType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.IdentityType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.SimpleEmail.NotificationType">
            <summary>
            Constants used for properties of type NotificationType.
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.NotificationType.Bounce">
            <summary>
            Constant Bounce for NotificationType
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.NotificationType.Complaint">
            <summary>
            Constant Complaint for NotificationType
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.NotificationType.Delivery">
            <summary>
            Constant Delivery for NotificationType
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.NotificationType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.NotificationType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.SimpleEmail.VerificationStatus">
            <summary>
            Constants used for properties of type VerificationStatus.
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.VerificationStatus.Failed">
            <summary>
            Constant Failed for VerificationStatus
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.VerificationStatus.NotStarted">
            <summary>
            Constant NotStarted for VerificationStatus
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.VerificationStatus.Pending">
            <summary>
            Constant Pending for VerificationStatus
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.VerificationStatus.Success">
            <summary>
            Constant Success for VerificationStatus
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.VerificationStatus.TemporaryFailure">
            <summary>
            Constant TemporaryFailure for VerificationStatus
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.VerificationStatus.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.VerificationStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="T:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient">
             <summary>
             Implementation for accessing SimpleNotificationService
            
             Amazon Simple Notification Service        
             <para>
             Amazon Simple Notification Service (Amazon SNS) is a web service that enables you
             to build distributed web-enabled applications.         Applications can use Amazon SNS
             to easily push real-time notification messages         to interested subscribers over
             multiple delivery protocols. For more information about this product        see <a href="http://aws.amazon.com/sns/">http://aws.amazon.com/sns</a>.
             For detailed information about Amazon SNS features and their associated API calls,        see
             the <a href="http://docs.aws.amazon.com/sns/latest/dg/">Amazon SNS Developer Guide</a>.    
             </para>
                 
             <para>
             We also provide SDKs that enable you to access Amazon SNS from your preferred programming
             language.       The SDKs contain functionality that automatically takes care of tasks
             such as: cryptographically signing your service requests,       retrying requests,
             and handling error responses. For a list of available SDKs, go to <a href="http://aws.amazon.com/tools/">Tools
             for Amazon Web Services</a>.      
             </para>
             </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService">
             <summary>
             Interface for accessing SimpleNotificationService
            
             Amazon Simple Notification Service        
             <para>
             Amazon Simple Notification Service (Amazon SNS) is a web service that enables you
             to build distributed web-enabled applications.         Applications can use Amazon SNS
             to easily push real-time notification messages         to interested subscribers over
             multiple delivery protocols. For more information about this product        see <a href="http://aws.amazon.com/sns/">http://aws.amazon.com/sns</a>.
             For detailed information about Amazon SNS features and their associated API calls,        see
             the <a href="http://docs.aws.amazon.com/sns/latest/dg/">Amazon SNS Developer Guide</a>.    
             </para>
                 
             <para>
             We also provide SDKs that enable you to access Amazon SNS from your preferred programming
             language.       The SDKs contain functionality that automatically takes care of tasks
             such as: cryptographically signing your service requests,       retrying requests,
             and handling error responses. For a list of available SDKs, go to <a href="http://aws.amazon.com/tools/">Tools
             for Amazon Web Services</a>.      
             </para>
             </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.AddPermissionAsync(Amazon.SimpleNotificationService.Model.AddPermissionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AddPermission operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddPermission operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.ConfirmSubscriptionAsync(Amazon.SimpleNotificationService.Model.ConfirmSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ConfirmSubscription operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ConfirmSubscription operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.CreatePlatformApplicationAsync(Amazon.SimpleNotificationService.Model.CreatePlatformApplicationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreatePlatformApplication operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreatePlatformApplication operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.CreatePlatformEndpointAsync(Amazon.SimpleNotificationService.Model.CreatePlatformEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreatePlatformEndpoint operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreatePlatformEndpoint operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.CreateTopicAsync(Amazon.SimpleNotificationService.Model.CreateTopicRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateTopic operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateTopic operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.DeleteEndpointAsync(Amazon.SimpleNotificationService.Model.DeleteEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteEndpoint operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteEndpoint operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.DeletePlatformApplicationAsync(Amazon.SimpleNotificationService.Model.DeletePlatformApplicationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeletePlatformApplication operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeletePlatformApplication operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.DeleteTopicAsync(Amazon.SimpleNotificationService.Model.DeleteTopicRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteTopic operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteTopic operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.GetEndpointAttributesAsync(Amazon.SimpleNotificationService.Model.GetEndpointAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetEndpointAttributes operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetEndpointAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.GetPlatformApplicationAttributesAsync(Amazon.SimpleNotificationService.Model.GetPlatformApplicationAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetPlatformApplicationAttributes operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetPlatformApplicationAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.GetSubscriptionAttributesAsync(Amazon.SimpleNotificationService.Model.GetSubscriptionAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetSubscriptionAttributes operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSubscriptionAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.GetTopicAttributesAsync(Amazon.SimpleNotificationService.Model.GetTopicAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetTopicAttributes operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetTopicAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.ListEndpointsByPlatformApplicationAsync(Amazon.SimpleNotificationService.Model.ListEndpointsByPlatformApplicationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListEndpointsByPlatformApplication operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListEndpointsByPlatformApplication operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.ListPlatformApplicationsAsync(Amazon.SimpleNotificationService.Model.ListPlatformApplicationsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListPlatformApplications operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListPlatformApplications operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.ListSubscriptionsAsync(Amazon.SimpleNotificationService.Model.ListSubscriptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListSubscriptions operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListSubscriptions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.ListSubscriptionsByTopicAsync(Amazon.SimpleNotificationService.Model.ListSubscriptionsByTopicRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListSubscriptionsByTopic operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListSubscriptionsByTopic operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.ListTopicsAsync(Amazon.SimpleNotificationService.Model.ListTopicsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListTopics operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTopics operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.PublishAsync(Amazon.SimpleNotificationService.Model.PublishRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Publish operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Publish operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.RemovePermissionAsync(Amazon.SimpleNotificationService.Model.RemovePermissionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RemovePermission operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemovePermission operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.SetEndpointAttributesAsync(Amazon.SimpleNotificationService.Model.SetEndpointAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetEndpointAttributes operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetEndpointAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.SetPlatformApplicationAttributesAsync(Amazon.SimpleNotificationService.Model.SetPlatformApplicationAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetPlatformApplicationAttributes operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetPlatformApplicationAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.SetSubscriptionAttributesAsync(Amazon.SimpleNotificationService.Model.SetSubscriptionAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetSubscriptionAttributes operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetSubscriptionAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.SetTopicAttributesAsync(Amazon.SimpleNotificationService.Model.SetTopicAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetTopicAttributes operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetTopicAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.SubscribeAsync(Amazon.SimpleNotificationService.Model.SubscribeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Subscribe operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Subscribe operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService.UnsubscribeAsync(Amazon.SimpleNotificationService.Model.UnsubscribeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Unsubscribe operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Unsubscribe operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonSimpleNotificationServiceClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSimpleNotificationServiceClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceConfig)">
            <summary>
            Constructs AmazonSimpleNotificationServiceClient with AWS Credentials and an
            AmazonSimpleNotificationServiceClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonSimpleNotificationServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonSimpleNotificationServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSimpleNotificationServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.#ctor(System.String,System.String,Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceConfig)">
            <summary>
            Constructs AmazonSimpleNotificationServiceClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSimpleNotificationServiceClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonSimpleNotificationServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonSimpleNotificationServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSimpleNotificationServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.#ctor(System.String,System.String,System.String,Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceConfig)">
            <summary>
            Constructs AmazonSimpleNotificationServiceClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSimpleNotificationServiceClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonSimpleNotificationServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.AddPermissionAsync(Amazon.SimpleNotificationService.Model.AddPermissionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AddPermission operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddPermission operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.ConfirmSubscriptionAsync(Amazon.SimpleNotificationService.Model.ConfirmSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ConfirmSubscription operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ConfirmSubscription operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.CreatePlatformApplicationAsync(Amazon.SimpleNotificationService.Model.CreatePlatformApplicationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreatePlatformApplication operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreatePlatformApplication operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.CreatePlatformEndpointAsync(Amazon.SimpleNotificationService.Model.CreatePlatformEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreatePlatformEndpoint operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreatePlatformEndpoint operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.CreateTopicAsync(Amazon.SimpleNotificationService.Model.CreateTopicRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateTopic operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateTopic operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.DeleteEndpointAsync(Amazon.SimpleNotificationService.Model.DeleteEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteEndpoint operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteEndpoint operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.DeletePlatformApplicationAsync(Amazon.SimpleNotificationService.Model.DeletePlatformApplicationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeletePlatformApplication operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeletePlatformApplication operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.DeleteTopicAsync(Amazon.SimpleNotificationService.Model.DeleteTopicRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteTopic operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteTopic operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.GetEndpointAttributesAsync(Amazon.SimpleNotificationService.Model.GetEndpointAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetEndpointAttributes operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetEndpointAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.GetPlatformApplicationAttributesAsync(Amazon.SimpleNotificationService.Model.GetPlatformApplicationAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetPlatformApplicationAttributes operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetPlatformApplicationAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.GetSubscriptionAttributesAsync(Amazon.SimpleNotificationService.Model.GetSubscriptionAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetSubscriptionAttributes operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSubscriptionAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.GetTopicAttributesAsync(Amazon.SimpleNotificationService.Model.GetTopicAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetTopicAttributes operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetTopicAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.ListEndpointsByPlatformApplicationAsync(Amazon.SimpleNotificationService.Model.ListEndpointsByPlatformApplicationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListEndpointsByPlatformApplication operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListEndpointsByPlatformApplication operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.ListPlatformApplicationsAsync(Amazon.SimpleNotificationService.Model.ListPlatformApplicationsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListPlatformApplications operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListPlatformApplications operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.ListSubscriptionsAsync(Amazon.SimpleNotificationService.Model.ListSubscriptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListSubscriptions operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListSubscriptions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.ListSubscriptionsByTopicAsync(Amazon.SimpleNotificationService.Model.ListSubscriptionsByTopicRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListSubscriptionsByTopic operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListSubscriptionsByTopic operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.ListTopicsAsync(Amazon.SimpleNotificationService.Model.ListTopicsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListTopics operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTopics operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.PublishAsync(Amazon.SimpleNotificationService.Model.PublishRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Publish operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Publish operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.RemovePermissionAsync(Amazon.SimpleNotificationService.Model.RemovePermissionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RemovePermission operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemovePermission operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.SetEndpointAttributesAsync(Amazon.SimpleNotificationService.Model.SetEndpointAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetEndpointAttributes operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetEndpointAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.SetPlatformApplicationAttributesAsync(Amazon.SimpleNotificationService.Model.SetPlatformApplicationAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetPlatformApplicationAttributes operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetPlatformApplicationAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.SetSubscriptionAttributesAsync(Amazon.SimpleNotificationService.Model.SetSubscriptionAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetSubscriptionAttributes operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetSubscriptionAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.SetTopicAttributesAsync(Amazon.SimpleNotificationService.Model.SetTopicAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetTopicAttributes operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetTopicAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.SubscribeAsync(Amazon.SimpleNotificationService.Model.SubscribeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Subscribe operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Subscribe operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceClient.UnsubscribeAsync(Amazon.SimpleNotificationService.Model.UnsubscribeRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the Unsubscribe operation.
            <seealso cref="T:Amazon.SimpleNotificationService.IAmazonSimpleNotificationService"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Unsubscribe operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceConfig">
            <summary>
            Configuration for accessing Amazon SimpleNotificationService service
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.AddPermissionRequest">
            <summary>
            Container for the parameters to the AddPermission operation.
            Adds a statement to a topic's access control policy, granting access for the specified
            AWS accounts to the specified actions.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceRequest">
            <summary>
            Base class for SimpleNotificationService operation requests.
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.AddPermissionRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.AddPermissionRequest.#ctor(System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates AddPermissionRequest with the parameterized properties
            </summary>
            <param name="topicArn">The ARN of the topic whose access control policy you wish to modify.</param>
            <param name="label">A unique identifier for the new policy statement.</param>
            <param name="awsAccountId">The AWS account IDs of the users (principals) who will be given access to the specified actions. The users must have AWS accounts, but do not need to be signed up  for this service. </param>
            <param name="actionName">The action you want to allow for the specified principal(s). Valid values: any Amazon SNS action name.</param>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.AddPermissionRequest.ActionName">
            <summary>
            Gets and sets the property ActionName. 
            <para>
            The action you want to allow for the specified principal(s).
            </para>
                
            <para>
            Valid values: any Amazon SNS action name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.AddPermissionRequest.AWSAccountId">
            <summary>
            Gets and sets the property AWSAccountId. 
            <para>
            The AWS account IDs of the users (principals) who will be given access to the specified
               actions. The users must have AWS accounts, but do not need to be signed up    
            for this service. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.AddPermissionRequest.Label">
            <summary>
            Gets and sets the property Label. 
            <para>
            A unique identifier for the new policy statement.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.AddPermissionRequest.TopicArn">
            <summary>
            Gets and sets the property TopicArn. 
            <para>
            The ARN of the topic whose access control policy you wish to modify.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.AddPermissionResponse">
            <summary>
            Configuration for accessing Amazon AddPermission service
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.AddPermissionResponse.AddPermissionResult">
            <summary>
            Gets and sets the AddPermissionResult property.
            Represents the output of a AddPermission operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.AuthorizationErrorException">
            <summary>
             SimpleNotificationService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.AuthorizationErrorException.#ctor(System.String)">
            <summary>
            Constructs a new AuthorizationErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.ConfirmSubscriptionRequest">
            <summary>
            Container for the parameters to the ConfirmSubscription operation.
            Verifies an endpoint owner's intent to receive messages by validating      the token
            sent to the endpoint by an earlier <code>Subscribe</code> action. If the      token
            is valid, the action creates a new subscription and returns its      Amazon Resource
            Name (ARN). This call requires an AWS signature only when the <code>AuthenticateOnUnsubscribe</code>
            flag is set to "true".
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.ConfirmSubscriptionRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.ConfirmSubscriptionRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates ConfirmSubscriptionRequest with the parameterized properties
            </summary>
            <param name="topicArn">The ARN of the topic for which you wish to confirm a subscription.</param>
            <param name="token">Short-lived token sent to an endpoint during the <code>Subscribe</code> action.</param>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.ConfirmSubscriptionRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Instantiates ConfirmSubscriptionRequest with the parameterized properties
            </summary>
            <param name="topicArn">The ARN of the topic for which you wish to confirm a subscription.</param>
            <param name="token">Short-lived token sent to an endpoint during the <code>Subscribe</code> action.</param>
            <param name="authenticateOnUnsubscribe">Disallows unauthenticated unsubscribes of the subscription.  If the value of this parameter is <code>true</code> and the request has an AWS signature, then only the topic owner and the subscription owner can unsubscribe the endpoint.  The unsubscribe action requires AWS authentication. </param>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ConfirmSubscriptionRequest.AuthenticateOnUnsubscribe">
            <summary>
            Gets and sets the property AuthenticateOnUnsubscribe. 
            <para>
            Disallows unauthenticated unsubscribes of the subscription.     If the value of this
            parameter is <code>true</code> and the request has an AWS signature, then only the
            topic owner    and the subscription owner can unsubscribe the endpoint.  The unsubscribe
               action requires AWS authentication. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ConfirmSubscriptionRequest.Token">
            <summary>
            Gets and sets the property Token. 
            <para>
            Short-lived token sent to an endpoint during the <code>Subscribe</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ConfirmSubscriptionRequest.TopicArn">
            <summary>
            Gets and sets the property TopicArn. 
            <para>
            The ARN of the topic for which you wish to confirm a subscription.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.ConfirmSubscriptionResponse">
            <summary>
            Configuration for accessing Amazon ConfirmSubscription service
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.ConfirmSubscriptionResult">
            <summary>
            Response for ConfirmSubscriptions action.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ConfirmSubscriptionResult.SubscriptionArn">
            <summary>
            Gets and sets the property SubscriptionArn. 
            <para>
            The ARN of the created subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ConfirmSubscriptionResponse.ConfirmSubscriptionResult">
            <summary>
            Gets and sets the ConfirmSubscriptionResult property.
            Represents the output of a ConfirmSubscription operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.CreatePlatformApplicationRequest">
            <summary>
            Container for the parameters to the CreatePlatformApplication operation.
            Creates a platform application object for one of the supported push notification services,
                  such as APNS and GCM, to which devices and mobile apps may register. You must
            specify PlatformPrincipal and PlatformCredential attributes when using       the <code>CreatePlatformApplication</code>
            action. The PlatformPrincipal is received from the notification service. For APNS/APNS_SANDBOX,
            PlatformPrincipal is "SSL certificate".       For GCM, PlatformPrincipal is not applicable.
            For ADM, PlatformPrincipal is "client id". The PlatformCredential is also received
            from the notification service.       For APNS/APNS_SANDBOX, PlatformCredential is
            "private key". For GCM, PlatformCredential is "API key". For ADM, PlatformCredential
            is "client secret".            The PlatformApplicationArn that is returned when using
            <code>CreatePlatformApplication</code> is then used as an attribute for the <code>CreatePlatformEndpoint</code>
            action.      For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
            Amazon SNS Mobile Push Notifications</a>.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.CreatePlatformApplicationRequest.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            For a list of attributes, see <a href="http://docs.aws.amazon.com/sns/latest/api/API_SetPlatformApplicationAttributes.html">SetPlatformApplicationAttributes</a>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.CreatePlatformApplicationRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Application names must be made up of only uppercase and lowercase ASCII letters, numbers,
            underscores, hyphens, and periods, and must be between 1 and 256 characters long.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.CreatePlatformApplicationRequest.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The following platforms are supported: ADM (Amazon Device Messaging), APNS (Apple
            Push Notification Service), APNS_SANDBOX, and GCM (Google Cloud Messaging).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.CreatePlatformApplicationResponse">
            <summary>
            Configuration for accessing Amazon CreatePlatformApplication service
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.CreatePlatformApplicationResult">
            <summary>
            Response from CreatePlatformApplication action.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.CreatePlatformApplicationResult.PlatformApplicationArn">
            <summary>
            Gets and sets the property PlatformApplicationArn. 
            <para>
            PlatformApplicationArn is returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.CreatePlatformApplicationResponse.CreatePlatformApplicationResult">
            <summary>
            Gets and sets the CreatePlatformApplicationResult property.
            Represents the output of a CreatePlatformApplication operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.CreatePlatformEndpointRequest">
            <summary>
            Container for the parameters to the CreatePlatformEndpoint operation.
            Creates an endpoint for a device and mobile app on one of the supported push notification
            services, such as GCM and APNS.       <code>CreatePlatformEndpoint</code> requires
            the PlatformApplicationArn that is returned from <code>CreatePlatformApplication</code>.
            The EndpointArn that is      returned when using <code>CreatePlatformEndpoint</code>
            can then be used by the <code>Publish</code> action to send a message to a mobile
            app or by the <code>Subscribe</code>       action for subscription to a topic. The
            <code>CreatePlatformEndpoint</code> action is idempotent, so if the requester already
            owns an endpoint with the same device token and attributes,       that endpoint's
            ARN is returned without creating a new endpoint.       For more information, see <a
            href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS
            Mobile Push Notifications</a>.    
            
                
            <para>
            When using <code>CreatePlatformEndpoint</code> with Baidu, two attributes must be
            provided: ChannelId and UserId. The token field must also contain the ChannelId. 
                 For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePushBaiduEndpoint.html">Creating
            an Amazon SNS Endpoint for Baidu</a>.          
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.CreatePlatformEndpointRequest.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            For a list of attributes, see <a href="http://docs.aws.amazon.com/sns/latest/api/API_SetEndpointAttributes.html">SetEndpointAttributes</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.CreatePlatformEndpointRequest.CustomUserData">
            <summary>
            Gets and sets the property CustomUserData. 
            <para>
            Arbitrary user data to associate with the endpoint. Amazon SNS does not use this data.
            The data must be in UTF-8 format and less than 2KB.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.CreatePlatformEndpointRequest.PlatformApplicationArn">
            <summary>
            Gets and sets the property PlatformApplicationArn. 
            <para>
            PlatformApplicationArn returned from CreatePlatformApplication is used to create a
            an endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.CreatePlatformEndpointRequest.Token">
            <summary>
            Gets and sets the property Token. 
            <para>
            Unique identifier created by the notification service for an app on a device.    
              The specific name for Token will vary, depending on which notification service is
            being used.       For example, when using APNS as the notification service, you need
            the device token.       Alternatively, when using GCM or ADM, the device token equivalent
            is called the registration ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.CreatePlatformEndpointResponse">
            <summary>
            Configuration for accessing Amazon CreatePlatformEndpoint service
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.CreatePlatformEndpointResult">
            <summary>
            Response from CreateEndpoint action.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.CreatePlatformEndpointResult.EndpointArn">
            <summary>
            Gets and sets the property EndpointArn. 
            <para>
            EndpointArn returned from CreateEndpoint action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.CreatePlatformEndpointResponse.CreatePlatformEndpointResult">
            <summary>
            Gets and sets the CreatePlatformEndpointResult property.
            Represents the output of a CreatePlatformEndpoint operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.CreateTopicRequest">
            <summary>
            Container for the parameters to the CreateTopic operation.
            Creates a topic to which notifications can be published. Users can create     at most
            3000 topics. For more information, see <a href="http://aws.amazon.com/sns/">http://aws.amazon.com/sns</a>.
                 This action is idempotent, so if the requester already owns a topic with the
            specified name, that topic's ARN is      returned without creating a new topic.
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.CreateTopicRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.CreateTopicRequest.#ctor(System.String)">
            <summary>
            Instantiates CreateTopicRequest with the parameterized properties
            </summary>
            <param name="name">The name of the topic you want to create. Constraints: Topic names must be made up of  only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be  between 1 and 256 characters long. </param>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.CreateTopicRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the topic you want to create.
            </para>
                
            <para>
            Constraints: Topic names must be made up of     only uppercase and lowercase ASCII
            letters, numbers, underscores, and hyphens, and must be     between 1 and 256 characters
            long. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.CreateTopicResponse">
            <summary>
            Configuration for accessing Amazon CreateTopic service
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.CreateTopicResult">
            <summary>
            Response from CreateTopic action.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.CreateTopicResult.TopicArn">
            <summary>
            Gets and sets the property TopicArn. 
            <para>
            The Amazon Resource Name (ARN) assigned to the created topic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.CreateTopicResponse.CreateTopicResult">
            <summary>
            Gets and sets the CreateTopicResult property.
            Represents the output of a CreateTopic operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.DeleteEndpointRequest">
            <summary>
            Container for the parameters to the DeleteEndpoint operation.
            Deletes the endpoint from Amazon SNS. This action is idempotent.       For more information,
            see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon
            SNS Mobile Push Notifications</a>.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.DeleteEndpointRequest.EndpointArn">
            <summary>
            Gets and sets the property EndpointArn. 
            <para>
            EndpointArn of endpoint to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.DeleteEndpointResponse">
            <summary>
            Configuration for accessing Amazon DeleteEndpoint service
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.DeleteEndpointResponse.DeleteEndpointResult">
            <summary>
            Gets and sets the DeleteEndpointResult property.
            Represents the output of a DeleteEndpoint operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.DeletePlatformApplicationRequest">
            <summary>
            Container for the parameters to the DeletePlatformApplication operation.
            Deletes a platform application object for one of the supported push notification services,
                  such as APNS and GCM.      For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
            Amazon SNS Mobile Push Notifications</a>.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.DeletePlatformApplicationRequest.PlatformApplicationArn">
            <summary>
            Gets and sets the property PlatformApplicationArn. 
            <para>
            PlatformApplicationArn of platform application object to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.DeletePlatformApplicationResponse">
            <summary>
            Configuration for accessing Amazon DeletePlatformApplication service
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.DeletePlatformApplicationResponse.DeletePlatformApplicationResult">
            <summary>
            Gets and sets the DeletePlatformApplicationResult property.
            Represents the output of a DeletePlatformApplication operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.DeleteTopicRequest">
            <summary>
            Container for the parameters to the DeleteTopic operation.
            Deletes a topic and all its subscriptions. Deleting a topic might      prevent some
            messages previously sent to the topic from being delivered to      subscribers. This
            action is idempotent, so deleting a topic that does not      exist does not result
            in an error.
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.DeleteTopicRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.DeleteTopicRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteTopicRequest with the parameterized properties
            </summary>
            <param name="topicArn">The ARN of the topic you want to delete.<examples> <queryrequest>  http://sns.us-east-1.amazonaws.com/  ?TopicArn=arn%3Aaws%3Asns%3Aus-east-1%3A123456789012%3AMy-Topic  &amp;Action=DeleteTopic  &amp;SignatureVersion=2  &amp;SignatureMethod=HmacSHA256  &amp;Timestamp=2010-03-31T12%3A00%3A00.000Z  &amp;AWSAccessKeyId=(AWS Access Key ID)  &amp;Signature=DjHBa%2BbYCKQAzctOPnLP7MbHnrHT3%2FK3kFEZjwcf9%2FU%3D </queryrequest> <queryresponse>  &lt;DeleteTopicResponse xmlns="http://sns.amazonaws.com/doc/2010-03-31/"&gt;  &lt;ResponseMetadata&gt; &lt;RequestId&gt;fba800b9-3765-11df-8cf3-c58c53254dfb&lt;/RequestId&gt;  &lt;/ResponseMetadata&gt;&lt;/DeleteTopicResponse&gt;   </queryresponse></examples></param>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.DeleteTopicRequest.TopicArn">
            <summary>
            Gets and sets the property TopicArn. 
            <para>
            The ARN of the topic you want to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.DeleteTopicResponse">
            <summary>
            Configuration for accessing Amazon DeleteTopic service
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.DeleteTopicResponse.DeleteTopicResult">
            <summary>
            Gets and sets the DeleteTopicResult property.
            Represents the output of a DeleteTopic operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Endpoint">
            <summary>
            Endpoint for mobile app and device.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.Endpoint.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            Attributes for endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.Endpoint.EndpointArn">
            <summary>
            Gets and sets the property EndpointArn. 
            <para>
            EndpointArn for mobile app and device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.EndpointDisabledException">
            <summary>
             SimpleNotificationService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.EndpointDisabledException.#ctor(System.String)">
            <summary>
            Constructs a new EndpointDisabledException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.GetEndpointAttributesRequest">
            <summary>
            Container for the parameters to the GetEndpointAttributes operation.
            Retrieves the endpoint attributes for a device on one of the supported push notification
            services, such as GCM and APNS.       For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
            Amazon SNS Mobile Push Notifications</a>.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.GetEndpointAttributesRequest.EndpointArn">
            <summary>
            Gets and sets the property EndpointArn. 
            <para>
            EndpointArn for GetEndpointAttributes input.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.GetEndpointAttributesResponse">
            <summary>
            Configuration for accessing Amazon GetEndpointAttributes service
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.GetEndpointAttributesResult">
            <summary>
            Response from GetEndpointAttributes of the EndpointArn.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.GetEndpointAttributesResult.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            Attributes include the following:
            </para>
                <ul>            <li><code>CustomUserData</code> -- arbitrary user data to associate
            with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format
            and less than 2KB.</li>      <li><code>Enabled</code> -- flag that enables/disables
            delivery to the endpoint.         Amazon SNS will set this to false when a notification
            service indicates to Amazon SNS that the endpoint is invalid.         Users can set
            it back to true, typically after updating Token.</li>            <li><code>Token</code>
            -- device token, also referred to as a registration id, for an app and mobile device.
                    This is returned from the notification service when an app and mobile device
            are registered with the notification service.</li>               </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.GetEndpointAttributesResponse.GetEndpointAttributesResult">
            <summary>
            Gets and sets the GetEndpointAttributesResult property.
            Represents the output of a GetEndpointAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.GetPlatformApplicationAttributesRequest">
            <summary>
            Container for the parameters to the GetPlatformApplicationAttributes operation.
            Retrieves the attributes of the platform application object for the supported push
            notification services,       such as APNS and GCM.      For more information, see
            <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon
            SNS Mobile Push Notifications</a>.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.GetPlatformApplicationAttributesRequest.PlatformApplicationArn">
            <summary>
            Gets and sets the property PlatformApplicationArn. 
            <para>
            PlatformApplicationArn for GetPlatformApplicationAttributesInput.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.GetPlatformApplicationAttributesResponse">
            <summary>
            Configuration for accessing Amazon GetPlatformApplicationAttributes service
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.GetPlatformApplicationAttributesResult">
            <summary>
            Response for GetPlatformApplicationAttributes action.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.GetPlatformApplicationAttributesResult.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            Attributes include the following:
            </para>
                <ul>                        <li><code>EventEndpointCreated</code> -- Topic ARN
            to which EndpointCreated event notifications should be sent.</li>      <li><code>EventEndpointDeleted</code>
            -- Topic ARN to which EndpointDeleted event notifications should be sent.</li>   
              <li><code>EventEndpointUpdated</code> -- Topic ARN to which EndpointUpdate event
            notifications should be sent.</li>            <li><code>EventDeliveryFailure</code>
            -- Topic ARN to which DeliveryFailure event notifications should be sent upon Direct
            Publish delivery failure (permanent) to one of the application's endpoints.</li> 
                    </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.GetPlatformApplicationAttributesResponse.GetPlatformApplicationAttributesResult">
            <summary>
            Gets and sets the GetPlatformApplicationAttributesResult property.
            Represents the output of a GetPlatformApplicationAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.GetSubscriptionAttributesRequest">
            <summary>
            Container for the parameters to the GetSubscriptionAttributes operation.
            Returns all of the properties of a subscription.
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.GetSubscriptionAttributesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.GetSubscriptionAttributesRequest.#ctor(System.String)">
            <summary>
            Instantiates GetSubscriptionAttributesRequest with the parameterized properties
            </summary>
            <param name="subscriptionArn">The ARN of the subscription whose properties you want to get.</param>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.GetSubscriptionAttributesRequest.SubscriptionArn">
            <summary>
            Gets and sets the property SubscriptionArn. 
            <para>
            The ARN of the subscription whose properties you want to get.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.GetSubscriptionAttributesResponse">
            <summary>
            Configuration for accessing Amazon GetSubscriptionAttributes service
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.GetSubscriptionAttributesResult">
            <summary>
            Response for GetSubscriptionAttributes action.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.GetSubscriptionAttributesResult.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A map of the subscription's attributes. Attributes in this map include the following:
            </para>
                <ul>      <li><code>SubscriptionArn</code> -- the subscription's ARN</li>    
             <li><code>TopicArn</code> -- the topic ARN that the subscription is associated with</li>
                 <li><code>Owner</code> -- the AWS account ID of the subscription's owner</li>
                 <li><code>ConfirmationWasAuthenticated</code> -- true if the subscription confirmation
            request was authenticated</li>      <li><code>DeliveryPolicy</code> -- the JSON serialization
            of the subscription's delivery policy</li>      <li><code>EffectiveDeliveryPolicy</code>
            -- the JSON serialization of the effective delivery policy that takes     into account
            the topic delivery policy and account system defaults</li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.GetSubscriptionAttributesResponse.GetSubscriptionAttributesResult">
            <summary>
            Gets and sets the GetSubscriptionAttributesResult property.
            Represents the output of a GetSubscriptionAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.GetTopicAttributesRequest">
            <summary>
            Container for the parameters to the GetTopicAttributes operation.
            Returns all of the properties of a topic.     Topic properties returned might differ
            based on the authorization of the user.
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.GetTopicAttributesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.GetTopicAttributesRequest.#ctor(System.String)">
            <summary>
            Instantiates GetTopicAttributesRequest with the parameterized properties
            </summary>
            <param name="topicArn">The ARN of the topic whose properties you want to get.</param>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.GetTopicAttributesRequest.TopicArn">
            <summary>
            Gets and sets the property TopicArn. 
            <para>
            The ARN of the topic whose properties you want to get.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.GetTopicAttributesResponse">
            <summary>
            Configuration for accessing Amazon GetTopicAttributes service
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.GetTopicAttributesResult">
            <summary>
            Response for GetTopicAttributes action.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.GetTopicAttributesResult.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A map of the topic's attributes. Attributes in this map include the following:
            </para>
                <ul>      <li><code>TopicArn</code> -- the topic's ARN</li>      <li><code>Owner</code>
            -- the AWS account ID of the topic's owner</li>      <li><code>Policy</code> -- the
            JSON serialization of the topic's access control policy</li>      <li><code>DisplayName</code>
            -- the human-readable name used in the "From" field for notifications to email and
            email-json endpoints</li>      <li><code>SubscriptionsPending</code> -- the number
            of subscriptions pending confirmation on this topic</li>      <li><code>SubscriptionsConfirmed</code>
            -- the number of confirmed subscriptions on this topic</li>      <li><code>SubscriptionsDeleted</code>
            -- the number of deleted subscriptions on this topic</li>      <li><code>DeliveryPolicy</code>
            -- the JSON serialization of the topic's delivery policy</li>      <li><code>EffectiveDeliveryPolicy</code>
            -- the JSON serialization of the effective delivery policy that takes into account
            system defaults</li>          </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.GetTopicAttributesResponse.GetTopicAttributesResult">
            <summary>
            Gets and sets the GetTopicAttributesResult property.
            Represents the output of a GetTopicAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.InternalErrorException">
            <summary>
             SimpleNotificationService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.InternalErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.AddPermissionRequestMarshaller">
            <summary>
            AddPermission Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.AddPermissionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AddPermission operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ConfirmSubscriptionRequestMarshaller">
            <summary>
            ConfirmSubscription Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ConfirmSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ConfirmSubscription operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.CreatePlatformApplicationRequestMarshaller">
            <summary>
            CreatePlatformApplication Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.CreatePlatformApplicationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreatePlatformApplication operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.CreatePlatformEndpointRequestMarshaller">
            <summary>
            CreatePlatformEndpoint Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.CreatePlatformEndpointResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreatePlatformEndpoint operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.CreateTopicRequestMarshaller">
            <summary>
            CreateTopic Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.CreateTopicResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateTopic operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.DeleteEndpointRequestMarshaller">
            <summary>
            DeleteEndpoint Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.DeleteEndpointResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteEndpoint operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.DeletePlatformApplicationRequestMarshaller">
            <summary>
            DeletePlatformApplication Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.DeletePlatformApplicationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeletePlatformApplication operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.DeleteTopicRequestMarshaller">
            <summary>
            DeleteTopic Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.DeleteTopicResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteTopic operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.EndpointUnmarshaller">
            <summary>
            Response Unmarshaller for Endpoint Object
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.GetEndpointAttributesRequestMarshaller">
            <summary>
            GetEndpointAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.GetEndpointAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetEndpointAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.GetPlatformApplicationAttributesRequestMarshaller">
            <summary>
            GetPlatformApplicationAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.GetPlatformApplicationAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetPlatformApplicationAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.GetSubscriptionAttributesRequestMarshaller">
            <summary>
            GetSubscriptionAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.GetSubscriptionAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSubscriptionAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.GetTopicAttributesRequestMarshaller">
            <summary>
            GetTopicAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.GetTopicAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetTopicAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ListEndpointsByPlatformApplicationRequestMarshaller">
            <summary>
            ListEndpointsByPlatformApplication Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ListEndpointsByPlatformApplicationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListEndpointsByPlatformApplication operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ListPlatformApplicationsRequestMarshaller">
            <summary>
            ListPlatformApplications Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ListPlatformApplicationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListPlatformApplications operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ListSubscriptionsByTopicRequestMarshaller">
            <summary>
            ListSubscriptionsByTopic Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ListSubscriptionsByTopicResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSubscriptionsByTopic operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ListSubscriptionsRequestMarshaller">
            <summary>
            ListSubscriptions Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ListSubscriptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSubscriptions operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ListTopicsRequestMarshaller">
            <summary>
            ListTopics Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.ListTopicsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTopics operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.PlatformApplicationUnmarshaller">
            <summary>
            Response Unmarshaller for PlatformApplication Object
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.PublishRequestMarshaller">
            <summary>
            Publish Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.PublishResponseUnmarshaller">
            <summary>
            Response Unmarshaller for Publish operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.RemovePermissionRequestMarshaller">
            <summary>
            RemovePermission Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.RemovePermissionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemovePermission operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SetEndpointAttributesRequestMarshaller">
            <summary>
            SetEndpointAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SetEndpointAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetEndpointAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SetPlatformApplicationAttributesRequestMarshaller">
            <summary>
            SetPlatformApplicationAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SetPlatformApplicationAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetPlatformApplicationAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SetSubscriptionAttributesRequestMarshaller">
            <summary>
            SetSubscriptionAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SetSubscriptionAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetSubscriptionAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SetTopicAttributesRequestMarshaller">
            <summary>
            SetTopicAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SetTopicAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetTopicAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SubscribeRequestMarshaller">
            <summary>
            Subscribe Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SubscribeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for Subscribe operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.SubscriptionUnmarshaller">
            <summary>
            Response Unmarshaller for Subscription Object
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.TopicUnmarshaller">
            <summary>
            Response Unmarshaller for Topic Object
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.UnsubscribeRequestMarshaller">
            <summary>
            Unsubscribe Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Internal.MarshallTransformations.UnsubscribeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for Unsubscribe operation
            </summary>  
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.InvalidParameterException">
            <summary>
             SimpleNotificationService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.InvalidParameterValueException">
            <summary>
             SimpleNotificationService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.InvalidParameterValueException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterValueException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.ListEndpointsByPlatformApplicationRequest">
            <summary>
            Container for the parameters to the ListEndpointsByPlatformApplication operation.
            Lists the endpoints and endpoint attributes for devices in a supported push notification
            service, such as GCM and APNS.       The results for <code>ListEndpointsByPlatformApplication</code>
            are paginated and return a limited list of endpoints, up to 100.      If additional
            records are available after the first page results, then a NextToken string will be
            returned.       To receive the next page, you call <code>ListEndpointsByPlatformApplication</code>
            again using the NextToken string received from the previous call.       When there
            are no more records to return, NextToken will be null.      For more information,
            see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon
            SNS Mobile Push Notifications</a>.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListEndpointsByPlatformApplicationRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            NextToken string is used when calling ListEndpointsByPlatformApplication action to
            retrieve additional records that are available after the first page results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListEndpointsByPlatformApplicationRequest.PlatformApplicationArn">
            <summary>
            Gets and sets the property PlatformApplicationArn. 
            <para>
            PlatformApplicationArn for ListEndpointsByPlatformApplicationInput action.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.ListEndpointsByPlatformApplicationResponse">
            <summary>
            Configuration for accessing Amazon ListEndpointsByPlatformApplication service
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.ListEndpointsByPlatformApplicationResult">
            <summary>
            Response for ListEndpointsByPlatformApplication action.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListEndpointsByPlatformApplicationResult.Endpoints">
            <summary>
            Gets and sets the property Endpoints. 
            <para>
            Endpoints returned for ListEndpointsByPlatformApplication action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListEndpointsByPlatformApplicationResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            NextToken string is returned when calling ListEndpointsByPlatformApplication action
            if additional records are available after the first page results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListEndpointsByPlatformApplicationResponse.ListEndpointsByPlatformApplicationResult">
            <summary>
            Gets and sets the ListEndpointsByPlatformApplicationResult property.
            Represents the output of a ListEndpointsByPlatformApplication operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.ListPlatformApplicationsRequest">
            <summary>
            Container for the parameters to the ListPlatformApplications operation.
            Lists the platform application objects for the supported push notification services,
                  such as APNS and GCM. The results for <code>ListPlatformApplications</code>
            are paginated and return a limited list of applications, up to 100.      If additional
            records are available after the first page results, then a NextToken string will be
            returned.       To receive the next page, you call <code>ListPlatformApplications</code>
            using the NextToken string received from the previous call.       When there are no
            more records to return, NextToken will be null.            For more information, see
            <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon
            SNS Mobile Push Notifications</a>.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListPlatformApplicationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            NextToken string is used when calling ListPlatformApplications action to retrieve
            additional records that are available after the first page results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.ListPlatformApplicationsResponse">
            <summary>
            Configuration for accessing Amazon ListPlatformApplications service
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.ListPlatformApplicationsResult">
            <summary>
            Response for ListPlatformApplications action.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListPlatformApplicationsResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            NextToken string is returned when calling ListPlatformApplications action if additional
            records are available after the first page results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListPlatformApplicationsResult.PlatformApplications">
            <summary>
            Gets and sets the property PlatformApplications. 
            <para>
            Platform applications returned when calling ListPlatformApplications action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListPlatformApplicationsResponse.ListPlatformApplicationsResult">
            <summary>
            Gets and sets the ListPlatformApplicationsResult property.
            Represents the output of a ListPlatformApplications operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.ListSubscriptionsByTopicRequest">
            <summary>
            Container for the parameters to the ListSubscriptionsByTopic operation.
            Returns a list of the subscriptions to a specific topic. Each call returns       a
            limited list of subscriptions, up to 100. If there are more subscriptions, a <code>NextToken</code>
            is also returned. Use the <code>NextToken</code>       parameter in a new <code>ListSubscriptionsByTopic</code>
            call to get further results.
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.ListSubscriptionsByTopicRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.ListSubscriptionsByTopicRequest.#ctor(System.String)">
            <summary>
            Instantiates ListSubscriptionsByTopicRequest with the parameterized properties
            </summary>
            <param name="topicArn">The ARN of the topic for which you wish to find subscriptions.</param>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.ListSubscriptionsByTopicRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates ListSubscriptionsByTopicRequest with the parameterized properties
            </summary>
            <param name="topicArn">The ARN of the topic for which you wish to find subscriptions.</param>
            <param name="nextToken">Token returned by the previous <code>ListSubscriptionsByTopic</code> request.</param>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListSubscriptionsByTopicRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token returned by the previous <code>ListSubscriptionsByTopic</code> request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListSubscriptionsByTopicRequest.TopicArn">
            <summary>
            Gets and sets the property TopicArn. 
            <para>
            The ARN of the topic for which you wish to find subscriptions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.ListSubscriptionsByTopicResponse">
            <summary>
            Configuration for accessing Amazon ListSubscriptionsByTopic service
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.ListSubscriptionsByTopicResult">
            <summary>
            Response for ListSubscriptionsByTopic action.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListSubscriptionsByTopicResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token to pass along to the next <code>ListSubscriptionsByTopic</code> request. This
            element is returned if there are more subscriptions to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListSubscriptionsByTopicResult.Subscriptions">
            <summary>
            Gets and sets the property Subscriptions. 
            <para>
            A list of subscriptions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListSubscriptionsByTopicResponse.ListSubscriptionsByTopicResult">
            <summary>
            Gets and sets the ListSubscriptionsByTopicResult property.
            Represents the output of a ListSubscriptionsByTopic operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.ListSubscriptionsRequest">
            <summary>
            Container for the parameters to the ListSubscriptions operation.
            Returns a list of the requester's subscriptions. Each call returns a limited list
                 of subscriptions, up to 100. If there are more subscriptions, a <code>NextToken</code>
            is also returned. Use the <code>NextToken</code> parameter in a       new <code>ListSubscriptions</code>
            call to get further results.
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.ListSubscriptionsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.ListSubscriptionsRequest.#ctor(System.String)">
            <summary>
            Instantiates ListSubscriptionsRequest with the parameterized properties
            </summary>
            <param name="nextToken">Token returned by the previous <code>ListSubscriptions</code> request.</param>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListSubscriptionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token returned by the previous <code>ListSubscriptions</code> request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.ListSubscriptionsResponse">
            <summary>
            Configuration for accessing Amazon ListSubscriptions service
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.ListSubscriptionsResult">
            <summary>
            Response for ListSubscriptions action
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListSubscriptionsResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token to pass along to the next <code>ListSubscriptions</code> request. This element
            is returned if there are more subscriptions to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListSubscriptionsResult.Subscriptions">
            <summary>
            Gets and sets the property Subscriptions. 
            <para>
            A list of subscriptions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListSubscriptionsResponse.ListSubscriptionsResult">
            <summary>
            Gets and sets the ListSubscriptionsResult property.
            Represents the output of a ListSubscriptions operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.ListTopicsRequest">
            <summary>
            Container for the parameters to the ListTopics operation.
            Returns a list of the requester's topics. Each call returns a limited list of topics,
            up to 100. If      there are more topics, a <code>NextToken</code> is also returned.
            Use the <code>NextToken</code> parameter in a new <code>ListTopics</code> call to
            get      further results.
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.ListTopicsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.ListTopicsRequest.#ctor(System.String)">
            <summary>
            Instantiates ListTopicsRequest with the parameterized properties
            </summary>
            <param name="nextToken">Token returned by the previous <code>ListTopics</code> request.</param>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListTopicsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token returned by the previous <code>ListTopics</code> request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.ListTopicsResponse">
            <summary>
            Configuration for accessing Amazon ListTopics service
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.ListTopicsResult">
            <summary>
            Response for ListTopics action.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListTopicsResult.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Token to pass along to the next <code>ListTopics</code> request. This element is returned
            if there are additional topics to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListTopicsResult.Topics">
            <summary>
            Gets and sets the property Topics. 
            <para>
            A list of topic ARNs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.ListTopicsResponse.ListTopicsResult">
            <summary>
            Gets and sets the ListTopicsResult property.
            Represents the output of a ListTopics operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.MessageAttributeValue">
            <summary>
            The user-specified message attribute value. For string data types, the value attribute
            has the same restrictions on the content as the message body.       For more information,
            see <a href="http://docs.aws.amazon.com/sns/latest/api/API_Publish.html">Publish</a>.
            
                    
            <para>
            Name, type, and value must not be empty or null. In addition, the message body should
            not be empty or null.       All parts of the message attribute, including name, type,
            and value, are included in the message size restriction, which is currently 256 KB
            (262,144 bytes).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.MessageAttributeValue.BinaryValue">
            <summary>
            Gets and sets the property BinaryValue. 
            <para>
            Binary type attributes can store any binary data, for example, compressed data, encrypted
            data, or images.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.MessageAttributeValue.DataType">
            <summary>
            Gets and sets the property DataType. 
            <para>
            Amazon SNS supports the following logical data types: String, Number, and Binary.
            For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMessageAttributes.html#SNSMessageAttributes.DataTypes">Message
            Attribute Data Types</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.MessageAttributeValue.StringValue">
            <summary>
            Gets and sets the property StringValue. 
            <para>
            Strings are Unicode with UTF8 binary encoding.       For a list of code values, see
            <a href="http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters">http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.NotFoundException">
            <summary>
             SimpleNotificationService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.NotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new NotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.PlatformApplication">
            <summary>
            Platform application object.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.PlatformApplication.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            Attributes for platform application object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.PlatformApplication.PlatformApplicationArn">
            <summary>
            Gets and sets the property PlatformApplicationArn. 
            <para>
            PlatformApplicationArn for platform application object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.PlatformApplicationDisabledException">
            <summary>
             SimpleNotificationService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.PlatformApplicationDisabledException.#ctor(System.String)">
            <summary>
            Constructs a new PlatformApplicationDisabledException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.PublishRequest">
            <summary>
            Container for the parameters to the Publish operation.
            Sends a message to all of a topic's subscribed endpoints. When a    <code>messageId</code>
            is returned, the message has been saved and Amazon SNS will attempt to deliver it
                  to the topic's subscribers shortly. The format of the outgoing message to each
                 subscribed endpoint depends on the notification protocol selected.
            
                
            <para>
            To use the <code>Publish</code> action for sending a message to a mobile endpoint,
            such as an app on a Kindle device or mobile phone,       you must specify the EndpointArn.
            The EndpointArn is returned when making a call with the <code>CreatePlatformEndpoint</code>
            action.       The second example below shows a request and response for publishing
            to a mobile endpoint.    
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.PublishRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.PublishRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates PublishRequest with the parameterized properties
            </summary>
            <param name="topicArn">The topic you want to publish to.</param>
            <param name="message">The message you want to send to the topic. If you want to send the same message to all transport protocols,    include the text of the message as a String value. If you want to send different messages for each transport protocol,    set the value of the <code>MessageStructure</code> parameter to <code>json</code>    and use a JSON object for the <code>Message</code> parameter.    See the Examples section for the format of the JSON object.  Constraints: Messages must be UTF-8 encoded   strings at most 256 KB in size (262144 bytes, not 262144 characters). JSON-specific constraints:   <ul>  <li>Keys in the JSON object that correspond to supported transport   protocols must have simple JSON string values. </li>  <li>The values will be parsed (unescaped)  before they are used in outgoing messages.</li>  <li>Outbound notifications are JSON  encoded (meaning that the characters will be reescaped for sending).</li>  <li>Values have a minimum length of 0 (the empty string, "", is allowed).</li>  <li>Values have a maximum length bounded by the overall message size (so, including  multiple protocols may limit message sizes).</li>  <li>Non-string values will cause the key  to be ignored.</li>  <li>Keys that do not correspond to supported transport protocols are ignored.</li>  <li>Duplicate keys are not allowed.</li>  <li>Failure to parse or validate any key or    value in the message will cause the <code>Publish</code> call to return an error (no partial   delivery).</li>   </ul>  </param>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.PublishRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Instantiates PublishRequest with the parameterized properties
            </summary>
            <param name="topicArn">The topic you want to publish to.</param>
            <param name="message">The message you want to send to the topic. If you want to send the same message to all transport protocols,    include the text of the message as a String value. If you want to send different messages for each transport protocol,    set the value of the <code>MessageStructure</code> parameter to <code>json</code>    and use a JSON object for the <code>Message</code> parameter.    See the Examples section for the format of the JSON object.  Constraints: Messages must be UTF-8 encoded   strings at most 256 KB in size (262144 bytes, not 262144 characters). JSON-specific constraints:   <ul>  <li>Keys in the JSON object that correspond to supported transport   protocols must have simple JSON string values. </li>  <li>The values will be parsed (unescaped)  before they are used in outgoing messages.</li>  <li>Outbound notifications are JSON  encoded (meaning that the characters will be reescaped for sending).</li>  <li>Values have a minimum length of 0 (the empty string, "", is allowed).</li>  <li>Values have a maximum length bounded by the overall message size (so, including  multiple protocols may limit message sizes).</li>  <li>Non-string values will cause the key  to be ignored.</li>  <li>Keys that do not correspond to supported transport protocols are ignored.</li>  <li>Duplicate keys are not allowed.</li>  <li>Failure to parse or validate any key or    value in the message will cause the <code>Publish</code> call to return an error (no partial   delivery).</li>   </ul>  </param>
            <param name="subject">Optional parameter to be used as the "Subject" line when the message is   delivered to email endpoints. This field will also be included, if present,    in the standard JSON messages delivered to other endpoints. Constraints: Subjects must be ASCII text that begins with a letter, number,    or punctuation mark; must not include line breaks or control characters; and    must be less than 100 characters long.</param>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.PublishRequest.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The message you want to send to the topic.
            </para>
                
            <para>
            If you want to send the same message to all transport protocols,       include the
            text of the message as a String value.
            </para>
                
            <para>
            If you want to send different messages for each transport protocol,       set the
            value of the <code>MessageStructure</code> parameter to <code>json</code>       and
            use a JSON object for the <code>Message</code> parameter.       See the Examples section
            for the format of the JSON object. 
            </para>
                
            <para>
            Constraints: Messages must be UTF-8 encoded      strings at most 256 KB in size (262144
            bytes, not 262144 characters).
            </para>
                
            <para>
            JSON-specific constraints:      <ul>        <li>Keys in the JSON object that correspond
            to supported transport      protocols must have simple JSON string values. </li> 
                  <li>The values will be parsed (unescaped)        before they are used in outgoing
            messages.</li>        <li>Outbound notifications are JSON        encoded (meaning
            that the characters will be reescaped for sending).</li>        <li>Values have a
            minimum length of 0 (the empty string, "", is allowed).</li>        <li>Values have
            a maximum length bounded by the overall message size (so, including        multiple
            protocols may limit message sizes).</li>        <li>Non-string values will cause the
            key        to be ignored.</li>        <li>Keys that do not correspond to supported
            transport protocols are ignored.</li>        <li>Duplicate keys are not allowed.</li>
                   <li>Failure to parse or validate any key or          value in the message will
            cause the <code>Publish</code> call to return an error (no partial      delivery).</li>
                 </ul>     
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.PublishRequest.MessageAttributes">
            <summary>
            Gets and sets the property MessageAttributes.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.PublishRequest.MessageStructure">
            <summary>
            Gets and sets the property MessageStructure. 
            <para>
            Set <code>MessageStructure</code> to <code>json</code> if you want to send      a
            different message for each protocol. For example, using one publish action,      you
            can send a short message to your SMS subscribers and a longer message to      your
            email subscribers.      If you set <code>MessageStructure</code> to <code>json</code>,
            the value of       the <code>Message</code> parameter must:    
            </para>
                <ul>      <li>be a syntactically valid JSON object; and</li>      <li>contain
            at least a top-level JSON key of "default" with a value that is a string.</li>   
            </ul>    
            <para>
             You can define other top-level keys that define the message you want to send    
             to a specific transport protocol (e.g., "http"). 
            </para>
                
            <para>
            For information about sending different messages for each protocol using      the
            AWS Management Console, go to <a href="http://docs.aws.amazon.com/sns/latest/gsg/Publish.html#sns-message-formatting-by-protocol">Create
                    Different Messages for Each Protocol</a> in the <i>Amazon Simple Notification
            Service      Getting Started Guide</i>.    
            </para>
                  
            <para>
            Valid value: <code>json</code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.PublishRequest.Subject">
            <summary>
            Gets and sets the property Subject. 
            <para>
            Optional parameter to be used as the "Subject" line when the message is      delivered
            to email endpoints. This field will also be included, if present,       in the standard
            JSON messages delivered to other endpoints.
            </para>
                
            <para>
            Constraints: Subjects must be ASCII text that begins with a letter, number,      
            or punctuation mark; must not include line breaks or control characters; and     
             must be less than 100 characters long.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.PublishRequest.TargetArn">
            <summary>
            Gets and sets the property TargetArn. 
            <para>
            Either TopicArn or EndpointArn, but not both.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.PublishRequest.TopicArn">
            <summary>
            Gets and sets the property TopicArn. 
            <para>
            The topic you want to publish to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.PublishResponse">
            <summary>
            Configuration for accessing Amazon Publish service
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.PublishResult">
            <summary>
            Response for Publish action.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.PublishResult.MessageId">
            <summary>
            Gets and sets the property MessageId. 
            <para>
            Unique identifier assigned to the published message.
            </para>
                
            <para>
            Length Constraint: Maximum 100 characters
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.PublishResponse.PublishResult">
            <summary>
            Gets and sets the PublishResult property.
            Represents the output of a Publish operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.RemovePermissionRequest">
            <summary>
            Container for the parameters to the RemovePermission operation.
            Removes a statement from a topic's access control policy.
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.RemovePermissionRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.RemovePermissionRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates RemovePermissionRequest with the parameterized properties
            </summary>
            <param name="topicArn">The ARN of the topic whose access control policy you wish to modify.</param>
            <param name="label">The unique label of the statement you want to remove.</param>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.RemovePermissionRequest.Label">
            <summary>
            Gets and sets the property Label. 
            <para>
            The unique label of the statement you want to remove.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.RemovePermissionRequest.TopicArn">
            <summary>
            Gets and sets the property TopicArn. 
            <para>
            The ARN of the topic whose access control policy you wish to modify.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.RemovePermissionResponse">
            <summary>
            Configuration for accessing Amazon RemovePermission service
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.RemovePermissionResponse.RemovePermissionResult">
            <summary>
            Gets and sets the RemovePermissionResult property.
            Represents the output of a RemovePermission operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.SetEndpointAttributesRequest">
            <summary>
            Container for the parameters to the SetEndpointAttributes operation.
            Sets the attributes for an endpoint for a device on one of the supported push notification
            services, such as GCM and APNS.      For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
            Amazon SNS Mobile Push Notifications</a>.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.SetEndpointAttributesRequest.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A map of the endpoint attributes. Attributes in this map include the following:
            </para>
                <ul>            <li><code>CustomUserData</code> -- arbitrary user data to associate
            with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format
            and less than 2KB.</li>      <li><code>Enabled</code> -- flag that enables/disables
            delivery to the endpoint.         Amazon SNS will set this to false when a notification
            service indicates to Amazon SNS that the endpoint is invalid.         Users can set
            it back to true, typically after updating Token.</li>            <li><code>Token</code>
            -- device token, also referred to as a registration id, for an app and mobile device.
                    This is returned from the notification service when an app and mobile device
            are registered with the notification service.</li>               </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.SetEndpointAttributesRequest.EndpointArn">
            <summary>
            Gets and sets the property EndpointArn. 
            <para>
            EndpointArn used for SetEndpointAttributes action.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.SetEndpointAttributesResponse">
            <summary>
            Configuration for accessing Amazon SetEndpointAttributes service
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.SetEndpointAttributesResponse.SetEndpointAttributesResult">
            <summary>
            Gets and sets the SetEndpointAttributesResult property.
            Represents the output of a SetEndpointAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.SetPlatformApplicationAttributesRequest">
            <summary>
            Container for the parameters to the SetPlatformApplicationAttributes operation.
            Sets the attributes of the platform application object for the supported push notification
            services,       such as APNS and GCM.      For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using
            Amazon SNS Mobile Push Notifications</a>.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.SetPlatformApplicationAttributesRequest.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A map of the platform application attributes. Attributes in this map include the following:
            </para>
                <ul>            <li><code>PlatformCredential</code> -- The credential received
            from the notification service. For APNS/APNS_SANDBOX, PlatformCredential is "private
            key".         For GCM, PlatformCredential is "API key". For ADM, PlatformCredential
            is "client secret".</li>      <li><code>PlatformPrincipal</code> -- The principal
            received from the notification service. For APNS/APNS_SANDBOX, PlatformPrincipal is
            "SSL certificate".         For GCM, PlatformPrincipal is not applicable. For ADM,
            PlatformPrincipal is "client id".</li>            <li><code>EventEndpointCreated</code>
            -- Topic ARN to which EndpointCreated event notifications should be sent.</li>   
              <li><code>EventEndpointDeleted</code> -- Topic ARN to which EndpointDeleted event
            notifications should be sent.</li>      <li><code>EventEndpointUpdated</code> -- Topic
            ARN to which EndpointUpdate event notifications should be sent.</li>            <li><code>EventDeliveryFailure</code>
            -- Topic ARN to which DeliveryFailure event notifications should be sent upon Direct
            Publish delivery failure (permanent) to one of the application's endpoints.</li> 
                    </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.SetPlatformApplicationAttributesRequest.PlatformApplicationArn">
            <summary>
            Gets and sets the property PlatformApplicationArn. 
            <para>
            PlatformApplicationArn for SetPlatformApplicationAttributes action.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.SetPlatformApplicationAttributesResponse">
            <summary>
            Configuration for accessing Amazon SetPlatformApplicationAttributes service
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.SetPlatformApplicationAttributesResponse.SetPlatformApplicationAttributesResult">
            <summary>
            Gets and sets the SetPlatformApplicationAttributesResult property.
            Represents the output of a SetPlatformApplicationAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.SetSubscriptionAttributesRequest">
            <summary>
            Container for the parameters to the SetSubscriptionAttributes operation.
            Allows a subscription owner to set an attribute of the topic to a new value.
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.SetSubscriptionAttributesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.SetSubscriptionAttributesRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Instantiates SetSubscriptionAttributesRequest with the parameterized properties
            </summary>
            <param name="subscriptionArn">The ARN of the subscription to modify.</param>
            <param name="attributeName">The name of the attribute you want to set. Only a subset of the subscriptions attributes are mutable. Valid values: <code>DeliveryPolicy</code> | <code>RawMessageDelivery</code></param>
            <param name="attributeValue">The new value for the attribute in JSON format.</param>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.SetSubscriptionAttributesRequest.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The name of the attribute you want to set. Only a subset of the subscriptions attributes
            are mutable.
            </para>
                
            <para>
            Valid values: <code>DeliveryPolicy</code> | <code>RawMessageDelivery</code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.SetSubscriptionAttributesRequest.AttributeValue">
            <summary>
            Gets and sets the property AttributeValue. 
            <para>
            The new value for the attribute in JSON format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.SetSubscriptionAttributesRequest.SubscriptionArn">
            <summary>
            Gets and sets the property SubscriptionArn. 
            <para>
            The ARN of the subscription to modify.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.SetSubscriptionAttributesResponse">
            <summary>
            Configuration for accessing Amazon SetSubscriptionAttributes service
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.SetSubscriptionAttributesResponse.SetSubscriptionAttributesResult">
            <summary>
            Gets and sets the SetSubscriptionAttributesResult property.
            Represents the output of a SetSubscriptionAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.SetTopicAttributesRequest">
            <summary>
            Container for the parameters to the SetTopicAttributes operation.
            Allows a topic owner to set an attribute of the topic to a new value.
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.SetTopicAttributesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.SetTopicAttributesRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Instantiates SetTopicAttributesRequest with the parameterized properties
            </summary>
            <param name="topicArn">The ARN of the topic to modify.</param>
            <param name="attributeName">The name of the attribute you want to set. Only a subset of the topic's attributes are mutable. Valid values: <code>Policy</code> | <code>DisplayName</code> | <code>DeliveryPolicy</code></param>
            <param name="attributeValue">The new value for the attribute.</param>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.SetTopicAttributesRequest.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The name of the attribute you want to set. Only a subset of the topic's attributes
            are mutable.
            </para>
                
            <para>
            Valid values: <code>Policy</code> | <code>DisplayName</code> | <code>DeliveryPolicy</code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.SetTopicAttributesRequest.AttributeValue">
            <summary>
            Gets and sets the property AttributeValue. 
            <para>
            The new value for the attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.SetTopicAttributesRequest.TopicArn">
            <summary>
            Gets and sets the property TopicArn. 
            <para>
            The ARN of the topic to modify.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.SetTopicAttributesResponse">
            <summary>
            Configuration for accessing Amazon SetTopicAttributes service
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.SetTopicAttributesResponse.SetTopicAttributesResult">
            <summary>
            Gets and sets the SetTopicAttributesResult property.
            Represents the output of a SetTopicAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.SubscribeRequest">
            <summary>
            Container for the parameters to the Subscribe operation.
            Prepares to subscribe an endpoint by sending the endpoint a confirmation message.
            To actually create a      subscription, the endpoint owner must call the <code>ConfirmSubscription</code>
                 action with the token from the confirmation message. Confirmation tokens are
                 valid for three days.
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.SubscribeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.SubscribeRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Instantiates SubscribeRequest with the parameterized properties
            </summary>
            <param name="topicArn">The ARN of the topic you want to subscribe to.</param>
            <param name="protocol">The protocol you want to use. Supported protocols include: <ul>   <li><code>http</code> -- delivery of JSON-encoded message via HTTP POST</li>   <li><code>https</code> -- delivery of JSON-encoded message via HTTPS POST</li>   <li><code>email</code> -- delivery of message via SMTP</li>   <li><code>email-json</code> -- delivery of JSON-encoded message via SMTP</li>   <li><code>sms</code> -- delivery of message via SMS</li>   <li><code>sqs</code> -- delivery of JSON-encoded message to an Amazon SQS queue</li>   <li><code>application</code> -- delivery of JSON-encoded message to an EndpointArn for a mobile app and device.</li> </ul></param>
            <param name="endpoint">The endpoint that you want to receive notifications. Endpoints vary by protocol: <ul>   <li>For the <code>http</code> protocol, the endpoint is an URL beginning with "http://"</li>   <li>For the <code>https</code> protocol, the endpoint is a URL beginning with "https://"</li>   <li>For the <code>email</code> protocol, the endpoint is an email address</li>   <li>For the <code>email-json</code> protocol, the endpoint is an email address</li>   <li>For the <code>sms</code> protocol, the endpoint is a phone number of an SMS-enabled device</li>   <li>For the <code>sqs</code> protocol, the endpoint is the ARN of an Amazon SQS queue</li>   <li>For the <code>application</code> protocol, the endpoint is the EndpointArn of a mobile app and device.</li> </ul></param>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.SubscribeRequest.Endpoint">
            <summary>
            Gets and sets the property Endpoint. 
            <para>
            The endpoint that you want to receive notifications. Endpoints vary by protocol:
            </para>
                <ul>      <li>For the <code>http</code> protocol, the endpoint is an URL beginning
            with "http://"</li>      <li>For the <code>https</code> protocol, the endpoint is
            a URL beginning with "https://"</li>      <li>For the <code>email</code> protocol,
            the endpoint is an email address</li>      <li>For the <code>email-json</code> protocol,
            the endpoint is an email address</li>      <li>For the <code>sms</code> protocol,
            the endpoint is a phone number of an SMS-enabled device</li>      <li>For the <code>sqs</code>
            protocol, the endpoint is the ARN of an Amazon SQS queue</li>      <li>For the <code>application</code>
            protocol, the endpoint is the EndpointArn of a mobile app and device.</li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.SubscribeRequest.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The protocol you want to use. Supported protocols include:
            </para>
                <ul>      <li><code>http</code> -- delivery of JSON-encoded message via HTTP POST</li>
                 <li><code>https</code> -- delivery of JSON-encoded message via HTTPS POST</li>
                 <li><code>email</code> -- delivery of message via SMTP</li>      <li><code>email-json</code>
            -- delivery of JSON-encoded message via SMTP</li>      <li><code>sms</code> -- delivery
            of message via SMS</li>      <li><code>sqs</code> -- delivery of JSON-encoded message
            to an Amazon SQS queue</li>      <li><code>application</code> -- delivery of JSON-encoded
            message to an EndpointArn for a mobile app and device.</li>    </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.SubscribeRequest.TopicArn">
            <summary>
            Gets and sets the property TopicArn. 
            <para>
            The ARN of the topic you want to subscribe to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.SubscribeResponse">
            <summary>
            Configuration for accessing Amazon Subscribe service
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.SubscribeResult">
            <summary>
            Response for Subscribe action.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.SubscribeResult.SubscriptionArn">
            <summary>
            Gets and sets the property SubscriptionArn. 
            <para>
            The ARN of the subscription, if the service was able to create a     subscription
            immediately (without requiring endpoint owner confirmation).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.SubscribeResponse.SubscribeResult">
            <summary>
            Gets and sets the SubscribeResult property.
            Represents the output of a Subscribe operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Subscription">
            <summary>
            A wrapper type for the attributes of an Amazon SNS subscription.
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.Subscription.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.Subscription.Endpoint">
            <summary>
            Gets and sets the property Endpoint. 
            <para>
            The subscription's endpoint (format depends on the protocol).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.Subscription.Owner">
            <summary>
            Gets and sets the property Owner. 
            <para>
            The subscription's owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.Subscription.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The subscription's protocol.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.Subscription.SubscriptionArn">
            <summary>
            Gets and sets the property SubscriptionArn. 
            <para>
            The subscription's ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.Subscription.TopicArn">
            <summary>
            Gets and sets the property TopicArn. 
            <para>
            The ARN of the subscription's topic.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.SubscriptionLimitExceededException">
            <summary>
             SimpleNotificationService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.SubscriptionLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new SubscriptionLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.Topic">
            <summary>
            A wrapper type for the topic's Amazon Resource Name (ARN). To retrieve a topic's attributes,
            use <code>GetTopicAttributes</code>.
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.Topic.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.Topic.TopicArn">
            <summary>
            Gets and sets the property TopicArn. 
            <para>
            The topic's ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.TopicLimitExceededException">
            <summary>
             SimpleNotificationService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.TopicLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new TopicLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.UnsubscribeRequest">
            <summary>
            Container for the parameters to the Unsubscribe operation.
            Deletes a subscription. If the subscription requires authentication for       deletion,
            only the owner of the subscription or the topic's owner       can unsubscribe, and
            an AWS signature is required. If the       <code>Unsubscribe</code> call does not
            require authentication and the requester is not       the subscription owner, a final
            cancellation message is delivered to the       endpoint, so that the endpoint owner
            can easily resubscribe to the topic if       the <code>Unsubscribe</code> request
            was unintended.
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.UnsubscribeRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Model.UnsubscribeRequest.#ctor(System.String)">
            <summary>
            Instantiates UnsubscribeRequest with the parameterized properties
            </summary>
            <param name="subscriptionArn">The ARN of the subscription to be deleted.</param>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.UnsubscribeRequest.SubscriptionArn">
            <summary>
            Gets and sets the property SubscriptionArn. 
            <para>
            The ARN of the subscription to be deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Model.UnsubscribeResponse">
            <summary>
            Configuration for accessing Amazon Unsubscribe service
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Model.UnsubscribeResponse.UnsubscribeResult">
            <summary>
            Gets and sets the UnsubscribeResult property.
            Represents the output of a Unsubscribe operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleNotificationService.Util.Message">
            <summary>
            This class reads in JSON formatted Amazon SNS messages into Message objects. The messages can also be verified using the IsMessageSignatureValid operation.
            </summary>
        </member>
        <member name="F:Amazon.SimpleNotificationService.Util.Message.MESSAGE_TYPE_SUBSCRIPTION_CONFIRMATION">
            <summary>
            The value of the Type property for a subscription confirmation message
            </summary>
        </member>
        <member name="F:Amazon.SimpleNotificationService.Util.Message.MESSAGE_TYPE_UNSUBSCRIPTION_CONFIRMATION">
            <summary>
            The value of the Type property for a unsubscribe confirmation message
            </summary>
        </member>
        <member name="F:Amazon.SimpleNotificationService.Util.Message.MESSAGE_TYPE_NOTIFICATION">
            <summary>
            The value of the Type property for a notification message
            </summary>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Util.Message.ParseMessage(System.String)">
            <summary>
            Parses the JSON message from Amazon SNS into the Message object.
            </summary>
            <param name="messageText">The JSON text from an Amazon SNS message</param>
            <returns>The Message object with properties set from the JSON document</returns>
        </member>
        <member name="M:Amazon.SimpleNotificationService.Util.Message.ValidateCertUrl(System.String)">
            <summary>
            Verifies that the signing certificate url is from a recognizable source. 
            Returns the cert url if it cen be verified, otherwise throws an exception.
            </summary>
            <param name="certUrl"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Util.Message.MessageId">
            <summary>
            Gets a Universally Unique Identifier, unique for each message published. For a notification that Amazon SNS resends during a retry, the message ID of the original message is used.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Util.Message.MessageText">
            <summary>
            Gets the MessageText value specified when the notification was published to the topic.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Util.Message.Signature">
            <summary>
            Gets the Base64-encoded "SHA1withRSA" signature of the Message, MessageId, Subject (if present), Type, Timestamp, and TopicArn values.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Util.Message.SignatureVersion">
            <summary>
            Gets the Version of the Amazon SNS signature used.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Util.Message.SigningCertURL">
            <summary>
            Gets the URL to the certificate that was used to sign the message.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Util.Message.Subject">
            <summary>
            Gets the Subject parameter specified when the notification was published to the topic. Note that this is an optional parameter. 
            If no Subject was specified, then this name/value pair does not appear in this JSON document.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Util.Message.SubscribeURL">
            <summary>
            Gets the URL that you must visit in order to re-confirm the subscription. Alternatively, you can instead use the Token with the ConfirmSubscription action to re-confirm the subscription.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Util.Message.Timestamp">
            <summary>
            Gets the time (GMT) when the notification was published.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Util.Message.Token">
            <summary>
            Gets a value you can use with the ConfirmSubscription action to re-confirm the subscription. Alternatively, you can simply visit the SubscribeURL.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Util.Message.TopicArn">
            <summary>
            Gets the Amazon Resource Name (ARN) for the topic.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Util.Message.Type">
            <summary>
            Gets the type of message. Possible values are Notification, SubscriptionConfirmation, and UnsubscribeConfirmation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Util.Message.IsSubscriptionType">
            <summary>
            Returns true if the message type is a subscription confirmation.
            </summary>
            <returns>True if the message type is a subscription confirmation.</returns>
        </member>
        <member name="P:Amazon.SimpleNotificationService.Util.Message.IsUnsubscriptionType">
            <summary>
            Returns true if the message type is a unsubscribe confirmation.
            </summary>
            <returns>True if the message type is a unsubscribe confirmation.</returns>        
        </member>
        <member name="P:Amazon.SimpleNotificationService.Util.Message.IsNotificationType">
            <summary>
            Returns true if the message type is a notification message.
            </summary>
            <returns>True if the message type is a notification message.</returns>        
        </member>
        <member name="P:Amazon.SimpleNotificationService.Util.Message.UnsubscribeURL">
            <summary>
            Gets a URL that you can use to unsubscribe the endpoint from this topic. If you visit this URL, Amazon SNS unsubscribes the endpoint and stops sending notifications to this endpoint.
            </summary>
        </member>
        <member name="T:Amazon.SQS.AmazonSQSClient">
             <summary>
             Implementation for accessing SQS
            
             Welcome to the <i>Amazon Simple Queue Service API Reference</i>. This section    
              describes who should read this guide, how the guide is organized, and other resources
             related to the      Amazon Simple Queue Service (Amazon SQS).
             
                 
             <para>
             Amazon SQS offers reliable and scalable hosted queues for storing messages as they
             travel      between computers. By using Amazon SQS, you can move data between distributed
             components of      your applications that perform different tasks without losing messages
             or requiring each      component to be always available.
             </para>
                 
             <para>
             Helpful Links:      <ul>        <li><a href="http://queue.amazonaws.com/doc/2012-11-05/QueueService.wsdl">Current
             WSDL (2012-11-05)</a></li>        <li><a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/MakingRequestsArticle.html">Making
             API Requests</a></li>        <li><a href="http://aws.amazon.com/sqs/">Amazon SQS product
             page</a></li>        <li><a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/SQSDeadLetterQueue.html">Using
             Amazon SQS Dead Letter Queues</a></li>                <li><a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#sqs_region">Regions
             and Endpoints</a></li>              </ul>    
             </para>
                 
             <para>
             We also provide SDKs that enable you to access Amazon SQS from your preferred programming
             language.     The SDKs contain functionality that automatically takes care of tasks
             such as:
             </para>
                 
             <para>
                   <ul>        <li>Cryptographically signing your service requests</li>       
             <li>Retrying requests</li>        <li>Handling error responses</li>      </ul>   
             
             </para>
                 
             <para>
             For a list of available SDKs, go to <a href="http://aws.amazon.com/tools/">Tools for
             Amazon Web Services</a>.
             </para>
             </summary>
        </member>
        <member name="T:Amazon.SQS.IAmazonSQS">
             <summary>
             Interface for accessing SQS
            
             Welcome to the <i>Amazon Simple Queue Service API Reference</i>. This section    
              describes who should read this guide, how the guide is organized, and other resources
             related to the      Amazon Simple Queue Service (Amazon SQS).
             
                 
             <para>
             Amazon SQS offers reliable and scalable hosted queues for storing messages as they
             travel      between computers. By using Amazon SQS, you can move data between distributed
             components of      your applications that perform different tasks without losing messages
             or requiring each      component to be always available.
             </para>
                 
             <para>
             Helpful Links:      <ul>        <li><a href="http://queue.amazonaws.com/doc/2012-11-05/QueueService.wsdl">Current
             WSDL (2012-11-05)</a></li>        <li><a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/MakingRequestsArticle.html">Making
             API Requests</a></li>        <li><a href="http://aws.amazon.com/sqs/">Amazon SQS product
             page</a></li>        <li><a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/SQSDeadLetterQueue.html">Using
             Amazon SQS Dead Letter Queues</a></li>                <li><a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#sqs_region">Regions
             and Endpoints</a></li>              </ul>    
             </para>
                 
             <para>
             We also provide SDKs that enable you to access Amazon SQS from your preferred programming
             language.     The SDKs contain functionality that automatically takes care of tasks
             such as:
             </para>
                 
             <para>
                   <ul>        <li>Cryptographically signing your service requests</li>       
             <li>Retrying requests</li>        <li>Handling error responses</li>      </ul>   
             
             </para>
                 
             <para>
             For a list of available SDKs, go to <a href="http://aws.amazon.com/tools/">Tools for
             Amazon Web Services</a>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.AddPermissionAsync(Amazon.SQS.Model.AddPermissionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AddPermission operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddPermission operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.ChangeMessageVisibilityAsync(Amazon.SQS.Model.ChangeMessageVisibilityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ChangeMessageVisibility operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ChangeMessageVisibility operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.ChangeMessageVisibilityBatchAsync(Amazon.SQS.Model.ChangeMessageVisibilityBatchRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ChangeMessageVisibilityBatch operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ChangeMessageVisibilityBatch operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.CreateQueueAsync(Amazon.SQS.Model.CreateQueueRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateQueue operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateQueue operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.DeleteMessageAsync(Amazon.SQS.Model.DeleteMessageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteMessage operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteMessage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.DeleteMessageBatchAsync(Amazon.SQS.Model.DeleteMessageBatchRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteMessageBatch operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteMessageBatch operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.DeleteQueueAsync(Amazon.SQS.Model.DeleteQueueRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteQueue operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteQueue operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.GetQueueAttributesAsync(Amazon.SQS.Model.GetQueueAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetQueueAttributes operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetQueueAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.GetQueueUrlAsync(Amazon.SQS.Model.GetQueueUrlRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetQueueUrl operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetQueueUrl operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.ListDeadLetterSourceQueuesAsync(Amazon.SQS.Model.ListDeadLetterSourceQueuesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListDeadLetterSourceQueues operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListDeadLetterSourceQueues operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.ListQueuesAsync(Amazon.SQS.Model.ListQueuesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListQueues operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListQueues operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.ReceiveMessageAsync(Amazon.SQS.Model.ReceiveMessageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReceiveMessage operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReceiveMessage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.RemovePermissionAsync(Amazon.SQS.Model.RemovePermissionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RemovePermission operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemovePermission operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.SendMessageAsync(Amazon.SQS.Model.SendMessageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SendMessage operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SendMessage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.SendMessageBatchAsync(Amazon.SQS.Model.SendMessageBatchRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SendMessageBatch operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SendMessageBatch operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.IAmazonSQS.SetQueueAttributesAsync(Amazon.SQS.Model.SetQueueAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetQueueAttributes operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetQueueAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonSQSClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSQSClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.SQS.AmazonSQSConfig)">
            <summary>
            Constructs AmazonSQSClient with AWS Credentials and an
            AmazonSQSClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonSQSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonSQSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSQSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor(System.String,System.String,Amazon.SQS.AmazonSQSConfig)">
            <summary>
            Constructs AmazonSQSClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSQSClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonSQSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonSQSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSQSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.#ctor(System.String,System.String,System.String,Amazon.SQS.AmazonSQSConfig)">
            <summary>
            Constructs AmazonSQSClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSQSClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonSQSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.AddPermissionAsync(Amazon.SQS.Model.AddPermissionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AddPermission operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AddPermission operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.ChangeMessageVisibilityAsync(Amazon.SQS.Model.ChangeMessageVisibilityRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ChangeMessageVisibility operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ChangeMessageVisibility operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.ChangeMessageVisibilityBatchAsync(Amazon.SQS.Model.ChangeMessageVisibilityBatchRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ChangeMessageVisibilityBatch operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ChangeMessageVisibilityBatch operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.CreateQueueAsync(Amazon.SQS.Model.CreateQueueRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateQueue operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateQueue operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.DeleteMessageAsync(Amazon.SQS.Model.DeleteMessageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteMessage operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteMessage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.DeleteMessageBatchAsync(Amazon.SQS.Model.DeleteMessageBatchRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteMessageBatch operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteMessageBatch operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.DeleteQueueAsync(Amazon.SQS.Model.DeleteQueueRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteQueue operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteQueue operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.GetQueueAttributesAsync(Amazon.SQS.Model.GetQueueAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetQueueAttributes operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetQueueAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.GetQueueUrlAsync(Amazon.SQS.Model.GetQueueUrlRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetQueueUrl operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetQueueUrl operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.ListDeadLetterSourceQueuesAsync(Amazon.SQS.Model.ListDeadLetterSourceQueuesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListDeadLetterSourceQueues operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListDeadLetterSourceQueues operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.ListQueuesAsync(Amazon.SQS.Model.ListQueuesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListQueues operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListQueues operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.ReceiveMessageAsync(Amazon.SQS.Model.ReceiveMessageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ReceiveMessage operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReceiveMessage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.RemovePermissionAsync(Amazon.SQS.Model.RemovePermissionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RemovePermission operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RemovePermission operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.SendMessageAsync(Amazon.SQS.Model.SendMessageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SendMessage operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SendMessage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.SendMessageBatchAsync(Amazon.SQS.Model.SendMessageBatchRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SendMessageBatch operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SendMessageBatch operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSClient.SetQueueAttributesAsync(Amazon.SQS.Model.SetQueueAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SetQueueAttributes operation.
            <seealso cref="T:Amazon.SQS.IAmazonSQS"/>
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetQueueAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.SQS.AmazonSQSConfig">
            <summary>
            Configuration for accessing Amazon SQS service
            </summary>
        </member>
        <member name="M:Amazon.SQS.AmazonSQSConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.SQS.AmazonSQSConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.SQS.AmazonSQSConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.AddPermissionRequest">
            <summary>
            Container for the parameters to the AddPermission operation.
            Adds a permission to a queue for a specific       <a href="http://docs.aws.amazon.com/general/latest/gr/glos-chap.html#P">principal</a>.
                 This allows for sharing access to the queue.
            
                
            <para>
            When you create a queue, you have full control access rights for the queue.      Only
            you (as owner of the queue) can grant or deny permissions to the queue.      For more
            information about these permissions, see      <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/acp-overview.html">Shared
                 Queues</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
                <note>    
            <para>
            <code>AddPermission</code> writes an Amazon SQS-generated policy. If you want to 
                write your own policy, use <a>SetQueueAttributes</a> to upload your policy. For
            more      information about writing your own policy, see      <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AccessPolicyLanguage.html">Using
                 The Access Policy Language</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
                </note>        <note>Some API actions take lists of parameters. These lists are
            specified using the <code>param.n</code> notation. Values      of <code>n</code> are
            integers starting from 1. For example, a parameter list with two elements looks like
            this:     </note>    
            <para>
            <code>&amp;Attribute.1=this</code>
            </para>
                
            <para>
            <code>&amp;Attribute.2=that</code>
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.AmazonSQSRequest">
            <summary>
            Base class for SQS operation requests.
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.AddPermissionRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.AddPermissionRequest.#ctor(System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates AddPermissionRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to take action on.</param>
            <param name="label">The unique identification of the permission you're setting (e.g.,   <code>AliceSendMessage</code>). Constraints: Maximum 80 characters;   alphanumeric characters, hyphens (-), and underscores (_) are allowed.</param>
            <param name="awsAccountIds">The AWS account number of the <a href="http://docs.aws.amazon.com/general/latest/gr/glos-chap.html#P">principal</a>   who will be given permission. The principal must have an AWS account, but does   not need to be signed up for Amazon SQS. For information about locating the AWS   account identification, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AWSCredentials.html">Your  AWS Identifiers</a> in the <i>Amazon SQS Developer Guide</i>.</param>
            <param name="actions">The action the client wants to allow for the specified principal.    The following are valid values: <code>* | SendMessage | ReceiveMessage | DeleteMessage | ChangeMessageVisibility | GetQueueAttributes | GetQueueUrl</code>.    For more information about these actions, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/acp-overview.html#PermissionTypes">Understanding   Permissions</a> in the <i>Amazon SQS Developer Guide</i>. Specifying <code>SendMessage</code>,   <code>DeleteMessage</code>, or <code>ChangeMessageVisibility</code> for the    <code>ActionName.n</code> also grants   permissions for the corresponding batch versions of those actions:   <code>SendMessageBatch</code>,   <code>DeleteMessageBatch</code>, and <code>ChangeMessageVisibilityBatch</code>.</param>
        </member>
        <member name="P:Amazon.SQS.Model.AddPermissionRequest.Actions">
            <summary>
            Gets and sets the property Actions. 
            <para>
            The action the client wants to allow for the specified principal.       The following
            are valid values: <code>* | SendMessage | ReceiveMessage | DeleteMessage | ChangeMessageVisibility
            | GetQueueAttributes | GetQueueUrl</code>.       For more information about these
            actions, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/acp-overview.html#PermissionTypes">Understanding
                 Permissions</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
                
            <para>
            Specifying <code>SendMessage</code>,      <code>DeleteMessage</code>, or <code>ChangeMessageVisibility</code>
            for the       <code>ActionName.n</code> also grants      permissions for the corresponding
            batch versions of those actions:      <code>SendMessageBatch</code>,      <code>DeleteMessageBatch</code>,
            and <code>ChangeMessageVisibilityBatch</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.AddPermissionRequest.AWSAccountIds">
            <summary>
            Gets and sets the property AWSAccountIds. 
            <para>
            The AWS account number of the <a href="http://docs.aws.amazon.com/general/latest/gr/glos-chap.html#P">principal</a>
                 who will be given permission. The principal must have an AWS account, but does
                 not need to be signed up for Amazon SQS. For information about locating the AWS
                 account identification, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AWSCredentials.html">Your
                   AWS Identifiers</a> in the <i>Amazon SQS Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.AddPermissionRequest.Label">
            <summary>
            Gets and sets the property Label. 
            <para>
            The unique identification of the permission you're setting (e.g.,      <code>AliceSendMessage</code>).
            Constraints: Maximum 80 characters;      alphanumeric characters, hyphens (-), and
            underscores (_) are allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.AddPermissionRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue to take action on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.AddPermissionResponse">
            <summary>
            Configuration for accessing Amazon AddPermission service
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.AddPermissionResponse.AddPermissionResult">
            <summary>
            Gets and sets the AddPermissionResult property.
            Represents the output of a AddPermission operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.BatchEntryIdsNotDistinctException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.BatchEntryIdsNotDistinctException.#ctor(System.String)">
            <summary>
            Constructs a new BatchEntryIdsNotDistinctException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SQS.Model.BatchRequestTooLongException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.BatchRequestTooLongException.#ctor(System.String)">
            <summary>
            Constructs a new BatchRequestTooLongException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SQS.Model.BatchResultErrorEntry">
            <summary>
            This is used in the responses of batch API to give a detailed description      of
            the result of an action on each entry in the request.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.BatchResultErrorEntry.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            An error code representing why the action failed on this entry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.BatchResultErrorEntry.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The id of an entry in a batch request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.BatchResultErrorEntry.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message explaining why the action failed on this entry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.BatchResultErrorEntry.SenderFault">
            <summary>
            Gets and sets the property SenderFault. 
            <para>
            Whether the error happened due to the sender's fault.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequest">
            <summary>
            Container for the parameters to the ChangeMessageVisibilityBatch operation.
            Changes the visibility timeout of multiple messages.      This is a batch version
            of <a>ChangeMessageVisibility</a>. The      result of the action on each message is
            reported individually in the      response. You can send up to 10 <a>ChangeMessageVisibility</a>
            requests with each <code>ChangeMessageVisibilityBatch</code> action.
            
                   <important>Because the batch request can result in a combination of successful
            and unsuccessful actions,     you should check for batch errors even when the call
            returns an HTTP status code of 200.</important>    <note>Some API actions take lists
            of parameters. These lists are specified using the <code>param.n</code> notation.
            Values      of <code>n</code> are integers starting from 1. For example, a parameter
            list with two elements looks like this:     </note>    
            <para>
            <code>&amp;Attribute.1=this</code>
            </para>
                
            <para>
            <code>&amp;Attribute.2=that</code>
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequest.#ctor(System.String,System.Collections.Generic.List{Amazon.SQS.Model.ChangeMessageVisibilityBatchRequestEntry})">
            <summary>
            Instantiates ChangeMessageVisibilityBatchRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to take action on.</param>
            <param name="entries">A list of receipt handles of the messages for which the visibility timeout   must be changed.</param>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequest.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            A list of receipt handles of the messages for which the visibility timeout      must
            be changed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue to take action on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequestEntry">
            <summary>
            Encloses a receipt handle and an entry id for each message in      <a>ChangeMessageVisibilityBatch</a>.
            
            
                    <important>      
            <para>
            All of the following parameters are list parameters that must be prefixed with <code>ChangeMessageVisibilityBatchRequestEntry.n</code>,
                    where <code>n</code> is an integer value starting with 1. For example, a parameter
            list for this action might look like this:
            </para>
                           </important>    
            <para>
            <code>&amp;ChangeMessageVisibilityBatchRequestEntry.1.Id=change_visibility_msg_2</code>
            </para>
                
            <para>
            <code>&amp;ChangeMessageVisibilityBatchRequestEntry.1.ReceiptHandle=<replaceable>Your_Receipt_Handle</replaceable></code>
            </para>
                
            <para>
            <code>&amp;ChangeMessageVisibilityBatchRequestEntry.1.VisibilityTimeout=45</code>
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequestEntry.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequestEntry.#ctor(System.String,System.String)">
            <summary>
            Instantiates ChangeMessageVisibilityBatchRequestEntry with the parameterized properties
            </summary>
            <param name="id">An identifier for this particular receipt handle. This is used to communicate   the result. Note that the <code>Id</code>s of a batch request need to be   unique within the request.</param>
            <param name="receiptHandle">A receipt handle.</param>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequestEntry.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            An identifier for this particular receipt handle. This is used to communicate    
             the result. Note that the <code>Id</code>s of a batch request need to be      unique
            within the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequestEntry.ReceiptHandle">
            <summary>
            Gets and sets the property ReceiptHandle. 
            <para>
            A receipt handle.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityBatchRequestEntry.VisibilityTimeout">
            <summary>
            Gets and sets the property VisibilityTimeout. 
            <para>
            The new value (in seconds) for the message's visibility timeout.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ChangeMessageVisibilityBatchResponse">
            <summary>
            Configuration for accessing Amazon ChangeMessageVisibilityBatch service
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ChangeMessageVisibilityBatchResult">
            <summary>
            For each message in the batch, the response contains a       <a>ChangeMessageVisibilityBatchResultEntry</a>
            tag if the message succeeds or       a <a>BatchResultErrorEntry</a> tag if the message
            fails.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityBatchResult.Failed">
            <summary>
            Gets and sets the property Failed. 
            <para>
            A list of <a>BatchResultErrorEntry</a> items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityBatchResult.Successful">
            <summary>
            Gets and sets the property Successful. 
            <para>
            A list of <a>ChangeMessageVisibilityBatchResultEntry</a> items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityBatchResponse.ChangeMessageVisibilityBatchResult">
            <summary>
            Gets and sets the ChangeMessageVisibilityBatchResult property.
            Represents the output of a ChangeMessageVisibilityBatch operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ChangeMessageVisibilityBatchResultEntry">
            <summary>
            Encloses the id of an entry in <a>ChangeMessageVisibilityBatch</a>.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityBatchResultEntry.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Represents a message whose visibility timeout has been changed      successfully.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ChangeMessageVisibilityRequest">
            <summary>
            Container for the parameters to the ChangeMessageVisibility operation.
            Changes the visibility      timeout of a specified message in a queue to a new value.
            The maximum allowed      timeout value you can set the value to is 12 hours. This
            means you can't extend      the timeout of a message in an existing queue to more
            than a total visibility      timeout of 12 hours. (For more information visibility
            timeout, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AboutVT.html">Visibility
                   Timeout</a> in the <i>Amazon SQS Developer Guide</i>.)
            
                
            <para>
            For example, let's say you have a message and its default message visibility     
            timeout is 30 minutes. You could call <code>ChangeMessageVisiblity</code> with   
              a value of two hours and the effective timeout would be two hours and 30      minutes.
            When that time comes near you could again extend the time out by      calling ChangeMessageVisiblity,
            but this time the maximum allowed timeout would      be 9 hours and 30 minutes.
            </para>
                    <note>
            <para>
            There is a 120,000 limit for the number of inflight messages per queue. Messages are
            inflight after they have been received from the queue by a consuming component, but
            have not yet been deleted from the queue. If you reach the 120,000 limit, you will
            receive an OverLimit error message from Amazon SQS. To help avoid reaching the limit,
            you should       delete the messages from the queue after they have been processed.
            You can also increase the number of queues you use to process the messages.    
            </para>
            </note>    <important>If you attempt to set the <code>VisibilityTimeout</code> to
            an      amount more than the maximum time left, Amazon SQS returns an error. It will
                 not automatically recalculate and increase the timeout to the maximum time  
               remaining.</important>    <important>Unlike with a queue, when you change the visibility
            timeout for a      specific message, that timeout value is applied immediately but
            is not saved in      memory for that message. If you don't delete a message after
            it is received,      the visibility timeout for the message the next time it is received
            reverts to      the original timeout value, not the value you set with the      <code>ChangeMessageVisibility</code>
            action.</important>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ChangeMessageVisibilityRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ChangeMessageVisibilityRequest.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Instantiates ChangeMessageVisibilityRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to take action on.</param>
            <param name="receiptHandle">The receipt handle associated with the message whose visibility timeout   should be changed. This parameter is returned by the <a>ReceiveMessage</a> action.</param>
            <param name="visibilityTimeout">The new value (in seconds - from 0 to 43200 - maximum 12 hours) for the message's visibility timeout.</param>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue to take action on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityRequest.ReceiptHandle">
            <summary>
            Gets and sets the property ReceiptHandle. 
            <para>
            The receipt handle associated with the message whose visibility timeout      should
            be changed. This parameter is returned by the <a>ReceiveMessage</a> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityRequest.VisibilityTimeout">
            <summary>
            Gets and sets the property VisibilityTimeout. 
            <para>
            The new value (in seconds - from 0 to 43200 - maximum 12 hours) for the message's
            visibility timeout.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ChangeMessageVisibilityResponse">
            <summary>
            Configuration for accessing Amazon ChangeMessageVisibility service
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ChangeMessageVisibilityResponse.ChangeMessageVisibilityResult">
            <summary>
            Gets and sets the ChangeMessageVisibilityResult property.
            Represents the output of a ChangeMessageVisibility operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.CreateQueueRequest">
            <summary>
            Container for the parameters to the CreateQueue operation.
            Creates a new queue, or returns the URL      of an existing one. When you request
            <code>CreateQueue</code>, you provide a      name for the queue. To successfully create
            a new queue, you must provide a name      that is unique within the scope of your
            own queues.
            
                    <note>      
            <para>
            If you delete a queue, you must wait at least 60 seconds before creating a queue with
            the        same name.
            </para>
                      </note>    
            <para>
            You may pass one or more attributes in the request. If you do not      provide a value
            for any attribute, the queue will have the default value      for that attribute.
            Permitted attributes are the same that can be set      using <a>SetQueueAttributes</a>.
            </para>
                    <note>
            <para>
            Use <a>GetQueueUrl</a> to get a queue's URL.      <a>GetQueueUrl</a> requires only
            the <code>QueueName</code> parameter.
            </para>
            </note>        
            <para>
            If you provide the name of an existing queue, along with the exact names and values
            of all the queue's attributes,      <code>CreateQueue</code> returns the queue URL
            for the existing queue. If the queue name, attribute names,       or attribute values
            do not match an existing queue, <code>CreateQueue</code> returns an error.
            </para>
                    <note>Some API actions take lists of parameters. These lists are specified
            using the <code>param.n</code> notation. Values      of <code>n</code> are integers
            starting from 1. For example, a parameter list with two elements looks like this:
                </note>    
            <para>
            <code>&amp;Attribute.1=this</code>
            </para>
                
            <para>
            <code>&amp;Attribute.2=that</code>
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.CreateQueueRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.CreateQueueRequest.#ctor(System.String)">
            <summary>
            Instantiates CreateQueueRequest with the parameterized properties
            </summary>
            <param name="queueName">The name for the queue to be created.</param>
        </member>
        <member name="P:Amazon.SQS.Model.CreateQueueRequest.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A map of attributes with their corresponding values.
            </para>
                
            <para>
            The following lists the names, descriptions, and values of the special request parameters
            the <code>CreateQueue</code>    action uses:
            </para>
                
            <para>
                  <ul>                <li><code>DelaySeconds</code> - The time in seconds that
            the delivery of all messages in the queue will be delayed. An integer from 0 to 900
            (15 minutes). The default for this attribute is 0 (zero).</li>               <li><code>MaximumMessageSize</code>
            - The limit of how many bytes a message can contain before Amazon SQS rejects it.
            An integer from 1024 bytes (1 KiB) up to 262144 bytes (256 KiB). The default for this
            attribute is 262144 (256 KiB).</li>        <li><code>MessageRetentionPeriod</code>
            - The number of seconds Amazon SQS retains a message. Integer representing seconds,
            from 60 (1 minute) to 1209600 (14 days). The default for this attribute is 345600
            (4 days).</li>        <li><code>Policy</code> - The queue's policy. A valid      
               form-url-encoded policy. For more information about policy          structure,
            see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/BasicStructure.html">Basic
            Policy Structure</a> in the <i>Amazon SQS Developer Guide</i>.           For more
            information about form-url-encoding, see           <a href="http://www.w3.org/MarkUp/html-spec/html-spec_8.html#SEC8.2.1">http://www.w3.org/MarkUp/html-spec/html-spec_8.html#SEC8.2.1</a>.</li>
                                   <li><code>ReceiveMessageWaitTimeSeconds</code> - The time for
            which a <a>ReceiveMessage</a> call will wait for a message to arrive. An integer from
            0 to 20 (seconds). The default for this attribute is 0. </li>        <li><code>VisibilityTimeout</code>
            - The visibility timeout for the queue. An integer from 0 to 43200 (12 hours). The
            default for this attribute is 30. For more information about visibility timeout, 
                    see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AboutVT.html">Visibility
            Timeout</a> in the <i>Amazon SQS Developer Guide</i>.</li>      </ul>    
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.CreateQueueRequest.QueueName">
            <summary>
            Gets and sets the property QueueName. 
            <para>
            The name for the queue to be created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.CreateQueueResponse">
            <summary>
            Configuration for accessing Amazon CreateQueue service
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.CreateQueueResult">
            <summary>
            Returns the QueueUrl element of the created queue.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.CreateQueueResult.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL for the created Amazon SQS queue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.CreateQueueResponse.CreateQueueResult">
            <summary>
            Gets and sets the CreateQueueResult property.
            Represents the output of a CreateQueue operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.DeleteMessageBatchRequest">
            <summary>
            Container for the parameters to the DeleteMessageBatch operation.
            Deletes multiple messages.      This is a batch version of <a>DeleteMessage</a>. The
            result of the delete      action on each message is reported individually in the response.
            
                <important>      
            <para>
                    Because the batch request can result in a combination of successful and unsuccessful
            actions,         you should check for batch errors even when the call returns an HTTP
            status code of 200.      
            </para>
                </important>    <note>Some API actions take lists of parameters. These lists are
            specified using the <code>param.n</code> notation. Values      of <code>n</code> are
            integers starting from 1. For example, a parameter list with two elements looks like
            this:     </note>    
            <para>
            <code>&amp;Attribute.1=this</code>
            </para>
                
            <para>
            <code>&amp;Attribute.2=that</code>
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.DeleteMessageBatchRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.DeleteMessageBatchRequest.#ctor(System.String,System.Collections.Generic.List{Amazon.SQS.Model.DeleteMessageBatchRequestEntry})">
            <summary>
            Instantiates DeleteMessageBatchRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to take action on.</param>
            <param name="entries">A list of receipt handles for the messages to be deleted.</param>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteMessageBatchRequest.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            A list of receipt handles for the messages to be deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteMessageBatchRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue to take action on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.DeleteMessageBatchRequestEntry">
            <summary>
            Encloses a receipt handle and an identifier for it.
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.DeleteMessageBatchRequestEntry.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.DeleteMessageBatchRequestEntry.#ctor(System.String,System.String)">
            <summary>
            Instantiates DeleteMessageBatchRequestEntry with the parameterized properties
            </summary>
            <param name="id">An identifier for this particular receipt handle. This is used to   communicate the result. Note that the <code>Id</code>s of a batch request   need to be unique within the request.</param>
            <param name="receiptHandle">A receipt handle.</param>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteMessageBatchRequestEntry.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            An identifier for this particular receipt handle. This is used to      communicate
            the result. Note that the <code>Id</code>s of a batch request      need to be unique
            within the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteMessageBatchRequestEntry.ReceiptHandle">
            <summary>
            Gets and sets the property ReceiptHandle. 
            <para>
            A receipt handle.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.DeleteMessageBatchResponse">
            <summary>
            Configuration for accessing Amazon DeleteMessageBatch service
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.DeleteMessageBatchResult">
            <summary>
            For each message in the batch, the response contains a       <a>DeleteMessageBatchResultEntry</a>
            tag if the message is deleted or       a <a>BatchResultErrorEntry</a> tag if the message
            cannot be deleted.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteMessageBatchResult.Failed">
            <summary>
            Gets and sets the property Failed. 
            <para>
            A list of <a>BatchResultErrorEntry</a> items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteMessageBatchResult.Successful">
            <summary>
            Gets and sets the property Successful. 
            <para>
            A list of <a>DeleteMessageBatchResultEntry</a> items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteMessageBatchResponse.DeleteMessageBatchResult">
            <summary>
            Gets and sets the DeleteMessageBatchResult property.
            Represents the output of a DeleteMessageBatch operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.DeleteMessageBatchResultEntry">
            <summary>
            Encloses the id an entry in <a>DeleteMessageBatch</a>.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteMessageBatchResultEntry.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            Represents a successfully deleted message.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.DeleteMessageRequest">
            <summary>
            Container for the parameters to the DeleteMessage operation.
            Deletes the specified message from the specified      queue. You specify the
            message by using the message's <code>receipt        handle</code> and not the <code>message
            ID</code> you received when you      sent the message. Even if the message is locked
            by another reader due to the visibility      timeout setting, it is still deleted
            from the queue. If you leave a message in the queue      for longer than the queue's
            configured retention period, Amazon SQS automatically deletes      it.        
            
                <note>      
            <para>
                    The receipt handle is associated with a specific instance of receiving the
            message. If        you receive a message more than once, the receipt handle you get
            each time you receive the        message is different. When you request <code>DeleteMessage</code>,
            if you don't        provide the most recently received receipt handle for the message,
            the request will still        succeed, but the message might not be deleted.     
            
            </para>
                </note>    <important>    
            <para>
                  It is possible you will receive a message even after you have deleted it. This
            might      happen on rare occasions if one of the servers storing a copy of the message
            is unavailable      when you request to delete the message. The copy remains on the
            server and might be returned      to you again on a subsequent receive request. You
            should create your system to be idempotent      so that receiving a particular message
            more than once is not a problem.    
            </para>
                </important>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.DeleteMessageRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.DeleteMessageRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates DeleteMessageRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to take action on.</param>
            <param name="receiptHandle">The receipt handle associated with the message to delete.</param>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteMessageRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue to take action on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteMessageRequest.ReceiptHandle">
            <summary>
            Gets and sets the property ReceiptHandle. 
            <para>
            The receipt handle associated with the message to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.DeleteMessageResponse">
            <summary>
            Configuration for accessing Amazon DeleteMessage service
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteMessageResponse.DeleteMessageResult">
            <summary>
            Gets and sets the DeleteMessageResult property.
            Represents the output of a DeleteMessage operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.DeleteQueueRequest">
            <summary>
            Container for the parameters to the DeleteQueue operation.
            Deletes the queue specified by the <b>queue        URL</b>, regardless of whether
            the queue is empty. If the specified queue does not      exist, Amazon SQS returns
            a successful response.    
            
                <important>      
            <para>
                    Use <code>DeleteQueue</code> with care; once you delete your queue, any messages
                   in the queue are no longer available.      
            </para>
                </important>    
            <para>
                  When you delete a queue, the deletion process takes up to 60 seconds. Requests
            you send      involving that queue during the 60 seconds might succeed. For example,
            a      <a>SendMessage</a> request might succeed, but after the 60 seconds, the queue
            and      that message you sent no longer exist. Also, when you delete a queue, you
            must wait at least 60      seconds before creating a queue with the same name.   
            
            </para>
                
            <para>
                  We reserve the right to delete queues that have had no activity for more than
            30 days. For more      information, see             <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/SQSConcepts.html">How
                   Amazon SQS Queues Work</a> in the <i>Amazon SQS Developer Guide</i>.    
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.DeleteQueueRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.DeleteQueueRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteQueueRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to take action on.</param>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteQueueRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue to take action on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.DeleteQueueResponse">
            <summary>
            Configuration for accessing Amazon DeleteQueue service
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.DeleteQueueResponse.DeleteQueueResult">
            <summary>
            Gets and sets the DeleteQueueResult property.
            Represents the output of a DeleteQueue operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.EmptyBatchRequestException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.EmptyBatchRequestException.#ctor(System.String)">
            <summary>
            Constructs a new EmptyBatchRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SQS.Model.GetQueueAttributesRequest">
            <summary>
            Container for the parameters to the GetQueueAttributes operation.
            Gets attributes for the specified queue. The following attributes are supported: 
                <ul>        <li><code>All</code> - returns all values.</li>        <li><code>ApproximateNumberOfMessages</code>
            - returns the approximate          number of visible messages in a queue. For more
            information, see          <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/ApproximateNumber.html">Resources
            Required to Process Messages</a>          in the <i>Amazon SQS Developer Guide</i>.</li>
                   <li><code>ApproximateNumberOfMessagesNotVisible</code> - returns the      
               approximate number of messages that are not timed-out and not deleted.        
              For more information, see           <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/ApproximateNumber.html">Resources
            Required to Process Messages</a> in the          <i>Amazon SQS Developer Guide</i>.</li>
                   <li><code>VisibilityTimeout</code> - returns the visibility timeout for   
                  the queue. For more information about visibility timeout, see          <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AboutVT.html">Visibility
            Timeout</a> in the <i>Amazon SQS Developer Guide</i>.</li>        <li><code>CreatedTimestamp</code>
            - returns the time when the queue was          created (epoch time in seconds).</li>
                   <li><code>LastModifiedTimestamp</code> - returns the time when the queue  
                   was last changed (epoch time in seconds).</li>        <li><code>Policy</code>
            - returns the queue's policy.</li>        <li><code>MaximumMessageSize</code> - returns
            the limit of how many bytes          a message can contain before Amazon SQS rejects
            it.</li>        <li><code>MessageRetentionPeriod</code> - returns the number of seconds
                     Amazon SQS retains a message.</li>        <li><code>QueueArn</code> - returns
            the queue's Amazon resource name          (ARN).</li>        <li><code>ApproximateNumberOfMessagesDelayed</code>
            - returns the          approximate number of messages that are pending to be added
            to the          queue.</li>        <li><code>DelaySeconds</code> - returns the default
            delay on the queue          in seconds.</li>        <li><code>ReceiveMessageWaitTimeSeconds</code>
            - returns the time for which a        ReceiveMessage call will wait for a message
            to arrive.</li>        <li><code>RedrivePolicy</code> - returns the parameters for
            dead letter queue functionality of the source queue.           For more information
            about RedrivePolicy and dead letter queues, see          <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/SQSDeadLetterQueue.html">Using
            Amazon SQS Dead Letter Queues</a> in the <i>Amazon SQS Developer Guide</i>.</li> 
                </ul>     
            
                <note>Going forward, new attributes might be added.       If you are writing code
            that calls this action, we recommend that you structure your code so that it can handle
            new attributes gracefully.</note>    <note>Some API actions take lists of parameters.
            These lists are specified using the <code>param.n</code> notation. Values      of
            <code>n</code> are integers starting from 1. For example, a parameter list with two
            elements looks like this:     </note>    
            <para>
            <code>&amp;Attribute.1=this</code>
            </para>
                
            <para>
            <code>&amp;Attribute.2=that</code>
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.GetQueueAttributesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.GetQueueAttributesRequest.#ctor(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates GetQueueAttributesRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to take action on.</param>
            <param name="attributeNames">A list of attributes to retrieve information for. </param>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesRequest.AttributeNames">
            <summary>
            Gets and sets the property AttributeNames. 
            <para>
            A list of attributes to retrieve information for. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue to take action on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.GetQueueAttributesResponse">
            <summary>
            Configuration for accessing Amazon GetQueueAttributes service
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.GetQueueAttributesResult">
            <summary>
            A list of returned queue attributes.
            </summary>
            <summary>
            Get Queue Attributes Result
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResult.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A map of attributes to the respective values.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResult.VisibilityTimeout">
            <summary>
            Gets the visibility timeout from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResult.DelaySeconds">
            <summary>
            Gets the delay in seconds from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResult.MaximumMessageSize">
            <summary>
            Gets the maximum message size from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResult.MessageRetentionPeriod">
            <summary>
            Returns the message retention period from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResult.ApproximateNumberOfMessages">
            <summary>
            Gets the approximate number of messages from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResult.ApproximateNumberOfMessagesNotVisible">
            <summary>
            Gets the approximate number of messages not visible from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResult.ApproximateNumberOfMessagesDelayed">
            <summary>
            Gets the approximate number of messages delayed from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResult.CreatedTimestamp">
            <summary>
            Gets the created timestamp from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResult.LastModifiedTimestamp">
            <summary>
            Gets the last modified timestamp from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResult.QueueARN">
            <summary>
            Gets the queue arn from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResult.Policy">
            <summary>
            Gets the queue access policy from the Attributes collection.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueAttributesResponse.GetQueueAttributesResult">
            <summary>
            Gets and sets the GetQueueAttributesResult property.
            Represents the output of a GetQueueAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.GetQueueUrlRequest">
            <summary>
            Container for the parameters to the GetQueueUrl operation.
            Returns the URL of an existing queue.       This action provides a simple way
            to retrieve the URL of an Amazon SQS queue.    
            
                
            <para>
                  To access a queue that belongs to another AWS account, use the <code>QueueOwnerAWSAccountId</code>
                 parameter to specify the account ID of the queue's owner. The queue's owner must
            grant you permission to       access the queue. For more information about shared
            queue access, see <a>AddPermission</a> or go to      <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/acp-overview.html">Shared
            Queues</a>      in the <i>Amazon SQS Developer Guide</i>.    
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.GetQueueUrlRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.GetQueueUrlRequest.#ctor(System.String)">
            <summary>
            Instantiates GetQueueUrlRequest with the parameterized properties
            </summary>
            <param name="queueName">The name of the queue whose URL must be fetched.    Maximum 80 characters; alphanumeric characters, hyphens (-), and underscores (_) are allowed.</param>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueUrlRequest.QueueName">
            <summary>
            Gets and sets the property QueueName. 
            <para>
            The name of the queue whose URL must be fetched.       Maximum 80 characters; alphanumeric
            characters, hyphens (-), and underscores (_) are allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueUrlRequest.QueueOwnerAWSAccountId">
            <summary>
            Gets and sets the property QueueOwnerAWSAccountId. 
            <para>
            The AWS account ID of the account that created the queue.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.GetQueueUrlResponse">
            <summary>
            Configuration for accessing Amazon GetQueueUrl service
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.GetQueueUrlResult">
            <summary>
            For more information, see       <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/UnderstandingResponses.html">Responses</a>
                 in the <i>Amazon SQS Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueUrlResult.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL for the queue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.GetQueueUrlResponse.GetQueueUrlResult">
            <summary>
            Gets and sets the GetQueueUrlResult property.
            Represents the output of a GetQueueUrl operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.AddPermissionRequestMarshaller">
            <summary>
            AddPermission Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.AddPermissionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AddPermission operation
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.BatchResultErrorEntryUnmarshaller">
            <summary>
            Response Unmarshaller for BatchResultErrorEntry Object
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchRequestMarshaller">
            <summary>
            ChangeMessageVisibilityBatch Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ChangeMessageVisibilityBatch operation
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityBatchResultEntryUnmarshaller">
            <summary>
            Response Unmarshaller for ChangeMessageVisibilityBatchResultEntry Object
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityRequestMarshaller">
            <summary>
            ChangeMessageVisibility Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ChangeMessageVisibilityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ChangeMessageVisibility operation
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.CreateQueueRequestMarshaller">
            <summary>
            CreateQueue Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.CreateQueueResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateQueue operation
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchRequestMarshaller">
            <summary>
            DeleteMessageBatch Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteMessageBatch operation
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageBatchResultEntryUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteMessageBatchResultEntry Object
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageRequestMarshaller">
            <summary>
            DeleteMessage Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteMessageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteMessage operation
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteQueueRequestMarshaller">
            <summary>
            DeleteQueue Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.DeleteQueueResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteQueue operation
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueAttributesRequestMarshaller">
            <summary>
            GetQueueAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetQueueAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueUrlRequestMarshaller">
            <summary>
            GetQueueUrl Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.GetQueueUrlResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetQueueUrl operation
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ListDeadLetterSourceQueuesRequestMarshaller">
            <summary>
            ListDeadLetterSourceQueues Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ListDeadLetterSourceQueuesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDeadLetterSourceQueues operation
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ListQueuesRequestMarshaller">
            <summary>
            ListQueues Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ListQueuesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListQueues operation
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.MessageAttributeValueUnmarshaller">
            <summary>
            Response Unmarshaller for MessageAttributeValue Object
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.MessageUnmarshaller">
            <summary>
            Response Unmarshaller for Message Object
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ReceiveMessageRequestMarshaller">
            <summary>
            ReceiveMessage Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.ReceiveMessageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ReceiveMessage operation
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.RemovePermissionRequestMarshaller">
            <summary>
            RemovePermission Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.RemovePermissionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemovePermission operation
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchRequestMarshaller">
            <summary>
            SendMessageBatch Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SendMessageBatch operation
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageBatchResultEntryUnmarshaller">
            <summary>
            Response Unmarshaller for SendMessageBatchResultEntry Object
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageRequestMarshaller">
            <summary>
            SendMessage Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.SendMessageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SendMessage operation
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.SetQueueAttributesRequestMarshaller">
            <summary>
            SetQueueAttributes Request Marshaller
            </summary>       
        </member>
        <member name="T:Amazon.SQS.Model.Internal.MarshallTransformations.SetQueueAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetQueueAttributes operation
            </summary>  
        </member>
        <member name="T:Amazon.SQS.Model.InvalidAttributeNameException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidAttributeNameException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidAttributeNameException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SQS.Model.InvalidBatchEntryIdException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidBatchEntryIdException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidBatchEntryIdException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SQS.Model.InvalidIdFormatException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidIdFormatException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidIdFormatException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SQS.Model.InvalidMessageContentsException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.InvalidMessageContentsException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidMessageContentsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SQS.Model.ListDeadLetterSourceQueuesRequest">
            <summary>
            Container for the parameters to the ListDeadLetterSourceQueues operation.
            Returns a list of your queues that have the RedrivePolicy queue attribute configured
            with a dead letter queue.
            
                        
            <para>
            For more information about using dead letter queues, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/SQSDeadLetterQueue.html">Using
            Amazon SQS Dead Letter Queues</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ListDeadLetterSourceQueuesRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. The queue URL of a dead letter queue.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ListDeadLetterSourceQueuesResponse">
            <summary>
            Configuration for accessing Amazon ListDeadLetterSourceQueues service
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ListDeadLetterSourceQueuesResult">
            <summary>
            A list of your dead letter source queues.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ListDeadLetterSourceQueuesResult.QueueUrls">
            <summary>
            Gets and sets the property QueueUrls. A list of source queue URLs that have the RedrivePolicy
            queue attribute configured with a dead letter queue.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ListDeadLetterSourceQueuesResponse.ListDeadLetterSourceQueuesResult">
            <summary>
            Gets and sets the ListDeadLetterSourceQueuesResult property.
            Represents the output of a ListDeadLetterSourceQueues operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ListQueuesRequest">
            <summary>
            Container for the parameters to the ListQueues operation.
            Returns a list of your queues. The maximum number of      queues that can be returned
            is 1000. If you specify a value for the optional      <code>QueueNamePrefix</code>
            parameter, only queues with a name beginning with the      specified value are returned.
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ListQueuesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ListQueuesRequest.#ctor(System.String)">
            <summary>
            Instantiates ListQueuesRequest with the parameterized properties
            </summary>
            <param name="queueNamePrefix">A string to use for filtering the list results. Only those queues whose name   begins with the specified string are returned.</param>
        </member>
        <member name="P:Amazon.SQS.Model.ListQueuesRequest.QueueNamePrefix">
            <summary>
            Gets and sets the property QueueNamePrefix. 
            <para>
            A string to use for filtering the list results. Only those queues whose name     
            begins with the specified string are returned.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ListQueuesResponse">
            <summary>
            Configuration for accessing Amazon ListQueues service
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ListQueuesResult">
            <summary>
            A list of your queues.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ListQueuesResult.QueueUrls">
            <summary>
            Gets and sets the property QueueUrls. 
            <para>
            A list of queue URLs, up to 1000 entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ListQueuesResponse.ListQueuesResult">
            <summary>
            Gets and sets the ListQueuesResult property.
            Represents the output of a ListQueues operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.Message">
            <summary>
            An Amazon SQS message.
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.Message.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.Message.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            <code>SenderId</code>, <code>SentTimestamp</code>, <code>ApproximateReceiveCount</code>,
            and/or       <code>ApproximateFirstReceiveTimestamp</code>. <code>SentTimestamp</code>
                 and <code>ApproximateFirstReceiveTimestamp</code> are each returned as an integer
            representing the             <a href="http://en.wikipedia.org/wiki/Unix_time">epoch
            time</a> in milliseconds.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.Message.Body">
            <summary>
            Gets and sets the property Body. 
            <para>
            The message's contents (not URL-encoded).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.Message.MD5OfBody">
            <summary>
            Gets and sets the property MD5OfBody. 
            <para>
            An MD5 digest of the non-URL-encoded message body string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.Message.MD5OfMessageAttributes">
            <summary>
            Gets and sets the property MD5OfMessageAttributes. 
            <para>
            An MD5 digest of the non-URL-encoded message attribute string. This can be used to
            verify that Amazon SQS received the message correctly. Amazon SQS first URL decodes
            the message before creating the MD5 digest. For information about MD5, go to <a href="http://www.faqs.org/rfcs/rfc1321.html">http://www.faqs.org/rfcs/rfc1321.html</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.Message.MessageAttributes">
            <summary>
            Gets and sets the property MessageAttributes. 
            <para>
            Each message attribute consists of a Name, Type, and Value. For more information,
            see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/SQSMessageAttributes.html#SQSMessageAttributesNTV">Message
            Attribute Items</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.Message.MessageId">
            <summary>
            Gets and sets the property MessageId. 
            <para>
            A unique identifier for the message. Message IDs are considered unique across all
            AWS accounts for an extended period of time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.Message.ReceiptHandle">
            <summary>
            Gets and sets the property ReceiptHandle. 
            <para>
            An identifier associated with the act of receiving the message.       A new receipt
            handle is returned every time you receive a message.       When deleting a message,
            you provide the last received receipt handle to delete the message.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.MessageAttributeValue">
            <summary>
            The user-specified message attribute value. For string data types, the value attribute
            has the same restrictions on the content as the message body. For more information,
            see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_SendMessage.html">SendMessage</a>.
            
                    
            <para>
            Name, type, and value must not be empty or null. In addition, the message body should
            not be empty or null. All parts of the message attribute, including name, type, and
            value, are included in the message size restriction, which is currently 256 KB (262,144
            bytes).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.MessageAttributeValue.BinaryListValues">
            <summary>
            Gets and sets the property BinaryListValues. 
            <para>
            Not implemented. Reserved for future use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.MessageAttributeValue.BinaryValue">
            <summary>
            Gets and sets the property BinaryValue. 
            <para>
            Binary type attributes can store any binary data, for example, compressed data, encrypted
            data, or images.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.MessageAttributeValue.DataType">
            <summary>
            Gets and sets the property DataType. 
            <para>
            Amazon SQS supports the following logical data types: String, Number, and Binary.
            In addition, you can append your own custom labels. For more information, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/SQSMessageAttributes.html#SQSMessageAttributes.DataTypes">Message
            Attribute Data Types</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.MessageAttributeValue.StringListValues">
            <summary>
            Gets and sets the property StringListValues. 
            <para>
            Not implemented. Reserved for future use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.MessageAttributeValue.StringValue">
            <summary>
            Gets and sets the property StringValue. 
            <para>
            Strings are Unicode with UTF8 binary encoding. For a list of code values, see <a href="http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters">http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.MessageNotInflightException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.MessageNotInflightException.#ctor(System.String)">
            <summary>
            Constructs a new MessageNotInflightException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SQS.Model.OverLimitException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.OverLimitException.#ctor(System.String)">
            <summary>
            Constructs a new OverLimitException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SQS.Model.QueueDeletedRecentlyException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.QueueDeletedRecentlyException.#ctor(System.String)">
            <summary>
            Constructs a new QueueDeletedRecentlyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SQS.Model.QueueDoesNotExistException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.QueueDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new QueueDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SQS.Model.QueueNameExistsException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.QueueNameExistsException.#ctor(System.String)">
            <summary>
            Constructs a new QueueNameExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SQS.Model.ReceiptHandleIsInvalidException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ReceiptHandleIsInvalidException.#ctor(System.String)">
            <summary>
            Constructs a new ReceiptHandleIsInvalidException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SQS.Model.ReceiveMessageRequest">
            <summary>
            Container for the parameters to the ReceiveMessage operation.
            Retrieves one or more messages, with a maximum limit of 10 messages, from the
            specified      queue. Long poll support is enabled by using the <code>WaitTimeSeconds</code>
            parameter.       For more information, see       <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-long-polling.html">Amazon
            SQS Long Poll</a> in the <i>Amazon SQS Developer Guide</i>.    
            
                
            <para>
                  Short poll is the default behavior where a weighted random set of machines is
            sampled on a <code>ReceiveMessage</code> call.       This means only the messages
            on the sampled machines are returned. If the number of messages in the queue is small
            (less than 1000),       it is likely you will get fewer messages than you requested
            per <code>ReceiveMessage</code> call.       If the number of messages in the queue
            is extremely small, you might not receive any messages in      a particular <code>ReceiveMessage</code>
            response; in which case you should repeat the      request.    
            </para>
                
            <para>
                  For each message returned, the response includes the following:    
            </para>
                <ul>      <li>        
            <para>
                      Message body        
            </para>
                  </li>      <li>        
            <para>
                      MD5 digest of the message body. For information about MD5, go to       
               <a href="http://www.faqs.org/rfcs/rfc1321.html">http://www.faqs.org/rfcs/rfc1321.html</a>.
                   
            </para>
                  </li>      <li>        
            <para>
                      Message ID you received when you sent the message to the queue.        
            </para>
                  </li>      <li>        
            <para>
                      Receipt handle.        
            </para>
                  </li>      <li>        
            <para>
                      Message attributes.        
            </para>
                  </li>      <li>        
            <para>
                      MD5 digest of the message attributes.        
            </para>
                  </li>    </ul>    
            <para>
                  The receipt handle is the identifier you must provide when deleting the message.
            For more      information, see             <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/ImportantIdentifiers.html">Queue
                   and Message Identifiers</a> in the <i>Amazon SQS Developer Guide</i>.    
            </para>
                
            <para>
                  You can provide the <code>VisibilityTimeout</code> parameter in your request,
            which      will be applied to the messages that Amazon SQS returns in the response.
            If you do not include the      parameter, the overall visibility timeout for the queue
            is used for the returned messages. For      more information, see       <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AboutVT.html">Visibility
                   Timeout</a> in the <i>Amazon SQS Developer Guide</i>.          
            </para>
                <note>      
            <para>
                    Going forward, new attributes might be added. If you are writing code that
            calls this action,        we recommend that you structure your code so that it can
            handle new attributes gracefully.      
            </para>
                </note>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ReceiveMessageRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.ReceiveMessageRequest.#ctor(System.String)">
            <summary>
            Instantiates ReceiveMessageRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to take action on.</param>
        </member>
        <member name="P:Amazon.SQS.Model.ReceiveMessageRequest.AttributeNames">
            <summary>
            Gets and sets the property AttributeNames. 
            <para>
            A list of attributes that need to be returned along with each message.           
            </para>
                
            <para>
                  The following lists the names and descriptions of the attributes that can be
            returned:    
            </para>
                <ul>            <li><code>All</code> - returns all values.</li>      <li><code>ApproximateFirstReceiveTimestamp</code>
            - returns      the time when the message was first received (epoch time in milliseconds).</li>
                 <li><code>ApproximateReceiveCount</code> - returns the        number of times
            a message has been received but not deleted.</li>      <li><code>SenderId</code> -
            returns the AWS account        number (or the IP address, if anonymous access is allowed)
            of the        sender.</li>      <li><code>SentTimestamp</code> - returns the time
            when        the message was sent (epoch time in milliseconds).</li>         </ul>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ReceiveMessageRequest.MaxNumberOfMessages">
            <summary>
            Gets and sets the property MaxNumberOfMessages. 
            <para>
            The maximum number of messages to return. Amazon SQS never returns more      messages
            than this value but may return fewer. Values can be from 1 to 10. Default is 1.
            </para>
                
            <para>
            All of the messages are not necessarily returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ReceiveMessageRequest.MessageAttributeNames">
            <summary>
            Gets and sets the property MessageAttributeNames. 
            <para>
            The message attribute Name can contain the following characters: A-Z, a-z, 0-9, underscore(_),
            hyphen(-), and period (.).       The message attribute name must not start or end
            with a period, and it should not have successive periods. The message attribute name
            is case sensitive and must be unique among all attribute       names for the message.
            The message attribute name can be up to 256 characters long. Attribute names cannot
            start with "AWS." or "Amazon." because these prefixes are reserved for use by Amazon
            Web Services.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ReceiveMessageRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue to take action on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ReceiveMessageRequest.VisibilityTimeout">
            <summary>
            Gets and sets the property VisibilityTimeout. 
            <para>
            The duration (in seconds) that the received messages are hidden from      subsequent
            retrieve requests after being retrieved by a      <code>ReceiveMessage</code> request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ReceiveMessageRequest.WaitTimeSeconds">
            <summary>
            Gets and sets the property WaitTimeSeconds. 
            <para>
            The duration (in seconds) for which the call will wait for a message to arrive   
              in the queue before returning.  If a message is available, the call will      return
            sooner than WaitTimeSeconds.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ReceiveMessageResponse">
            <summary>
            Configuration for accessing Amazon ReceiveMessage service
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.ReceiveMessageResult">
            <summary>
            A list of received messages.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ReceiveMessageResult.Messages">
            <summary>
            Gets and sets the property Messages. 
            <para>
            A list of messages.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.ReceiveMessageResponse.ReceiveMessageResult">
            <summary>
            Gets and sets the ReceiveMessageResult property.
            Represents the output of a ReceiveMessage operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.RemovePermissionRequest">
            <summary>
            Container for the parameters to the RemovePermission operation.
            Revokes any permissions in the queue      policy that matches the specified <code>Label</code>
            parameter. Only the owner      of the queue can remove permissions.
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.RemovePermissionRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.RemovePermissionRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates RemovePermissionRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to take action on.</param>
            <param name="label">The identification of the permission to remove. This is the label added with   the <a>AddPermission</a> action.</param>
        </member>
        <member name="P:Amazon.SQS.Model.RemovePermissionRequest.Label">
            <summary>
            Gets and sets the property Label. 
            <para>
            The identification of the permission to remove. This is the label added with     
            the <a>AddPermission</a> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.RemovePermissionRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue to take action on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.RemovePermissionResponse">
            <summary>
            Configuration for accessing Amazon RemovePermission service
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.RemovePermissionResponse.RemovePermissionResult">
            <summary>
            Gets and sets the RemovePermissionResult property.
            Represents the output of a RemovePermission operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.SendMessageBatchRequest">
            <summary>
            Container for the parameters to the SendMessageBatch operation.
            Delivers up to ten messages to the specified queue.      This is a batch version of
            <a>SendMessage</a>.      The result of the send action on each message is reported
            individually in the response.      The maximum allowed individual message size is
            256 KB (262,144 bytes).
            
                
            <para>
            The maximum total payload size (i.e., the sum of all a batch's individual message
            lengths)      is also 256 KB (262,144 bytes).
            </para>
                
            <para>
            If the <code>DelaySeconds</code> parameter is not specified for an entry,     the
            default for the queue is used.
            </para>
                <important>The following list shows the characters (in Unicode) that are allowed
            in your message, according      to the W3C XML specification. For more information,
            go to <a href="http://www.faqs.org/rfcs/rfc1321.html">http://www.faqs.org/rfcs/rfc1321.html</a>.
                  If you send any characters that are not included in the list, your request will
            be rejected.      
            <para>
            #x9 | #xA | #xD | [#x20 to #xD7FF] | [#xE000 to #xFFFD] | [#x10000 to #x10FFFF]
            </para>
                </important>    <important>      Because the batch request can result in a combination
            of successful and unsuccessful actions,       you should check for batch errors even
            when the call returns an HTTP status code of 200.     </important>    <note>Some API
            actions take lists of parameters. These lists are specified using the <code>param.n</code>
            notation. Values      of <code>n</code> are integers starting from 1. For example,
            a parameter list with two elements looks like this:     </note>    
            <para>
            <code>&amp;Attribute.1=this</code>
            </para>
                
            <para>
            <code>&amp;Attribute.2=that</code>
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.SendMessageBatchRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.SendMessageBatchRequest.#ctor(System.String,System.Collections.Generic.List{Amazon.SQS.Model.SendMessageBatchRequestEntry})">
            <summary>
            Instantiates SendMessageBatchRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to take action on.</param>
            <param name="entries">A list of <a>SendMessageBatchRequestEntry</a> items.</param>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchRequest.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            A list of <a>SendMessageBatchRequestEntry</a> items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue to take action on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.SendMessageBatchRequestEntry">
            <summary>
            Contains the details of a single Amazon SQS message along with a <code>Id</code>.
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.SendMessageBatchRequestEntry.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.SendMessageBatchRequestEntry.#ctor(System.String,System.String)">
            <summary>
            Instantiates SendMessageBatchRequestEntry with the parameterized properties
            </summary>
            <param name="id">An identifier for the message in this batch. This is used to communicate   the result. Note that the <code>Id</code>s of a batch request need to   be unique within the request.</param>
            <param name="messageBody">Body of the message.</param>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchRequestEntry.DelaySeconds">
            <summary>
            Gets and sets the property DelaySeconds. 
            <para>
            The number of seconds for which the message has to be delayed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchRequestEntry.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            An identifier for the message in this batch. This is used to communicate      the
            result. Note that the <code>Id</code>s of a batch request need to      be unique within
            the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchRequestEntry.MessageAttributes">
            <summary>
            Gets and sets the property MessageAttributes. 
            <para>
            Each message attribute consists of a Name, Type, and Value. For more information,
            see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/SQSMessageAttributes.html#SQSMessageAttributesNTV">Message
            Attribute Items</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchRequestEntry.MessageBody">
            <summary>
            Gets and sets the property MessageBody. 
            <para>
            Body of the message.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.SendMessageBatchResponse">
            <summary>
            Configuration for accessing Amazon SendMessageBatch service
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.SendMessageBatchResult">
            <summary>
            For each message in the batch, the response contains a <a>SendMessageBatchResultEntry</a>
            tag if the message succeeds or a <a>BatchResultErrorEntry</a> tag if the message fails.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchResult.Failed">
            <summary>
            Gets and sets the property Failed. 
            <para>
            A list of <a>BatchResultErrorEntry</a> items with the error detail about each    
             message that could not be enqueued.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchResult.Successful">
            <summary>
            Gets and sets the property Successful. 
            <para>
            A list of <a>SendMessageBatchResultEntry</a> items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchResponse.SendMessageBatchResult">
            <summary>
            Gets and sets the SendMessageBatchResult property.
            Represents the output of a SendMessageBatch operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.SendMessageBatchResultEntry">
            <summary>
            Encloses a message ID for successfully enqueued message of a      <a>SendMessageBatch</a>.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchResultEntry.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            An identifier for the message in this batch.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchResultEntry.MD5OfMessageAttributes">
            <summary>
            Gets and sets the property MD5OfMessageAttributes. 
            <para>
            An MD5 digest of the non-URL-encoded message attribute string. This can be used to
            verify that Amazon SQS received the message batch correctly. Amazon SQS first URL
            decodes the message before creating the MD5 digest. For information about MD5, go
            to <a href="http://www.faqs.org/rfcs/rfc1321.html">http://www.faqs.org/rfcs/rfc1321.html</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchResultEntry.MD5OfMessageBody">
            <summary>
            Gets and sets the property MD5OfMessageBody. 
            <para>
            An MD5 digest of the non-URL-encoded message body string. This can be used to    
             verify that Amazon SQS received the message correctly. Amazon SQS first URL decodes
            the      message before creating the MD5 digest. For information about MD5, go to
            <a href="http://www.faqs.org/rfcs/rfc1321.html">http://www.faqs.org/rfcs/rfc1321.html</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageBatchResultEntry.MessageId">
            <summary>
            Gets and sets the property MessageId. 
            <para>
            An identifier for the message.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.SendMessageRequest">
            <summary>
            Container for the parameters to the SendMessage operation.
            Delivers a message to the specified      queue. With Amazon SQS, you now have
            the ability to send large payload messages that are up      to 256KB (262,144 bytes)
            in size. To send large payloads, you must use an AWS SDK that      supports SigV4
            signing. To verify whether SigV4 is supported for an AWS SDK, check the SDK      release
            notes.    
            
                <important>      
            <para>
                    The following list shows the characters (in Unicode) allowed in your message,
            according        to the W3C XML specification. For more information, go to       
                    <a href="http://www.w3.org/TR/REC-xml/#charsets">http://www.w3.org/TR/REC-xml/#charsets</a>
                           If you send any characters not included in the list, your request will
            be rejected.      
            </para>
                  
            <para>
                    #x9 | #xA | #xD | [#x20 to #xD7FF] | [#xE000 to #xFFFD] | [#x10000 to #x10FFFF]
                 
            </para>
                </important>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.SendMessageRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.SendMessageRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates SendMessageRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to take action on.</param>
            <param name="messageBody">The message to send. String maximum 256 KB in size. For a list of allowed characters, see the preceding important note.</param>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageRequest.DelaySeconds">
            <summary>
            Gets and sets the property DelaySeconds. 
            <para>
                  The number of seconds (0 to 900 - 15 minutes) to delay a specific message. Messages
            with a positive <code>DelaySeconds</code> value       become available for processing
            after the delay time is finished.      If you don't specify a value, the default value
            for the queue applies.    
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageRequest.MessageAttributes">
            <summary>
            Gets and sets the property MessageAttributes. 
            <para>
            Each message attribute consists of a Name, Type, and Value. For more information,
            see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/SQSMessageAttributes.html#SQSMessageAttributesNTV">Message
            Attribute Items</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageRequest.MessageBody">
            <summary>
            Gets and sets the property MessageBody. 
            <para>
            The message to send. String maximum 256 KB in size. For a list of allowed characters,
            see the preceding important note.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue to take action on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.SendMessageResponse">
            <summary>
            Configuration for accessing Amazon SendMessage service
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.SendMessageResult">
            <summary>
            The MD5OfMessageBody and MessageId elements.
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageResult.MD5OfMessageAttributes">
            <summary>
            Gets and sets the property MD5OfMessageAttributes. 
            <para>
            An MD5 digest of the non-URL-encoded message attribute string. This can be used to
            verify that Amazon SQS received the message correctly. Amazon SQS first URL decodes
            the message before creating the MD5 digest. For information about MD5, go to <a href="http://www.faqs.org/rfcs/rfc1321.html">http://www.faqs.org/rfcs/rfc1321.html</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageResult.MD5OfMessageBody">
            <summary>
            Gets and sets the property MD5OfMessageBody. 
            <para>
            An MD5 digest of the non-URL-encoded message body string. This can be used to    
             verify that Amazon SQS received the message correctly. Amazon SQS first URL decodes
            the      message before creating the MD5 digest. For information about MD5, go to
            <a href="http://www.faqs.org/rfcs/rfc1321.html">http://www.faqs.org/rfcs/rfc1321.html</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageResult.MessageId">
            <summary>
            Gets and sets the property MessageId. 
            <para>
                        An element containing the message ID of the message sent to the queue.
                        For more information, see       <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/ImportantIdentifiers.html">Queue
            and Message Identifiers</a>       in the <i>Amazon SQS Developer Guide</i>.    
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SendMessageResponse.SendMessageResult">
            <summary>
            Gets and sets the SendMessageResult property.
            Represents the output of a SendMessage operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.SetQueueAttributesRequest">
            <summary>
            Container for the parameters to the SetQueueAttributes operation.
            Sets the value of one or more queue attributes. When you change a queue's attributes,
                  the change can take up to 60 seconds for most of the attributes to propagate
            throughout the SQS system.       Changes made to the <code>MessageRetentionPeriod</code>
            attribute can take up to 15 minutes.
            
                <note>Going forward, new attributes might be added.     If you are writing code
            that calls this action, we recommend that you structure your code so that it can handle
            new attributes gracefully.</note>
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.SetQueueAttributesRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SQS.Model.SetQueueAttributesRequest.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Instantiates SetQueueAttributesRequest with the parameterized properties
            </summary>
            <param name="queueUrl">The URL of the Amazon SQS queue to take action on.</param>
            <param name="attributes">A map of attributes to set. The following lists the names, descriptions, and values of the special request parameters the <code>SetQueueAttributes</code>   action uses:    <ul>    <li><code>DelaySeconds</code> - The time in seconds that the delivery of all messages in the queue will be delayed. An integer from 0 to 900 (15 minutes). The default for this attribute is 0 (zero).</li>      <li><code>MaximumMessageSize</code> - The limit of how many bytes a message can contain before Amazon SQS rejects it. An integer from 1024 bytes (1 KiB) up to 262144 bytes (256 KiB). The default for this attribute is 262144 (256 KiB).</li>  <li><code>MessageRetentionPeriod</code> - The number of seconds Amazon SQS retains a message. Integer representing seconds, from 60 (1 minute) to 1209600 (14 days). The default for this attribute is 345600 (4 days).</li>  <li><code>Policy</code> - The queue's policy. A valid    form-url-encoded policy. For more information about policy    structure, see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/BasicStructure.html">Basic Policy Structure</a> in the <i>Amazon SQS Developer Guide</i>.     For more information about form-url-encoding, see     <a href="http://www.w3.org/MarkUp/html-spec/html-spec_8.html#SEC8.2.1">http://www.w3.org/MarkUp/html-spec/html-spec_8.html#SEC8.2.1</a>.</li>      <li><code>ReceiveMessageWaitTimeSeconds</code> - The time for which a ReceiveMessage call will wait for a message to arrive. An integer from 0 to 20 (seconds). The default for this attribute is 0. </li>  <li><code>VisibilityTimeout</code> - The visibility timeout for the queue. An integer from 0 to 43200 (12 hours). The default for this attribute is 30. For more information about visibility timeout, see Visibility Timeout in the <i>Amazon SQS Developer Guide</i>.</li>  <li><code>RedrivePolicy</code> - The parameters for dead letter queue functionality of the source queue.     For more information about RedrivePolicy and dead letter queues, see Using Amazon SQS Dead Letter Queues in the <i>Amazon SQS Developer Guide</i>.</li>   </ul> </param>
        </member>
        <member name="P:Amazon.SQS.Model.SetQueueAttributesRequest.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A map of attributes to set.
            </para>
                
            <para>
            The following lists the names, descriptions, and values of the special request parameters
            the <code>SetQueueAttributes</code>      action uses:
            </para>
                
            <para>
                  <ul>                <li><code>DelaySeconds</code> - The time in seconds that
            the delivery of all messages in the queue will be delayed. An integer from 0 to 900
            (15 minutes). The default for this attribute is 0 (zero).</li>               <li><code>MaximumMessageSize</code>
            - The limit of how many bytes a message can contain before Amazon SQS rejects it.
            An integer from 1024 bytes (1 KiB) up to 262144 bytes (256 KiB). The default for this
            attribute is 262144 (256 KiB).</li>        <li><code>MessageRetentionPeriod</code>
            - The number of seconds Amazon SQS retains a message. Integer representing seconds,
            from 60 (1 minute) to 1209600 (14 days). The default for this attribute is 345600
            (4 days).</li>        <li><code>Policy</code> - The queue's policy. A valid      
               form-url-encoded policy. For more information about policy          structure,
            see <a href="http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/BasicStructure.html">Basic
            Policy Structure</a> in the <i>Amazon SQS Developer Guide</i>.           For more
            information about form-url-encoding, see           <a href="http://www.w3.org/MarkUp/html-spec/html-spec_8.html#SEC8.2.1">http://www.w3.org/MarkUp/html-spec/html-spec_8.html#SEC8.2.1</a>.</li>
                                   <li><code>ReceiveMessageWaitTimeSeconds</code> - The time for
            which a ReceiveMessage call will wait for a message to arrive. An integer from 0 to
            20 (seconds). The default for this attribute is 0. </li>        <li><code>VisibilityTimeout</code>
            - The visibility timeout for the queue. An integer from 0 to 43200 (12 hours). The
            default for this attribute is 30. For more information about visibility timeout, see
            Visibility Timeout in the <i>Amazon SQS Developer Guide</i>.</li>        <li><code>RedrivePolicy</code>
            - The parameters for dead letter queue functionality of the source queue.        
              For more information about RedrivePolicy and dead letter queues, see Using Amazon
            SQS Dead Letter Queues in the <i>Amazon SQS Developer Guide</i>.</li>      </ul> 
              
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SetQueueAttributesRequest.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue to take action on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.SetQueueAttributesResponse">
            <summary>
            Configuration for accessing Amazon SetQueueAttributes service
            </summary>
        </member>
        <member name="P:Amazon.SQS.Model.SetQueueAttributesResponse.SetQueueAttributesResult">
            <summary>
            Gets and sets the SetQueueAttributesResult property.
            Represents the output of a SetQueueAttributes operation.
            </summary>
        </member>
        <member name="T:Amazon.SQS.Model.TooManyEntriesInBatchRequestException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.TooManyEntriesInBatchRequestException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyEntriesInBatchRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SQS.Model.UnsupportedOperationException">
            <summary>
             SQS exception
             </summary>
        </member>
        <member name="M:Amazon.SQS.Model.UnsupportedOperationException.#ctor(System.String)">
            <summary>
            Constructs a new UnsupportedOperationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="T:Amazon.SQS.QueueAttributeName">
            <summary>
            Constants used for properties of type QueueAttributeName.
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.ApproximateNumberOfMessages">
            <summary>
            Constant ApproximateNumberOfMessages for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.ApproximateNumberOfMessagesDelayed">
            <summary>
            Constant ApproximateNumberOfMessagesDelayed for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.ApproximateNumberOfMessagesNotVisible">
            <summary>
            Constant ApproximateNumberOfMessagesNotVisible for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.CreatedTimestamp">
            <summary>
            Constant CreatedTimestamp for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.DelaySeconds">
            <summary>
            Constant DelaySeconds for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.LastModifiedTimestamp">
            <summary>
            Constant LastModifiedTimestamp for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.MaximumMessageSize">
            <summary>
            Constant MaximumMessageSize for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.MessageRetentionPeriod">
            <summary>
            Constant MessageRetentionPeriod for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.Policy">
            <summary>
            Constant Policy for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.QueueArn">
            <summary>
            Constant QueueArn for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.ReceiveMessageWaitTimeSeconds">
            <summary>
            Constant ReceiveMessageWaitTimeSeconds for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.RedrivePolicy">
            <summary>
            Constant RedrivePolicy for QueueAttributeName
            </summary>
        </member>
        <member name="F:Amazon.SQS.QueueAttributeName.VisibilityTimeout">
            <summary>
            Constant VisibilityTimeout for QueueAttributeName
            </summary>
        </member>
        <member name="M:Amazon.SQS.QueueAttributeName.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.SQS.QueueAttributeName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_ALL">
            <summary>
            Used in <c>GetQueueAttributes</c> to return all values.
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_VISIBILITY_TIMEOUT">
            <summary>
            The length of time (in seconds) that a message received from a queue will be invisible to other receiving components when they ask to receive messages.
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_APPROXIMATE_NUMBER_OF_MESSAGES">
            <summary>
            The approximate number of visible messages in a queue
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_APPROXIMATE_NUMBER_OF_MESSAGES_NOT_VISIBLE">
            <summary>
            The approximate number of messages that are not timed-out and not deleted.
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_APPROXIMATE_NUMBER_OF_MESSAGES_DELAYED">
            <summary>
            The approximate number of messages that are delayed from delivery.
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_CREATED_TIMESTAMP">
            <summary>
            The time when the queue was created (epoch time in seconds).
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_LAST_MODIFIED_TIMESTAMP">
            <summary>
            The time when the queue was last changed (epoch time in seconds).
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_QUEUE_ARN">
            <summary>
            The queue's Amazon resource name (ARN).
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_MAXIMUM_MESSAGE_SIZE">
            <summary>
            The limit of how many bytes a message can contain before Amazon SQS rejects it.
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_MESSAGE_RETENTION_PERIOD">
            <summary>
            The number of seconds Amazon SQS retains a message.
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_POLICY">
            <summary>
            The queue's policy.
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_DELAY_SECONDS">
            <summary>
            The number of seconds to delay a message from being available to be processed.
            </summary>
        </member>
        <member name="F:Amazon.SQS.Util.SQSConstants.ATTRIBUTE_OLDEST_MESSAGE_AGE">
            <summary>
            The number of milliseconds the oldest message has been on the queue. 
            </summary>
        </member>
        <member name="T:Amazon.Util.RootConfig">
            <summary>
            Root AWS config
            </summary>
        </member>
        <member name="T:Amazon.Util.S3Config">
            <summary>
            S3 settings.
            </summary>
        </member>
        <member name="P:Amazon.Util.S3Config.UseSignatureVersion4">
            <summary>
            Configures if the S3 client should use Signature Version 4 signing with requests.
            By default, this setting is false, though Signature Version 4 may be used by default
            in some cases or with some regions. When the setting is true, Signature Version 4
            will be used for all requests.
            </summary>
        </member>
        <member name="T:Amazon.Util.EC2Config">
            <summary>
            EC2 settings.
            </summary>
        </member>
        <member name="P:Amazon.Util.EC2Config.UseSignatureVersion4">
            <summary>
            Configures if the EC2 client should use Signature Version 4 signing with requests.
            By default, this setting is false, though Signature Version 4 may be used by default
            in some cases or with some regions. When the setting is true, Signature Version 4
            will be used for all requests.
            </summary>
        </member>
        <member name="T:Amazon.Util.ProxyConfig">
            <summary>
            Settings for configuring a proxy for the SDK to use.
            </summary>
        </member>
        <member name="P:Amazon.Util.ProxyConfig.Host">
            <summary>
            The host name or IP address of the proxy server.
            </summary>
        </member>
        <member name="P:Amazon.Util.ProxyConfig.Port">
            <summary>
            The port number of the proxy.
            </summary>
        </member>
        <member name="P:Amazon.Util.ProxyConfig.Username">
            <summary>
            The username to authenticate with the proxy server.
            </summary>
        </member>
        <member name="P:Amazon.Util.ProxyConfig.Password">
            <summary>
            The password to authenticate with the proxy server.
            </summary>
        </member>
        <member name="T:Amazon.Util.LoggingConfig">
            <summary>
            Settings for logging in the SDK.
            </summary>
        </member>
        <member name="P:Amazon.Util.LoggingConfig.LogTo">
            <summary>
            Logging destination.
            </summary>
        </member>
        <member name="P:Amazon.Util.LoggingConfig.LogResponses">
            <summary>
            When to log responses.
            </summary>
        </member>
        <member name="P:Amazon.Util.LoggingConfig.LogMetrics">
            <summary>
            Whether or not to log SDK metrics.
            </summary>
        </member>
        <member name="T:Amazon.Util.DynamoDBConfig">
            <summary>
            DynamoDB settings.
            </summary>
        </member>
        <member name="P:Amazon.Util.DynamoDBConfig.Context">
            <summary>
            Settings for DynamoDBContext.
            </summary>
        </member>
        <member name="T:Amazon.Util.DynamoDBContextConfig">
            <summary>
            Settings for DynamoDBContext.
            </summary>
        </member>
        <member name="M:Amazon.Util.DynamoDBContextConfig.AddAlias(Amazon.Util.TableAlias)">
            <summary>
            Adds a TableAlias to the TableAliases property.
            An exception is thrown if there is already a TableAlias with the same FromTable configured.
            </summary>
            <param name="tableAlias"></param>
        </member>
        <member name="M:Amazon.Util.DynamoDBContextConfig.AddMapping(Amazon.Util.TypeMapping)">
            <summary>
            Adds a TypeMapping to the TypeMappings property.
            An exception is thrown if there is already a TypeMapping with the same Type configured.
            </summary>
            <param name="typeMapping"></param>
        </member>
        <member name="P:Amazon.Util.DynamoDBContextConfig.TableNamePrefix">
            <summary>
            Configures the default TableNamePrefix that the DynamoDBContext will use if
            not manually configured.
            
            TableNamePrefix is used after TableAliases have been applied.
            </summary>
        </member>
        <member name="P:Amazon.Util.DynamoDBContextConfig.TableAliases">
            <summary>
            A string-to-string dictionary (From-Table to To-Table) used by DynamoDBContext to
            use a different table from one that is configured for a type.
            
            Remapping is done before applying TableNamePrefix.
            </summary>
        </member>
        <member name="P:Amazon.Util.DynamoDBContextConfig.TypeMappings">
            <summary>
            A Type-to-TypeMapping (type to TypeMapping defining its DynamoDB conversion) used by
            DynamoDBContext to modify or configure a particular type.
            </summary>
        </member>
        <member name="T:Amazon.Util.TableAlias">
            <summary>
            Single DynamoDB table alias
            </summary>
        </member>
        <member name="M:Amazon.Util.TableAlias.#ctor">
            <summary>
            Initializes an empty TableAlias object
            </summary>
        </member>
        <member name="M:Amazon.Util.TableAlias.#ctor(System.String,System.String)">
            <summary>
            Initializes a TableAlias object with specific source and
            destination tables
            </summary>
            <param name="fromTable">Source table</param>
            <param name="toTable">Destination table</param>
        </member>
        <member name="P:Amazon.Util.TableAlias.FromTable">
            <summary>
            Source table
            </summary>
        </member>
        <member name="P:Amazon.Util.TableAlias.ToTable">
            <summary>
            Destination table
            </summary>
        </member>
        <member name="T:Amazon.Util.TypeMapping">
            <summary>
            Single DynamoDB type mapping config
            </summary>
        </member>
        <member name="M:Amazon.Util.TypeMapping.AddProperty(Amazon.Util.PropertyConfig)">
            <summary>
            Adds a PropertyConfig to the PropertyConfigs property.
            An exception is thrown if there is already a PropertyConfig with the same Name configured.
            </summary>
            <param name="propertyConfig"></param>
        </member>
        <member name="M:Amazon.Util.TypeMapping.#ctor(System.Type,System.String)">
            <summary>
            Initializes a TypeMapping object for a specific type and target table.
            </summary>
            <param name="type">Target type</param>
            <param name="targetTable">Target table</param>
        </member>
        <member name="P:Amazon.Util.TypeMapping.Type">
            <summary>
            Type to which the mapping applies
            </summary>
        </member>
        <member name="P:Amazon.Util.TypeMapping.TargetTable">
            <summary>
            Target table for the type
            </summary>
        </member>
        <member name="P:Amazon.Util.TypeMapping.PropertyConfigs">
            <summary>
            A string-to-PropertyConfig dictionary (property name to PropertyConfig) describing
            how each property on the type should be treated.
            </summary>
        </member>
        <member name="T:Amazon.Util.PropertyConfig">
            <summary>
            Single DynamoDB property mapping config
            </summary>
        </member>
        <member name="M:Amazon.Util.PropertyConfig.#ctor(System.String)">
            <summary>
            Initializes a PropertyConfig object for a specific property
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Amazon.Util.PropertyConfig.Name">
            <summary>
            Property name
            </summary>
        </member>
        <member name="P:Amazon.Util.PropertyConfig.Attribute">
            <summary>
            Attribute name
            </summary>
        </member>
        <member name="P:Amazon.Util.PropertyConfig.Ignore">
            <summary>
            Whether this property should be ignored by DynamoDBContext
            </summary>
        </member>
        <member name="P:Amazon.Util.PropertyConfig.Version">
            <summary>
            Whether this property should be treated as a version property
            </summary>
        </member>
        <member name="P:Amazon.Util.PropertyConfig.Converter">
            <summary>
            The type of converter that should be used on this property
            </summary>
        </member>
        <member name="T:Amazon.Util.AWSSDKUtils">
            <summary>
            This class defines utilities and constants that can be used by 
            all the client libraries of the SDK.
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.UserAgentHeader">
            <summary>
            The user agent string header
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.ValidUrlCharacters">
            <summary>
            The Set of accepted and valid Url characters per RFC3986. 
            Characters outside of this set will be encoded.
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.ValidUrlCharactersRFC1738">
            <summary>
            The Set of accepted and valid Url characters per RFC1738. 
            Characters outside of this set will be encoded.
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.UrlEncodedContent">
            <summary>
            The string representing Url Encoded Content in HTTP requests
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.GMTDateFormat">
            <summary>
            The GMT Date Format string. Used when parsing date objects
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.ISO8601DateFormat">
            <summary>
            The ISO8601Date Format string. Used when parsing date objects
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.ISO8601DateFormatNoMS">
            <summary>
            The ISO8601Date Format string. Used when parsing date objects
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.ISO8601BasicDateTimeFormat">
            <summary>
            The ISO8601 Basic date/time format string. Used when parsing date objects
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.ISO8601BasicDateFormat">
            <summary>
            The ISO8601 basic date format. Used during AWS4 signature computation.
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.RFC822DateFormat">
            <summary>
            The RFC822Date Format string. Used when parsing date objects
            </summary>
        </member>
        <member name="F:Amazon.Util.AWSSDKUtils.ValidPathCharacters">
            <summary>
            The set of accepted and valid Url path characters per RFC3986.
            </summary>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.GetExtension(System.String)">
            <summary>
            Returns an extension of a path.
            This has the same behavior as System.IO.Path.GetExtension, but does not
            check the path for invalid characters.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.GetParametersAsString(System.Collections.Generic.IDictionary{System.String,System.String})">
            Convert Dictionary of paremeters to Url encoded query string
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.Join(System.Collections.Generic.List{System.String})">
            <summary>
            Returns a new string created by joining each of the strings in the
            specified list together, with a comma between them.
            </summary>
            <parma name="strings">The list of strings to join into a single, comma delimited
            string list.</parma>
            <returns> A new string created by joining each of the strings in the
            specified list together, with a comma between strings.</returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.DetermineRegion(System.String)">
            <summary>
            Attempt to infer the region for a service request based on the endpoint
            </summary>
            <param name="url">Endpoint to the service to be called</param>
            <returns>
            Region parsed from the endpoint; DefaultRegion (or DefaultGovRegion) 
            if it cannot be determined/is not explicit
            </returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.DetermineService(System.String)">
            <summary>
            Attempt to infer the service name for a request (in short form, eg 'iam') from the
            service endpoint.
            </summary>
            <param name="url">Endpoint to the service to be called</param>
            <returns>
            Short-form name of the service parsed from the endpoint; empty string if it cannot 
            be determined
            </returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.ConvertFromUnixEpochSeconds(System.Int32)">
            <summary>
            Utility method for converting Unix epoch seconds to DateTime structure.
            </summary>
            <param name="seconds">The number of seconds since January 1, 1970.</param>
            <returns>Converted DateTime structure</returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.ToHex(System.Byte[],System.Boolean)">
            <summary>
            Helper function to format a byte array into string
            </summary>
            <param name="data">The data blob to process</param>
            <param name="lowercase">If true, returns hex digits in lower case form</param>
            <returns>String version of the data</returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.InvokeInBackground``1(System.EventHandler{``0},``0,System.Object)">
            <summary>
            Calls a specific EventHandler in a background thread
            </summary>
            <param name="handler"></param>
            <param name="args"></param>
            <param name="sender"></param>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.ParseQueryParameters(System.String)">
            <summary>
            Parses a query string of a URL and returns the parameters as a string-to-string dictionary.
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.GetFormattedTimestampISO8601(System.Int32)">
            <summary>
            Gets the ISO8601 formatted timestamp that is minutesFromNow
            in the future.
            </summary>
            <param name="minutesFromNow">The number of minutes from the current instant
            for which the timestamp is needed.</param>
            <returns>The ISO8601 formatted future timestamp.</returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.GetFormattedTimestampRFC822(System.Int32)">
            <summary>
            Gets the RFC822 formatted timestamp that is minutesFromNow
            in the future.
            </summary>
            <param name="minutesFromNow">The number of minutes from the current instant
            for which the timestamp is needed.</param>
            <returns>The ISO8601 formatted future timestamp.</returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.UrlEncode(System.String,System.Boolean)">
            <summary>
            URL encodes a string per RFC3986. If the path property is specified,
            the accepted path characters {/+:} are not encoded.
            </summary>
            <param name="data">The string to encode</param>
            <param name="path">Whether the string is a URL path or not</param>
            <returns>The encoded string</returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.UrlEncode(System.Int32,System.String,System.Boolean)">
            <summary>
            URL encodes a string per the specified RFC. If the path property is specified,
            the accepted path characters {/+:} are not encoded.
            </summary>
            <param name="rfcNumber">RFC number determing safe characters</param>
            <param name="data">The string to encode</param>
            <param name="path">Whether the string is a URL path or not</param>
            <returns>The encoded string</returns>
            <remarks>
            Currently recognised RFC versions are 1738 (Dec '94) and 3986 (Jan '05). 
            If the specified RFC is not recognised, 3986 is used by default.
            </remarks>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.BytesToHexString(System.Byte[])">
            <summary>
            Convert bytes to a hex string
            </summary>
            <param name="bytes">Bytes to convert.</param>
            <returns>Hexadecimal string representing the byte array.</returns>
        </member>
        <member name="M:Amazon.Util.AWSSDKUtils.HexStringToBytes(System.String)">
            <summary>
            Convert a hex string to bytes
            </summary>
            <param name="hex">Hexadecimal string</param>
            <returns>Byte array corresponding to the hex string.</returns>
        </member>
        <member name="P:Amazon.Util.AWSSDKUtils.SDKUserAgent">
            <summary>
            The AWS SDK User Agent
            </summary>        
        </member>
        <member name="P:Amazon.Util.AWSSDKUtils.FormattedCurrentTimestampGMT">
            <summary>
            Formats the current date as a GMT timestamp
            </summary>
            <returns>A GMT formatted string representation
            of the current date and time
            </returns>
        </member>
        <member name="P:Amazon.Util.AWSSDKUtils.FormattedCurrentTimestampISO8601">
            <summary>
            Formats the current date as ISO 8601 timestamp
            </summary>
            <returns>An ISO 8601 formatted string representation
            of the current date and time
            </returns>
        </member>
        <member name="P:Amazon.Util.AWSSDKUtils.FormattedCurrentTimestampRFC822">
            <summary>
            Formats the current date as ISO 8601 timestamp
            </summary>
            <returns>An ISO 8601 formatted string representation
            of the current date and time
            </returns>
        </member>
        <member name="T:Amazon.AWSClientFactory">
            <summary>
            The Amazon Web Services SDK provides devlopers with a coherent and unified interface to the
            suite of Amazon Web Services. The intent is to facilitate the rapid building of
            applications that leverage multiple Amazon Web Services.
            <para>
            To get started, request an instance of the AWSClientFactory via this class's static Instance
            member. Use the factory instance to create clients for all the Web Services needed by
            the application.</para>
            </summary>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonAutoScalingClient(System.String,System.String)">
            <summary>
            Create a client for the Amazon AutoScaling Service with the default configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <returns>An Amazon AutoScaling client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonAutoScalingClient(System.String,System.String,Amazon.AutoScaling.AmazonAutoScalingConfig)">
            <summary>
            Create a client for the Amazon AutoScaling Service with the specified configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc
            </param>
            <returns>An Amazon AutoScaling client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonAutoScalingClient(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon AutoScaling Service with the specified region
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon AutoScaling client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonAutoScalingClient(Amazon.Runtime.AWSCredentials)">
            <summary>
            Create a client for the Amazon AutoScaling Service with AWSCredentials.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <returns>An Amazon AutoScaling client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonAutoScalingClient(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon AutoScaling Service with AWSCredentials and region.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon AutoScaling client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonAutoScalingClient(Amazon.Runtime.AWSCredentials,Amazon.AutoScaling.AmazonAutoScalingConfig)">
            <summary>
            Create a client for the Amazon AutoScaling Service with AWSCredentials and an AmazonAutoScaling Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc</param>
            <returns>An Amazon AutoScaling client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonCloudWatchClient(System.String,System.String)">
            <summary>
            Create a client for the Amazon CloudWatch Service with the default configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <returns>An Amazon CloudWatch client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonCloudWatchClient(System.String,System.String,Amazon.CloudWatch.AmazonCloudWatchConfig)">
            <summary>
            Create a client for the Amazon CloudWatch Service with the specified configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc
            </param>
            <returns>An Amazon CloudWatch client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonCloudWatchClient(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon CloudWatch Service with the specified region
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon CloudWatch client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonCloudWatchClient(Amazon.Runtime.AWSCredentials)">
            <summary>
            Create a client for the Amazon CloudWatch Service with AWSCredentials.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <returns>An Amazon CloudWatch client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonCloudWatchClient(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon CloudWatch Service with AWSCredentials and region.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon CloudWatch client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonCloudWatchClient(Amazon.Runtime.AWSCredentials,Amazon.CloudWatch.AmazonCloudWatchConfig)">
            <summary>
            Create a client for the Amazon CloudWatch Service with AWSCredentials and an AmazonCloudWatch Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc</param>
            <returns>An Amazon CloudWatch client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonDynamoDBClient(System.String,System.String)">
            <summary>
            Create a client for the Amazon DynamoDB Service with the default configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <returns>An Amazon DynamoDB client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonDynamoDBClient(System.String,System.String,Amazon.DynamoDBv2.AmazonDynamoDBConfig)">
            <summary>
            Create a client for the Amazon DynamoDB Service with the specified configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc
            </param>
            <returns>An Amazon DynamoDB client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonDynamoDBClient(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon DynamoDB Service with the specified region
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon DynamoDB client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonDynamoDBClient(Amazon.Runtime.AWSCredentials)">
            <summary>
            Create a client for the Amazon DynamoDB Service with AWSCredentials.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <returns>An Amazon DynamoDB client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonDynamoDBClient(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon DynamoDB Service with AWSCredentials and region.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon DynamoDB client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonDynamoDBClient(Amazon.Runtime.AWSCredentials,Amazon.DynamoDBv2.AmazonDynamoDBConfig)">
            <summary>
            Create a client for the Amazon DynamoDB Service with AWSCredentials and an AmazonDynamoDB Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc</param>
            <returns>An Amazon DynamoDB client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonEC2Client(System.String,System.String)">
            <summary>
            Create a client for the Amazon EC2 Service with the default configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <returns>An Amazon EC2 client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonEC2Client(System.String,System.String,Amazon.EC2.AmazonEC2Config)">
            <summary>
            Create a client for the Amazon EC2 Service with the specified configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc
            </param>
            <returns>An Amazon EC2 client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonEC2Client(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon EC2 Service with the specified region
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon EC2 client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonEC2Client(Amazon.Runtime.AWSCredentials)">
            <summary>
            Create a client for the Amazon EC2 Service with AWSCredentials.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <returns>An Amazon EC2 client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonEC2Client(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon EC2 Service with AWSCredentials and region.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon EC2 client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonEC2Client(Amazon.Runtime.AWSCredentials,Amazon.EC2.AmazonEC2Config)">
            <summary>
            Create a client for the Amazon EC2 Service with AWSCredentials and an AmazonEC2 Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc</param>
            <returns>An Amazon EC2 client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonElasticLoadBalancingClient(System.String,System.String)">
            <summary>
            Create a client for the Amazon ElasticLoadBalancing Service with the default configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <returns>An Amazon ElasticLoadBalancing client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonElasticLoadBalancingClient(System.String,System.String,Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingConfig)">
            <summary>
            Create a client for the Amazon ElasticLoadBalancing Service with the specified configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc
            </param>
            <returns>An Amazon ElasticLoadBalancing client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonElasticLoadBalancingClient(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon ElasticLoadBalancing Service with the specified region
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon ElasticLoadBalancing client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonElasticLoadBalancingClient(Amazon.Runtime.AWSCredentials)">
            <summary>
            Create a client for the Amazon ElasticLoadBalancing Service with AWSCredentials.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <returns>An Amazon ElasticLoadBalancing client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonElasticLoadBalancingClient(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon ElasticLoadBalancing Service with AWSCredentials and region.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon ElasticLoadBalancing client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonElasticLoadBalancingClient(Amazon.Runtime.AWSCredentials,Amazon.ElasticLoadBalancing.AmazonElasticLoadBalancingConfig)">
            <summary>
            Create a client for the Amazon ElasticLoadBalancing Service with AWSCredentials and an AmazonElasticLoadBalancing Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc</param>
            <returns>An Amazon ElasticLoadBalancing client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonKinesisClient(System.String,System.String)">
            <summary>
            Create a client for the Amazon Kinesis Service with the default configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <returns>An Amazon Kinesis client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonKinesisClient(System.String,System.String,Amazon.Kinesis.AmazonKinesisConfig)">
            <summary>
            Create a client for the Amazon Kinesis Service with the specified configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc
            </param>
            <returns>An Amazon Kinesis client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonKinesisClient(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon Kinesis Service with the specified region
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon Kinesis client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonKinesisClient(Amazon.Runtime.AWSCredentials)">
            <summary>
            Create a client for the Amazon Kinesis Service with AWSCredentials.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <returns>An Amazon Kinesis client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonKinesisClient(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon Kinesis Service with AWSCredentials and region.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon Kinesis client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonKinesisClient(Amazon.Runtime.AWSCredentials,Amazon.Kinesis.AmazonKinesisConfig)">
            <summary>
            Create a client for the Amazon Kinesis Service with AWSCredentials and an AmazonKinesis Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc</param>
            <returns>An Amazon Kinesis client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonS3Client(System.String,System.String)">
            <summary>
            Create a client for the Amazon S3 Service with the default configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <returns>An Amazon S3 client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonS3Client(System.String,System.String,Amazon.S3.AmazonS3Config)">
            <summary>
            Create a client for the Amazon S3 Service with the specified configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc
            </param>
            <returns>An Amazon S3 client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonS3Client(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon S3 Service with the specified region
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon S3 client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonS3Client(Amazon.Runtime.AWSCredentials)">
            <summary>
            Create a client for the Amazon S3 Service with AWSCredentials.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <returns>An Amazon S3 client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonS3Client(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon S3 Service with AWSCredentials and region.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon S3 client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonS3Client(Amazon.Runtime.AWSCredentials,Amazon.S3.AmazonS3Config)">
            <summary>
            Create a client for the Amazon S3 Service with AWSCredentials and an AmazonS3 Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc</param>
            <returns>An Amazon S3 client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSecurityTokenServiceClient(System.String,System.String)">
            <summary>
            Create a client for the Amazon SecurityTokenService Service with the default configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <returns>An Amazon SecurityTokenService client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSecurityTokenServiceClient(System.String,System.String,Amazon.SecurityToken.AmazonSecurityTokenServiceConfig)">
            <summary>
            Create a client for the Amazon SecurityTokenService Service with the specified configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc
            </param>
            <returns>An Amazon SecurityTokenService client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSecurityTokenServiceClient(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon SecurityTokenService Service with the specified region
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon SecurityTokenService client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSecurityTokenServiceClient(Amazon.Runtime.AWSCredentials)">
            <summary>
            Create a client for the Amazon SecurityTokenService Service with AWSCredentials.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <returns>An Amazon SecurityTokenService client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSecurityTokenServiceClient(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon SecurityTokenService Service with AWSCredentials and region.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon SecurityTokenService client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSecurityTokenServiceClient(Amazon.Runtime.AWSCredentials,Amazon.SecurityToken.AmazonSecurityTokenServiceConfig)">
            <summary>
            Create a client for the Amazon SecurityTokenService Service with AWSCredentials and an AmazonSecurityTokenService Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc</param>
            <returns>An Amazon SecurityTokenService client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSimpleDBClient(System.String,System.String)">
            <summary>
            Create a client for the Amazon SimpleDB Service with the default configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <returns>An Amazon SimpleDB client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSimpleDBClient(System.String,System.String,Amazon.SimpleDB.AmazonSimpleDBConfig)">
            <summary>
            Create a client for the Amazon SimpleDB Service with the specified configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc
            </param>
            <returns>An Amazon SimpleDB client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSimpleDBClient(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon SimpleDB Service with the specified region
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon SimpleDB client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSimpleDBClient(Amazon.Runtime.AWSCredentials)">
            <summary>
            Create a client for the Amazon SimpleDB Service with AWSCredentials.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <returns>An Amazon SimpleDB client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSimpleDBClient(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon SimpleDB Service with AWSCredentials and region.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon SimpleDB client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSimpleDBClient(Amazon.Runtime.AWSCredentials,Amazon.SimpleDB.AmazonSimpleDBConfig)">
            <summary>
            Create a client for the Amazon SimpleDB Service with AWSCredentials and an AmazonSimpleDB Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc</param>
            <returns>An Amazon SimpleDB client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSimpleEmailServiceClient(System.String,System.String)">
            <summary>
            Create a client for the Amazon SimpleEmailService Service with the default configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <returns>An Amazon SimpleEmailService client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSimpleEmailServiceClient(System.String,System.String,Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig)">
            <summary>
            Create a client for the Amazon SimpleEmailService Service with the specified configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc
            </param>
            <returns>An Amazon SimpleEmailService client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSimpleEmailServiceClient(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon SimpleEmailService Service with the specified region
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon SimpleEmailService client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSimpleEmailServiceClient(Amazon.Runtime.AWSCredentials)">
            <summary>
            Create a client for the Amazon SimpleEmailService Service with AWSCredentials.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <returns>An Amazon SimpleEmailService client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSimpleEmailServiceClient(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon SimpleEmailService Service with AWSCredentials and region.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon SimpleEmailService client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSimpleEmailServiceClient(Amazon.Runtime.AWSCredentials,Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig)">
            <summary>
            Create a client for the Amazon SimpleEmailService Service with AWSCredentials and an AmazonSimpleEmailService Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc</param>
            <returns>An Amazon SimpleEmailService client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSimpleNotificationServiceClient(System.String,System.String)">
            <summary>
            Create a client for the Amazon SimpleNotificationService Service with the default configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <returns>An Amazon SimpleNotificationService client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSimpleNotificationServiceClient(System.String,System.String,Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceConfig)">
            <summary>
            Create a client for the Amazon SimpleNotificationService Service with the specified configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc
            </param>
            <returns>An Amazon SimpleNotificationService client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSimpleNotificationServiceClient(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon SimpleNotificationService Service with the specified region
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon SimpleNotificationService client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSimpleNotificationServiceClient(Amazon.Runtime.AWSCredentials)">
            <summary>
            Create a client for the Amazon SimpleNotificationService Service with AWSCredentials.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <returns>An Amazon SimpleNotificationService client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSimpleNotificationServiceClient(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon SimpleNotificationService Service with AWSCredentials and region.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon SimpleNotificationService client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSimpleNotificationServiceClient(Amazon.Runtime.AWSCredentials,Amazon.SimpleNotificationService.AmazonSimpleNotificationServiceConfig)">
            <summary>
            Create a client for the Amazon SimpleNotificationService Service with AWSCredentials and an AmazonSimpleNotificationService Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc</param>
            <returns>An Amazon SimpleNotificationService client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSQSClient(System.String,System.String)">
            <summary>
            Create a client for the Amazon SQS Service with the default configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <returns>An Amazon SQS client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSQSClient(System.String,System.String,Amazon.SQS.AmazonSQSConfig)">
            <summary>
            Create a client for the Amazon SQS Service with the specified configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc
            </param>
            <returns>An Amazon SQS client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSQSClient(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon SQS Service with the specified region
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon SQS client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSQSClient(Amazon.Runtime.AWSCredentials)">
            <summary>
            Create a client for the Amazon SQS Service with AWSCredentials.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <returns>An Amazon SQS client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSQSClient(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon SQS Service with AWSCredentials and region.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon SQS client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonSQSClient(Amazon.Runtime.AWSCredentials,Amazon.SQS.AmazonSQSConfig)">
            <summary>
            Create a client for the Amazon SQS Service with AWSCredentials and an AmazonSQS Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc</param>
            <returns>An Amazon SQS client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonCognitoSyncClient(System.String,System.String)">
            <summary>
            Create a client for the Amazon CognitoSync Service with the default configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <returns>An Amazon CognitoSync client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonCognitoSyncClient(System.String,System.String,Amazon.CognitoSync.AmazonCognitoSyncConfig)">
            <summary>
            Create a client for the Amazon CognitoSync Service with the specified configuration
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc
            </param>
            <returns>An Amazon CognitoSync client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonCognitoSyncClient(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon CognitoSync Service with the specified region
            </summary>
            <param name="awsAccessKey">The AWS Access Key associated with the account</param>
            <param name="awsSecretAccessKey">The AWS Secret Access Key associated with the account</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon CognitoSync client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonCognitoSyncClient(Amazon.Runtime.AWSCredentials)">
            <summary>
            Create a client for the Amazon CognitoSync Service with AWSCredentials.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <returns>An Amazon CognitoSync client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonCognitoSyncClient(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Create a client for the Amazon CognitoSync Service with AWSCredentials and region.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect to.</param>
            <returns>An Amazon CognitoSync client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Amazon.AWSClientFactory.CreateAmazonCognitoSyncClient(Amazon.Runtime.AWSCredentials,Amazon.CognitoSync.AmazonCognitoSyncConfig)">
            <summary>
            Create a client for the Amazon CognitoSync Service with AWSCredentials and an AmazonCognitoSync Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="config">Configuration options for the service like HTTP Proxy, # of connections, etc</param>
            <returns>An Amazon CognitoSync client</returns>
            <remarks>
            </remarks>
        </member>
        <member name="T:Amazon.AWSConfigs">
            <summary>
            Configuration options that apply to the entire SDK.
            
            These settings can be configured through app.config or web.config.
            Below is a full sample configuration that illustrates all the possible options.
            <code>
            &lt;configSections&gt;
              &lt;section name="aws" type="Amazon.AWSSection, AWSSDK"/&gt;
            &lt;/configSections&gt;
            &lt;aws region="us-west-2"&gt;
              &lt;logging logTo="Log4Net, SystemDiagnostics" logResponses="Always" logMetrics="true" /&gt;
              &lt;s3 useSignatureVersion4="true" /&gt;
              &lt;ec2 useSignatureVersion4="false" /&gt;
              &lt;proxy host="localhost" port="8888" username="1" password="1" /&gt;
              
              &lt;dynamoDB&gt;
                &lt;dynamoDBContext tableNamePrefix="Prod-"&gt;
            
                  &lt;tableAliases&gt;
                    &lt;alias fromTable="FakeTable" toTable="People" /&gt;
                    &lt;alias fromTable="Persons" toTable="People" /&gt;
                  &lt;/tableAliases&gt;
            
                  &lt;mappings&gt;
                    &lt;map type="Sample.Tests.Author, SampleDLL" targetTable="People" /&gt;
                    &lt;map type="Sample.Tests.Editor, SampleDLL" targetTable="People"&gt;
                      &lt;property name="FullName" attribute="Name" /&gt;
                      &lt;property name="EmployeeId" attribute="Id" /&gt;
                      &lt;property name="ComplexData" converter="Sample.Tests.ComplexDataConverter, SampleDLL" /&gt;
                      &lt;property name="Version" version="true" /&gt;
                      &lt;property name="Password" ignore="true" /&gt;
                    &lt;/map&gt;
                  &lt;/mappings&gt;
            
                &lt;/dynamoDBContext&gt;
              &lt;/dynamoDB&gt;
            &lt;/aws&gt;
            </code>
            </summary>
            <summary>
            Configuration options that apply to the entire SDK.
            </summary>
        </member>
        <member name="F:Amazon.AWSConfigs.AWSRegionKey">
            <summary>
            Key for the AWSRegion property.
            <seealso cref="P:Amazon.AWSConfigs.AWSRegion"/>
            </summary>
        </member>
        <member name="F:Amazon.AWSConfigs.AWSProfileNameKey">
            <summary>
            Key for the AWSProfileName property.
            <seealso cref="P:Amazon.AWSConfigs.AWSProfileName"/>
            </summary>
        </member>
        <member name="F:Amazon.AWSConfigs.AWSProfilesLocationKey">
            <summary>
            Key for the AWSProfilesLocation property.
            <seealso cref="P:Amazon.AWSConfigs.LogMetrics"/>
            </summary>
        </member>
        <member name="F:Amazon.AWSConfigs.LoggingKey">
            <summary>
            Key for the Logging property.
            <seealso cref="P:Amazon.AWSConfigs.Logging"/>
            </summary>
        </member>
        <member name="F:Amazon.AWSConfigs.ResponseLoggingKey">
            <summary>
            Key for the ResponseLogging property.
            
            <seealso cref="P:Amazon.AWSConfigs.ResponseLogging"/>
            </summary>
        </member>
        <member name="F:Amazon.AWSConfigs.LogMetricsKey">
            <summary>
            Key for the LogMetrics property.
            <seealso cref="P:Amazon.AWSConfigs.LogMetrics"/>
            </summary>
        </member>
        <member name="F:Amazon.AWSConfigs.EndpointDefinitionKey">
            <summary>
            Key for the EndpointDefinition property.
            <seealso cref="P:Amazon.AWSConfigs.LogMetrics"/>
            </summary>
        </member>
        <member name="F:Amazon.AWSConfigs.DynamoDBContextTableNamePrefixKey">
            <summary>
            Key for the DynamoDBContextTableNamePrefix property.
            <seealso cref="P:Amazon.AWSConfigs.DynamoDBContextTableNamePrefix"/>
            </summary>
        </member>
        <member name="F:Amazon.AWSConfigs.S3UseSignatureVersion4Key">
            <summary>
            Key for the S3UseSignatureVersion4 property.
            <seealso cref="P:Amazon.AWSConfigs.S3UseSignatureVersion4"/>
            </summary>
        </member>
        <member name="F:Amazon.AWSConfigs.EC2UseSignatureVersion4Key">
            <summary>
            Key for the EC2UseSignatureVersion4 property.
            <seealso cref="P:Amazon.AWSConfigs.EC2UseSignatureVersion4"/>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.AWSRegion">
            <summary>
            Configures the default AWS region for clients which have not explicitly specified a region.
            Changes to this setting will only take effect for newly constructed instances of AWS clients.
            
            This setting can be configured through the App.config. For example:
            <code>
            &lt;configSections&gt;
              &lt;section name="aws" type="Amazon.AWSSection, AWSSDK"/&gt;
            &lt;/configSections&gt;
            &lt;aws region="us-west-2" /&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.AWSProfileName">
            <summary>
            Profile name for stored AWS credentials that will be used to make service calls.
            Changes to this setting will only take effect in newly-constructed clients.
            <para>
            To reference the account from an application's App.config or Web.config use the AWSProfileName setting.
            <code>
            &lt;?xml version="1.0" encoding="utf-8" ?&gt;
            &lt;configuration&gt;
                &lt;appSettings&gt;
                    &lt;add key="AWSProfileName" value="development"/&gt;
                &lt;/appSettings&gt;
            &lt;/configuration&gt;
            </code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.AWSProfilesLocation">
            <summary>
            Location of the credentials file shared with other AWS SDKs.
            By default, the credentials file is stored in the .aws directory in the current user's home directory.
            
            Changes to this setting will only take effect in newly-constructed clients.
            <para>
            To reference the profile from an application's App.config or Web.config use the AWSProfileName setting.
            <code>
            &lt;?xml version="1.0" encoding="utf-8" ?&gt;
            &lt;configuration&gt;
                &lt;appSettings&gt;
                    &lt;add key="AWSProfilesLocation" value="c:\config"/&gt;
                &lt;/appSettings&gt;
            &lt;/configuration&gt;
            </code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.Logging">
            <summary>
            Configures how the SDK should log events, if at all.
            Changes to this setting will only take effect in newly-constructed clients.
            
            The setting can be configured through App.config, for example:
            <code>
            &lt;appSettings&gt;
              &lt;add key="AWSLogging" value="log4net"/&gt;
            &lt;/appSettings&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.ResponseLogging">
            <summary>
            Configures when the SDK should log service responses.
            Changes to this setting will take effect immediately.
            
            The setting can be configured through App.config, for example:
            <code>
            &lt;appSettings&gt;
              &lt;add key="AWSResponseLogging" value="OnError"/&gt;
            &lt;/appSettings&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.LogMetrics">
            <summary>
            Configures if the SDK should log performance metrics.
            This setting configures the default LogMetrics property for all clients/configs.
            Changes to this setting will only take effect in newly-constructed clients.
            
            The setting can be configured through App.config, for example:
            <code>
            &lt;appSettings&gt;
              &lt;add key="AWSLogMetrics" value="true"/&gt;
            &lt;/appSettings&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.EndpointDefinition">
            <summary>
            Configures if the SDK should use a custom configuration file that defines the regions and endpoints.
            <code>
            &lt;configSections&gt;
              &lt;section name="aws" type="Amazon.AWSSection, AWSSDK"/&gt;
            &lt;/configSections&gt;
            &lt;aws endpointDefinition="c:\config\endpoints.xml" /&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.DynamoDBContextTableNamePrefix">
            <summary>
            Configures the default TableNamePrefix that the DynamoDBContext will use if
            not manually configured.
            Changes to this setting will only take effect in newly-constructed instances of
            DynamoDBContextConfig and DynamoDBContext.
            
            The setting can be configured through App.config, for example:
            <code>
            &lt;appSettings&gt;
              &lt;add key="AWS.DynamoDBContext.TableNamePrefix" value="Test-"/&gt;
            &lt;/appSettings&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.S3UseSignatureVersion4">
            <summary>
            Configures if the S3 client should use Signature Version 4 signing with requests.
            By default, this setting is false, though Signature Version 4 may be used by default
            in some cases or with some regions. When the setting is true, Signature Version 4
            will be used for all requests.
            
            Changes to this setting will only take effect in newly-constructed clients.
            
            The setting can be configured through App.config, for example:
            <code>
            &lt;appSettings&gt;
              &lt;add key="AWS.S3.UseSignatureVersion4" value="true"/&gt;
            &lt;/appSettings&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.EC2UseSignatureVersion4">
            <summary>
            Configures if the EC2 client should use Signature Version 4 signing with requests.
            By default, this setting is false, though Signature Version 4 may be used by default
            in some cases or with some regions. When the setting is true, Signature Version 4
            will be used for all requests.
            
            Changes to this setting will only take effect in newly-constructed clients.
            
            The setting can be configured through App.config, for example:
            <code>
            &lt;appSettings&gt;
              &lt;add key="AWS.EC2.UseSignatureVersion4" value="true"/&gt;
            &lt;/appSettings&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.LoggingConfig">
            <summary>
            Configuration for the Logging section of AWS configuration.
            Changes to some settings may not take effect until a new client is constructed.
            
            Example section:
            <code>
            &lt;configSections&gt;
              &lt;section name="aws" type="Amazon.AWSSection, AWSSDK"/&gt;
            &lt;/configSections&gt;
            &lt;aws&gt;
              &lt;logging logTo="Log4Net, SystemDiagnostics" logResponses="Always" logMetrics="true" /&gt;
            &lt;/aws&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.DynamoDBConfig">
            <summary>
            Configuration for the DynamoDB section of AWS configuration.
            Changes to some settings may not take effect until a new client or context is constructed.
            
            Example section:
            <code>
            &lt;configSections&gt;
              &lt;section name="aws" type="Amazon.AWSSection, AWSSDK"/&gt;
            &lt;/configSections&gt;
            &lt;aws&gt;
              &lt;dynamoDB&gt;
                &lt;dynamoDBContext tableNamePrefix="Prod-"&gt;
            
                  &lt;tableAliases&gt;
                    &lt;alias fromTable="FakeTable" toTable="People" /&gt;
                    &lt;alias fromTable="Persons" toTable="People" /&gt;
                  &lt;/tableAliases&gt;
            
                  &lt;mappings&gt;
                    &lt;map type="Sample.Tests.Author, SampleDLL" targetTable="People" /&gt;
                    &lt;map type="Sample.Tests.Editor, SampleDLL" targetTable="People"&gt;
                      &lt;property name="FullName" attribute="Name" /&gt;
                      &lt;property name="EmployeeId" attribute="Id" /&gt;
                      &lt;property name="ComplexData" converter="Sample.Tests.ComplexDataConverter, SampleDLL" /&gt;
                      &lt;property name="Version" version="true" /&gt;
                      &lt;property name="Password" ignore="true" /&gt;
                    &lt;/map&gt;
                  &lt;/mappings&gt;
            
                &lt;/dynamoDBContext&gt;
              &lt;/dynamoDB&gt;
            &lt;/aws&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.S3Config">
            <summary>
            Configuration for the S3 section of AWS configuration.
            Changes to some settings may not take effect until a new client is constructed.
            
            Example section:
            <code>
            &lt;configSections&gt;
              &lt;section name="aws" type="Amazon.AWSSection, AWSSDK"/&gt;
            &lt;/configSections&gt;
            &lt;aws&gt;
              &lt;s3 useSignatureVersion4="true" /&gt;
            &lt;/aws&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.EC2Config">
            <summary>
            Configuration for the EC2 section of AWS configuration.
            Changes to some settings may not take effect until a new client is constructed.
            
            Example section:
            <code>
            &lt;configSections&gt;
              &lt;section name="aws" type="Amazon.AWSSection, AWSSDK"/&gt;
            &lt;/configSections&gt;
            &lt;aws&gt;
              &lt;ec2 useSignatureVersion4="true" /&gt;
            &lt;/aws&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.ProxyConfig">
            <summary>
            Configuration for the Proxy section of AWS configuration.
            Changes to some settings may not take effect until a new client is constructed.
            
            Example section:
            <code>
            &lt;configSections&gt;
              &lt;section name="aws" type="Amazon.AWSSection, AWSSDK"/&gt;
            &lt;/configSections&gt;
            &lt;aws&gt;
              &lt;proxy host="localhost" port="8888" username="1" password="1" /&gt;
            &lt;/aws&gt;
            </code>
            </summary>
        </member>
        <member name="P:Amazon.AWSConfigs.RegionEndpoint">
            <summary>
            Configuration for the region endpoint section of AWS configuration.
            Changes may not take effect until a new client is constructed.
            
            Example section:
            <code>
            &lt;configSections&gt;
              &lt;section name="aws" type="Amazon.AWSSection, AWSSDK"/&gt;
            &lt;/configSections&gt;
            &lt;aws region="us-west-2" /&gt;
            </code>
            </summary>
        </member>
        <member name="T:Amazon.LoggingOptions">
            <summary>
            Logging options.
            Can be combined to enable multiple loggers.
            </summary>
        </member>
        <member name="F:Amazon.LoggingOptions.None">
            <summary>
            No logging
            </summary>
        </member>
        <member name="F:Amazon.LoggingOptions.Log4Net">
            <summary>
            Log using log4net
            </summary>
        </member>
        <member name="F:Amazon.LoggingOptions.SystemDiagnostics">
            <summary>
            Log using System.Diagnostics
            </summary>
        </member>
        <member name="T:Amazon.ResponseLoggingOption">
            <summary>
            Response logging option.
            </summary>
        </member>
        <member name="F:Amazon.ResponseLoggingOption.Never">
            <summary>
            Never log service response
            </summary>
        </member>
        <member name="F:Amazon.ResponseLoggingOption.OnError">
            <summary>
            Only log service response when there's an error
            </summary>
        </member>
        <member name="F:Amazon.ResponseLoggingOption.Always">
            <summary>
            Always log service response
            </summary>
        </member>
        <member name="T:Amazon.RegionEndpoint">
            <summary>
            This class contains the endpoints available to the AWS clients.  The static constants representing the 
            regions can be used while constructing the AWS client instead of looking up the exact endpoint URL.
            </summary>
        </member>
        <member name="F:Amazon.RegionEndpoint.USEast1">
            <summary>
            The US East (Virginia) endpoint.
            </summary>
        </member>
        <member name="F:Amazon.RegionEndpoint.USWest1">
            <summary>
            The US West (N. California) endpoint.
            </summary>
        </member>
        <member name="F:Amazon.RegionEndpoint.USWest2">
            <summary>
            The US West (Oregon) endpoint.
            </summary>
        </member>
        <member name="F:Amazon.RegionEndpoint.EUWest1">
            <summary>
            The EU West (Ireland) endpoint.
            </summary>
        </member>
        <member name="F:Amazon.RegionEndpoint.APNortheast1">
            <summary>
            The Asia Pacific (Tokyo) endpoint.
            </summary>
        </member>
        <member name="F:Amazon.RegionEndpoint.APSoutheast1">
            <summary>
            The Asia Pacific (Singapore) endpoint.
            </summary>
        </member>
        <member name="F:Amazon.RegionEndpoint.APSoutheast2">
            <summary>
            The Asia Pacific (Sydney) endpoint.
            </summary>
        </member>
        <member name="F:Amazon.RegionEndpoint.SAEast1">
            <summary>
            The South America (Sao Paulo) endpoint.
            </summary>
        </member>
        <member name="F:Amazon.RegionEndpoint.USGovCloudWest1">
            <summary>
            The US GovCloud West (Oregon) endpoint.
            </summary>
        </member>
        <member name="F:Amazon.RegionEndpoint.CNNorth1">
            <summary>
            The China (Beijing) endpoint.
            </summary>
        </member>
        <member name="M:Amazon.RegionEndpoint.GetBySystemName(System.String)">
            <summary>
            Gets the region based on its system name like "us-west-1"
            </summary>
            <param name="systemName">The system name of the service like "us-west-1"</param>
            <returns></returns>
        </member>
        <member name="M:Amazon.RegionEndpoint.LoadEndpointDefinitions(System.IO.TextReader)">
            <summary>
            Parse the endpoint definition.  This method is only meant to be called directly for testing purposes.
            </summary>
            <param name="reader">A reader of the endpoint definitions</param>
        </member>
        <member name="M:Amazon.RegionEndpoint.UnloadEndpointDefinitions">
            <summary>
            This is a testing method and should not be called by production applications.
            </summary>
        </member>
        <member name="M:Amazon.RegionEndpoint.GetEndpointForService(System.String)">
            <summary>
            Gets the endpoint for a service in a region.
            </summary>
            <param name="serviceName">The services system name.</param>
            <exception cref="T:System.ArgumentException">Thrown when the request service does not have a valid endpoint in the region.</exception>
            <returns></returns>
        </member>
        <member name="P:Amazon.RegionEndpoint.EnumerableAllRegions">
            <summary>
            Enumerate through all the regions.
            </summary>
        </member>
        <member name="P:Amazon.RegionEndpoint.SystemName">
            <summary>
            Gets the system name of a region.
            </summary>
        </member>
        <member name="P:Amazon.RegionEndpoint.DisplayName">
            <summary>
            Gets the display name of a region.
            </summary>
        </member>
        <member name="T:Amazon.RegionEndpoint.Endpoint">
            <summary>
            This class defines an endpoints hostname and which protocols it supports.
            </summary>
        </member>
        <member name="P:Amazon.RegionEndpoint.Endpoint.Hostname">
            <summary>
            Gets the hostname for the service.
            </summary>
        </member>
        <member name="P:Amazon.RegionEndpoint.Endpoint.HTTPS">
            <summary>
            Returns true of the service endpoint supports HTTPS.
            </summary>
        </member>
        <member name="P:Amazon.RegionEndpoint.Endpoint.HTTP">
            <summary>
            Returns true of the service endpoint supports HTTP.
            </summary>
        </member>
        <member name="P:Amazon.RegionEndpoint.Endpoint.AuthRegion">
            <summary>
            The authentication region to be used in request signing.
            </summary>
        </member>
        <member name="P:Amazon.RegionEndpoint.Endpoint.SignatureVersionOverride">
            <summary>
            Overrides the default signing protocol for an
            endpoint. Typically used to force Signature V4
            for services that can support multiple signing
            protocols.
            </summary>
        </member>
        <member name="T:ThirdParty.Ionic.Zlib.CRC32">
            <summary>
            Calculates a 32bit Cyclic Redundancy Checksum (CRC) using the
            same polynomial used by Zip. This type is used internally by DotNetZip; it is generally not used directly
            by applications wishing to create, read, or manipulate zip archive files.
            </summary>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CRC32.GetCrc32(System.IO.Stream)">
            <summary>
            Returns the CRC32 for the specified stream.
            </summary>
            <param name="input">The stream over which to calculate the CRC32</param>
            <returns>the CRC32 calculation</returns>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CRC32.GetCrc32AndCopy(System.IO.Stream,System.IO.Stream)">
            <summary>
            Returns the CRC32 for the specified stream, and writes the input into the output stream.
            </summary>
            <param name="input">The stream over which to calculate the CRC32</param>
            <param name="output">The stream into which to deflate the input</param>
            <returns>the CRC32 calculation</returns>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CRC32.ComputeCrc32(System.Int32,System.Byte)">
            <summary>
            Get the CRC32 for the given (word,byte) combo. 
            This is a computation defined by PKzip.
            </summary>
            <param name="W">The word to start with.</param>
            <param name="B">The byte to combine it with.</param>
            <returns>The CRC-ized result.</returns>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CRC32.SlurpBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Update the value for the running CRC32 using the given block of bytes.
            This is useful when using the CRC32() class in a Stream.
            </summary>
            <param name="block">block of bytes to slurp</param>
            <param name="offset">starting point in the block</param>
            <param name="count">how many bytes within the block to slurp</param>
        </member>
        <member name="P:ThirdParty.Ionic.Zlib.CRC32.TotalBytesRead">
            <summary>
            indicates the total number of bytes read on the CRC stream.
            This is used when writing the ZipDirEntry when compressing files.
            </summary>
        </member>
        <member name="P:ThirdParty.Ionic.Zlib.CRC32.Crc32Result">
            <summary>
            Indicates the current CRC for all blocks slurped in.
            </summary>
        </member>
        <member name="T:ThirdParty.Ionic.Zlib.CrcCalculatorStream">
             <summary>
             A Stream that calculates a CRC32 (a checksum) on all bytes read, 
             or on all bytes written.
             </summary>
            
             <remarks>
             <para>
             This class can be used to verify the CRC of a ZipEntry when reading from a stream, 
             or to calculate a CRC when writing to a stream.  The stream should be used to either 
             read, or write, but not both.  If you intermix reads and writes, the results are
             not defined. 
             </para>
             <para>This class is intended primarily for use internally by the DotNetZip library.</para>
             </remarks>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CrcCalculatorStream.#ctor(System.IO.Stream)">
            <summary>
            The constructor.
            </summary>
            <param name="stream">The underlying stream</param>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CrcCalculatorStream.#ctor(System.IO.Stream,System.Int64)">
            <summary>
            The constructor.
            </summary>
            <param name="stream">The underlying stream</param>
            <param name="length">The length of the stream to slurp</param>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CrcCalculatorStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read from the stream
            </summary>
            <param name="buffer">the buffer to read</param>
            <param name="offset">the offset at which to start</param>
            <param name="count">the number of bytes to read</param>
            <returns>the number of bytes actually read</returns>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CrcCalculatorStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write to the stream. 
            </summary>
            <param name="buffer">the buffer from which to write</param>
            <param name="offset">the offset at which to start writing</param>
            <param name="count">the number of bytes to write</param>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CrcCalculatorStream.Flush">
            <summary>
            Flush the stream.
            </summary>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CrcCalculatorStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Not implemented.
            </summary>
            <param name="offset">N/A</param>
            <param name="origin">N/A</param>
            <returns>N/A</returns>
        </member>
        <member name="M:ThirdParty.Ionic.Zlib.CrcCalculatorStream.SetLength(System.Int64)">
            <summary>
            Not implemented.
            </summary>
            <param name="value">N/A</param>
        </member>
        <member name="P:ThirdParty.Ionic.Zlib.CrcCalculatorStream.TotalBytesSlurped">
             <summary>
             Gets the total number of bytes run through the CRC32 calculator.
             </summary>
            
             <remarks>
             This is either the total number of bytes read, or the total number
             of bytes written, depending on the direction of this stream.
             </remarks>
        </member>
        <member name="P:ThirdParty.Ionic.Zlib.CrcCalculatorStream.Crc32">
            <summary>
            Provides the current CRC for all blocks slurped in.
            </summary>
        </member>
        <member name="P:ThirdParty.Ionic.Zlib.CrcCalculatorStream.CanRead">
            <summary>
            Indicates whether the stream supports reading. 
            </summary>
        </member>
        <member name="P:ThirdParty.Ionic.Zlib.CrcCalculatorStream.CanSeek">
            <summary>
            Indicates whether the stream supports seeking. 
            </summary>
        </member>
        <member name="P:ThirdParty.Ionic.Zlib.CrcCalculatorStream.CanWrite">
            <summary>
            Indicates whether the stream supports writing. 
            </summary>
        </member>
        <member name="P:ThirdParty.Ionic.Zlib.CrcCalculatorStream.Length">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="P:ThirdParty.Ionic.Zlib.CrcCalculatorStream.Position">
            <summary>
            Not implemented.
            </summary>
        </member>
    </members>
</doc>
